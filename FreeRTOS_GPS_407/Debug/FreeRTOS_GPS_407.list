
FreeRTOS_GPS_407.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015004  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010d0  08015198  08015198  00016198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08016268  08016268  00018454  2**0
                  CONTENTS
  4 .ARM          00000008  08016268  08016268  00017268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08016270  08016270  00018454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08016270  08016270  00017270  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08016274  08016274  00017274  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000454  20000000  08016278  00018000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000113a8  20000458  080166cc  00018458  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20011800  080166cc  00018800  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00018454  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002eff5  00000000  00000000  00018484  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00007884  00000000  00000000  00047479  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000025e8  00000000  00000000  0004ed00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001d27  00000000  00000000  000512e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002cee4  00000000  00000000  0005300f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00036462  00000000  00000000  0007fef3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e543f  00000000  00000000  000b6355  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0019b794  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000b300  00000000  00000000  0019b7d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008d  00000000  00000000  001a6ad8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000458 	.word	0x20000458
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0801517c 	.word	0x0801517c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000045c 	.word	0x2000045c
 80001cc:	0801517c 	.word	0x0801517c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b9be 	b.w	800101c <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	@ (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	@ (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9d08      	ldr	r5, [sp, #32]
 8000d2a:	468e      	mov	lr, r1
 8000d2c:	4604      	mov	r4, r0
 8000d2e:	4688      	mov	r8, r1
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d14a      	bne.n	8000dca <__udivmoddi4+0xa6>
 8000d34:	428a      	cmp	r2, r1
 8000d36:	4617      	mov	r7, r2
 8000d38:	d962      	bls.n	8000e00 <__udivmoddi4+0xdc>
 8000d3a:	fab2 f682 	clz	r6, r2
 8000d3e:	b14e      	cbz	r6, 8000d54 <__udivmoddi4+0x30>
 8000d40:	f1c6 0320 	rsb	r3, r6, #32
 8000d44:	fa01 f806 	lsl.w	r8, r1, r6
 8000d48:	fa20 f303 	lsr.w	r3, r0, r3
 8000d4c:	40b7      	lsls	r7, r6
 8000d4e:	ea43 0808 	orr.w	r8, r3, r8
 8000d52:	40b4      	lsls	r4, r6
 8000d54:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d58:	fa1f fc87 	uxth.w	ip, r7
 8000d5c:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d60:	0c23      	lsrs	r3, r4, #16
 8000d62:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d66:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d6a:	fb01 f20c 	mul.w	r2, r1, ip
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d909      	bls.n	8000d86 <__udivmoddi4+0x62>
 8000d72:	18fb      	adds	r3, r7, r3
 8000d74:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d78:	f080 80ea 	bcs.w	8000f50 <__udivmoddi4+0x22c>
 8000d7c:	429a      	cmp	r2, r3
 8000d7e:	f240 80e7 	bls.w	8000f50 <__udivmoddi4+0x22c>
 8000d82:	3902      	subs	r1, #2
 8000d84:	443b      	add	r3, r7
 8000d86:	1a9a      	subs	r2, r3, r2
 8000d88:	b2a3      	uxth	r3, r4
 8000d8a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d8e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d96:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d9a:	459c      	cmp	ip, r3
 8000d9c:	d909      	bls.n	8000db2 <__udivmoddi4+0x8e>
 8000d9e:	18fb      	adds	r3, r7, r3
 8000da0:	f100 32ff 	add.w	r2, r0, #4294967295
 8000da4:	f080 80d6 	bcs.w	8000f54 <__udivmoddi4+0x230>
 8000da8:	459c      	cmp	ip, r3
 8000daa:	f240 80d3 	bls.w	8000f54 <__udivmoddi4+0x230>
 8000dae:	443b      	add	r3, r7
 8000db0:	3802      	subs	r0, #2
 8000db2:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000db6:	eba3 030c 	sub.w	r3, r3, ip
 8000dba:	2100      	movs	r1, #0
 8000dbc:	b11d      	cbz	r5, 8000dc6 <__udivmoddi4+0xa2>
 8000dbe:	40f3      	lsrs	r3, r6
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	e9c5 3200 	strd	r3, r2, [r5]
 8000dc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d905      	bls.n	8000dda <__udivmoddi4+0xb6>
 8000dce:	b10d      	cbz	r5, 8000dd4 <__udivmoddi4+0xb0>
 8000dd0:	e9c5 0100 	strd	r0, r1, [r5]
 8000dd4:	2100      	movs	r1, #0
 8000dd6:	4608      	mov	r0, r1
 8000dd8:	e7f5      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000dda:	fab3 f183 	clz	r1, r3
 8000dde:	2900      	cmp	r1, #0
 8000de0:	d146      	bne.n	8000e70 <__udivmoddi4+0x14c>
 8000de2:	4573      	cmp	r3, lr
 8000de4:	d302      	bcc.n	8000dec <__udivmoddi4+0xc8>
 8000de6:	4282      	cmp	r2, r0
 8000de8:	f200 8105 	bhi.w	8000ff6 <__udivmoddi4+0x2d2>
 8000dec:	1a84      	subs	r4, r0, r2
 8000dee:	eb6e 0203 	sbc.w	r2, lr, r3
 8000df2:	2001      	movs	r0, #1
 8000df4:	4690      	mov	r8, r2
 8000df6:	2d00      	cmp	r5, #0
 8000df8:	d0e5      	beq.n	8000dc6 <__udivmoddi4+0xa2>
 8000dfa:	e9c5 4800 	strd	r4, r8, [r5]
 8000dfe:	e7e2      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000e00:	2a00      	cmp	r2, #0
 8000e02:	f000 8090 	beq.w	8000f26 <__udivmoddi4+0x202>
 8000e06:	fab2 f682 	clz	r6, r2
 8000e0a:	2e00      	cmp	r6, #0
 8000e0c:	f040 80a4 	bne.w	8000f58 <__udivmoddi4+0x234>
 8000e10:	1a8a      	subs	r2, r1, r2
 8000e12:	0c03      	lsrs	r3, r0, #16
 8000e14:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e18:	b280      	uxth	r0, r0
 8000e1a:	b2bc      	uxth	r4, r7
 8000e1c:	2101      	movs	r1, #1
 8000e1e:	fbb2 fcfe 	udiv	ip, r2, lr
 8000e22:	fb0e 221c 	mls	r2, lr, ip, r2
 8000e26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000e2a:	fb04 f20c 	mul.w	r2, r4, ip
 8000e2e:	429a      	cmp	r2, r3
 8000e30:	d907      	bls.n	8000e42 <__udivmoddi4+0x11e>
 8000e32:	18fb      	adds	r3, r7, r3
 8000e34:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000e38:	d202      	bcs.n	8000e40 <__udivmoddi4+0x11c>
 8000e3a:	429a      	cmp	r2, r3
 8000e3c:	f200 80e0 	bhi.w	8001000 <__udivmoddi4+0x2dc>
 8000e40:	46c4      	mov	ip, r8
 8000e42:	1a9b      	subs	r3, r3, r2
 8000e44:	fbb3 f2fe 	udiv	r2, r3, lr
 8000e48:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e4c:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e50:	fb02 f404 	mul.w	r4, r2, r4
 8000e54:	429c      	cmp	r4, r3
 8000e56:	d907      	bls.n	8000e68 <__udivmoddi4+0x144>
 8000e58:	18fb      	adds	r3, r7, r3
 8000e5a:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e5e:	d202      	bcs.n	8000e66 <__udivmoddi4+0x142>
 8000e60:	429c      	cmp	r4, r3
 8000e62:	f200 80ca 	bhi.w	8000ffa <__udivmoddi4+0x2d6>
 8000e66:	4602      	mov	r2, r0
 8000e68:	1b1b      	subs	r3, r3, r4
 8000e6a:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e6e:	e7a5      	b.n	8000dbc <__udivmoddi4+0x98>
 8000e70:	f1c1 0620 	rsb	r6, r1, #32
 8000e74:	408b      	lsls	r3, r1
 8000e76:	fa22 f706 	lsr.w	r7, r2, r6
 8000e7a:	431f      	orrs	r7, r3
 8000e7c:	fa0e f401 	lsl.w	r4, lr, r1
 8000e80:	fa20 f306 	lsr.w	r3, r0, r6
 8000e84:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e88:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e8c:	4323      	orrs	r3, r4
 8000e8e:	fa00 f801 	lsl.w	r8, r0, r1
 8000e92:	fa1f fc87 	uxth.w	ip, r7
 8000e96:	fbbe f0f9 	udiv	r0, lr, r9
 8000e9a:	0c1c      	lsrs	r4, r3, #16
 8000e9c:	fb09 ee10 	mls	lr, r9, r0, lr
 8000ea0:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000ea4:	fb00 fe0c 	mul.w	lr, r0, ip
 8000ea8:	45a6      	cmp	lr, r4
 8000eaa:	fa02 f201 	lsl.w	r2, r2, r1
 8000eae:	d909      	bls.n	8000ec4 <__udivmoddi4+0x1a0>
 8000eb0:	193c      	adds	r4, r7, r4
 8000eb2:	f100 3aff 	add.w	sl, r0, #4294967295
 8000eb6:	f080 809c 	bcs.w	8000ff2 <__udivmoddi4+0x2ce>
 8000eba:	45a6      	cmp	lr, r4
 8000ebc:	f240 8099 	bls.w	8000ff2 <__udivmoddi4+0x2ce>
 8000ec0:	3802      	subs	r0, #2
 8000ec2:	443c      	add	r4, r7
 8000ec4:	eba4 040e 	sub.w	r4, r4, lr
 8000ec8:	fa1f fe83 	uxth.w	lr, r3
 8000ecc:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ed0:	fb09 4413 	mls	r4, r9, r3, r4
 8000ed4:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000ed8:	fb03 fc0c 	mul.w	ip, r3, ip
 8000edc:	45a4      	cmp	ip, r4
 8000ede:	d908      	bls.n	8000ef2 <__udivmoddi4+0x1ce>
 8000ee0:	193c      	adds	r4, r7, r4
 8000ee2:	f103 3eff 	add.w	lr, r3, #4294967295
 8000ee6:	f080 8082 	bcs.w	8000fee <__udivmoddi4+0x2ca>
 8000eea:	45a4      	cmp	ip, r4
 8000eec:	d97f      	bls.n	8000fee <__udivmoddi4+0x2ca>
 8000eee:	3b02      	subs	r3, #2
 8000ef0:	443c      	add	r4, r7
 8000ef2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ef6:	eba4 040c 	sub.w	r4, r4, ip
 8000efa:	fba0 ec02 	umull	lr, ip, r0, r2
 8000efe:	4564      	cmp	r4, ip
 8000f00:	4673      	mov	r3, lr
 8000f02:	46e1      	mov	r9, ip
 8000f04:	d362      	bcc.n	8000fcc <__udivmoddi4+0x2a8>
 8000f06:	d05f      	beq.n	8000fc8 <__udivmoddi4+0x2a4>
 8000f08:	b15d      	cbz	r5, 8000f22 <__udivmoddi4+0x1fe>
 8000f0a:	ebb8 0203 	subs.w	r2, r8, r3
 8000f0e:	eb64 0409 	sbc.w	r4, r4, r9
 8000f12:	fa04 f606 	lsl.w	r6, r4, r6
 8000f16:	fa22 f301 	lsr.w	r3, r2, r1
 8000f1a:	431e      	orrs	r6, r3
 8000f1c:	40cc      	lsrs	r4, r1
 8000f1e:	e9c5 6400 	strd	r6, r4, [r5]
 8000f22:	2100      	movs	r1, #0
 8000f24:	e74f      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000f26:	fbb1 fcf2 	udiv	ip, r1, r2
 8000f2a:	0c01      	lsrs	r1, r0, #16
 8000f2c:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000f30:	b280      	uxth	r0, r0
 8000f32:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000f36:	463b      	mov	r3, r7
 8000f38:	4638      	mov	r0, r7
 8000f3a:	463c      	mov	r4, r7
 8000f3c:	46b8      	mov	r8, r7
 8000f3e:	46be      	mov	lr, r7
 8000f40:	2620      	movs	r6, #32
 8000f42:	fbb1 f1f7 	udiv	r1, r1, r7
 8000f46:	eba2 0208 	sub.w	r2, r2, r8
 8000f4a:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f4e:	e766      	b.n	8000e1e <__udivmoddi4+0xfa>
 8000f50:	4601      	mov	r1, r0
 8000f52:	e718      	b.n	8000d86 <__udivmoddi4+0x62>
 8000f54:	4610      	mov	r0, r2
 8000f56:	e72c      	b.n	8000db2 <__udivmoddi4+0x8e>
 8000f58:	f1c6 0220 	rsb	r2, r6, #32
 8000f5c:	fa2e f302 	lsr.w	r3, lr, r2
 8000f60:	40b7      	lsls	r7, r6
 8000f62:	40b1      	lsls	r1, r6
 8000f64:	fa20 f202 	lsr.w	r2, r0, r2
 8000f68:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f6c:	430a      	orrs	r2, r1
 8000f6e:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f72:	b2bc      	uxth	r4, r7
 8000f74:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f78:	0c11      	lsrs	r1, r2, #16
 8000f7a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f7e:	fb08 f904 	mul.w	r9, r8, r4
 8000f82:	40b0      	lsls	r0, r6
 8000f84:	4589      	cmp	r9, r1
 8000f86:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f8a:	b280      	uxth	r0, r0
 8000f8c:	d93e      	bls.n	800100c <__udivmoddi4+0x2e8>
 8000f8e:	1879      	adds	r1, r7, r1
 8000f90:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f94:	d201      	bcs.n	8000f9a <__udivmoddi4+0x276>
 8000f96:	4589      	cmp	r9, r1
 8000f98:	d81f      	bhi.n	8000fda <__udivmoddi4+0x2b6>
 8000f9a:	eba1 0109 	sub.w	r1, r1, r9
 8000f9e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fa2:	fb09 f804 	mul.w	r8, r9, r4
 8000fa6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000faa:	b292      	uxth	r2, r2
 8000fac:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000fb0:	4542      	cmp	r2, r8
 8000fb2:	d229      	bcs.n	8001008 <__udivmoddi4+0x2e4>
 8000fb4:	18ba      	adds	r2, r7, r2
 8000fb6:	f109 31ff 	add.w	r1, r9, #4294967295
 8000fba:	d2c4      	bcs.n	8000f46 <__udivmoddi4+0x222>
 8000fbc:	4542      	cmp	r2, r8
 8000fbe:	d2c2      	bcs.n	8000f46 <__udivmoddi4+0x222>
 8000fc0:	f1a9 0102 	sub.w	r1, r9, #2
 8000fc4:	443a      	add	r2, r7
 8000fc6:	e7be      	b.n	8000f46 <__udivmoddi4+0x222>
 8000fc8:	45f0      	cmp	r8, lr
 8000fca:	d29d      	bcs.n	8000f08 <__udivmoddi4+0x1e4>
 8000fcc:	ebbe 0302 	subs.w	r3, lr, r2
 8000fd0:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000fd4:	3801      	subs	r0, #1
 8000fd6:	46e1      	mov	r9, ip
 8000fd8:	e796      	b.n	8000f08 <__udivmoddi4+0x1e4>
 8000fda:	eba7 0909 	sub.w	r9, r7, r9
 8000fde:	4449      	add	r1, r9
 8000fe0:	f1a8 0c02 	sub.w	ip, r8, #2
 8000fe4:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fe8:	fb09 f804 	mul.w	r8, r9, r4
 8000fec:	e7db      	b.n	8000fa6 <__udivmoddi4+0x282>
 8000fee:	4673      	mov	r3, lr
 8000ff0:	e77f      	b.n	8000ef2 <__udivmoddi4+0x1ce>
 8000ff2:	4650      	mov	r0, sl
 8000ff4:	e766      	b.n	8000ec4 <__udivmoddi4+0x1a0>
 8000ff6:	4608      	mov	r0, r1
 8000ff8:	e6fd      	b.n	8000df6 <__udivmoddi4+0xd2>
 8000ffa:	443b      	add	r3, r7
 8000ffc:	3a02      	subs	r2, #2
 8000ffe:	e733      	b.n	8000e68 <__udivmoddi4+0x144>
 8001000:	f1ac 0c02 	sub.w	ip, ip, #2
 8001004:	443b      	add	r3, r7
 8001006:	e71c      	b.n	8000e42 <__udivmoddi4+0x11e>
 8001008:	4649      	mov	r1, r9
 800100a:	e79c      	b.n	8000f46 <__udivmoddi4+0x222>
 800100c:	eba1 0109 	sub.w	r1, r1, r9
 8001010:	46c4      	mov	ip, r8
 8001012:	fbb1 f9fe 	udiv	r9, r1, lr
 8001016:	fb09 f804 	mul.w	r8, r9, r4
 800101a:	e7c4      	b.n	8000fa6 <__udivmoddi4+0x282>

0800101c <__aeabi_idiv0>:
 800101c:	4770      	bx	lr
 800101e:	bf00      	nop

08001020 <toggle_led>:
* @brief Zet een kleurenledje aan en uit.
* @param color De kleur.
* @return void.
*/
void toggle_led (uint32_t color)
{
 8001020:	b580      	push	{r7, lr}
 8001022:	b082      	sub	sp, #8
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOD, color);   // turns led on or off
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	b29b      	uxth	r3, r3
 800102c:	4619      	mov	r1, r3
 800102e:	4808      	ldr	r0, [pc, #32]	@ (8001050 <toggle_led+0x30>)
 8001030:	f003 fa43 	bl	80044ba <HAL_GPIO_TogglePin>
	osDelay(20);
 8001034:	2014      	movs	r0, #20
 8001036:	f00b f9a1 	bl	800c37c <osDelay>
	HAL_GPIO_TogglePin(GPIOD, color);   // turns led on or off
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	b29b      	uxth	r3, r3
 800103e:	4619      	mov	r1, r3
 8001040:	4803      	ldr	r0, [pc, #12]	@ (8001050 <toggle_led+0x30>)
 8001042:	f003 fa3a 	bl	80044ba <HAL_GPIO_TogglePin>
}
 8001046:	bf00      	nop
 8001048:	3708      	adds	r7, #8
 800104a:	46bd      	mov	sp, r7
 800104c:	bd80      	pop	{r7, pc}
 800104e:	bf00      	nop
 8001050:	40020c00 	.word	0x40020c00

08001054 <ARM_keys_IRQ>:
* @brief Deze task handelt de ARM-toets af, die ontvangen is van de ISR-handler (zie: stm32f4xx_it.c).
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void.
*/
void ARM_keys_IRQ (void *argument)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	b086      	sub	sp, #24
 8001058:	af02      	add	r7, sp, #8
 800105a:	6078      	str	r0, [r7, #4]
	unsigned int key;
	osThreadId_t hTask;

	UART_puts("\r\n"); UART_puts((char *)__func__); UART_puts(" started");
 800105c:	4813      	ldr	r0, [pc, #76]	@ (80010ac <ARM_keys_IRQ+0x58>)
 800105e:	f001 fed7 	bl	8002e10 <UART_puts>
 8001062:	4813      	ldr	r0, [pc, #76]	@ (80010b0 <ARM_keys_IRQ+0x5c>)
 8001064:	f001 fed4 	bl	8002e10 <UART_puts>
 8001068:	4812      	ldr	r0, [pc, #72]	@ (80010b4 <ARM_keys_IRQ+0x60>)
 800106a:	f001 fed1 	bl	8002e10 <UART_puts>

	if (!(hTask = xTaskGetHandle("ARM_keys_task")))
 800106e:	4812      	ldr	r0, [pc, #72]	@ (80010b8 <ARM_keys_IRQ+0x64>)
 8001070:	f00d fa96 	bl	800e5a0 <xTaskGetHandle>
 8001074:	60f8      	str	r0, [r7, #12]
 8001076:	68fb      	ldr	r3, [r7, #12]
 8001078:	2b00      	cmp	r3, #0
 800107a:	d102      	bne.n	8001082 <ARM_keys_IRQ+0x2e>
		error_HaltOS("Err:ARM_hndle");
 800107c:	480f      	ldr	r0, [pc, #60]	@ (80010bc <ARM_keys_IRQ+0x68>)
 800107e:	f000 fb99 	bl	80017b4 <error_HaltOS>

    while (1)
	{
		// wait for ISR (EXTI0_IRQHandler()) to signal that a key is pressed
		key = xEventGroupWaitBits(hKEY_Event, 0xffff, pdTRUE, pdFALSE, portMAX_DELAY );
 8001082:	4b0f      	ldr	r3, [pc, #60]	@ (80010c0 <ARM_keys_IRQ+0x6c>)
 8001084:	6818      	ldr	r0, [r3, #0]
 8001086:	f04f 33ff 	mov.w	r3, #4294967295
 800108a:	9300      	str	r3, [sp, #0]
 800108c:	2300      	movs	r3, #0
 800108e:	2201      	movs	r2, #1
 8001090:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8001094:	f00b fb0c 	bl	800c6b0 <xEventGroupWaitBits>
 8001098:	60b8      	str	r0, [r7, #8]

		xTaskNotify(hTask, key, eSetValueWithOverwrite); // notify task2 with value
 800109a:	2300      	movs	r3, #0
 800109c:	2203      	movs	r2, #3
 800109e:	68b9      	ldr	r1, [r7, #8]
 80010a0:	68f8      	ldr	r0, [r7, #12]
 80010a2:	f00e f9ad 	bl	800f400 <xTaskGenericNotify>
		key = xEventGroupWaitBits(hKEY_Event, 0xffff, pdTRUE, pdFALSE, portMAX_DELAY );
 80010a6:	bf00      	nop
 80010a8:	e7eb      	b.n	8001082 <ARM_keys_IRQ+0x2e>
 80010aa:	bf00      	nop
 80010ac:	08015198 	.word	0x08015198
 80010b0:	08015d34 	.word	0x08015d34
 80010b4:	0801519c 	.word	0x0801519c
 80010b8:	080151a8 	.word	0x080151a8
 80010bc:	080151b8 	.word	0x080151b8
 80010c0:	20000488 	.word	0x20000488

080010c4 <ARM_keys_task>:
* een schwung...
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen.
* @return void.
*/
void ARM_keys_task (void *argument)
{
 80010c4:	b580      	push	{r7, lr}
 80010c6:	b086      	sub	sp, #24
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	6078      	str	r0, [r7, #4]
	uint32_t 	 key;
	int			 i, led;

	if (!(hParsedGPS = xTaskGetHandle("PARSED_GPS")))
 80010cc:	483b      	ldr	r0, [pc, #236]	@ (80011bc <ARM_keys_task+0xf8>)
 80010ce:	f00d fa67 	bl	800e5a0 <xTaskGetHandle>
 80010d2:	4603      	mov	r3, r0
 80010d4:	4a3a      	ldr	r2, [pc, #232]	@ (80011c0 <ARM_keys_task+0xfc>)
 80010d6:	6013      	str	r3, [r2, #0]
 80010d8:	4b39      	ldr	r3, [pc, #228]	@ (80011c0 <ARM_keys_task+0xfc>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d102      	bne.n	80010e6 <ARM_keys_task+0x22>
		   error_HaltOS("Err:hParsedGPS");
 80010e0:	4838      	ldr	r0, [pc, #224]	@ (80011c4 <ARM_keys_task+0x100>)
 80010e2:	f000 fb67 	bl	80017b4 <error_HaltOS>

	while(TRUE)
	{
		// WAITING FOR users key
        xTaskNotifyWait (0x00,      		// Don't clear any notification bits on entry.
 80010e6:	f107 020c 	add.w	r2, r7, #12
 80010ea:	f04f 33ff 	mov.w	r3, #4294967295
 80010ee:	f04f 31ff 	mov.w	r1, #4294967295
 80010f2:	2000      	movs	r0, #0
 80010f4:	f00e f924 	bl	800f340 <xTaskNotifyWait>
        		 	 	 0xffffffff, 		// ULONG_MAX, reset the notification value to 0 on exit.
    	                 &key, 				// Notified value.
    	                 portMAX_DELAY);  	// Block indefinitely.

	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // krijg toegang (mutex) tot leds
 80010f8:	4b33      	ldr	r3, [pc, #204]	@ (80011c8 <ARM_keys_task+0x104>)
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	f04f 31ff 	mov.w	r1, #4294967295
 8001100:	4618      	mov	r0, r3
 8001102:	f00c f925 	bl	800d350 <xQueueSemaphoreTake>

    	LED_put((unsigned char)key); // set 8 leds-byte to key-value
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	b2db      	uxtb	r3, r3
 800110a:	4618      	mov	r0, r3
 800110c:	f001 fe34 	bl	8002d78 <LED_put>
	    BUZZER_put (500);
 8001110:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001114:	f001 fb50 	bl	80027b8 <BUZZER_put>
		osDelay(500);
 8001118:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800111c:	f00b f92e 	bl	800c37c <osDelay>

		if (key == 1 )
 8001120:	68fb      	ldr	r3, [r7, #12]
 8001122:	2b01      	cmp	r3, #1
 8001124:	d106      	bne.n	8001134 <ARM_keys_task+0x70>
			xTaskNotifyGive(hParsedGPS);
 8001126:	4b26      	ldr	r3, [pc, #152]	@ (80011c0 <ARM_keys_task+0xfc>)
 8001128:	6818      	ldr	r0, [r3, #0]
 800112a:	2300      	movs	r3, #0
 800112c:	2202      	movs	r2, #2
 800112e:	2100      	movs	r1, #0
 8001130:	f00e f966 	bl	800f400 <xTaskGenericNotify>

		if (key == 2)
 8001134:	68fb      	ldr	r3, [r7, #12]
 8001136:	2b02      	cmp	r3, #2
 8001138:	d106      	bne.n	8001148 <ARM_keys_task+0x84>
			xTaskNotifyGive(hdifferenceTask);
 800113a:	4b24      	ldr	r3, [pc, #144]	@ (80011cc <ARM_keys_task+0x108>)
 800113c:	6818      	ldr	r0, [r3, #0]
 800113e:	2300      	movs	r3, #0
 8001140:	2202      	movs	r2, #2
 8001142:	2100      	movs	r1, #0
 8001144:	f00e f95c 	bl	800f400 <xTaskGenericNotify>


		if (Uart_debug_out & ARMKEYS_DEBUG_OUT)
 8001148:	4b21      	ldr	r3, [pc, #132]	@ (80011d0 <ARM_keys_task+0x10c>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	f003 0302 	and.w	r3, r3, #2
 8001150:	2b00      	cmp	r3, #0
 8001152:	d006      	beq.n	8001162 <ARM_keys_task+0x9e>
		{
			UART_puts("\r\nARM_key pressed set (see leds): "); UART_putint(key);
 8001154:	481f      	ldr	r0, [pc, #124]	@ (80011d4 <ARM_keys_task+0x110>)
 8001156:	f001 fe5b 	bl	8002e10 <UART_puts>
 800115a:	68fb      	ldr	r3, [r7, #12]
 800115c:	4618      	mov	r0, r3
 800115e:	f001 fecf 	bl	8002f00 <UART_putint>
		}

	    xSemaphoreGive(hLED_Sem); // geef toegang (mutex) vrij
 8001162:	4b19      	ldr	r3, [pc, #100]	@ (80011c8 <ARM_keys_task+0x104>)
 8001164:	6818      	ldr	r0, [r3, #0]
 8001166:	2300      	movs	r3, #0
 8001168:	2200      	movs	r2, #0
 800116a:	2100      	movs	r1, #0
 800116c:	f00b fe6e 	bl	800ce4c <xQueueGenericSend>

	    // tot slot, laat de gekleurde ledjes meedoen
	    // maar niet blauw, want die is ingezet voor de timer
	    // kijk naar de manier waarop de if-elses er uitzien
		for (i=0; i<3; i++)
 8001170:	2300      	movs	r3, #0
 8001172:	617b      	str	r3, [r7, #20]
 8001174:	e015      	b.n	80011a2 <ARM_keys_task+0xde>
		{
			led = (i==0 ? LEDRED : (i==1 ? LEDORANGE : LEDGREEN));
 8001176:	697b      	ldr	r3, [r7, #20]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d008      	beq.n	800118e <ARM_keys_task+0xca>
 800117c:	697b      	ldr	r3, [r7, #20]
 800117e:	2b01      	cmp	r3, #1
 8001180:	d102      	bne.n	8001188 <ARM_keys_task+0xc4>
 8001182:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8001186:	e004      	b.n	8001192 <ARM_keys_task+0xce>
 8001188:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800118c:	e001      	b.n	8001192 <ARM_keys_task+0xce>
 800118e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001192:	613b      	str	r3, [r7, #16]
			toggle_led(led);
 8001194:	693b      	ldr	r3, [r7, #16]
 8001196:	4618      	mov	r0, r3
 8001198:	f7ff ff42 	bl	8001020 <toggle_led>
		for (i=0; i<3; i++)
 800119c:	697b      	ldr	r3, [r7, #20]
 800119e:	3301      	adds	r3, #1
 80011a0:	617b      	str	r3, [r7, #20]
 80011a2:	697b      	ldr	r3, [r7, #20]
 80011a4:	2b02      	cmp	r3, #2
 80011a6:	dde6      	ble.n	8001176 <ARM_keys_task+0xb2>
	  	}
     	taskYIELD(); // done, force context switch
 80011a8:	4b0b      	ldr	r3, [pc, #44]	@ (80011d8 <ARM_keys_task+0x114>)
 80011aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80011ae:	601a      	str	r2, [r3, #0]
 80011b0:	f3bf 8f4f 	dsb	sy
 80011b4:	f3bf 8f6f 	isb	sy
        xTaskNotifyWait (0x00,      		// Don't clear any notification bits on entry.
 80011b8:	e795      	b.n	80010e6 <ARM_keys_task+0x22>
 80011ba:	bf00      	nop
 80011bc:	080151c8 	.word	0x080151c8
 80011c0:	200004d8 	.word	0x200004d8
 80011c4:	080151d4 	.word	0x080151d4
 80011c8:	20000480 	.word	0x20000480
 80011cc:	200005e0 	.word	0x200005e0
 80011d0:	20000474 	.word	0x20000474
 80011d4:	080151e4 	.word	0x080151e4
 80011d8:	e000ed04 	.word	0xe000ed04

080011dc <UART_keys_IRQ>:
* 2. notifies/stuurt command-string naar andere task
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void UART_keys_IRQ (void *argument)
{
 80011dc:	b580      	push	{r7, lr}
 80011de:	b08c      	sub	sp, #48	@ 0x30
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	6078      	str	r0, [r7, #4]
    char  		    buffer[QSIZE_UART];
    char		    buffer_copy[QSIZE_UART];
	int 			pos = 0;
 80011e4:	2300      	movs	r3, #0
 80011e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	int             finish = FALSE;
 80011e8:	2300      	movs	r3, #0
 80011ea:	62bb      	str	r3, [r7, #40]	@ 0x28
	osThreadId_t    hTask;

	UART_puts((char *)__func__); UART_puts("started, enter key on terminal...\r\n");
 80011ec:	4847      	ldr	r0, [pc, #284]	@ (800130c <UART_keys_IRQ+0x130>)
 80011ee:	f001 fe0f 	bl	8002e10 <UART_puts>
 80011f2:	4847      	ldr	r0, [pc, #284]	@ (8001310 <UART_keys_IRQ+0x134>)
 80011f4:	f001 fe0c 	bl	8002e10 <UART_puts>

	if (!(hTask = xTaskGetHandle("UART_menu")))
 80011f8:	4846      	ldr	r0, [pc, #280]	@ (8001314 <UART_keys_IRQ+0x138>)
 80011fa:	f00d f9d1 	bl	800e5a0 <xTaskGetHandle>
 80011fe:	6278      	str	r0, [r7, #36]	@ 0x24
 8001200:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001202:	2b00      	cmp	r3, #0
 8001204:	d102      	bne.n	800120c <UART_keys_IRQ+0x30>
		error_HaltOS("Err:UART_hndl 0");
 8001206:	4844      	ldr	r0, [pc, #272]	@ (8001318 <UART_keys_IRQ+0x13c>)
 8001208:	f000 fad4 	bl	80017b4 <error_HaltOS>
    {
		// laat de VIC de q vullen, die per char in onze eigen string geplaatst wordt
		// tot LFEED gedrukt is of qsize-1 bereikt is.
		// nb: argument 2 is het adres waar ik het q-char in zet
		// nb: q-receive haalt gelijk de buffer leeg (q-peek niet).
		xQueueReceive(hUART_Queue, &buffer[pos], portMAX_DELAY);
 800120c:	4b43      	ldr	r3, [pc, #268]	@ (800131c <UART_keys_IRQ+0x140>)
 800120e:	6818      	ldr	r0, [r3, #0]
 8001210:	f107 0218 	add.w	r2, r7, #24
 8001214:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001216:	4413      	add	r3, r2
 8001218:	f04f 32ff 	mov.w	r2, #4294967295
 800121c:	4619      	mov	r1, r3
 800121e:	f00b ffb5 	bl	800d18c <xQueueReceive>

		// negeer dit char bij geen data: -1, 255, of CR of spatie
		if (buffer[pos] == 0 || buffer[pos] == -1 || buffer[pos] == 255 || buffer[pos] == CRETURN || buffer[pos] == 32)
 8001222:	f107 0218 	add.w	r2, r7, #24
 8001226:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001228:	4413      	add	r3, r2
 800122a:	781b      	ldrb	r3, [r3, #0]
 800122c:	2b00      	cmp	r3, #0
 800122e:	d06b      	beq.n	8001308 <UART_keys_IRQ+0x12c>
 8001230:	f107 0218 	add.w	r2, r7, #24
 8001234:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001236:	4413      	add	r3, r2
 8001238:	781b      	ldrb	r3, [r3, #0]
 800123a:	2bff      	cmp	r3, #255	@ 0xff
 800123c:	d064      	beq.n	8001308 <UART_keys_IRQ+0x12c>
 800123e:	f107 0218 	add.w	r2, r7, #24
 8001242:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001244:	4413      	add	r3, r2
 8001246:	781b      	ldrb	r3, [r3, #0]
 8001248:	2b0d      	cmp	r3, #13
 800124a:	d05d      	beq.n	8001308 <UART_keys_IRQ+0x12c>
 800124c:	f107 0218 	add.w	r2, r7, #24
 8001250:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001252:	4413      	add	r3, r2
 8001254:	781b      	ldrb	r3, [r3, #0]
 8001256:	2b20      	cmp	r3, #32
 8001258:	d056      	beq.n	8001308 <UART_keys_IRQ+0x12c>
			continue;

		//UART_putchar(buffer[pos]);  // echo

		// check of de string gesloten was of gesloten moet worden...
		if (buffer[pos] == LFEED)     // close als LF gedrukt
 800125a:	f107 0218 	add.w	r2, r7, #24
 800125e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001260:	4413      	add	r3, r2
 8001262:	781b      	ldrb	r3, [r3, #0]
 8001264:	2b0a      	cmp	r3, #10
 8001266:	d108      	bne.n	800127a <UART_keys_IRQ+0x9e>
		{
			buffer[pos] = '\0';
 8001268:	f107 0218 	add.w	r2, r7, #24
 800126c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800126e:	4413      	add	r3, r2
 8001270:	2200      	movs	r2, #0
 8001272:	701a      	strb	r2, [r3, #0]
			finish = TRUE;
 8001274:	2301      	movs	r3, #1
 8001276:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001278:	e00d      	b.n	8001296 <UART_keys_IRQ+0xba>

		}
		else if (pos == QSIZE_UART - 2) // close if end of buf
 800127a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800127c:	2b08      	cmp	r3, #8
 800127e:	d10a      	bne.n	8001296 <UART_keys_IRQ+0xba>
		{
			buffer[++pos] = '\0';       // first, skip to last position, then close string
 8001280:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001282:	3301      	adds	r3, #1
 8001284:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001286:	f107 0218 	add.w	r2, r7, #24
 800128a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800128c:	4413      	add	r3, r2
 800128e:	2200      	movs	r2, #0
 8001290:	701a      	strb	r2, [r3, #0]
			finish = TRUE;
 8001292:	2301      	movs	r3, #1
 8001294:	62bb      	str	r3, [r7, #40]	@ 0x28
		}

		if (finish)
 8001296:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001298:	2b00      	cmp	r3, #0
 800129a:	d031      	beq.n	8001300 <UART_keys_IRQ+0x124>
		{
			// de volgende taak krijgt een copy van de string
			// mijn eigen buffer kan zo gelijk weer gevuld worden door de ISR
			strcpy(buffer_copy, buffer);
 800129c:	f107 0218 	add.w	r2, r7, #24
 80012a0:	f107 030c 	add.w	r3, r7, #12
 80012a4:	4611      	mov	r1, r2
 80012a6:	4618      	mov	r0, r3
 80012a8:	f011 fb67 	bl	801297a <strcpy>
			memset(buffer, 0, QSIZE_UART); // clear original buffer
 80012ac:	f107 0318 	add.w	r3, r7, #24
 80012b0:	220a      	movs	r2, #10
 80012b2:	2100      	movs	r1, #0
 80012b4:	4618      	mov	r0, r3
 80012b6:	f011 f9e5 	bl	8012684 <memset>
			finish = FALSE;
 80012ba:	2300      	movs	r3, #0
 80012bc:	62bb      	str	r3, [r7, #40]	@ 0x28
			pos = 0;
 80012be:	2300      	movs	r3, #0
 80012c0:	62fb      	str	r3, [r7, #44]	@ 0x2c

			xTaskNotify(hTask, buffer_copy, eSetValueWithOverwrite); // notify task2 with copy
 80012c2:	f107 010c 	add.w	r1, r7, #12
 80012c6:	2300      	movs	r3, #0
 80012c8:	2203      	movs	r2, #3
 80012ca:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 80012cc:	f00e f898 	bl	800f400 <xTaskGenericNotify>

			if (Uart_debug_out & UART_DEBUG_OUT)
 80012d0:	4b13      	ldr	r3, [pc, #76]	@ (8001320 <UART_keys_IRQ+0x144>)
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	f003 0304 	and.w	r3, r3, #4
 80012d8:	2b00      	cmp	r3, #0
 80012da:	d097      	beq.n	800120c <UART_keys_IRQ+0x30>
			{
				UART_puts("\n\r"); UART_puts((char *)__func__);
 80012dc:	4811      	ldr	r0, [pc, #68]	@ (8001324 <UART_keys_IRQ+0x148>)
 80012de:	f001 fd97 	bl	8002e10 <UART_puts>
 80012e2:	480a      	ldr	r0, [pc, #40]	@ (800130c <UART_keys_IRQ+0x130>)
 80012e4:	f001 fd94 	bl	8002e10 <UART_puts>
				UART_puts(": UART_menu notified with "); UART_puts(buffer_copy);
 80012e8:	480f      	ldr	r0, [pc, #60]	@ (8001328 <UART_keys_IRQ+0x14c>)
 80012ea:	f001 fd91 	bl	8002e10 <UART_puts>
 80012ee:	f107 030c 	add.w	r3, r7, #12
 80012f2:	4618      	mov	r0, r3
 80012f4:	f001 fd8c 	bl	8002e10 <UART_puts>
				UART_puts("\r\n");
 80012f8:	480c      	ldr	r0, [pc, #48]	@ (800132c <UART_keys_IRQ+0x150>)
 80012fa:	f001 fd89 	bl	8002e10 <UART_puts>
 80012fe:	e785      	b.n	800120c <UART_keys_IRQ+0x30>
			}
		}
		else
			pos++;
 8001300:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001302:	3301      	adds	r3, #1
 8001304:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001306:	e781      	b.n	800120c <UART_keys_IRQ+0x30>
			continue;
 8001308:	bf00      	nop
		xQueueReceive(hUART_Queue, &buffer[pos], portMAX_DELAY);
 800130a:	e77f      	b.n	800120c <UART_keys_IRQ+0x30>
 800130c:	08015d44 	.word	0x08015d44
 8001310:	08015254 	.word	0x08015254
 8001314:	08015208 	.word	0x08015208
 8001318:	08015278 	.word	0x08015278
 800131c:	20000478 	.word	0x20000478
 8001320:	20000474 	.word	0x20000474
 8001324:	08015238 	.word	0x08015238
 8001328:	08015288 	.word	0x08015288
 800132c:	08015250 	.word	0x08015250

08001330 <UART_menu>:
* geinterpreteerd.
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void UART_menu (void *argument)
{
 8001330:	b580      	push	{r7, lr}
 8001332:	b08a      	sub	sp, #40	@ 0x28
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
	char   *s;
	char   *tok = ",";  // token if command is more than 1 char
 8001338:	4bac      	ldr	r3, [pc, #688]	@ (80015ec <UART_menu+0x2bc>)
 800133a:	623b      	str	r3, [r7, #32]
	int     val1, val2;

	UART_puts((char *)__func__); UART_puts("started\n\r");
 800133c:	48ac      	ldr	r0, [pc, #688]	@ (80015f0 <UART_menu+0x2c0>)
 800133e:	f001 fd67 	bl	8002e10 <UART_puts>
 8001342:	48ac      	ldr	r0, [pc, #688]	@ (80015f4 <UART_menu+0x2c4>)
 8001344:	f001 fd64 	bl	8002e10 <UART_puts>

	while (TRUE)
	{
		// wacht op de string; let op de cast van (unsigned long) naar (char *)!
		// want de waarde die ik terug krijg is een pointer.
		s = (char *)ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8001348:	f04f 31ff 	mov.w	r1, #4294967295
 800134c:	2001      	movs	r0, #1
 800134e:	f00d ffab 	bl	800f2a8 <ulTaskNotifyTake>
 8001352:	4603      	mov	r3, r0
 8001354:	61fb      	str	r3, [r7, #28]

		// check het eerste (en vaak enige) karakter van de inkomende command-string
		// toupper() zorgt ervoor dat het eerste karakter hoofdletter wordt, zo hoef ik niet op kleine
		// letters te checken.
		switch (toupper((unsigned char)s[0]))
 8001356:	69fb      	ldr	r3, [r7, #28]
 8001358:	781b      	ldrb	r3, [r3, #0]
 800135a:	76fb      	strb	r3, [r7, #27]
 800135c:	7efb      	ldrb	r3, [r7, #27]
 800135e:	3301      	adds	r3, #1
 8001360:	4aa5      	ldr	r2, [pc, #660]	@ (80015f8 <UART_menu+0x2c8>)
 8001362:	4413      	add	r3, r2
 8001364:	781b      	ldrb	r3, [r3, #0]
 8001366:	f003 0303 	and.w	r3, r3, #3
 800136a:	2b02      	cmp	r3, #2
 800136c:	d102      	bne.n	8001374 <UART_menu+0x44>
 800136e:	7efb      	ldrb	r3, [r7, #27]
 8001370:	3b20      	subs	r3, #32
 8001372:	e000      	b.n	8001376 <UART_menu+0x46>
 8001374:	7efb      	ldrb	r3, [r7, #27]
 8001376:	3b30      	subs	r3, #48	@ 0x30
 8001378:	2b27      	cmp	r3, #39	@ 0x27
 800137a:	d853      	bhi.n	8001424 <UART_menu+0xf4>
 800137c:	a201      	add	r2, pc, #4	@ (adr r2, 8001384 <UART_menu+0x54>)
 800137e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001382:	bf00      	nop
 8001384:	08001433 	.word	0x08001433
 8001388:	0800146f 	.word	0x0800146f
 800138c:	0800149b 	.word	0x0800149b
 8001390:	080014c7 	.word	0x080014c7
 8001394:	080014f3 	.word	0x080014f3
 8001398:	0800151f 	.word	0x0800151f
 800139c:	0800154b 	.word	0x0800154b
 80013a0:	08001425 	.word	0x08001425
 80013a4:	08001425 	.word	0x08001425
 80013a8:	08001425 	.word	0x08001425
 80013ac:	08001425 	.word	0x08001425
 80013b0:	08001425 	.word	0x08001425
 80013b4:	08001425 	.word	0x08001425
 80013b8:	08001425 	.word	0x08001425
 80013bc:	08001425 	.word	0x08001425
 80013c0:	08001425 	.word	0x08001425
 80013c4:	08001425 	.word	0x08001425
 80013c8:	08001425 	.word	0x08001425
 80013cc:	08001425 	.word	0x08001425
 80013d0:	08001425 	.word	0x08001425
 80013d4:	08001577 	.word	0x08001577
 80013d8:	08001425 	.word	0x08001425
 80013dc:	08001425 	.word	0x08001425
 80013e0:	08001425 	.word	0x08001425
 80013e4:	08001425 	.word	0x08001425
 80013e8:	08001425 	.word	0x08001425
 80013ec:	08001425 	.word	0x08001425
 80013f0:	08001425 	.word	0x08001425
 80013f4:	08001425 	.word	0x08001425
 80013f8:	0800159b 	.word	0x0800159b
 80013fc:	08001425 	.word	0x08001425
 8001400:	08001425 	.word	0x08001425
 8001404:	080015a9 	.word	0x080015a9
 8001408:	08001425 	.word	0x08001425
 800140c:	08001425 	.word	0x08001425
 8001410:	08001631 	.word	0x08001631
 8001414:	080015a1 	.word	0x080015a1
 8001418:	08001425 	.word	0x08001425
 800141c:	08001425 	.word	0x08001425
 8001420:	0800165b 	.word	0x0800165b
		{
		default:  UART_puts(s);
 8001424:	69f8      	ldr	r0, [r7, #28]
 8001426:	f001 fcf3 	bl	8002e10 <UART_puts>
				  UART_puts(" (unkown command)\r\n");
 800142a:	4874      	ldr	r0, [pc, #464]	@ (80015fc <UART_menu+0x2cc>)
 800142c:	f001 fcf0 	bl	8002e10 <UART_puts>
				  break;
 8001430:	e148      	b.n	80016c4 <UART_menu+0x394>

		/// <b>0 - 5</b>: Togglet verschillende debug-outputs naar UART
		case '0': Uart_debug_out = (Uart_debug_out ? DEBUG_OUT_NONE : DEBUG_OUT_ALL);
 8001432:	4b73      	ldr	r3, [pc, #460]	@ (8001600 <UART_menu+0x2d0>)
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	2b00      	cmp	r3, #0
 8001438:	d001      	beq.n	800143e <UART_menu+0x10e>
 800143a:	2300      	movs	r3, #0
 800143c:	e000      	b.n	8001440 <UART_menu+0x110>
 800143e:	23ff      	movs	r3, #255	@ 0xff
 8001440:	4a6f      	ldr	r2, [pc, #444]	@ (8001600 <UART_menu+0x2d0>)
 8001442:	6013      	str	r3, [r2, #0]
		  	  	  UART_puts("\r\nall debug output = ");
 8001444:	486f      	ldr	r0, [pc, #444]	@ (8001604 <UART_menu+0x2d4>)
 8001446:	f001 fce3 	bl	8002e10 <UART_puts>
		  	  	  UART_puts(Uart_debug_out == DEBUG_OUT_ALL ? "ON\r\n" : "OFF\r\n");
 800144a:	4b6d      	ldr	r3, [pc, #436]	@ (8001600 <UART_menu+0x2d0>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	2bff      	cmp	r3, #255	@ 0xff
 8001450:	d101      	bne.n	8001456 <UART_menu+0x126>
 8001452:	4b6d      	ldr	r3, [pc, #436]	@ (8001608 <UART_menu+0x2d8>)
 8001454:	e000      	b.n	8001458 <UART_menu+0x128>
 8001456:	4b6d      	ldr	r3, [pc, #436]	@ (800160c <UART_menu+0x2dc>)
 8001458:	4618      	mov	r0, r3
 800145a:	f001 fcd9 	bl	8002e10 <UART_puts>

		  	  	  // als alle output uitgezet wordt, is het handig om gelijk het menu te laten zien.
		  	  	  if (Uart_debug_out == DEBUG_OUT_NONE)
 800145e:	4b68      	ldr	r3, [pc, #416]	@ (8001600 <UART_menu+0x2d0>)
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	2b00      	cmp	r3, #0
 8001464:	f040 8129 	bne.w	80016ba <UART_menu+0x38a>
		  	  		  DisplayMenu();
 8001468:	f000 f996 	bl	8001798 <DisplayMenu>
				  break;
 800146c:	e125      	b.n	80016ba <UART_menu+0x38a>

		case '1': Uart_debug_out ^= LEDS_DEBUG_OUT; // toggle output on/off
 800146e:	4b64      	ldr	r3, [pc, #400]	@ (8001600 <UART_menu+0x2d0>)
 8001470:	681b      	ldr	r3, [r3, #0]
 8001472:	f083 0301 	eor.w	r3, r3, #1
 8001476:	4a62      	ldr	r2, [pc, #392]	@ (8001600 <UART_menu+0x2d0>)
 8001478:	6013      	str	r3, [r2, #0]
				  UART_puts("\r\nleds output = ");
 800147a:	4865      	ldr	r0, [pc, #404]	@ (8001610 <UART_menu+0x2e0>)
 800147c:	f001 fcc8 	bl	8002e10 <UART_puts>
				  UART_puts(Uart_debug_out & LEDS_DEBUG_OUT ? "ON\r\n" : "OFF\r\n");
 8001480:	4b5f      	ldr	r3, [pc, #380]	@ (8001600 <UART_menu+0x2d0>)
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	f003 0301 	and.w	r3, r3, #1
 8001488:	2b00      	cmp	r3, #0
 800148a:	d001      	beq.n	8001490 <UART_menu+0x160>
 800148c:	4b5e      	ldr	r3, [pc, #376]	@ (8001608 <UART_menu+0x2d8>)
 800148e:	e000      	b.n	8001492 <UART_menu+0x162>
 8001490:	4b5e      	ldr	r3, [pc, #376]	@ (800160c <UART_menu+0x2dc>)
 8001492:	4618      	mov	r0, r3
 8001494:	f001 fcbc 	bl	8002e10 <UART_puts>
				  break;
 8001498:	e114      	b.n	80016c4 <UART_menu+0x394>

		case '2': Uart_debug_out ^= ARMKEYS_DEBUG_OUT; // toggle output on/off
 800149a:	4b59      	ldr	r3, [pc, #356]	@ (8001600 <UART_menu+0x2d0>)
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	f083 0302 	eor.w	r3, r3, #2
 80014a2:	4a57      	ldr	r2, [pc, #348]	@ (8001600 <UART_menu+0x2d0>)
 80014a4:	6013      	str	r3, [r2, #0]
		  	      UART_puts("\r\narmkeys output = ");
 80014a6:	485b      	ldr	r0, [pc, #364]	@ (8001614 <UART_menu+0x2e4>)
 80014a8:	f001 fcb2 	bl	8002e10 <UART_puts>
		  	      UART_puts(Uart_debug_out & ARMKEYS_DEBUG_OUT ? "ON\r\n" : "OFF\r\n");
 80014ac:	4b54      	ldr	r3, [pc, #336]	@ (8001600 <UART_menu+0x2d0>)
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	f003 0302 	and.w	r3, r3, #2
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <UART_menu+0x18c>
 80014b8:	4b53      	ldr	r3, [pc, #332]	@ (8001608 <UART_menu+0x2d8>)
 80014ba:	e000      	b.n	80014be <UART_menu+0x18e>
 80014bc:	4b53      	ldr	r3, [pc, #332]	@ (800160c <UART_menu+0x2dc>)
 80014be:	4618      	mov	r0, r3
 80014c0:	f001 fca6 	bl	8002e10 <UART_puts>
				  break;
 80014c4:	e0fe      	b.n	80016c4 <UART_menu+0x394>

		case '3': Uart_debug_out ^= UART_DEBUG_OUT; // toggle output on/off
 80014c6:	4b4e      	ldr	r3, [pc, #312]	@ (8001600 <UART_menu+0x2d0>)
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	f083 0304 	eor.w	r3, r3, #4
 80014ce:	4a4c      	ldr	r2, [pc, #304]	@ (8001600 <UART_menu+0x2d0>)
 80014d0:	6013      	str	r3, [r2, #0]
		  	      UART_puts("\r\nuart output = ");
 80014d2:	4851      	ldr	r0, [pc, #324]	@ (8001618 <UART_menu+0x2e8>)
 80014d4:	f001 fc9c 	bl	8002e10 <UART_puts>
		  	      UART_puts(Uart_debug_out & UART_DEBUG_OUT ? "ON\r\n" : "OFF\r\n");
 80014d8:	4b49      	ldr	r3, [pc, #292]	@ (8001600 <UART_menu+0x2d0>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	f003 0304 	and.w	r3, r3, #4
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d001      	beq.n	80014e8 <UART_menu+0x1b8>
 80014e4:	4b48      	ldr	r3, [pc, #288]	@ (8001608 <UART_menu+0x2d8>)
 80014e6:	e000      	b.n	80014ea <UART_menu+0x1ba>
 80014e8:	4b48      	ldr	r3, [pc, #288]	@ (800160c <UART_menu+0x2dc>)
 80014ea:	4618      	mov	r0, r3
 80014ec:	f001 fc90 	bl	8002e10 <UART_puts>
				  break;
 80014f0:	e0e8      	b.n	80016c4 <UART_menu+0x394>

		case '4': Uart_debug_out ^= STUDENT_DEBUG_OUT; // toggle output on/off
 80014f2:	4b43      	ldr	r3, [pc, #268]	@ (8001600 <UART_menu+0x2d0>)
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	f083 0308 	eor.w	r3, r3, #8
 80014fa:	4a41      	ldr	r2, [pc, #260]	@ (8001600 <UART_menu+0x2d0>)
 80014fc:	6013      	str	r3, [r2, #0]
		  	  	  UART_puts("\r\nstudent output = ");
 80014fe:	4847      	ldr	r0, [pc, #284]	@ (800161c <UART_menu+0x2ec>)
 8001500:	f001 fc86 	bl	8002e10 <UART_puts>
		  	  	  UART_puts(Uart_debug_out & STUDENT_DEBUG_OUT ? "ON\r\n" : "OFF\r\n");
 8001504:	4b3e      	ldr	r3, [pc, #248]	@ (8001600 <UART_menu+0x2d0>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	f003 0308 	and.w	r3, r3, #8
 800150c:	2b00      	cmp	r3, #0
 800150e:	d001      	beq.n	8001514 <UART_menu+0x1e4>
 8001510:	4b3d      	ldr	r3, [pc, #244]	@ (8001608 <UART_menu+0x2d8>)
 8001512:	e000      	b.n	8001516 <UART_menu+0x1e6>
 8001514:	4b3d      	ldr	r3, [pc, #244]	@ (800160c <UART_menu+0x2dc>)
 8001516:	4618      	mov	r0, r3
 8001518:	f001 fc7a 	bl	8002e10 <UART_puts>
				  break;
 800151c:	e0d2      	b.n	80016c4 <UART_menu+0x394>

		case '5': Uart_debug_out ^= GPS_DEBUG_OUT; // toggle output on/off
 800151e:	4b38      	ldr	r3, [pc, #224]	@ (8001600 <UART_menu+0x2d0>)
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	f083 0310 	eor.w	r3, r3, #16
 8001526:	4a36      	ldr	r2, [pc, #216]	@ (8001600 <UART_menu+0x2d0>)
 8001528:	6013      	str	r3, [r2, #0]
		  	  	  UART_puts("\r\nGPS output = ");
 800152a:	483d      	ldr	r0, [pc, #244]	@ (8001620 <UART_menu+0x2f0>)
 800152c:	f001 fc70 	bl	8002e10 <UART_puts>
		  	  	  UART_puts(Uart_debug_out & GPS_DEBUG_OUT ? "ON\r\n" : "OFF\r\n");
 8001530:	4b33      	ldr	r3, [pc, #204]	@ (8001600 <UART_menu+0x2d0>)
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	f003 0310 	and.w	r3, r3, #16
 8001538:	2b00      	cmp	r3, #0
 800153a:	d001      	beq.n	8001540 <UART_menu+0x210>
 800153c:	4b32      	ldr	r3, [pc, #200]	@ (8001608 <UART_menu+0x2d8>)
 800153e:	e000      	b.n	8001542 <UART_menu+0x212>
 8001540:	4b32      	ldr	r3, [pc, #200]	@ (800160c <UART_menu+0x2dc>)
 8001542:	4618      	mov	r0, r3
 8001544:	f001 fc64 	bl	8002e10 <UART_puts>
				  break;
 8001548:	e0bc      	b.n	80016c4 <UART_menu+0x394>

		case '6': Uart_debug_out ^= GPS_DEBUG_RAW_OUT; // toggle output on/off
 800154a:	4b2d      	ldr	r3, [pc, #180]	@ (8001600 <UART_menu+0x2d0>)
 800154c:	681b      	ldr	r3, [r3, #0]
 800154e:	f083 0320 	eor.w	r3, r3, #32
 8001552:	4a2b      	ldr	r2, [pc, #172]	@ (8001600 <UART_menu+0x2d0>)
 8001554:	6013      	str	r3, [r2, #0]
		  	  	  UART_puts("\r\nGPS-raw output = ");
 8001556:	4833      	ldr	r0, [pc, #204]	@ (8001624 <UART_menu+0x2f4>)
 8001558:	f001 fc5a 	bl	8002e10 <UART_puts>
		  	  	  UART_puts(Uart_debug_out & GPS_DEBUG_RAW_OUT ? "ON\r\n" : "OFF\r\n");
 800155c:	4b28      	ldr	r3, [pc, #160]	@ (8001600 <UART_menu+0x2d0>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	f003 0320 	and.w	r3, r3, #32
 8001564:	2b00      	cmp	r3, #0
 8001566:	d001      	beq.n	800156c <UART_menu+0x23c>
 8001568:	4b27      	ldr	r3, [pc, #156]	@ (8001608 <UART_menu+0x2d8>)
 800156a:	e000      	b.n	800156e <UART_menu+0x23e>
 800156c:	4b27      	ldr	r3, [pc, #156]	@ (800160c <UART_menu+0x2dc>)
 800156e:	4618      	mov	r0, r3
 8001570:	f001 fc4e 	bl	8002e10 <UART_puts>
				  break;
 8001574:	e0a6      	b.n	80016c4 <UART_menu+0x394>

		/// ... en reageert ook op een paar letters
		case 'D': /// D: Verandert de Default OSTIME-DELAY, die gebruikt wordt bij de LEDs.
				  /// commando: <b>"d,200"</b> betekent: set delay op 200, NB: spaties worden niet afgevangen...
				  os_delay = atoi(s+2); // skip first 2 characters
 8001576:	69fb      	ldr	r3, [r7, #28]
 8001578:	3302      	adds	r3, #2
 800157a:	4618      	mov	r0, r3
 800157c:	f00f fb71 	bl	8010c62 <atoi>
 8001580:	4603      	mov	r3, r0
 8001582:	461a      	mov	r2, r3
 8001584:	4b28      	ldr	r3, [pc, #160]	@ (8001628 <UART_menu+0x2f8>)
 8001586:	601a      	str	r2, [r3, #0]
				  UART_puts("\r\n os_delay set to: "); UART_putint(os_delay);
 8001588:	4828      	ldr	r0, [pc, #160]	@ (800162c <UART_menu+0x2fc>)
 800158a:	f001 fc41 	bl	8002e10 <UART_puts>
 800158e:	4b26      	ldr	r3, [pc, #152]	@ (8001628 <UART_menu+0x2f8>)
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	4618      	mov	r0, r3
 8001594:	f001 fcb4 	bl	8002f00 <UART_putint>
				  break;
 8001598:	e094      	b.n	80016c4 <UART_menu+0x394>

		case 'M': DisplayMenu(); /// M: Displays het menu (zie my_app.c)
 800159a:	f000 f8fd 	bl	8001798 <DisplayMenu>
				  break;
 800159e:	e091      	b.n	80016c4 <UART_menu+0x394>

		case 'T': CheckTaskData(TRUE); /// T: Displays de stackdata van alle Tasks
 80015a0:	2001      	movs	r0, #1
 80015a2:	f000 fa75 	bl	8001a90 <CheckTaskData>
				  break;
 80015a6:	e08d      	b.n	80016c4 <UART_menu+0x394>
		case 'P': /// P: Verandert de Prioriteit van een taak
				  /// commando, als: <b>"t,9,20"</b> betekent: set Task 9 op priority 20
				  //  eerst: de 2 waarden worden uit de string gehaald met strtok()
			      //  dan: de strings worden naar int geconverteerd
				  //  nb. dit is wel grof geprogrammeerd zo, in het echt maak je hier een mooie functie van.
			      s = strtok(s,    tok); 				 // naar start van string, negeer 't,'
 80015a8:	6a39      	ldr	r1, [r7, #32]
 80015aa:	69f8      	ldr	r0, [r7, #28]
 80015ac:	f011 f8a4 	bl	80126f8 <strtok>
 80015b0:	61f8      	str	r0, [r7, #28]
				  s = strtok(NULL, tok); val1 = atoi(s); // volgende = task_id
 80015b2:	6a39      	ldr	r1, [r7, #32]
 80015b4:	2000      	movs	r0, #0
 80015b6:	f011 f89f 	bl	80126f8 <strtok>
 80015ba:	61f8      	str	r0, [r7, #28]
 80015bc:	69f8      	ldr	r0, [r7, #28]
 80015be:	f00f fb50 	bl	8010c62 <atoi>
 80015c2:	60f8      	str	r0, [r7, #12]
				  s = strtok(NULL, tok); val2 = atoi(s); // volgende = priority
 80015c4:	6a39      	ldr	r1, [r7, #32]
 80015c6:	2000      	movs	r0, #0
 80015c8:	f011 f896 	bl	80126f8 <strtok>
 80015cc:	61f8      	str	r0, [r7, #28]
 80015ce:	69f8      	ldr	r0, [r7, #28]
 80015d0:	f00f fb47 	bl	8010c62 <atoi>
 80015d4:	60b8      	str	r0, [r7, #8]
				  if (val1 && val2)						 // kleine validiteitscontrole
 80015d6:	68fb      	ldr	r3, [r7, #12]
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d070      	beq.n	80016be <UART_menu+0x38e>
 80015dc:	68bb      	ldr	r3, [r7, #8]
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d06d      	beq.n	80016be <UART_menu+0x38e>
					  SetTaskPriority(val1, val2);
 80015e2:	68b9      	ldr	r1, [r7, #8]
 80015e4:	68f8      	ldr	r0, [r7, #12]
 80015e6:	f000 f9cf 	bl	8001988 <SetTaskPriority>
				  break;
 80015ea:	e068      	b.n	80016be <UART_menu+0x38e>
 80015ec:	080152a4 	.word	0x080152a4
 80015f0:	08015d54 	.word	0x08015d54
 80015f4:	080152a8 	.word	0x080152a8
 80015f8:	08016068 	.word	0x08016068
 80015fc:	080152b4 	.word	0x080152b4
 8001600:	20000474 	.word	0x20000474
 8001604:	080152c8 	.word	0x080152c8
 8001608:	080152e0 	.word	0x080152e0
 800160c:	080152e8 	.word	0x080152e8
 8001610:	080152f0 	.word	0x080152f0
 8001614:	08015304 	.word	0x08015304
 8001618:	08015318 	.word	0x08015318
 800161c:	0801532c 	.word	0x0801532c
 8001620:	08015340 	.word	0x08015340
 8001624:	08015350 	.word	0x08015350
 8001628:	20000248 	.word	0x20000248
 800162c:	08015364 	.word	0x08015364
		case 'S': /// S: Start/Stop task
				  /// commando, als: <b>"s,9"</b> betekent: start/stop Task 9
				  //  eerst: de waarde worden uit de string gehaald met strtok()
			      //  dan: de string wordt naar int geconverteerd
				  //  nb. dit is wel grof geprogrammeerd zo, in het echt maak je hier een mooie functie van.
			      s = strtok(s,    tok); 				 // naar start van string, negeer 's,'
 8001630:	6a39      	ldr	r1, [r7, #32]
 8001632:	69f8      	ldr	r0, [r7, #28]
 8001634:	f011 f860 	bl	80126f8 <strtok>
 8001638:	61f8      	str	r0, [r7, #28]
				  s = strtok(NULL, tok); val1 = atoi(s); // volgende = task_id
 800163a:	6a39      	ldr	r1, [r7, #32]
 800163c:	2000      	movs	r0, #0
 800163e:	f011 f85b 	bl	80126f8 <strtok>
 8001642:	61f8      	str	r0, [r7, #28]
 8001644:	69f8      	ldr	r0, [r7, #28]
 8001646:	f00f fb0c 	bl	8010c62 <atoi>
 800164a:	60f8      	str	r0, [r7, #12]
				  if (val1)						 // kleine validiteitscontrole
 800164c:	68fb      	ldr	r3, [r7, #12]
 800164e:	2b00      	cmp	r3, #0
 8001650:	d037      	beq.n	80016c2 <UART_menu+0x392>
					  StartStopTask(val1);
 8001652:	68f8      	ldr	r0, [r7, #12]
 8001654:	f000 f9d4 	bl	8001a00 <StartStopTask>
				  break;
 8001658:	e033      	b.n	80016c2 <UART_menu+0x392>

		case 'W': /// W: Show GPS data
				  // Eerst worden floats aangemaakt als buffer,
				  // daarna wordt funtie returnWaypoints aangeroepen (route.c) om de floatwaardes op te halen.
				UART_puts("\r\n\nGetting waypoints");
 800165a:	481b      	ldr	r0, [pc, #108]	@ (80016c8 <UART_menu+0x398>)
 800165c:	f001 fbd8 	bl	8002e10 <UART_puts>
				for (int i = 0; i <STRC_AMOUNT; i++) 			// maakt teller aan om waypoints te printen
 8001660:	2300      	movs	r3, #0
 8001662:	627b      	str	r3, [r7, #36]	@ 0x24
 8001664:	e025      	b.n	80016b2 <UART_menu+0x382>
				{
					float templat;
					templat = returnWaypoints(i, 1);			// print latitude van punt i
 8001666:	2101      	movs	r1, #1
 8001668:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800166a:	f001 f849 	bl	8002700 <returnWaypoints>
 800166e:	ed87 0a05 	vstr	s0, [r7, #20]
					float templon;
					templon = returnWaypoints(i, 2);			// print longitude van punt i
 8001672:	2102      	movs	r1, #2
 8001674:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001676:	f001 f843 	bl	8002700 <returnWaypoints>
 800167a:	ed87 0a04 	vstr	s0, [r7, #16]
					UART_printf(100, "\r\n\nWaypoint %d: ", i);
 800167e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001680:	4912      	ldr	r1, [pc, #72]	@ (80016cc <UART_menu+0x39c>)
 8001682:	2064      	movs	r0, #100	@ 0x64
 8001684:	f001 fbe0 	bl	8002e48 <UART_printf>
					UART_printf(100, "\r\nlon: %f", templat);
 8001688:	6978      	ldr	r0, [r7, #20]
 800168a:	f7fe ff5d 	bl	8000548 <__aeabi_f2d>
 800168e:	4602      	mov	r2, r0
 8001690:	460b      	mov	r3, r1
 8001692:	490f      	ldr	r1, [pc, #60]	@ (80016d0 <UART_menu+0x3a0>)
 8001694:	2064      	movs	r0, #100	@ 0x64
 8001696:	f001 fbd7 	bl	8002e48 <UART_printf>
					UART_printf(100, "\r\nlat: %f", templon);
 800169a:	6938      	ldr	r0, [r7, #16]
 800169c:	f7fe ff54 	bl	8000548 <__aeabi_f2d>
 80016a0:	4602      	mov	r2, r0
 80016a2:	460b      	mov	r3, r1
 80016a4:	490b      	ldr	r1, [pc, #44]	@ (80016d4 <UART_menu+0x3a4>)
 80016a6:	2064      	movs	r0, #100	@ 0x64
 80016a8:	f001 fbce 	bl	8002e48 <UART_printf>
				for (int i = 0; i <STRC_AMOUNT; i++) 			// maakt teller aan om waypoints te printen
 80016ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016ae:	3301      	adds	r3, #1
 80016b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80016b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016b4:	2b13      	cmp	r3, #19
 80016b6:	ddd6      	ble.n	8001666 <UART_menu+0x336>
 80016b8:	e646      	b.n	8001348 <UART_menu+0x18>
				  break;
 80016ba:	bf00      	nop
 80016bc:	e644      	b.n	8001348 <UART_menu+0x18>
				  break;
 80016be:	bf00      	nop
 80016c0:	e642      	b.n	8001348 <UART_menu+0x18>
				  break;
 80016c2:	bf00      	nop
		s = (char *)ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80016c4:	e640      	b.n	8001348 <UART_menu+0x18>
 80016c6:	bf00      	nop
 80016c8:	0801537c 	.word	0x0801537c
 80016cc:	08015394 	.word	0x08015394
 80016d0:	080153a8 	.word	0x080153a8
 80016d4:	080153b4 	.word	0x080153b4

080016d8 <DisplayVersion>:
* Les: je ziet hoe je handig een lange string kunt opstellen met het '\'-karakter.
* @return void
* @author MSC
*/
void DisplayVersion(void)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	b09c      	sub	sp, #112	@ 0x70
 80016dc:	af00      	add	r7, sp, #0
	char infobuf[100];
    osVersion_t osv;

    char *functionality =
 80016de:	4b24      	ldr	r3, [pc, #144]	@ (8001770 <DisplayVersion+0x98>)
 80016e0:	66fb      	str	r3, [r7, #108]	@ 0x6c
en hoe je makkelijk tasks aanmaakt (admin.c) en hoe je de bidirectionele omgang \r\n\
met de UART-comport gebruikt.\r\n\
Zie verder de Doxygen documentatie van de applicatie.\r\n\
Michiel Scager (update: april 2023)\r\n";

	LCD_clear();
 80016e2:	f001 f9ab 	bl	8002a3c <LCD_clear>
	LCD_puts(app_nameLCD);
 80016e6:	4b23      	ldr	r3, [pc, #140]	@ (8001774 <DisplayVersion+0x9c>)
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	4618      	mov	r0, r3
 80016ec:	f001 fa9e 	bl	8002c2c <LCD_puts>

	UART_puts(app_name);
 80016f0:	4b21      	ldr	r3, [pc, #132]	@ (8001778 <DisplayVersion+0xa0>)
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	4618      	mov	r0, r3
 80016f6:	f001 fb8b 	bl	8002e10 <UART_puts>
	UART_puts(functionality);
 80016fa:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80016fc:	f001 fb88 	bl	8002e10 <UART_puts>

 	osKernelGetInfo(&osv, infobuf, sizeof(infobuf));
 8001700:	f107 0108 	add.w	r1, r7, #8
 8001704:	463b      	mov	r3, r7
 8001706:	2264      	movs	r2, #100	@ 0x64
 8001708:	4618      	mov	r0, r3
 800170a:	f00a fd41 	bl	800c190 <osKernelGetInfo>
	UART_puts("\t-----");
 800170e:	481b      	ldr	r0, [pc, #108]	@ (800177c <DisplayVersion+0xa4>)
 8001710:	f001 fb7e 	bl	8002e10 <UART_puts>
	UART_puts("\r\n\t");                       UART_puts(infobuf);
 8001714:	481a      	ldr	r0, [pc, #104]	@ (8001780 <DisplayVersion+0xa8>)
 8001716:	f001 fb7b 	bl	8002e10 <UART_puts>
 800171a:	f107 0308 	add.w	r3, r7, #8
 800171e:	4618      	mov	r0, r3
 8001720:	f001 fb76 	bl	8002e10 <UART_puts>
	UART_puts("\r\n\tVersion: ");              UART_putint(osv.kernel);
 8001724:	4817      	ldr	r0, [pc, #92]	@ (8001784 <DisplayVersion+0xac>)
 8001726:	f001 fb73 	bl	8002e10 <UART_puts>
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	4618      	mov	r0, r3
 800172e:	f001 fbe7 	bl	8002f00 <UART_putint>
	UART_puts("\r\n\tOS Timer freq (MHz): " ); UART_putint(osKernelGetSysTimerFreq()/1000000);
 8001732:	4815      	ldr	r0, [pc, #84]	@ (8001788 <DisplayVersion+0xb0>)
 8001734:	f001 fb6c 	bl	8002e10 <UART_puts>
 8001738:	f00a fd82 	bl	800c240 <osKernelGetSysTimerFreq>
 800173c:	4603      	mov	r3, r0
 800173e:	4a13      	ldr	r2, [pc, #76]	@ (800178c <DisplayVersion+0xb4>)
 8001740:	fba2 2303 	umull	r2, r3, r2, r3
 8001744:	0c9b      	lsrs	r3, r3, #18
 8001746:	4618      	mov	r0, r3
 8001748:	f001 fbda 	bl	8002f00 <UART_putint>
	UART_puts("\r\n\tOS Tick freq (Hz): " );   UART_putint(osKernelGetTickFreq());
 800174c:	4810      	ldr	r0, [pc, #64]	@ (8001790 <DisplayVersion+0xb8>)
 800174e:	f001 fb5f 	bl	8002e10 <UART_puts>
 8001752:	f00a fd6b 	bl	800c22c <osKernelGetTickFreq>
 8001756:	4603      	mov	r3, r0
 8001758:	4618      	mov	r0, r3
 800175a:	f001 fbd1 	bl	8002f00 <UART_putint>
	UART_puts("\r\n\t-----\r\n");
 800175e:	480d      	ldr	r0, [pc, #52]	@ (8001794 <DisplayVersion+0xbc>)
 8001760:	f001 fb56 	bl	8002e10 <UART_puts>

    DisplayMenu();
 8001764:	f000 f818 	bl	8001798 <DisplayMenu>
}
 8001768:	bf00      	nop
 800176a:	3770      	adds	r7, #112	@ 0x70
 800176c:	46bd      	mov	sp, r7
 800176e:	bd80      	pop	{r7, pc}
 8001770:	08015488 	.word	0x08015488
 8001774:	20000004 	.word	0x20000004
 8001778:	20000000 	.word	0x20000000
 800177c:	080155f8 	.word	0x080155f8
 8001780:	08015600 	.word	0x08015600
 8001784:	08015604 	.word	0x08015604
 8001788:	08015614 	.word	0x08015614
 800178c:	431bde83 	.word	0x431bde83
 8001790:	08015630 	.word	0x08015630
 8001794:	08015648 	.word	0x08015648

08001798 <DisplayMenu>:
* User Interface (menu) naar UART.
* @return void
* @author MSC
*/
void DisplayMenu(void)
{
 8001798:	b580      	push	{r7, lr}
 800179a:	b082      	sub	sp, #8
 800179c:	af00      	add	r7, sp, #0
	char *menu =
 800179e:	4b04      	ldr	r3, [pc, #16]	@ (80017b0 <DisplayMenu+0x18>)
 80017a0:	607b      	str	r3, [r7, #4]
 p : change TASK PRIORITY, eg. 'p,7,20' sets priority of task 7 to 20\r\n\
 t : display TASK DATA (number, priority, stack usage, status)\r\n\
 s : start/stop TASK, eg. s,7 starts or stops task 7\r\n\
=====================================================================\r\n";

    UART_puts(menu);
 80017a2:	6878      	ldr	r0, [r7, #4]
 80017a4:	f001 fb34 	bl	8002e10 <UART_puts>
}
 80017a8:	bf00      	nop
 80017aa:	3708      	adds	r7, #8
 80017ac:	46bd      	mov	sp, r7
 80017ae:	bd80      	pop	{r7, pc}
 80017b0:	08015654 	.word	0x08015654

080017b4 <error_HaltOS>:
* dus op UART en LCD.
* @param msg Foutmelding
* @return void
*/
void error_HaltOS(char *msg)
{
 80017b4:	b580      	push	{r7, lr}
 80017b6:	b082      	sub	sp, #8
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
	LCD_puts(msg);
 80017bc:	6878      	ldr	r0, [r7, #4]
 80017be:	f001 fa35 	bl	8002c2c <LCD_puts>
	UART_puts(msg); UART_puts(". Application halted\r\n");
 80017c2:	6878      	ldr	r0, [r7, #4]
 80017c4:	f001 fb24 	bl	8002e10 <UART_puts>
 80017c8:	4805      	ldr	r0, [pc, #20]	@ (80017e0 <error_HaltOS+0x2c>)
 80017ca:	f001 fb21 	bl	8002e10 <UART_puts>

	BUZZER_put(1000);
 80017ce:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80017d2:	f000 fff1 	bl	80027b8 <BUZZER_put>
	vTaskSuspendAll(); // stop alle tasks
 80017d6:	f00c fdb9 	bl	800e34c <vTaskSuspendAll>

	while (TRUE)
 80017da:	bf00      	nop
 80017dc:	e7fd      	b.n	80017da <error_HaltOS+0x26>
 80017de:	bf00      	nop
 80017e0:	080158b8 	.word	0x080158b8

080017e4 <CreateHandles>:
/**
* @brief Creates alle handles voor deze applicatie
* @return void
*/
void CreateHandles(void)
{
 80017e4:	b590      	push	{r4, r7, lr}
 80017e6:	b083      	sub	sp, #12
 80017e8:	af02      	add	r7, sp, #8
	if (!(hLED_Sem = xSemaphoreCreateMutex()))
 80017ea:	2001      	movs	r0, #1
 80017ec:	f00b fb15 	bl	800ce1a <xQueueCreateMutex>
 80017f0:	4603      	mov	r3, r0
 80017f2:	4a36      	ldr	r2, [pc, #216]	@ (80018cc <CreateHandles+0xe8>)
 80017f4:	6013      	str	r3, [r2, #0]
 80017f6:	4b35      	ldr	r3, [pc, #212]	@ (80018cc <CreateHandles+0xe8>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	d102      	bne.n	8001804 <CreateHandles+0x20>
		error_HaltOS("Error hLED_Sem");
 80017fe:	4834      	ldr	r0, [pc, #208]	@ (80018d0 <CreateHandles+0xec>)
 8001800:	f7ff ffd8 	bl	80017b4 <error_HaltOS>

	if (!(hGpsDataMutex = xSemaphoreCreateMutex()))
 8001804:	2001      	movs	r0, #1
 8001806:	f00b fb08 	bl	800ce1a <xQueueCreateMutex>
 800180a:	4603      	mov	r3, r0
 800180c:	4a31      	ldr	r2, [pc, #196]	@ (80018d4 <CreateHandles+0xf0>)
 800180e:	6013      	str	r3, [r2, #0]
 8001810:	4b30      	ldr	r3, [pc, #192]	@ (80018d4 <CreateHandles+0xf0>)
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	2b00      	cmp	r3, #0
 8001816:	d102      	bne.n	800181e <CreateHandles+0x3a>
		error_HaltOS("Error GPS_Sem");
 8001818:	482f      	ldr	r0, [pc, #188]	@ (80018d8 <CreateHandles+0xf4>)
 800181a:	f7ff ffcb 	bl	80017b4 <error_HaltOS>

	if (!(hUART_Queue = xQueueCreate(QSIZE_UART, sizeof(unsigned int))))
 800181e:	2200      	movs	r2, #0
 8001820:	2104      	movs	r1, #4
 8001822:	200a      	movs	r0, #10
 8001824:	f00b fa81 	bl	800cd2a <xQueueGenericCreate>
 8001828:	4603      	mov	r3, r0
 800182a:	4a2c      	ldr	r2, [pc, #176]	@ (80018dc <CreateHandles+0xf8>)
 800182c:	6013      	str	r3, [r2, #0]
 800182e:	4b2b      	ldr	r3, [pc, #172]	@ (80018dc <CreateHandles+0xf8>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	2b00      	cmp	r3, #0
 8001834:	d102      	bne.n	800183c <CreateHandles+0x58>
		error_HaltOS("Error hUART_Q");
 8001836:	482a      	ldr	r0, [pc, #168]	@ (80018e0 <CreateHandles+0xfc>)
 8001838:	f7ff ffbc 	bl	80017b4 <error_HaltOS>

	if (!(hGPS_Queue = xQueueCreate(GPS_MAXLEN, sizeof(unsigned char))))
 800183c:	2200      	movs	r2, #0
 800183e:	2101      	movs	r1, #1
 8001840:	2053      	movs	r0, #83	@ 0x53
 8001842:	f00b fa72 	bl	800cd2a <xQueueGenericCreate>
 8001846:	4603      	mov	r3, r0
 8001848:	4a26      	ldr	r2, [pc, #152]	@ (80018e4 <CreateHandles+0x100>)
 800184a:	6013      	str	r3, [r2, #0]
 800184c:	4b25      	ldr	r3, [pc, #148]	@ (80018e4 <CreateHandles+0x100>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	2b00      	cmp	r3, #0
 8001852:	d102      	bne.n	800185a <CreateHandles+0x76>
		error_HaltOS("Error hGPS_Q");
 8001854:	4824      	ldr	r0, [pc, #144]	@ (80018e8 <CreateHandles+0x104>)
 8001856:	f7ff ffad 	bl	80017b4 <error_HaltOS>

	if (!(hKEY_Event = xEventGroupCreate()))
 800185a:	f00a ff0f 	bl	800c67c <xEventGroupCreate>
 800185e:	4603      	mov	r3, r0
 8001860:	4a22      	ldr	r2, [pc, #136]	@ (80018ec <CreateHandles+0x108>)
 8001862:	6013      	str	r3, [r2, #0]
 8001864:	4b21      	ldr	r3, [pc, #132]	@ (80018ec <CreateHandles+0x108>)
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	2b00      	cmp	r3, #0
 800186a:	d102      	bne.n	8001872 <CreateHandles+0x8e>
		error_HaltOS("Error hLCD_Event");
 800186c:	4820      	ldr	r0, [pc, #128]	@ (80018f0 <CreateHandles+0x10c>)
 800186e:	f7ff ffa1 	bl	80017b4 <error_HaltOS>

	if (!(hTimer1 = xTimerCreate("Timer_1", pdMS_TO_TICKS(TIMER1_DELAY), pdTRUE, 0, (TimerCallbackFunction_t)Timer1_Handler)))
 8001872:	4b20      	ldr	r3, [pc, #128]	@ (80018f4 <CreateHandles+0x110>)
 8001874:	9300      	str	r3, [sp, #0]
 8001876:	2300      	movs	r3, #0
 8001878:	2201      	movs	r2, #1
 800187a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800187e:	481e      	ldr	r0, [pc, #120]	@ (80018f8 <CreateHandles+0x114>)
 8001880:	f00d ff1e 	bl	800f6c0 <xTimerCreate>
 8001884:	4603      	mov	r3, r0
 8001886:	4a1d      	ldr	r2, [pc, #116]	@ (80018fc <CreateHandles+0x118>)
 8001888:	6013      	str	r3, [r2, #0]
 800188a:	4b1c      	ldr	r3, [pc, #112]	@ (80018fc <CreateHandles+0x118>)
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	2b00      	cmp	r3, #0
 8001890:	d102      	bne.n	8001898 <CreateHandles+0xb4>
		error_HaltOS("Error hTimer1");
 8001892:	481b      	ldr	r0, [pc, #108]	@ (8001900 <CreateHandles+0x11c>)
 8001894:	f7ff ff8e 	bl	80017b4 <error_HaltOS>

	UART_puts("\n\rAll handles created successfully.");
 8001898:	481a      	ldr	r0, [pc, #104]	@ (8001904 <CreateHandles+0x120>)
 800189a:	f001 fab9 	bl	8002e10 <UART_puts>

	UART_puts("\n\rTimer set to: ");
 800189e:	481a      	ldr	r0, [pc, #104]	@ (8001908 <CreateHandles+0x124>)
 80018a0:	f001 fab6 	bl	8002e10 <UART_puts>
	UART_putint((int)TIMER1_DELAY); // (int)-cast is nodig!
 80018a4:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80018a8:	f001 fb2a 	bl	8002f00 <UART_putint>
	xTimerStart(hTimer1, 0); // start de timer...
 80018ac:	4b13      	ldr	r3, [pc, #76]	@ (80018fc <CreateHandles+0x118>)
 80018ae:	681c      	ldr	r4, [r3, #0]
 80018b0:	f00c fdf8 	bl	800e4a4 <xTaskGetTickCount>
 80018b4:	4602      	mov	r2, r0
 80018b6:	2300      	movs	r3, #0
 80018b8:	9300      	str	r3, [sp, #0]
 80018ba:	2300      	movs	r3, #0
 80018bc:	2101      	movs	r1, #1
 80018be:	4620      	mov	r0, r4
 80018c0:	f00d ff5c 	bl	800f77c <xTimerGenericCommand>
}
 80018c4:	bf00      	nop
 80018c6:	3704      	adds	r7, #4
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd90      	pop	{r4, r7, pc}
 80018cc:	20000480 	.word	0x20000480
 80018d0:	080158d0 	.word	0x080158d0
 80018d4:	20000484 	.word	0x20000484
 80018d8:	080158e0 	.word	0x080158e0
 80018dc:	20000478 	.word	0x20000478
 80018e0:	080158f0 	.word	0x080158f0
 80018e4:	2000047c 	.word	0x2000047c
 80018e8:	08015900 	.word	0x08015900
 80018ec:	20000488 	.word	0x20000488
 80018f0:	08015910 	.word	0x08015910
 80018f4:	0800190d 	.word	0x0800190d
 80018f8:	08015924 	.word	0x08015924
 80018fc:	2000048c 	.word	0x2000048c
 8001900:	0801592c 	.word	0x0801592c
 8001904:	0801593c 	.word	0x0801593c
 8001908:	08015960 	.word	0x08015960

0800190c <Timer1_Handler>:
* @brief Vangt de FreeRTOS software-interrupt op en toggelt een ledje
* @param hTimer1 De handle van de timer
* @return void
*/
void Timer1_Handler(void)
{
 800190c:	b580      	push	{r7, lr}
 800190e:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(GPIOD, LEDBLUE);   // turns led on/off
 8001910:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001914:	4803      	ldr	r0, [pc, #12]	@ (8001924 <Timer1_Handler+0x18>)
 8001916:	f002 fdd0 	bl	80044ba <HAL_GPIO_TogglePin>
	CheckTaskData(FALSE); // checktaskdate without output to terminal
 800191a:	2000      	movs	r0, #0
 800191c:	f000 f8b8 	bl	8001a90 <CheckTaskData>
}
 8001920:	bf00      	nop
 8001922:	bd80      	pop	{r7, pc}
 8001924:	40020c00 	.word	0x40020c00

08001928 <CreateTasks>:
* Let op. Eerst wordt de scheduler gestopt, dan de taken gecreëerd, dan de scheduler gestopt.
* Waarom? Anders gaan taken gelijk beginnen en wachten op taken die nog niet bestaan, dat geeft een rommeltje.
* @return void
*/
void CreateTasks(void)
{
 8001928:	b580      	push	{r7, lr}
 800192a:	b082      	sub	sp, #8
 800192c:	af00      	add	r7, sp, #0
	PTASKDATA ptd = tasks; // tasks == &tasks[0]: both are addresses of first struct
 800192e:	4b14      	ldr	r3, [pc, #80]	@ (8001980 <CreateTasks+0x58>)
 8001930:	607b      	str	r3, [r7, #4]
	vTaskSuspendAll(); // zet de scheduler stil en dwing FreeRTOS om eerst alle taken te starten
 8001932:	f00c fd0b 	bl	800e34c <vTaskSuspendAll>

	for (; ptd->func != NULL; ptd++) // loopje zonder teller; gewoon de pointer steeds ophogen...
 8001936:	e016      	b.n	8001966 <CreateTasks+0x3e>
	{
		UART_puts("\r\nCreated: ");
 8001938:	4812      	ldr	r0, [pc, #72]	@ (8001984 <CreateTasks+0x5c>)
 800193a:	f001 fa69 	bl	8002e10 <UART_puts>
		UART_puts((char *)ptd->attr.name);
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	689b      	ldr	r3, [r3, #8]
 8001942:	4618      	mov	r0, r3
 8001944:	f001 fa64 	bl	8002e10 <UART_puts>

		// nb. kijk naar de haakjes van argument 3: het gaat om het adres van (structure attr).
		ptd->hTask = osThreadNew(ptd->func, ptd->argument, &(ptd->attr));
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	6818      	ldr	r0, [r3, #0]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	6859      	ldr	r1, [r3, #4]
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	3308      	adds	r3, #8
 8001954:	461a      	mov	r2, r3
 8001956:	f00a fc7f 	bl	800c258 <osThreadNew>
 800195a:	4602      	mov	r2, r0
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	62da      	str	r2, [r3, #44]	@ 0x2c
	for (; ptd->func != NULL; ptd++) // loopje zonder teller; gewoon de pointer steeds ophogen...
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	3330      	adds	r3, #48	@ 0x30
 8001964:	607b      	str	r3, [r7, #4]
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	2b00      	cmp	r3, #0
 800196c:	d1e4      	bne.n	8001938 <CreateTasks+0x10>
	}

	xTaskResumeAll();   // start nu de scheduler: play ball
 800196e:	f00c fcfb 	bl	800e368 <xTaskResumeAll>
	CheckTaskData(TRUE);  // display alle taskdata op UART with output to terminal
 8001972:	2001      	movs	r0, #1
 8001974:	f000 f88c 	bl	8001a90 <CheckTaskData>
}
 8001978:	bf00      	nop
 800197a:	3708      	adds	r7, #8
 800197c:	46bd      	mov	sp, r7
 800197e:	bd80      	pop	{r7, pc}
 8001980:	20000008 	.word	0x20000008
 8001984:	08015974 	.word	0x08015974

08001988 <SetTaskPriority>:
* @param task_id Task identifier
* @param new_priority Nieuwe prioriteit
* @return void
*/
void SetTaskPriority(int task_id, int new_priority)
{
 8001988:	b580      	push	{r7, lr}
 800198a:	b084      	sub	sp, #16
 800198c:	af00      	add	r7, sp, #0
 800198e:	6078      	str	r0, [r7, #4]
 8001990:	6039      	str	r1, [r7, #0]
	PTASKDATA ptd = tasks;
 8001992:	4b18      	ldr	r3, [pc, #96]	@ (80019f4 <SetTaskPriority+0x6c>)
 8001994:	60fb      	str	r3, [r7, #12]
	unsigned int 	task_nr;


	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 8001996:	2301      	movs	r3, #1
 8001998:	60bb      	str	r3, [r7, #8]
 800199a:	e023      	b.n	80019e4 <SetTaskPriority+0x5c>
		if (task_nr == task_id) // hebbes
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	68ba      	ldr	r2, [r7, #8]
 80019a0:	429a      	cmp	r2, r3
 80019a2:	d119      	bne.n	80019d8 <SetTaskPriority+0x50>
		{
			ptd->attr.priority = new_priority;			// struct-member
 80019a4:	68fb      	ldr	r3, [r7, #12]
 80019a6:	683a      	ldr	r2, [r7, #0]
 80019a8:	621a      	str	r2, [r3, #32]
			vTaskPrioritySet(ptd->hTask, new_priority); // taskpriority
 80019aa:	68fb      	ldr	r3, [r7, #12]
 80019ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80019ae:	683a      	ldr	r2, [r7, #0]
 80019b0:	4611      	mov	r1, r2
 80019b2:	4618      	mov	r0, r3
 80019b4:	f00c fab4 	bl	800df20 <vTaskPrioritySet>
			// of
			// osThreadSetPriority(ptd->hTask, new_priority);

			UART_puts("\r\nSet task "); UART_puts(ptd->attr.name);
 80019b8:	480f      	ldr	r0, [pc, #60]	@ (80019f8 <SetTaskPriority+0x70>)
 80019ba:	f001 fa29 	bl	8002e10 <UART_puts>
 80019be:	68fb      	ldr	r3, [r7, #12]
 80019c0:	689b      	ldr	r3, [r3, #8]
 80019c2:	4618      	mov	r0, r3
 80019c4:	f001 fa24 	bl	8002e10 <UART_puts>
			UART_puts("'s priority to: "); UART_putint(new_priority);
 80019c8:	480c      	ldr	r0, [pc, #48]	@ (80019fc <SetTaskPriority+0x74>)
 80019ca:	f001 fa21 	bl	8002e10 <UART_puts>
 80019ce:	683b      	ldr	r3, [r7, #0]
 80019d0:	4618      	mov	r0, r3
 80019d2:	f001 fa95 	bl	8002f00 <UART_putint>
			return;
 80019d6:	e009      	b.n	80019ec <SetTaskPriority+0x64>
	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 80019d8:	68fb      	ldr	r3, [r7, #12]
 80019da:	3330      	adds	r3, #48	@ 0x30
 80019dc:	60fb      	str	r3, [r7, #12]
 80019de:	68bb      	ldr	r3, [r7, #8]
 80019e0:	3301      	adds	r3, #1
 80019e2:	60bb      	str	r3, [r7, #8]
 80019e4:	68fb      	ldr	r3, [r7, #12]
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	d1d7      	bne.n	800199c <SetTaskPriority+0x14>
		}
}
 80019ec:	3710      	adds	r7, #16
 80019ee:	46bd      	mov	sp, r7
 80019f0:	bd80      	pop	{r7, pc}
 80019f2:	bf00      	nop
 80019f4:	20000008 	.word	0x20000008
 80019f8:	08015980 	.word	0x08015980
 80019fc:	0801598c 	.word	0x0801598c

08001a00 <StartStopTask>:
* je alle tasks die op die mutex wachten. En als je de task stopt die de UART leest,
* schiet je jezelf ook in de voet.
* @return void
*/
void StartStopTask(int task_id)
{
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b08e      	sub	sp, #56	@ 0x38
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	6078      	str	r0, [r7, #4]
	PTASKDATA ptd = tasks;
 8001a08:	4b1d      	ldr	r3, [pc, #116]	@ (8001a80 <StartStopTask+0x80>)
 8001a0a:	637b      	str	r3, [r7, #52]	@ 0x34
	unsigned int 	task_nr;
	TaskStatus_t    xTaskDetails;

	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	633b      	str	r3, [r7, #48]	@ 0x30
 8001a10:	e02e      	b.n	8001a70 <StartStopTask+0x70>
		if (task_nr == task_id) // hebbes
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001a16:	429a      	cmp	r2, r3
 8001a18:	d124      	bne.n	8001a64 <StartStopTask+0x64>
		{
			vTaskGetInfo (ptd->hTask, &xTaskDetails, pdTRUE, eInvalid);
 8001a1a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a1c:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8001a1e:	f107 010c 	add.w	r1, r7, #12
 8001a22:	2305      	movs	r3, #5
 8001a24:	2201      	movs	r2, #1
 8001a26:	f00d f9a5 	bl	800ed74 <vTaskGetInfo>
			UART_puts("\r\n");
 8001a2a:	4816      	ldr	r0, [pc, #88]	@ (8001a84 <StartStopTask+0x84>)
 8001a2c:	f001 f9f0 	bl	8002e10 <UART_puts>
			UART_puts(ptd->attr.name);
 8001a30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a32:	689b      	ldr	r3, [r3, #8]
 8001a34:	4618      	mov	r0, r3
 8001a36:	f001 f9eb 	bl	8002e10 <UART_puts>

			// een task kan meerdere statussen hebben; het wordt simpeler
			// als je alleen de eSuspended checkt.
			if (xTaskDetails.eCurrentState == eSuspended)
 8001a3a:	7e3b      	ldrb	r3, [r7, #24]
 8001a3c:	2b03      	cmp	r3, #3
 8001a3e:	d108      	bne.n	8001a52 <StartStopTask+0x52>
			{
				vTaskResume(ptd->hTask);
 8001a40:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001a44:	4618      	mov	r0, r3
 8001a46:	f00c fbb1 	bl	800e1ac <vTaskResume>
				UART_puts(" resumed.");
 8001a4a:	480f      	ldr	r0, [pc, #60]	@ (8001a88 <StartStopTask+0x88>)
 8001a4c:	f001 f9e0 	bl	8002e10 <UART_puts>
			else // bv. eBlocked, eRunning, eInvalid etc.
			{
				vTaskSuspend(ptd->hTask);
				UART_puts(" suspended.");
			}
			return;
 8001a50:	e012      	b.n	8001a78 <StartStopTask+0x78>
				vTaskSuspend(ptd->hTask);
 8001a52:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001a56:	4618      	mov	r0, r3
 8001a58:	f00c fb00 	bl	800e05c <vTaskSuspend>
				UART_puts(" suspended.");
 8001a5c:	480b      	ldr	r0, [pc, #44]	@ (8001a8c <StartStopTask+0x8c>)
 8001a5e:	f001 f9d7 	bl	8002e10 <UART_puts>
 8001a62:	e009      	b.n	8001a78 <StartStopTask+0x78>
	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 8001a64:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a66:	3330      	adds	r3, #48	@ 0x30
 8001a68:	637b      	str	r3, [r7, #52]	@ 0x34
 8001a6a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	633b      	str	r3, [r7, #48]	@ 0x30
 8001a70:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d1cc      	bne.n	8001a12 <StartStopTask+0x12>
		}
}
 8001a78:	3738      	adds	r7, #56	@ 0x38
 8001a7a:	46bd      	mov	sp, r7
 8001a7c:	bd80      	pop	{r7, pc}
 8001a7e:	bf00      	nop
 8001a80:	20000008 	.word	0x20000008
 8001a84:	080159a0 	.word	0x080159a0
 8001a88:	080159a4 	.word	0x080159a4
 8001a8c:	080159b0 	.word	0x080159b0

08001a90 <CheckTaskData>:
/**
* @brief Displays de stack-gegevens van alle taken op de UART
* @return void
*/
void CheckTaskData(int output)
{
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b094      	sub	sp, #80	@ 0x50
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
	PTASKDATA     ptd = tasks;
 8001a98:	4b74      	ldr	r3, [pc, #464]	@ (8001c6c <CheckTaskData+0x1dc>)
 8001a9a:	64fb      	str	r3, [r7, #76]	@ 0x4c
	UBaseType_t   highwatermark;
	TaskStatus_t  xTaskDetails;
	unsigned int  task_nr;
	unsigned long totalalloc = 0;
 8001a9c:	2300      	movs	r3, #0
 8001a9e:	647b      	str	r3, [r7, #68]	@ 0x44
	unsigned long stacksize, free, used;
	int           i;

	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 8001aa0:	2301      	movs	r3, #1
 8001aa2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001aa4:	e0bc      	b.n	8001c20 <CheckTaskData+0x190>
	{
		highwatermark = uxTaskGetStackHighWaterMark(ptd->hTask); 	// amount of free bytes
 8001aa6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001aa8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001aaa:	4618      	mov	r0, r3
 8001aac:	f00d f9e4 	bl	800ee78 <uxTaskGetStackHighWaterMark>
 8001ab0:	63f8      	str	r0, [r7, #60]	@ 0x3c
		stacksize = ptd->attr.stack_size * 4;
 8001ab2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001ab4:	69db      	ldr	r3, [r3, #28]
 8001ab6:	009b      	lsls	r3, r3, #2
 8001ab8:	63bb      	str	r3, [r7, #56]	@ 0x38
		free = highwatermark * 4;
 8001aba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001abc:	009b      	lsls	r3, r3, #2
 8001abe:	637b      	str	r3, [r7, #52]	@ 0x34
		used = 100 - ((free * 100) / stacksize); 		// in percentage
 8001ac0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001ac2:	2264      	movs	r2, #100	@ 0x64
 8001ac4:	fb03 f202 	mul.w	r2, r3, r2
 8001ac8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001aca:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ace:	f1c3 0364 	rsb	r3, r3, #100	@ 0x64
 8001ad2:	633b      	str	r3, [r7, #48]	@ 0x30
		totalalloc += stacksize;
 8001ad4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001ad6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001ad8:	4413      	add	r3, r2
 8001ada:	647b      	str	r3, [r7, #68]	@ 0x44

		vTaskGetInfo (ptd->hTask, &xTaskDetails, pdTRUE, eInvalid); // get task status
 8001adc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001ade:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8001ae0:	f107 010c 	add.w	r1, r7, #12
 8001ae4:	2305      	movs	r3, #5
 8001ae6:	2201      	movs	r2, #1
 8001ae8:	f00d f944 	bl	800ed74 <vTaskGetInfo>
		if (output)
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d03c      	beq.n	8001b6c <CheckTaskData+0xdc>
		{
			UART_puts("\r\n\t[");        UART_putint(task_nr); UART_puts("] ");
 8001af2:	485f      	ldr	r0, [pc, #380]	@ (8001c70 <CheckTaskData+0x1e0>)
 8001af4:	f001 f98c 	bl	8002e10 <UART_puts>
 8001af8:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8001afa:	f001 fa01 	bl	8002f00 <UART_putint>
 8001afe:	485d      	ldr	r0, [pc, #372]	@ (8001c74 <CheckTaskData+0x1e4>)
 8001b00:	f001 f986 	bl	8002e10 <UART_puts>
			UART_puts(ptd->attr.name);
 8001b04:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001b06:	689b      	ldr	r3, [r3, #8]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f001 f981 	bl	8002e10 <UART_puts>
			UART_puts("\t priority: ");  UART_putint(ptd->attr.priority);
 8001b0e:	485a      	ldr	r0, [pc, #360]	@ (8001c78 <CheckTaskData+0x1e8>)
 8001b10:	f001 f97e 	bl	8002e10 <UART_puts>
 8001b14:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001b16:	6a1b      	ldr	r3, [r3, #32]
 8001b18:	4618      	mov	r0, r3
 8001b1a:	f001 f9f1 	bl	8002f00 <UART_putint>
			UART_puts("\t stacksize: "); UART_putint(stacksize); UART_puts(" bytes");
 8001b1e:	4857      	ldr	r0, [pc, #348]	@ (8001c7c <CheckTaskData+0x1ec>)
 8001b20:	f001 f976 	bl	8002e10 <UART_puts>
 8001b24:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8001b26:	f001 f9eb 	bl	8002f00 <UART_putint>
 8001b2a:	4855      	ldr	r0, [pc, #340]	@ (8001c80 <CheckTaskData+0x1f0>)
 8001b2c:	f001 f970 	bl	8002e10 <UART_puts>
			UART_puts("\t free: ");  	 UART_putint(free);      UART_puts(" bytes");
 8001b30:	4854      	ldr	r0, [pc, #336]	@ (8001c84 <CheckTaskData+0x1f4>)
 8001b32:	f001 f96d 	bl	8002e10 <UART_puts>
 8001b36:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8001b38:	f001 f9e2 	bl	8002f00 <UART_putint>
 8001b3c:	4850      	ldr	r0, [pc, #320]	@ (8001c80 <CheckTaskData+0x1f0>)
 8001b3e:	f001 f967 	bl	8002e10 <UART_puts>
			UART_puts("\t used: ");      UART_putint(used);      UART_puts("%");
 8001b42:	4851      	ldr	r0, [pc, #324]	@ (8001c88 <CheckTaskData+0x1f8>)
 8001b44:	f001 f964 	bl	8002e10 <UART_puts>
 8001b48:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8001b4a:	f001 f9d9 	bl	8002f00 <UART_putint>
 8001b4e:	484f      	ldr	r0, [pc, #316]	@ (8001c8c <CheckTaskData+0x1fc>)
 8001b50:	f001 f95e 	bl	8002e10 <UART_puts>
			UART_puts("\t status: ");    UART_puts(xTaskDetails.eCurrentState == eSuspended ? "suspended": "running");
 8001b54:	484e      	ldr	r0, [pc, #312]	@ (8001c90 <CheckTaskData+0x200>)
 8001b56:	f001 f95b 	bl	8002e10 <UART_puts>
 8001b5a:	7e3b      	ldrb	r3, [r7, #24]
 8001b5c:	2b03      	cmp	r3, #3
 8001b5e:	d101      	bne.n	8001b64 <CheckTaskData+0xd4>
 8001b60:	4b4c      	ldr	r3, [pc, #304]	@ (8001c94 <CheckTaskData+0x204>)
 8001b62:	e000      	b.n	8001b66 <CheckTaskData+0xd6>
 8001b64:	4b4c      	ldr	r3, [pc, #304]	@ (8001c98 <CheckTaskData+0x208>)
 8001b66:	4618      	mov	r0, r3
 8001b68:	f001 f952 	bl	8002e10 <UART_puts>
		}

		if (free < (10 * 4)) // oops, too little stackspace reserved
 8001b6c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001b6e:	2b27      	cmp	r3, #39	@ 0x27
 8001b70:	d850      	bhi.n	8001c14 <CheckTaskData+0x184>
		{
			BUZZER_put(1000);
 8001b72:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001b76:	f000 fe1f 	bl	80027b8 <BUZZER_put>
			Uart_debug_out = DEBUG_OUT_NONE;
 8001b7a:	4b48      	ldr	r3, [pc, #288]	@ (8001c9c <CheckTaskData+0x20c>)
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	601a      	str	r2, [r3, #0]
			osDelay(750);
 8001b80:	f240 20ee 	movw	r0, #750	@ 0x2ee
 8001b84:	f00a fbfa 	bl	800c37c <osDelay>
			UART_puts("\r\n==== ERROR NO STACKSPACE LEFT =====\r\n");
 8001b88:	4845      	ldr	r0, [pc, #276]	@ (8001ca0 <CheckTaskData+0x210>)
 8001b8a:	f001 f941 	bl	8002e10 <UART_puts>
			UART_puts("\r\n\t[");        UART_putint(task_nr); UART_puts("] ");
 8001b8e:	4838      	ldr	r0, [pc, #224]	@ (8001c70 <CheckTaskData+0x1e0>)
 8001b90:	f001 f93e 	bl	8002e10 <UART_puts>
 8001b94:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8001b96:	f001 f9b3 	bl	8002f00 <UART_putint>
 8001b9a:	4836      	ldr	r0, [pc, #216]	@ (8001c74 <CheckTaskData+0x1e4>)
 8001b9c:	f001 f938 	bl	8002e10 <UART_puts>
			UART_puts(ptd->attr.name);
 8001ba0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001ba2:	689b      	ldr	r3, [r3, #8]
 8001ba4:	4618      	mov	r0, r3
 8001ba6:	f001 f933 	bl	8002e10 <UART_puts>
			UART_puts("\t stacksize: "); UART_putint(stacksize); UART_puts(" bytes");
 8001baa:	4834      	ldr	r0, [pc, #208]	@ (8001c7c <CheckTaskData+0x1ec>)
 8001bac:	f001 f930 	bl	8002e10 <UART_puts>
 8001bb0:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8001bb2:	f001 f9a5 	bl	8002f00 <UART_putint>
 8001bb6:	4832      	ldr	r0, [pc, #200]	@ (8001c80 <CheckTaskData+0x1f0>)
 8001bb8:	f001 f92a 	bl	8002e10 <UART_puts>
			UART_puts("\t free: ");  	 UART_putint(free);      UART_puts(" bytes");
 8001bbc:	4831      	ldr	r0, [pc, #196]	@ (8001c84 <CheckTaskData+0x1f4>)
 8001bbe:	f001 f927 	bl	8002e10 <UART_puts>
 8001bc2:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8001bc4:	f001 f99c 	bl	8002f00 <UART_putint>
 8001bc8:	482d      	ldr	r0, [pc, #180]	@ (8001c80 <CheckTaskData+0x1f0>)
 8001bca:	f001 f921 	bl	8002e10 <UART_puts>
			UART_puts("\t used: ");      UART_putint(used);      UART_puts("%\r\n");
 8001bce:	482e      	ldr	r0, [pc, #184]	@ (8001c88 <CheckTaskData+0x1f8>)
 8001bd0:	f001 f91e 	bl	8002e10 <UART_puts>
 8001bd4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8001bd6:	f001 f993 	bl	8002f00 <UART_putint>
 8001bda:	4832      	ldr	r0, [pc, #200]	@ (8001ca4 <CheckTaskData+0x214>)
 8001bdc:	f001 f918 	bl	8002e10 <UART_puts>

			for (i=0; i<10; i++)  // extra visual output
 8001be0:	2300      	movs	r3, #0
 8001be2:	643b      	str	r3, [r7, #64]	@ 0x40
 8001be4:	e010      	b.n	8001c08 <CheckTaskData+0x178>
			{
				BUZZER_put(1000);
 8001be6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001bea:	f000 fde5 	bl	80027b8 <BUZZER_put>
				LED_put(0);       // set leds
 8001bee:	2000      	movs	r0, #0
 8001bf0:	f001 f8c2 	bl	8002d78 <LED_put>
				osDelay(750);
 8001bf4:	f240 20ee 	movw	r0, #750	@ 0x2ee
 8001bf8:	f00a fbc0 	bl	800c37c <osDelay>
				LED_put(255);     // set leds
 8001bfc:	20ff      	movs	r0, #255	@ 0xff
 8001bfe:	f001 f8bb 	bl	8002d78 <LED_put>
			for (i=0; i<10; i++)  // extra visual output
 8001c02:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c04:	3301      	adds	r3, #1
 8001c06:	643b      	str	r3, [r7, #64]	@ 0x40
 8001c08:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c0a:	2b09      	cmp	r3, #9
 8001c0c:	ddeb      	ble.n	8001be6 <CheckTaskData+0x156>
			}
			error_HaltOS("Error Task Stackspace");
 8001c0e:	4826      	ldr	r0, [pc, #152]	@ (8001ca8 <CheckTaskData+0x218>)
 8001c10:	f7ff fdd0 	bl	80017b4 <error_HaltOS>
	for (task_nr = 1; ptd->func != NULL; ptd++, task_nr++)
 8001c14:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001c16:	3330      	adds	r3, #48	@ 0x30
 8001c18:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001c1a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001c1c:	3301      	adds	r3, #1
 8001c1e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001c20:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	2b00      	cmp	r3, #0
 8001c26:	f47f af3e 	bne.w	8001aa6 <CheckTaskData+0x16>
		}
	}

	if (output)
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	2b00      	cmp	r3, #0
 8001c2e:	d018      	beq.n	8001c62 <CheckTaskData+0x1d2>
	{
		UART_puts("\r\n\tTotal heap: ");         UART_putint(configTOTAL_HEAP_SIZE);
 8001c30:	481e      	ldr	r0, [pc, #120]	@ (8001cac <CheckTaskData+0x21c>)
 8001c32:	f001 f8ed 	bl	8002e10 <UART_puts>
 8001c36:	f44f 407a 	mov.w	r0, #64000	@ 0xfa00
 8001c3a:	f001 f961 	bl	8002f00 <UART_putint>
		UART_puts("    Allocated task stack: "); UART_putint(totalalloc);
 8001c3e:	481c      	ldr	r0, [pc, #112]	@ (8001cb0 <CheckTaskData+0x220>)
 8001c40:	f001 f8e6 	bl	8002e10 <UART_puts>
 8001c44:	6c78      	ldr	r0, [r7, #68]	@ 0x44
 8001c46:	f001 f95b 	bl	8002f00 <UART_putint>
		UART_puts("    Free heap space: ");      UART_putint(configTOTAL_HEAP_SIZE - totalalloc);
 8001c4a:	481a      	ldr	r0, [pc, #104]	@ (8001cb4 <CheckTaskData+0x224>)
 8001c4c:	f001 f8e0 	bl	8002e10 <UART_puts>
 8001c50:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001c52:	f5c3 437a 	rsb	r3, r3, #64000	@ 0xfa00
 8001c56:	4618      	mov	r0, r3
 8001c58:	f001 f952 	bl	8002f00 <UART_putint>
		UART_puts("\r\n");
 8001c5c:	4816      	ldr	r0, [pc, #88]	@ (8001cb8 <CheckTaskData+0x228>)
 8001c5e:	f001 f8d7 	bl	8002e10 <UART_puts>
	}
}
 8001c62:	bf00      	nop
 8001c64:	3750      	adds	r7, #80	@ 0x50
 8001c66:	46bd      	mov	sp, r7
 8001c68:	bd80      	pop	{r7, pc}
 8001c6a:	bf00      	nop
 8001c6c:	20000008 	.word	0x20000008
 8001c70:	080159bc 	.word	0x080159bc
 8001c74:	080159c4 	.word	0x080159c4
 8001c78:	080159c8 	.word	0x080159c8
 8001c7c:	080159d8 	.word	0x080159d8
 8001c80:	080159e8 	.word	0x080159e8
 8001c84:	080159f0 	.word	0x080159f0
 8001c88:	080159fc 	.word	0x080159fc
 8001c8c:	08015a08 	.word	0x08015a08
 8001c90:	08015a0c 	.word	0x08015a0c
 8001c94:	08015a18 	.word	0x08015a18
 8001c98:	08015a24 	.word	0x08015a24
 8001c9c:	20000474 	.word	0x20000474
 8001ca0:	08015a2c 	.word	0x08015a2c
 8001ca4:	08015a54 	.word	0x08015a54
 8001ca8:	08015a58 	.word	0x08015a58
 8001cac:	08015a70 	.word	0x08015a70
 8001cb0:	08015a80 	.word	0x08015a80
 8001cb4:	08015a9c 	.word	0x08015a9c
 8001cb8:	080159a0 	.word	0x080159a0

08001cbc <PARSED_GPS>:
* @return void
*/


void PARSED_GPS(void *argument)
{
 8001cbc:	b580      	push	{r7, lr}
 8001cbe:	b082      	sub	sp, #8
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	6078      	str	r0, [r7, #4]
	while(TRUE)
	{
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8001cc4:	f04f 31ff 	mov.w	r1, #4294967295
 8001cc8:	2001      	movs	r0, #1
 8001cca:	f00d faed 	bl	800f2a8 <ulTaskNotifyTake>
		if(gnrmc.status == 'A')
 8001cce:	4b3e      	ldr	r3, [pc, #248]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001cd0:	7c5b      	ldrb	r3, [r3, #17]
 8001cd2:	2b41      	cmp	r3, #65	@ 0x41
 8001cd4:	d174      	bne.n	8001dc0 <PARSED_GPS+0x104>
		{
			if (xSemaphoreTake(hGpsDataMutex, portMAX_DELAY) == pdTRUE)
 8001cd6:	4b3d      	ldr	r3, [pc, #244]	@ (8001dcc <PARSED_GPS+0x110>)
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	f04f 31ff 	mov.w	r1, #4294967295
 8001cde:	4618      	mov	r0, r3
 8001ce0:	f00b fb36 	bl	800d350 <xQueueSemaphoreTake>
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	2b01      	cmp	r3, #1
 8001ce8:	d160      	bne.n	8001dac <PARSED_GPS+0xf0>
			{
				strncpy(parsed_gnrmc.head, gnrmc.head, sizeof(parsed_gnrmc.head) - 1);
 8001cea:	2206      	movs	r2, #6
 8001cec:	4936      	ldr	r1, [pc, #216]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001cee:	4838      	ldr	r0, [pc, #224]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001cf0:	f010 fcef 	bl	80126d2 <strncpy>
				parsed_gnrmc.time = atoi(gnrmc.time);
 8001cf4:	4837      	ldr	r0, [pc, #220]	@ (8001dd4 <PARSED_GPS+0x118>)
 8001cf6:	f00e ffb4 	bl	8010c62 <atoi>
 8001cfa:	4603      	mov	r3, r0
 8001cfc:	4a34      	ldr	r2, [pc, #208]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001cfe:	6093      	str	r3, [r2, #8]
				parsed_gnrmc.status = gnrmc.status;
 8001d00:	4b31      	ldr	r3, [pc, #196]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001d02:	7c5a      	ldrb	r2, [r3, #17]
 8001d04:	4b32      	ldr	r3, [pc, #200]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d06:	731a      	strb	r2, [r3, #12]
				parsed_gnrmc.latitude = atof(gnrmc.latitude);
 8001d08:	4833      	ldr	r0, [pc, #204]	@ (8001dd8 <PARSED_GPS+0x11c>)
 8001d0a:	f00e ffa7 	bl	8010c5c <atof>
 8001d0e:	eeb0 7a40 	vmov.f32	s14, s0
 8001d12:	eef0 7a60 	vmov.f32	s15, s1
 8001d16:	4b2e      	ldr	r3, [pc, #184]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d18:	ed83 7b04 	vstr	d7, [r3, #16]
				parsed_gnrmc.NS_ind = gnrmc.NS_ind;
 8001d1c:	4b2a      	ldr	r3, [pc, #168]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001d1e:	7f1a      	ldrb	r2, [r3, #28]
 8001d20:	4b2b      	ldr	r3, [pc, #172]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d22:	761a      	strb	r2, [r3, #24]
				parsed_gnrmc.longitude = atof(gnrmc.longitude);
 8001d24:	482d      	ldr	r0, [pc, #180]	@ (8001ddc <PARSED_GPS+0x120>)
 8001d26:	f00e ff99 	bl	8010c5c <atof>
 8001d2a:	eeb0 7a40 	vmov.f32	s14, s0
 8001d2e:	eef0 7a60 	vmov.f32	s15, s1
 8001d32:	4b27      	ldr	r3, [pc, #156]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d34:	ed83 7b08 	vstr	d7, [r3, #32]
				parsed_gnrmc.EW_ind = gnrmc.EW_ind;
 8001d38:	4b23      	ldr	r3, [pc, #140]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001d3a:	f893 2027 	ldrb.w	r2, [r3, #39]	@ 0x27
 8001d3e:	4b24      	ldr	r3, [pc, #144]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d40:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
				parsed_gnrmc.speed = atof(gnrmc.speed);
 8001d44:	4826      	ldr	r0, [pc, #152]	@ (8001de0 <PARSED_GPS+0x124>)
 8001d46:	f00e ff89 	bl	8010c5c <atof>
 8001d4a:	eeb0 7a40 	vmov.f32	s14, s0
 8001d4e:	eef0 7a60 	vmov.f32	s15, s1
 8001d52:	4b1f      	ldr	r3, [pc, #124]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d54:	ed83 7b0c 	vstr	d7, [r3, #48]	@ 0x30
				parsed_gnrmc.course = atof(gnrmc.course);
 8001d58:	4822      	ldr	r0, [pc, #136]	@ (8001de4 <PARSED_GPS+0x128>)
 8001d5a:	f00e ff7f 	bl	8010c5c <atof>
 8001d5e:	eeb0 7a40 	vmov.f32	s14, s0
 8001d62:	eef0 7a60 	vmov.f32	s15, s1
 8001d66:	4b1a      	ldr	r3, [pc, #104]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d68:	ed83 7b0e 	vstr	d7, [r3, #56]	@ 0x38
				strncpy(parsed_gnrmc.date, gnrmc.date, sizeof(parsed_gnrmc.date) - 1);
 8001d6c:	2206      	movs	r2, #6
 8001d6e:	491e      	ldr	r1, [pc, #120]	@ (8001de8 <PARSED_GPS+0x12c>)
 8001d70:	481e      	ldr	r0, [pc, #120]	@ (8001dec <PARSED_GPS+0x130>)
 8001d72:	f010 fcae 	bl	80126d2 <strncpy>
				parsed_gnrmc.mag_var = atof(gnrmc.mag_var);
 8001d76:	481e      	ldr	r0, [pc, #120]	@ (8001df0 <PARSED_GPS+0x134>)
 8001d78:	f00e ff70 	bl	8010c5c <atof>
 8001d7c:	eeb0 7a40 	vmov.f32	s14, s0
 8001d80:	eef0 7a60 	vmov.f32	s15, s1
 8001d84:	4b12      	ldr	r3, [pc, #72]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d86:	ed83 7b12 	vstr	d7, [r3, #72]	@ 0x48
				parsed_gnrmc.mag_var_pos = gnrmc.mag_var_pos;
 8001d8a:	4b0f      	ldr	r3, [pc, #60]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001d8c:	f893 2041 	ldrb.w	r2, [r3, #65]	@ 0x41
 8001d90:	4b0f      	ldr	r3, [pc, #60]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d92:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
				parsed_gnrmc.mode = gnrmc.mode;
 8001d96:	4b0c      	ldr	r3, [pc, #48]	@ (8001dc8 <PARSED_GPS+0x10c>)
 8001d98:	f893 2042 	ldrb.w	r2, [r3, #66]	@ 0x42
 8001d9c:	4b0c      	ldr	r3, [pc, #48]	@ (8001dd0 <PARSED_GPS+0x114>)
 8001d9e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
				strncpy(parsed_gnrmc.cs, gnrmc.cs, sizeof(parsed_gnrmc.cs) - 1);
 8001da2:	2203      	movs	r2, #3
 8001da4:	4913      	ldr	r1, [pc, #76]	@ (8001df4 <PARSED_GPS+0x138>)
 8001da6:	4814      	ldr	r0, [pc, #80]	@ (8001df8 <PARSED_GPS+0x13c>)
 8001da8:	f010 fc93 	bl	80126d2 <strncpy>
			}
			xSemaphoreGive(hGpsDataMutex);
 8001dac:	4b07      	ldr	r3, [pc, #28]	@ (8001dcc <PARSED_GPS+0x110>)
 8001dae:	6818      	ldr	r0, [r3, #0]
 8001db0:	2300      	movs	r3, #0
 8001db2:	2200      	movs	r2, #0
 8001db4:	2100      	movs	r1, #0
 8001db6:	f00b f849 	bl	800ce4c <xQueueGenericSend>
			Waypoint();
 8001dba:	f000 fc51 	bl	8002660 <Waypoint>
 8001dbe:	e781      	b.n	8001cc4 <PARSED_GPS+0x8>
		}
		else
			UART_puts("No GPS found\n\n ");
 8001dc0:	480e      	ldr	r0, [pc, #56]	@ (8001dfc <PARSED_GPS+0x140>)
 8001dc2:	f001 f825 	bl	8002e10 <UART_puts>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8001dc6:	e77d      	b.n	8001cc4 <PARSED_GPS+0x8>
 8001dc8:	20000490 	.word	0x20000490
 8001dcc:	20000484 	.word	0x20000484
 8001dd0:	200004e0 	.word	0x200004e0
 8001dd4:	20000497 	.word	0x20000497
 8001dd8:	200004a2 	.word	0x200004a2
 8001ddc:	200004ad 	.word	0x200004ad
 8001de0:	200004b8 	.word	0x200004b8
 8001de4:	200004be 	.word	0x200004be
 8001de8:	200004c4 	.word	0x200004c4
 8001dec:	20000520 	.word	0x20000520
 8001df0:	200004cb 	.word	0x200004cb
 8001df4:	200004d3 	.word	0x200004d3
 8001df8:	20000532 	.word	0x20000532
 8001dfc:	08015ab4 	.word	0x08015ab4

08001e00 <fill_GNRMC>:
	}
}


void fill_GNRMC(char *message)
{
 8001e00:	b580      	push	{r7, lr}
 8001e02:	b084      	sub	sp, #16
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	6078      	str	r0, [r7, #4]
	// example:
	// 1      2          3 4         5 6          7 8    9     10    11 12 13
	// $GNRMC,164435.000,A,5205.9505,N,00507.0873,E,0.49,21.70,140423, , , A
	// $GNRMC,083002.00 ,V,         , ,          , ,    ,     ,210925, , , N

	char *tok = ",";
 8001e08:	4b74      	ldr	r3, [pc, #464]	@ (8001fdc <fill_GNRMC+0x1dc>)
 8001e0a:	60fb      	str	r3, [r7, #12]
	char *s;

	memset(&gnrmc, 0, sizeof(GNRMC)); // clear the struct
 8001e0c:	2247      	movs	r2, #71	@ 0x47
 8001e0e:	2100      	movs	r1, #0
 8001e10:	4873      	ldr	r0, [pc, #460]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001e12:	f010 fc37 	bl	8012684 <memset>

	s = strtok(message, tok); // 1. header;
 8001e16:	68f9      	ldr	r1, [r7, #12]
 8001e18:	6878      	ldr	r0, [r7, #4]
 8001e1a:	f010 fc6d 	bl	80126f8 <strtok>
 8001e1e:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.head, s);
 8001e20:	68b9      	ldr	r1, [r7, #8]
 8001e22:	486f      	ldr	r0, [pc, #444]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001e24:	f010 fda9 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 2. time; not used
 8001e28:	68f9      	ldr	r1, [r7, #12]
 8001e2a:	2000      	movs	r0, #0
 8001e2c:	f010 fc64 	bl	80126f8 <strtok>
 8001e30:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.time, s);
 8001e32:	68b9      	ldr	r1, [r7, #8]
 8001e34:	486b      	ldr	r0, [pc, #428]	@ (8001fe4 <fill_GNRMC+0x1e4>)
 8001e36:	f010 fda0 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 3. valid;
 8001e3a:	68f9      	ldr	r1, [r7, #12]
 8001e3c:	2000      	movs	r0, #0
 8001e3e:	f010 fc5b 	bl	80126f8 <strtok>
 8001e42:	60b8      	str	r0, [r7, #8]
	gnrmc.status = s[0];
 8001e44:	68bb      	ldr	r3, [r7, #8]
 8001e46:	781a      	ldrb	r2, [r3, #0]
 8001e48:	4b65      	ldr	r3, [pc, #404]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001e4a:	745a      	strb	r2, [r3, #17]

	s = strtok(NULL, tok);    // 4. latitude;
 8001e4c:	68f9      	ldr	r1, [r7, #12]
 8001e4e:	2000      	movs	r0, #0
 8001e50:	f010 fc52 	bl	80126f8 <strtok>
 8001e54:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.latitude, s);
 8001e56:	68b9      	ldr	r1, [r7, #8]
 8001e58:	4863      	ldr	r0, [pc, #396]	@ (8001fe8 <fill_GNRMC+0x1e8>)
 8001e5a:	f010 fd8e 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 5. N/S; not used
 8001e5e:	68f9      	ldr	r1, [r7, #12]
 8001e60:	2000      	movs	r0, #0
 8001e62:	f010 fc49 	bl	80126f8 <strtok>
 8001e66:	60b8      	str	r0, [r7, #8]
	gnrmc.NS_ind =s[0];
 8001e68:	68bb      	ldr	r3, [r7, #8]
 8001e6a:	781a      	ldrb	r2, [r3, #0]
 8001e6c:	4b5c      	ldr	r3, [pc, #368]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001e6e:	771a      	strb	r2, [r3, #28]

	s = strtok(NULL, tok);    // 6. longitude;
 8001e70:	68f9      	ldr	r1, [r7, #12]
 8001e72:	2000      	movs	r0, #0
 8001e74:	f010 fc40 	bl	80126f8 <strtok>
 8001e78:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.longitude, s);
 8001e7a:	68b9      	ldr	r1, [r7, #8]
 8001e7c:	485b      	ldr	r0, [pc, #364]	@ (8001fec <fill_GNRMC+0x1ec>)
 8001e7e:	f010 fd7c 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 7. E/W; not used
 8001e82:	68f9      	ldr	r1, [r7, #12]
 8001e84:	2000      	movs	r0, #0
 8001e86:	f010 fc37 	bl	80126f8 <strtok>
 8001e8a:	60b8      	str	r0, [r7, #8]
	gnrmc.EW_ind =s[0];
 8001e8c:	68bb      	ldr	r3, [r7, #8]
 8001e8e:	781a      	ldrb	r2, [r3, #0]
 8001e90:	4b53      	ldr	r3, [pc, #332]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001e92:	f883 2027 	strb.w	r2, [r3, #39]	@ 0x27

	s = strtok(NULL, tok);    // 8. speed;
 8001e96:	68f9      	ldr	r1, [r7, #12]
 8001e98:	2000      	movs	r0, #0
 8001e9a:	f010 fc2d 	bl	80126f8 <strtok>
 8001e9e:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.speed, s);
 8001ea0:	68b9      	ldr	r1, [r7, #8]
 8001ea2:	4853      	ldr	r0, [pc, #332]	@ (8001ff0 <fill_GNRMC+0x1f0>)
 8001ea4:	f010 fd69 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 9. course;
 8001ea8:	68f9      	ldr	r1, [r7, #12]
 8001eaa:	2000      	movs	r0, #0
 8001eac:	f010 fc24 	bl	80126f8 <strtok>
 8001eb0:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.course, s);
 8001eb2:	68b9      	ldr	r1, [r7, #8]
 8001eb4:	484f      	ldr	r0, [pc, #316]	@ (8001ff4 <fill_GNRMC+0x1f4>)
 8001eb6:	f010 fd60 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 10. date;
 8001eba:	68f9      	ldr	r1, [r7, #12]
 8001ebc:	2000      	movs	r0, #0
 8001ebe:	f010 fc1b 	bl	80126f8 <strtok>
 8001ec2:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.date, s);
 8001ec4:	68b9      	ldr	r1, [r7, #8]
 8001ec6:	484c      	ldr	r0, [pc, #304]	@ (8001ff8 <fill_GNRMC+0x1f8>)
 8001ec8:	f010 fd57 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 11. mag_var
 8001ecc:	68f9      	ldr	r1, [r7, #12]
 8001ece:	2000      	movs	r0, #0
 8001ed0:	f010 fc12 	bl	80126f8 <strtok>
 8001ed4:	60b8      	str	r0, [r7, #8]
	strcpy(gnrmc.mag_var, s);
 8001ed6:	68b9      	ldr	r1, [r7, #8]
 8001ed8:	4848      	ldr	r0, [pc, #288]	@ (8001ffc <fill_GNRMC+0x1fc>)
 8001eda:	f010 fd4e 	bl	801297a <strcpy>

	s = strtok(NULL, tok);    // 12. mag_var_pos
 8001ede:	68f9      	ldr	r1, [r7, #12]
 8001ee0:	2000      	movs	r0, #0
 8001ee2:	f010 fc09 	bl	80126f8 <strtok>
 8001ee6:	60b8      	str	r0, [r7, #8]
	gnrmc.mag_var_pos =s[0];
 8001ee8:	68bb      	ldr	r3, [r7, #8]
 8001eea:	781a      	ldrb	r2, [r3, #0]
 8001eec:	4b3c      	ldr	r3, [pc, #240]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001eee:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

	s = strtok(NULL, tok);    // 13. mode
 8001ef2:	68f9      	ldr	r1, [r7, #12]
 8001ef4:	2000      	movs	r0, #0
 8001ef6:	f010 fbff 	bl	80126f8 <strtok>
 8001efa:	60b8      	str	r0, [r7, #8]
	gnrmc.mode =s[0];
 8001efc:	68bb      	ldr	r3, [r7, #8]
 8001efe:	781a      	ldrb	r2, [r3, #0]
 8001f00:	4b37      	ldr	r3, [pc, #220]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001f02:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

//	s = strtok(NULL, tok);    // 14. cs - not contained in msg
//	strcpy(gnrmc.cs, s);


	if (Uart_debug_out & GPS_DEBUG_OUT)
 8001f06:	4b3e      	ldr	r3, [pc, #248]	@ (8002000 <fill_GNRMC+0x200>)
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	f003 0310 	and.w	r3, r3, #16
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d060      	beq.n	8001fd4 <fill_GNRMC+0x1d4>
	{																// print alle gegevens die binnen zijn gekomen

		UART_puts("\r\n\t=====================================");
 8001f12:	483c      	ldr	r0, [pc, #240]	@ (8002004 <fill_GNRMC+0x204>)
 8001f14:	f000 ff7c 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t1. GPS type: \t");   UART_puts(gnrmc.head);
 8001f18:	483b      	ldr	r0, [pc, #236]	@ (8002008 <fill_GNRMC+0x208>)
 8001f1a:	f000 ff79 	bl	8002e10 <UART_puts>
 8001f1e:	4830      	ldr	r0, [pc, #192]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001f20:	f000 ff76 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t2. time:\t\t");      UART_puts(gnrmc.time);
 8001f24:	4839      	ldr	r0, [pc, #228]	@ (800200c <fill_GNRMC+0x20c>)
 8001f26:	f000 ff73 	bl	8002e10 <UART_puts>
 8001f2a:	482e      	ldr	r0, [pc, #184]	@ (8001fe4 <fill_GNRMC+0x1e4>)
 8001f2c:	f000 ff70 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t3. status: \t");     UART_putchar(gnrmc.status);
 8001f30:	4837      	ldr	r0, [pc, #220]	@ (8002010 <fill_GNRMC+0x210>)
 8001f32:	f000 ff6d 	bl	8002e10 <UART_puts>
 8001f36:	4b2a      	ldr	r3, [pc, #168]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001f38:	7c5b      	ldrb	r3, [r3, #17]
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f000 ff56 	bl	8002dec <UART_putchar>
		UART_puts("\r\n\t4. latitude:\t");    UART_puts(gnrmc.latitude);
 8001f40:	4834      	ldr	r0, [pc, #208]	@ (8002014 <fill_GNRMC+0x214>)
 8001f42:	f000 ff65 	bl	8002e10 <UART_puts>
 8001f46:	4828      	ldr	r0, [pc, #160]	@ (8001fe8 <fill_GNRMC+0x1e8>)
 8001f48:	f000 ff62 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t5. NS: \t\t");       UART_putchar(gnrmc.NS_ind);
 8001f4c:	4832      	ldr	r0, [pc, #200]	@ (8002018 <fill_GNRMC+0x218>)
 8001f4e:	f000 ff5f 	bl	8002e10 <UART_puts>
 8001f52:	4b23      	ldr	r3, [pc, #140]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001f54:	7f1b      	ldrb	r3, [r3, #28]
 8001f56:	4618      	mov	r0, r3
 8001f58:	f000 ff48 	bl	8002dec <UART_putchar>
		UART_puts("\r\n\t6. longitude:\t");   UART_puts(gnrmc.longitude);
 8001f5c:	482f      	ldr	r0, [pc, #188]	@ (800201c <fill_GNRMC+0x21c>)
 8001f5e:	f000 ff57 	bl	8002e10 <UART_puts>
 8001f62:	4822      	ldr	r0, [pc, #136]	@ (8001fec <fill_GNRMC+0x1ec>)
 8001f64:	f000 ff54 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t7. EW: \t\t");       UART_putchar(gnrmc.EW_ind);
 8001f68:	482d      	ldr	r0, [pc, #180]	@ (8002020 <fill_GNRMC+0x220>)
 8001f6a:	f000 ff51 	bl	8002e10 <UART_puts>
 8001f6e:	4b1c      	ldr	r3, [pc, #112]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001f70:	f893 3027 	ldrb.w	r3, [r3, #39]	@ 0x27
 8001f74:	4618      	mov	r0, r3
 8001f76:	f000 ff39 	bl	8002dec <UART_putchar>
		UART_puts("\r\n\t8. speed: \t\t");    UART_puts(gnrmc.speed);
 8001f7a:	482a      	ldr	r0, [pc, #168]	@ (8002024 <fill_GNRMC+0x224>)
 8001f7c:	f000 ff48 	bl	8002e10 <UART_puts>
 8001f80:	481b      	ldr	r0, [pc, #108]	@ (8001ff0 <fill_GNRMC+0x1f0>)
 8001f82:	f000 ff45 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t9. course: \t\t");   UART_puts(gnrmc.course);
 8001f86:	4828      	ldr	r0, [pc, #160]	@ (8002028 <fill_GNRMC+0x228>)
 8001f88:	f000 ff42 	bl	8002e10 <UART_puts>
 8001f8c:	4819      	ldr	r0, [pc, #100]	@ (8001ff4 <fill_GNRMC+0x1f4>)
 8001f8e:	f000 ff3f 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t10. date:\t\t");     UART_puts(gnrmc.date);
 8001f92:	4826      	ldr	r0, [pc, #152]	@ (800202c <fill_GNRMC+0x22c>)
 8001f94:	f000 ff3c 	bl	8002e10 <UART_puts>
 8001f98:	4817      	ldr	r0, [pc, #92]	@ (8001ff8 <fill_GNRMC+0x1f8>)
 8001f9a:	f000 ff39 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t11. mag_var:\t\t");  UART_puts(gnrmc.mag_var);
 8001f9e:	4824      	ldr	r0, [pc, #144]	@ (8002030 <fill_GNRMC+0x230>)
 8001fa0:	f000 ff36 	bl	8002e10 <UART_puts>
 8001fa4:	4815      	ldr	r0, [pc, #84]	@ (8001ffc <fill_GNRMC+0x1fc>)
 8001fa6:	f000 ff33 	bl	8002e10 <UART_puts>
		UART_puts("\r\n\t12. mag_var_pos:\t");UART_putchar(gnrmc.mag_var_pos);
 8001faa:	4822      	ldr	r0, [pc, #136]	@ (8002034 <fill_GNRMC+0x234>)
 8001fac:	f000 ff30 	bl	8002e10 <UART_puts>
 8001fb0:	4b0b      	ldr	r3, [pc, #44]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001fb2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	f000 ff18 	bl	8002dec <UART_putchar>
		UART_puts("\r\n\t13. mode:\t\t");     UART_putchar(gnrmc.mode);
 8001fbc:	481e      	ldr	r0, [pc, #120]	@ (8002038 <fill_GNRMC+0x238>)
 8001fbe:	f000 ff27 	bl	8002e10 <UART_puts>
 8001fc2:	4b07      	ldr	r3, [pc, #28]	@ (8001fe0 <fill_GNRMC+0x1e0>)
 8001fc4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8001fc8:	4618      	mov	r0, r3
 8001fca:	f000 ff0f 	bl	8002dec <UART_putchar>
		UART_puts("\r\n\t=====================================\n");
 8001fce:	481b      	ldr	r0, [pc, #108]	@ (800203c <fill_GNRMC+0x23c>)
 8001fd0:	f000 ff1e 	bl	8002e10 <UART_puts>
	}


}
 8001fd4:	bf00      	nop
 8001fd6:	3710      	adds	r7, #16
 8001fd8:	46bd      	mov	sp, r7
 8001fda:	bd80      	pop	{r7, pc}
 8001fdc:	08015ac4 	.word	0x08015ac4
 8001fe0:	20000490 	.word	0x20000490
 8001fe4:	20000497 	.word	0x20000497
 8001fe8:	200004a2 	.word	0x200004a2
 8001fec:	200004ad 	.word	0x200004ad
 8001ff0:	200004b8 	.word	0x200004b8
 8001ff4:	200004be 	.word	0x200004be
 8001ff8:	200004c4 	.word	0x200004c4
 8001ffc:	200004cb 	.word	0x200004cb
 8002000:	20000474 	.word	0x20000474
 8002004:	08015ac8 	.word	0x08015ac8
 8002008:	08015af4 	.word	0x08015af4
 800200c:	08015b08 	.word	0x08015b08
 8002010:	08015b18 	.word	0x08015b18
 8002014:	08015b28 	.word	0x08015b28
 8002018:	08015b3c 	.word	0x08015b3c
 800201c:	08015b4c 	.word	0x08015b4c
 8002020:	08015b60 	.word	0x08015b60
 8002024:	08015b70 	.word	0x08015b70
 8002028:	08015b80 	.word	0x08015b80
 800202c:	08015b94 	.word	0x08015b94
 8002030:	08015ba4 	.word	0x08015ba4
 8002034:	08015bb8 	.word	0x08015bb8
 8002038:	08015bd0 	.word	0x08015bd0
 800203c:	08015be0 	.word	0x08015be0

08002040 <GPS_getNMEA>:
* binnenkomen. * De handler zet elk inkomende character gelijk op een queue, die hier uitgelezen wordt.
* Vervolgens wordt hiervan een GPS-message opgebouwd en verwerkt.
* @return void
*/
void GPS_getNMEA (void *argument)
{
 8002040:	b580      	push	{r7, lr}
 8002042:	b0b0      	sub	sp, #192	@ 0xc0
 8002044:	af00      	add	r7, sp, #0
 8002046:	6078      	str	r0, [r7, #4]
    char  Q_char;   			// char to receive from queue
	char  MSG_buff[GPS_MAXLEN]; // buffer for GPS-string
	int   pos = 0;
 8002048:	2300      	movs	r3, #0
 800204a:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
	int   cs;                   // checksum-flag
	int   new_msg = FALSE;      // do we encounter a '$'-char?
 800204e:	2300      	movs	r3, #0
 8002050:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
	int   msg_type = 0;         // do we want this message to be interpreted?
 8002054:	2300      	movs	r3, #0
 8002056:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
	char  buf[80];

	UART_puts((char *)__func__); UART_puts("started\n\r");
 800205a:	486f      	ldr	r0, [pc, #444]	@ (8002218 <GPS_getNMEA+0x1d8>)
 800205c:	f000 fed8 	bl	8002e10 <UART_puts>
 8002060:	486e      	ldr	r0, [pc, #440]	@ (800221c <GPS_getNMEA+0x1dc>)
 8002062:	f000 fed5 	bl	8002e10 <UART_puts>

	while (TRUE)
	{
		xQueueReceive(hGPS_Queue, &Q_char, portMAX_DELAY); // get one char from the q
 8002066:	4b6e      	ldr	r3, [pc, #440]	@ (8002220 <GPS_getNMEA+0x1e0>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f107 01af 	add.w	r1, r7, #175	@ 0xaf
 800206e:	f04f 32ff 	mov.w	r2, #4294967295
 8002072:	4618      	mov	r0, r3
 8002074:	f00b f88a 	bl	800d18c <xQueueReceive>

		if (Uart_debug_out & GPS_DEBUG_RAW_OUT)
 8002078:	4b6a      	ldr	r3, [pc, #424]	@ (8002224 <GPS_getNMEA+0x1e4>)
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	f003 0320 	and.w	r3, r3, #32
 8002080:	2b00      	cmp	r3, #0
 8002082:	d00d      	beq.n	80020a0 <GPS_getNMEA+0x60>
		{
			sprintf (buf, "[%02x]", Q_char);
 8002084:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 8002088:	461a      	mov	r2, r3
 800208a:	f107 030c 	add.w	r3, r7, #12
 800208e:	4966      	ldr	r1, [pc, #408]	@ (8002228 <GPS_getNMEA+0x1e8>)
 8002090:	4618      	mov	r0, r3
 8002092:	f010 fa55 	bl	8012540 <siprintf>
			UART_puts(buf);
 8002096:	f107 030c 	add.w	r3, r7, #12
 800209a:	4618      	mov	r0, r3
 800209c:	f000 feb8 	bl	8002e10 <UART_puts>
			//UART_putchar(Q_char);  // echo, for testing
		}

		if (Q_char == '$') // gotcha, new datastring started
 80020a0:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 80020a4:	2b24      	cmp	r3, #36	@ 0x24
 80020a6:	d10c      	bne.n	80020c2 <GPS_getNMEA+0x82>
		{
			memset(MSG_buff, 0, sizeof(MSG_buff)); // clear buff
 80020a8:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80020ac:	2253      	movs	r2, #83	@ 0x53
 80020ae:	2100      	movs	r1, #0
 80020b0:	4618      	mov	r0, r3
 80020b2:	f010 fae7 	bl	8012684 <memset>
			pos = 0;
 80020b6:	2300      	movs	r3, #0
 80020b8:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
			new_msg = TRUE; // from now on, chars are valid to receive
 80020bc:	2301      	movs	r3, #1
 80020be:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
		}

		if (new_msg == FALSE) // char only valid if started by $
 80020c2:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	f000 80a4 	beq.w	8002214 <GPS_getNMEA+0x1d4>
			continue;

		MSG_buff[pos] = Q_char; // copy char read from Q into the msg-buf
 80020cc:	f897 10af 	ldrb.w	r1, [r7, #175]	@ 0xaf
 80020d0:	f107 025c 	add.w	r2, r7, #92	@ 0x5c
 80020d4:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80020d8:	4413      	add	r3, r2
 80020da:	460a      	mov	r2, r1
 80020dc:	701a      	strb	r2, [r3, #0]

		// if pos==5, the message type (f.i. "$GPGSA) is complete, so we now we can determine
		// if we want the rest of the message... else we skip the rest characters
		if (pos == 5)
 80020de:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80020e2:	2b05      	cmp	r3, #5
 80020e4:	d136      	bne.n	8002154 <GPS_getNMEA+0x114>
		{
			msg_type = 0; // reset
 80020e6:	2300      	movs	r3, #0
 80020e8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4

			// next, we decide which message types we want to interpret
			// and we set the message-type for later use...
			if      (!strncmp(&MSG_buff[1], "GNRMC", 5)) msg_type = eGNRMC;
 80020ec:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80020f0:	3301      	adds	r3, #1
 80020f2:	2205      	movs	r2, #5
 80020f4:	494d      	ldr	r1, [pc, #308]	@ (800222c <GPS_getNMEA+0x1ec>)
 80020f6:	4618      	mov	r0, r3
 80020f8:	f010 fad9 	bl	80126ae <strncmp>
 80020fc:	4603      	mov	r3, r0
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d103      	bne.n	800210a <GPS_getNMEA+0xca>
 8002102:	2301      	movs	r3, #1
 8002104:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002108:	e01c      	b.n	8002144 <GPS_getNMEA+0x104>
			else if (!strncmp(&MSG_buff[1], "GPGSA", 5)) msg_type = eGPGSA;
 800210a:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800210e:	3301      	adds	r3, #1
 8002110:	2205      	movs	r2, #5
 8002112:	4947      	ldr	r1, [pc, #284]	@ (8002230 <GPS_getNMEA+0x1f0>)
 8002114:	4618      	mov	r0, r3
 8002116:	f010 faca 	bl	80126ae <strncmp>
 800211a:	4603      	mov	r3, r0
 800211c:	2b00      	cmp	r3, #0
 800211e:	d103      	bne.n	8002128 <GPS_getNMEA+0xe8>
 8002120:	2302      	movs	r3, #2
 8002122:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002126:	e00d      	b.n	8002144 <GPS_getNMEA+0x104>
			else if (!strncmp(&MSG_buff[1], "GNGGA", 5)) msg_type = eGNGGA;
 8002128:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800212c:	3301      	adds	r3, #1
 800212e:	2205      	movs	r2, #5
 8002130:	4940      	ldr	r1, [pc, #256]	@ (8002234 <GPS_getNMEA+0x1f4>)
 8002132:	4618      	mov	r0, r3
 8002134:	f010 fabb 	bl	80126ae <strncmp>
 8002138:	4603      	mov	r3, r0
 800213a:	2b00      	cmp	r3, #0
 800213c:	d102      	bne.n	8002144 <GPS_getNMEA+0x104>
 800213e:	2303      	movs	r3, #3
 8002140:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4

			if (!msg_type) // not an interesting message type
 8002144:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002148:	2b00      	cmp	r3, #0
 800214a:	d103      	bne.n	8002154 <GPS_getNMEA+0x114>
			{
				new_msg = FALSE;
 800214c:	2300      	movs	r3, #0
 800214e:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
				continue;
 8002152:	e060      	b.n	8002216 <GPS_getNMEA+0x1d6>
			}
		}

		// if we are here, we are reading the rest of the message into the msg_buff
		////////////////////////////////////////////////////////////////////////////
		if (pos >= GPS_MAXLEN - 1) // avoid overflow (should not happen, but still...)
 8002154:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002158:	2b51      	cmp	r3, #81	@ 0x51
 800215a:	dd03      	ble.n	8002164 <GPS_getNMEA+0x124>
		{
			new_msg = FALSE; // ignore this one and start new msg
 800215c:	2300      	movs	r3, #0
 800215e:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
			continue;
 8002162:	e058      	b.n	8002216 <GPS_getNMEA+0x1d6>
		}

		if (MSG_buff[pos] == '\r') // end of message encountered - all messages end with <CR-13><LF-10>
 8002164:	f107 025c 	add.w	r2, r7, #92	@ 0x5c
 8002168:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800216c:	4413      	add	r3, r2
 800216e:	781b      	ldrb	r3, [r3, #0]
 8002170:	2b0d      	cmp	r3, #13
 8002172:	d149      	bne.n	8002208 <GPS_getNMEA+0x1c8>
		{
			MSG_buff[pos] = '\0';          // close string
 8002174:	f107 025c 	add.w	r2, r7, #92	@ 0x5c
 8002178:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800217c:	4413      	add	r3, r2
 800217e:	2200      	movs	r2, #0
 8002180:	701a      	strb	r2, [r3, #0]
			cs = checksum_valid(MSG_buff); // note, checksumchars (eg "*43") are removed from string
 8002182:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8002186:	4618      	mov	r0, r3
 8002188:	f000 f8a0 	bl	80022cc <checksum_valid>
 800218c:	f8c7 00b0 	str.w	r0, [r7, #176]	@ 0xb0

			if (Uart_debug_out & GPS_DEBUG_OUT) // output to uart if wanted
 8002190:	4b24      	ldr	r3, [pc, #144]	@ (8002224 <GPS_getNMEA+0x1e4>)
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	f003 0310 	and.w	r3, r3, #16
 8002198:	2b00      	cmp	r3, #0
 800219a:	d011      	beq.n	80021c0 <GPS_getNMEA+0x180>
			{
				UART_puts("\r\n\tGPS: "); UART_puts(MSG_buff);
 800219c:	4826      	ldr	r0, [pc, #152]	@ (8002238 <GPS_getNMEA+0x1f8>)
 800219e:	f000 fe37 	bl	8002e10 <UART_puts>
 80021a2:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80021a6:	4618      	mov	r0, r3
 80021a8:	f000 fe32 	bl	8002e10 <UART_puts>
				UART_puts( cs ? " [cs:OK]\r\n\n" : " [cs:ERR]\r\n\n");
 80021ac:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	d001      	beq.n	80021b8 <GPS_getNMEA+0x178>
 80021b4:	4b21      	ldr	r3, [pc, #132]	@ (800223c <GPS_getNMEA+0x1fc>)
 80021b6:	e000      	b.n	80021ba <GPS_getNMEA+0x17a>
 80021b8:	4b21      	ldr	r3, [pc, #132]	@ (8002240 <GPS_getNMEA+0x200>)
 80021ba:	4618      	mov	r0, r3
 80021bc:	f000 fe28 	bl	8002e10 <UART_puts>
			}

			if (cs) // checksum okay, so interpret the message
 80021c0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d01b      	beq.n	8002200 <GPS_getNMEA+0x1c0>
			{
				switch(msg_type) // extract data from msg into right struct
 80021c8:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80021cc:	2b03      	cmp	r3, #3
 80021ce:	d012      	beq.n	80021f6 <GPS_getNMEA+0x1b6>
 80021d0:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80021d4:	2b03      	cmp	r3, #3
 80021d6:	dc10      	bgt.n	80021fa <GPS_getNMEA+0x1ba>
 80021d8:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80021dc:	2b01      	cmp	r3, #1
 80021de:	d004      	beq.n	80021ea <GPS_getNMEA+0x1aa>
 80021e0:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80021e4:	2b02      	cmp	r3, #2
 80021e6:	d00a      	beq.n	80021fe <GPS_getNMEA+0x1be>
				{
				case eGNRMC: fill_GNRMC(MSG_buff); // use the data...
						     break;
				case eGPGSA: break;
				case eGNGGA: break;
				default:     break;
 80021e8:	e007      	b.n	80021fa <GPS_getNMEA+0x1ba>
				case eGNRMC: fill_GNRMC(MSG_buff); // use the data...
 80021ea:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80021ee:	4618      	mov	r0, r3
 80021f0:	f7ff fe06 	bl	8001e00 <fill_GNRMC>
						     break;
 80021f4:	e004      	b.n	8002200 <GPS_getNMEA+0x1c0>
				case eGNGGA: break;
 80021f6:	bf00      	nop
 80021f8:	e002      	b.n	8002200 <GPS_getNMEA+0x1c0>
				default:     break;
 80021fa:	bf00      	nop
 80021fc:	e000      	b.n	8002200 <GPS_getNMEA+0x1c0>
				case eGPGSA: break;
 80021fe:	bf00      	nop
				}
			}

			new_msg = FALSE; // new message possible
 8002200:	2300      	movs	r3, #0
 8002202:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
			continue;
 8002206:	e006      	b.n	8002216 <GPS_getNMEA+0x1d6>
		}
		pos++; // proceed reading next char from the queue
 8002208:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800220c:	3301      	adds	r3, #1
 800220e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8002212:	e728      	b.n	8002066 <GPS_getNMEA+0x26>
			continue;
 8002214:	bf00      	nop
		xQueueReceive(hGPS_Queue, &Q_char, portMAX_DELAY); // get one char from the q
 8002216:	e726      	b.n	8002066 <GPS_getNMEA+0x26>
 8002218:	08015d60 	.word	0x08015d60
 800221c:	08015c0c 	.word	0x08015c0c
 8002220:	2000047c 	.word	0x2000047c
 8002224:	20000474 	.word	0x20000474
 8002228:	08015c18 	.word	0x08015c18
 800222c:	08015c20 	.word	0x08015c20
 8002230:	08015c28 	.word	0x08015c28
 8002234:	08015c30 	.word	0x08015c30
 8002238:	08015c38 	.word	0x08015c38
 800223c:	08015c44 	.word	0x08015c44
 8002240:	08015c50 	.word	0x08015c50

08002244 <hex2int>:
}


// source: file:///C:/craigpeacock/NMEA-GPS
int hex2int(char *c)
{
 8002244:	b580      	push	{r7, lr}
 8002246:	b084      	sub	sp, #16
 8002248:	af00      	add	r7, sp, #0
 800224a:	6078      	str	r0, [r7, #4]
	int value;

	value = hexchar2int(c[0]);
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	781b      	ldrb	r3, [r3, #0]
 8002250:	4618      	mov	r0, r3
 8002252:	f000 f813 	bl	800227c <hexchar2int>
 8002256:	60f8      	str	r0, [r7, #12]
	value = value << 4;
 8002258:	68fb      	ldr	r3, [r7, #12]
 800225a:	011b      	lsls	r3, r3, #4
 800225c:	60fb      	str	r3, [r7, #12]
	value += hexchar2int(c[1]);
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	3301      	adds	r3, #1
 8002262:	781b      	ldrb	r3, [r3, #0]
 8002264:	4618      	mov	r0, r3
 8002266:	f000 f809 	bl	800227c <hexchar2int>
 800226a:	4602      	mov	r2, r0
 800226c:	68fb      	ldr	r3, [r7, #12]
 800226e:	4413      	add	r3, r2
 8002270:	60fb      	str	r3, [r7, #12]

	return value;
 8002272:	68fb      	ldr	r3, [r7, #12]
}
 8002274:	4618      	mov	r0, r3
 8002276:	3710      	adds	r7, #16
 8002278:	46bd      	mov	sp, r7
 800227a:	bd80      	pop	{r7, pc}

0800227c <hexchar2int>:


int hexchar2int(char c)
{
 800227c:	b480      	push	{r7}
 800227e:	b083      	sub	sp, #12
 8002280:	af00      	add	r7, sp, #0
 8002282:	4603      	mov	r3, r0
 8002284:	71fb      	strb	r3, [r7, #7]
    if (c >= '0' && c <= '9')
 8002286:	79fb      	ldrb	r3, [r7, #7]
 8002288:	2b2f      	cmp	r3, #47	@ 0x2f
 800228a:	d905      	bls.n	8002298 <hexchar2int+0x1c>
 800228c:	79fb      	ldrb	r3, [r7, #7]
 800228e:	2b39      	cmp	r3, #57	@ 0x39
 8002290:	d802      	bhi.n	8002298 <hexchar2int+0x1c>
        return (c - '0');
 8002292:	79fb      	ldrb	r3, [r7, #7]
 8002294:	3b30      	subs	r3, #48	@ 0x30
 8002296:	e013      	b.n	80022c0 <hexchar2int+0x44>
    if (c >= 'A' && c <= 'F')
 8002298:	79fb      	ldrb	r3, [r7, #7]
 800229a:	2b40      	cmp	r3, #64	@ 0x40
 800229c:	d905      	bls.n	80022aa <hexchar2int+0x2e>
 800229e:	79fb      	ldrb	r3, [r7, #7]
 80022a0:	2b46      	cmp	r3, #70	@ 0x46
 80022a2:	d802      	bhi.n	80022aa <hexchar2int+0x2e>
        return (c - 'A' + 10);
 80022a4:	79fb      	ldrb	r3, [r7, #7]
 80022a6:	3b37      	subs	r3, #55	@ 0x37
 80022a8:	e00a      	b.n	80022c0 <hexchar2int+0x44>
    if (c >= 'a' && c <= 'f')
 80022aa:	79fb      	ldrb	r3, [r7, #7]
 80022ac:	2b60      	cmp	r3, #96	@ 0x60
 80022ae:	d905      	bls.n	80022bc <hexchar2int+0x40>
 80022b0:	79fb      	ldrb	r3, [r7, #7]
 80022b2:	2b66      	cmp	r3, #102	@ 0x66
 80022b4:	d802      	bhi.n	80022bc <hexchar2int+0x40>
        return (c - 'a' + 10);
 80022b6:	79fb      	ldrb	r3, [r7, #7]
 80022b8:	3b57      	subs	r3, #87	@ 0x57
 80022ba:	e001      	b.n	80022c0 <hexchar2int+0x44>
    return (-1);
 80022bc:	f04f 33ff 	mov.w	r3, #4294967295
}
 80022c0:	4618      	mov	r0, r3
 80022c2:	370c      	adds	r7, #12
 80022c4:	46bd      	mov	sp, r7
 80022c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ca:	4770      	bx	lr

080022cc <checksum_valid>:


// source: file:///C:/craigpeacock/NMEA-GPS
int checksum_valid(char *string)
{
 80022cc:	b580      	push	{r7, lr}
 80022ce:	b086      	sub	sp, #24
 80022d0:	af00      	add	r7, sp, #0
 80022d2:	6078      	str	r0, [r7, #4]
	char *checksum_str;
	int checksum, i;
	unsigned char calculated_checksum = 0;
 80022d4:	2300      	movs	r3, #0
 80022d6:	74fb      	strb	r3, [r7, #19]

	// Checksum is postcede by *
	if ((checksum_str = strchr(string, '*')))
 80022d8:	212a      	movs	r1, #42	@ 0x2a
 80022da:	6878      	ldr	r0, [r7, #4]
 80022dc:	f010 f9da 	bl	8012694 <strchr>
 80022e0:	60f8      	str	r0, [r7, #12]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	d022      	beq.n	800232e <checksum_valid+0x62>
	{
		*checksum_str = '\0'; // Remove checksum from string
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	2200      	movs	r2, #0
 80022ec:	701a      	strb	r2, [r3, #0]
		// Calculate checksum, starting after $ (i = 1)
		for (i = 1; i < strlen(string); i++)
 80022ee:	2301      	movs	r3, #1
 80022f0:	617b      	str	r3, [r7, #20]
 80022f2:	e009      	b.n	8002308 <checksum_valid+0x3c>
			calculated_checksum = calculated_checksum ^ string[i];
 80022f4:	697b      	ldr	r3, [r7, #20]
 80022f6:	687a      	ldr	r2, [r7, #4]
 80022f8:	4413      	add	r3, r2
 80022fa:	781a      	ldrb	r2, [r3, #0]
 80022fc:	7cfb      	ldrb	r3, [r7, #19]
 80022fe:	4053      	eors	r3, r2
 8002300:	74fb      	strb	r3, [r7, #19]
		for (i = 1; i < strlen(string); i++)
 8002302:	697b      	ldr	r3, [r7, #20]
 8002304:	3301      	adds	r3, #1
 8002306:	617b      	str	r3, [r7, #20]
 8002308:	6878      	ldr	r0, [r7, #4]
 800230a:	f7fd ffb1 	bl	8000270 <strlen>
 800230e:	4602      	mov	r2, r0
 8002310:	697b      	ldr	r3, [r7, #20]
 8002312:	429a      	cmp	r2, r3
 8002314:	d8ee      	bhi.n	80022f4 <checksum_valid+0x28>

		checksum = hex2int((char *)checksum_str+1);
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	3301      	adds	r3, #1
 800231a:	4618      	mov	r0, r3
 800231c:	f7ff ff92 	bl	8002244 <hex2int>
 8002320:	60b8      	str	r0, [r7, #8]
		//printf("Checksum Str [%s], Checksum %02X, Calculated Checksum %02X\r\n",(char *)checksum_str+1, checksum, calculated_checksum);
		if (checksum == calculated_checksum)
 8002322:	7cfb      	ldrb	r3, [r7, #19]
 8002324:	68ba      	ldr	r2, [r7, #8]
 8002326:	429a      	cmp	r2, r3
 8002328:	d101      	bne.n	800232e <checksum_valid+0x62>
			return (1);
 800232a:	2301      	movs	r3, #1
 800232c:	e000      	b.n	8002330 <checksum_valid+0x64>
	}

	return (0);
 800232e:	2300      	movs	r3, #0
}
 8002330:	4618      	mov	r0, r3
 8002332:	3718      	adds	r7, #24
 8002334:	46bd      	mov	sp, r7
 8002336:	bd80      	pop	{r7, pc}

08002338 <LED_Task1>:
* @brief Tasks die ledjes manipuleren nadat ze eerst afgeschermd zijn met mutex semaphores.
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void LED_Task1 (void *argument)
{
 8002338:	b580      	push	{r7, lr}
 800233a:	b084      	sub	sp, #16
 800233c:	af00      	add	r7, sp, #0
 800233e:	6078      	str	r0, [r7, #4]
	UART_puts((char *)__func__); UART_puts(" started\r\n");
 8002340:	4820      	ldr	r0, [pc, #128]	@ (80023c4 <LED_Task1+0x8c>)
 8002342:	f000 fd65 	bl	8002e10 <UART_puts>
 8002346:	4820      	ldr	r0, [pc, #128]	@ (80023c8 <LED_Task1+0x90>)
 8002348:	f000 fd62 	bl	8002e10 <UART_puts>
	int i, leds;

	while(TRUE)
	{
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); /* wacht op toegang tot de semaphore;
 800234c:	4b1f      	ldr	r3, [pc, #124]	@ (80023cc <LED_Task1+0x94>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	f04f 31ff 	mov.w	r1, #4294967295
 8002354:	4618      	mov	r0, r3
 8002356:	f00a fffb 	bl	800d350 <xQueueSemaphoreTake>
	    * de code hieronder wordt alleen uitgevoerd nadat ik de mutex heb gekregen.
	    * andere tasks die op deze mutex wachten, kunnen pas door nadat ik de mutex
	    * heb vrijgegeven met Give.
	    */
		leds = 128; // start at led nr. 8
 800235a:	2380      	movs	r3, #128	@ 0x80
 800235c:	60bb      	str	r3, [r7, #8]
		for (i=0; i<8; i++, leds>>=1)
 800235e:	2300      	movs	r3, #0
 8002360:	60fb      	str	r3, [r7, #12]
 8002362:	e01c      	b.n	800239e <LED_Task1+0x66>
		{
        	LED_put(leds); // set leds
 8002364:	68bb      	ldr	r3, [r7, #8]
 8002366:	b29b      	uxth	r3, r3
 8002368:	4618      	mov	r0, r3
 800236a:	f000 fd05 	bl	8002d78 <LED_put>
           	osDelay(os_delay);
 800236e:	4b18      	ldr	r3, [pc, #96]	@ (80023d0 <LED_Task1+0x98>)
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	4618      	mov	r0, r3
 8002374:	f00a f802 	bl	800c37c <osDelay>

	    	if (Uart_debug_out & LEDS_DEBUG_OUT)
 8002378:	4b16      	ldr	r3, [pc, #88]	@ (80023d4 <LED_Task1+0x9c>)
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	f003 0301 	and.w	r3, r3, #1
 8002380:	2b00      	cmp	r3, #0
 8002382:	d006      	beq.n	8002392 <LED_Task1+0x5a>
			{
	    		UART_puts("\r\nM1 led: "); UART_putint(leds);
 8002384:	4814      	ldr	r0, [pc, #80]	@ (80023d8 <LED_Task1+0xa0>)
 8002386:	f000 fd43 	bl	8002e10 <UART_puts>
 800238a:	68bb      	ldr	r3, [r7, #8]
 800238c:	4618      	mov	r0, r3
 800238e:	f000 fdb7 	bl	8002f00 <UART_putint>
		for (i=0; i<8; i++, leds>>=1)
 8002392:	68fb      	ldr	r3, [r7, #12]
 8002394:	3301      	adds	r3, #1
 8002396:	60fb      	str	r3, [r7, #12]
 8002398:	68bb      	ldr	r3, [r7, #8]
 800239a:	105b      	asrs	r3, r3, #1
 800239c:	60bb      	str	r3, [r7, #8]
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	2b07      	cmp	r3, #7
 80023a2:	dddf      	ble.n	8002364 <LED_Task1+0x2c>
			}
   		}
     	xSemaphoreGive(hLED_Sem); // geef de semaphore weer vrij voor een ander
 80023a4:	4b09      	ldr	r3, [pc, #36]	@ (80023cc <LED_Task1+0x94>)
 80023a6:	6818      	ldr	r0, [r3, #0]
 80023a8:	2300      	movs	r3, #0
 80023aa:	2200      	movs	r2, #0
 80023ac:	2100      	movs	r1, #0
 80023ae:	f00a fd4d 	bl	800ce4c <xQueueGenericSend>
    	taskYIELD(); // done, force context switch, otherwise freeRTOS stays in this task
 80023b2:	4b0a      	ldr	r3, [pc, #40]	@ (80023dc <LED_Task1+0xa4>)
 80023b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80023b8:	601a      	str	r2, [r3, #0]
 80023ba:	f3bf 8f4f 	dsb	sy
 80023be:	f3bf 8f6f 	isb	sy
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); /* wacht op toegang tot de semaphore;
 80023c2:	e7c3      	b.n	800234c <LED_Task1+0x14>
 80023c4:	08015d6c 	.word	0x08015d6c
 80023c8:	08015c60 	.word	0x08015c60
 80023cc:	20000480 	.word	0x20000480
 80023d0:	20000248 	.word	0x20000248
 80023d4:	20000474 	.word	0x20000474
 80023d8:	08015c6c 	.word	0x08015c6c
 80023dc:	e000ed04 	.word	0xe000ed04

080023e0 <LED_Task2>:
* @brief Tasks die ledjes manipuleren nadat ze eerst afgeschermd zijn met mutex semaphores.
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void LED_Task2 (void *argument)
{
 80023e0:	b580      	push	{r7, lr}
 80023e2:	b084      	sub	sp, #16
 80023e4:	af00      	add	r7, sp, #0
 80023e6:	6078      	str	r0, [r7, #4]
	UART_puts((char *)__func__); UART_puts(" started\r\n");
 80023e8:	4820      	ldr	r0, [pc, #128]	@ (800246c <LED_Task2+0x8c>)
 80023ea:	f000 fd11 	bl	8002e10 <UART_puts>
 80023ee:	4820      	ldr	r0, [pc, #128]	@ (8002470 <LED_Task2+0x90>)
 80023f0:	f000 fd0e 	bl	8002e10 <UART_puts>
	int i, leds;

	while(TRUE)
	{
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // wait to enter
 80023f4:	4b1f      	ldr	r3, [pc, #124]	@ (8002474 <LED_Task2+0x94>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	f04f 31ff 	mov.w	r1, #4294967295
 80023fc:	4618      	mov	r0, r3
 80023fe:	f00a ffa7 	bl	800d350 <xQueueSemaphoreTake>
		leds = 1;
 8002402:	2301      	movs	r3, #1
 8002404:	60bb      	str	r3, [r7, #8]
		for (i=0; i<8; i++, leds<<=1)
 8002406:	2300      	movs	r3, #0
 8002408:	60fb      	str	r3, [r7, #12]
 800240a:	e01c      	b.n	8002446 <LED_Task2+0x66>
		{
        	LED_put(leds); // set leds
 800240c:	68bb      	ldr	r3, [r7, #8]
 800240e:	b29b      	uxth	r3, r3
 8002410:	4618      	mov	r0, r3
 8002412:	f000 fcb1 	bl	8002d78 <LED_put>
          	osDelay(os_delay);
 8002416:	4b18      	ldr	r3, [pc, #96]	@ (8002478 <LED_Task2+0x98>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	4618      	mov	r0, r3
 800241c:	f009 ffae 	bl	800c37c <osDelay>

	    	if (Uart_debug_out & LEDS_DEBUG_OUT)
 8002420:	4b16      	ldr	r3, [pc, #88]	@ (800247c <LED_Task2+0x9c>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f003 0301 	and.w	r3, r3, #1
 8002428:	2b00      	cmp	r3, #0
 800242a:	d006      	beq.n	800243a <LED_Task2+0x5a>
			{
	    		UART_puts("\r\n\tM2 led: "); UART_putint(leds);
 800242c:	4814      	ldr	r0, [pc, #80]	@ (8002480 <LED_Task2+0xa0>)
 800242e:	f000 fcef 	bl	8002e10 <UART_puts>
 8002432:	68bb      	ldr	r3, [r7, #8]
 8002434:	4618      	mov	r0, r3
 8002436:	f000 fd63 	bl	8002f00 <UART_putint>
		for (i=0; i<8; i++, leds<<=1)
 800243a:	68fb      	ldr	r3, [r7, #12]
 800243c:	3301      	adds	r3, #1
 800243e:	60fb      	str	r3, [r7, #12]
 8002440:	68bb      	ldr	r3, [r7, #8]
 8002442:	005b      	lsls	r3, r3, #1
 8002444:	60bb      	str	r3, [r7, #8]
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	2b07      	cmp	r3, #7
 800244a:	dddf      	ble.n	800240c <LED_Task2+0x2c>
			}
   		}
     	xSemaphoreGive(hLED_Sem); // free mutex
 800244c:	4b09      	ldr	r3, [pc, #36]	@ (8002474 <LED_Task2+0x94>)
 800244e:	6818      	ldr	r0, [r3, #0]
 8002450:	2300      	movs	r3, #0
 8002452:	2200      	movs	r2, #0
 8002454:	2100      	movs	r1, #0
 8002456:	f00a fcf9 	bl	800ce4c <xQueueGenericSend>
       	taskYIELD(); // done, force context switch, otherwise freeRTOS stays in this task
 800245a:	4b0a      	ldr	r3, [pc, #40]	@ (8002484 <LED_Task2+0xa4>)
 800245c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002460:	601a      	str	r2, [r3, #0]
 8002462:	f3bf 8f4f 	dsb	sy
 8002466:	f3bf 8f6f 	isb	sy
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // wait to enter
 800246a:	e7c3      	b.n	80023f4 <LED_Task2+0x14>
 800246c:	08015d78 	.word	0x08015d78
 8002470:	08015c60 	.word	0x08015c60
 8002474:	20000480 	.word	0x20000480
 8002478:	20000248 	.word	0x20000248
 800247c:	20000474 	.word	0x20000474
 8002480:	08015c78 	.word	0x08015c78
 8002484:	e000ed04 	.word	0xe000ed04

08002488 <LED_Task3>:
* Task 3 en 4 werken daarnaast nog met tasknotification.
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void LED_Task3 (void *argument)
{
 8002488:	b580      	push	{r7, lr}
 800248a:	b086      	sub	sp, #24
 800248c:	af00      	add	r7, sp, #0
 800248e:	6078      	str	r0, [r7, #4]
	int          i, leds;
	osThreadId_t hTask4;

	if (!(hTask4 = xTaskGetHandle("LED_Task4")))
 8002490:	4830      	ldr	r0, [pc, #192]	@ (8002554 <LED_Task3+0xcc>)
 8002492:	f00c f885 	bl	800e5a0 <xTaskGetHandle>
 8002496:	60f8      	str	r0, [r7, #12]
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	2b00      	cmp	r3, #0
 800249c:	d102      	bne.n	80024a4 <LED_Task3+0x1c>
	   error_HaltOS("Err:hTask4");
 800249e:	482e      	ldr	r0, [pc, #184]	@ (8002558 <LED_Task3+0xd0>)
 80024a0:	f7ff f988 	bl	80017b4 <error_HaltOS>

	UART_puts((char *)__func__); UART_puts(" started\r\n");
 80024a4:	482d      	ldr	r0, [pc, #180]	@ (800255c <LED_Task3+0xd4>)
 80024a6:	f000 fcb3 	bl	8002e10 <UART_puts>
 80024aa:	482d      	ldr	r0, [pc, #180]	@ (8002560 <LED_Task3+0xd8>)
 80024ac:	f000 fcb0 	bl	8002e10 <UART_puts>

	while(TRUE)
	{
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // wait to get in...
 80024b0:	4b2c      	ldr	r3, [pc, #176]	@ (8002564 <LED_Task3+0xdc>)
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	f04f 31ff 	mov.w	r1, #4294967295
 80024b8:	4618      	mov	r0, r3
 80024ba:	f00a ff49 	bl	800d350 <xQueueSemaphoreTake>

	    for (i=0; i<4; i++) // voorbeeld hoe je je code zo overdraagbaar mogelijk maakt
 80024be:	2300      	movs	r3, #0
 80024c0:	617b      	str	r3, [r7, #20]
 80024c2:	e02d      	b.n	8002520 <LED_Task3+0x98>
	    {
	    	if 		(i==0)	leds = 8+16; // zichtbaar: 1. waarde i, 2. welke leds aan gaan
 80024c4:	697b      	ldr	r3, [r7, #20]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d102      	bne.n	80024d0 <LED_Task3+0x48>
 80024ca:	2318      	movs	r3, #24
 80024cc:	613b      	str	r3, [r7, #16]
 80024ce:	e00d      	b.n	80024ec <LED_Task3+0x64>
	    	else if (i==1)  leds = 4+32; // ... had ook met switch-case gekund
 80024d0:	697b      	ldr	r3, [r7, #20]
 80024d2:	2b01      	cmp	r3, #1
 80024d4:	d102      	bne.n	80024dc <LED_Task3+0x54>
 80024d6:	2324      	movs	r3, #36	@ 0x24
 80024d8:	613b      	str	r3, [r7, #16]
 80024da:	e007      	b.n	80024ec <LED_Task3+0x64>
	    	else if (i==2)  leds = 2+64;
 80024dc:	697b      	ldr	r3, [r7, #20]
 80024de:	2b02      	cmp	r3, #2
 80024e0:	d102      	bne.n	80024e8 <LED_Task3+0x60>
 80024e2:	2342      	movs	r3, #66	@ 0x42
 80024e4:	613b      	str	r3, [r7, #16]
 80024e6:	e001      	b.n	80024ec <LED_Task3+0x64>
	    	else 			leds = 1+128;
 80024e8:	2381      	movs	r3, #129	@ 0x81
 80024ea:	613b      	str	r3, [r7, #16]

	    	LED_put(leds);     // set leds
 80024ec:	693b      	ldr	r3, [r7, #16]
 80024ee:	b29b      	uxth	r3, r3
 80024f0:	4618      	mov	r0, r3
 80024f2:	f000 fc41 	bl	8002d78 <LED_put>
	    	osDelay(os_delay); // snelheid bepalen, kan veranderd worden via user interface
 80024f6:	4b1c      	ldr	r3, [pc, #112]	@ (8002568 <LED_Task3+0xe0>)
 80024f8:	681b      	ldr	r3, [r3, #0]
 80024fa:	4618      	mov	r0, r3
 80024fc:	f009 ff3e 	bl	800c37c <osDelay>

	    	if (Uart_debug_out & LEDS_DEBUG_OUT)
 8002500:	4b1a      	ldr	r3, [pc, #104]	@ (800256c <LED_Task3+0xe4>)
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	f003 0301 	and.w	r3, r3, #1
 8002508:	2b00      	cmp	r3, #0
 800250a:	d006      	beq.n	800251a <LED_Task3+0x92>
			{
				UART_puts("\r\n\t\tM3 led: "); UART_putint(leds);
 800250c:	4818      	ldr	r0, [pc, #96]	@ (8002570 <LED_Task3+0xe8>)
 800250e:	f000 fc7f 	bl	8002e10 <UART_puts>
 8002512:	693b      	ldr	r3, [r7, #16]
 8002514:	4618      	mov	r0, r3
 8002516:	f000 fcf3 	bl	8002f00 <UART_putint>
	    for (i=0; i<4; i++) // voorbeeld hoe je je code zo overdraagbaar mogelijk maakt
 800251a:	697b      	ldr	r3, [r7, #20]
 800251c:	3301      	adds	r3, #1
 800251e:	617b      	str	r3, [r7, #20]
 8002520:	697b      	ldr	r3, [r7, #20]
 8002522:	2b03      	cmp	r3, #3
 8002524:	ddce      	ble.n	80024c4 <LED_Task3+0x3c>
			}
	    }

     	xSemaphoreGive(hLED_Sem); // free mutex
 8002526:	4b0f      	ldr	r3, [pc, #60]	@ (8002564 <LED_Task3+0xdc>)
 8002528:	6818      	ldr	r0, [r3, #0]
 800252a:	2300      	movs	r3, #0
 800252c:	2200      	movs	r2, #0
 800252e:	2100      	movs	r1, #0
 8002530:	f00a fc8c 	bl	800ce4c <xQueueGenericSend>

     	xTaskNotifyGive(hTask4); // give the ball to mutextask4
 8002534:	2300      	movs	r3, #0
 8002536:	2202      	movs	r2, #2
 8002538:	2100      	movs	r1, #0
 800253a:	68f8      	ldr	r0, [r7, #12]
 800253c:	f00c ff60 	bl	800f400 <xTaskGenericNotify>
		osDelay(200);
 8002540:	20c8      	movs	r0, #200	@ 0xc8
 8002542:	f009 ff1b 	bl	800c37c <osDelay>

		ulTaskNotifyTake(pdTRUE, portMAX_DELAY); // wait for task 4
 8002546:	f04f 31ff 	mov.w	r1, #4294967295
 800254a:	2001      	movs	r0, #1
 800254c:	f00c feac 	bl	800f2a8 <ulTaskNotifyTake>
	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // wait to get in...
 8002550:	e7ae      	b.n	80024b0 <LED_Task3+0x28>
 8002552:	bf00      	nop
 8002554:	08015c84 	.word	0x08015c84
 8002558:	08015c90 	.word	0x08015c90
 800255c:	08015d84 	.word	0x08015d84
 8002560:	08015c60 	.word	0x08015c60
 8002564:	20000480 	.word	0x20000480
 8002568:	20000248 	.word	0x20000248
 800256c:	20000474 	.word	0x20000474
 8002570:	08015c9c 	.word	0x08015c9c

08002574 <LED_Task4>:
* Task 3 en 4 werken daarnaast nog met tasknotification.
* @param *argument Niet gebruikt, eventueel een waarde of string om te testen
* @return void
*/
void LED_Task4 (void *argument)
{
 8002574:	b580      	push	{r7, lr}
 8002576:	b086      	sub	sp, #24
 8002578:	af00      	add	r7, sp, #0
 800257a:	6078      	str	r0, [r7, #4]
	int          i, leds;
	osThreadId_t hTask3;

	if (!(hTask3 = xTaskGetHandle("LED_Task3")))
 800257c:	4830      	ldr	r0, [pc, #192]	@ (8002640 <LED_Task4+0xcc>)
 800257e:	f00c f80f 	bl	800e5a0 <xTaskGetHandle>
 8002582:	60f8      	str	r0, [r7, #12]
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	2b00      	cmp	r3, #0
 8002588:	d102      	bne.n	8002590 <LED_Task4+0x1c>
	   error_HaltOS("Err:hTask3");
 800258a:	482e      	ldr	r0, [pc, #184]	@ (8002644 <LED_Task4+0xd0>)
 800258c:	f7ff f912 	bl	80017b4 <error_HaltOS>

	UART_puts((char *)__func__); UART_puts(" started\r\n");
 8002590:	482d      	ldr	r0, [pc, #180]	@ (8002648 <LED_Task4+0xd4>)
 8002592:	f000 fc3d 	bl	8002e10 <UART_puts>
 8002596:	482d      	ldr	r0, [pc, #180]	@ (800264c <LED_Task4+0xd8>)
 8002598:	f000 fc3a 	bl	8002e10 <UART_puts>

	while(TRUE)
	{
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY); // wait for notification
 800259c:	f04f 31ff 	mov.w	r1, #4294967295
 80025a0:	2001      	movs	r0, #1
 80025a2:	f00c fe81 	bl	800f2a8 <ulTaskNotifyTake>

	    xSemaphoreTake(hLED_Sem, portMAX_DELAY); // wait for mutex
 80025a6:	4b2a      	ldr	r3, [pc, #168]	@ (8002650 <LED_Task4+0xdc>)
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f04f 31ff 	mov.w	r1, #4294967295
 80025ae:	4618      	mov	r0, r3
 80025b0:	f00a fece 	bl	800d350 <xQueueSemaphoreTake>

	    for (i=0; i<4; i++) // voorbeeld hoe je je code zo overdraagbaar mogelijk maakt
 80025b4:	2300      	movs	r3, #0
 80025b6:	617b      	str	r3, [r7, #20]
 80025b8:	e02d      	b.n	8002616 <LED_Task4+0xa2>
	    {
	    	if 		(i==0)	leds = 1+128; // zichtbaar: 1. waarde i, 2. welke leds aan gaan
 80025ba:	697b      	ldr	r3, [r7, #20]
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d102      	bne.n	80025c6 <LED_Task4+0x52>
 80025c0:	2381      	movs	r3, #129	@ 0x81
 80025c2:	613b      	str	r3, [r7, #16]
 80025c4:	e00d      	b.n	80025e2 <LED_Task4+0x6e>
	    	else if (i==1)  leds = 2+64;  // had ook met switch-case gekund, maar dit is korter...
 80025c6:	697b      	ldr	r3, [r7, #20]
 80025c8:	2b01      	cmp	r3, #1
 80025ca:	d102      	bne.n	80025d2 <LED_Task4+0x5e>
 80025cc:	2342      	movs	r3, #66	@ 0x42
 80025ce:	613b      	str	r3, [r7, #16]
 80025d0:	e007      	b.n	80025e2 <LED_Task4+0x6e>
	    	else if (i==2)  leds = 4+32;
 80025d2:	697b      	ldr	r3, [r7, #20]
 80025d4:	2b02      	cmp	r3, #2
 80025d6:	d102      	bne.n	80025de <LED_Task4+0x6a>
 80025d8:	2324      	movs	r3, #36	@ 0x24
 80025da:	613b      	str	r3, [r7, #16]
 80025dc:	e001      	b.n	80025e2 <LED_Task4+0x6e>
	    	else 			leds = 8+16;
 80025de:	2318      	movs	r3, #24
 80025e0:	613b      	str	r3, [r7, #16]

	    	LED_put(leds);     // set leds
 80025e2:	693b      	ldr	r3, [r7, #16]
 80025e4:	b29b      	uxth	r3, r3
 80025e6:	4618      	mov	r0, r3
 80025e8:	f000 fbc6 	bl	8002d78 <LED_put>
	    	osDelay(os_delay); // snelheid bepalen, waarde os_delay kan veranderd worden via user interface
 80025ec:	4b19      	ldr	r3, [pc, #100]	@ (8002654 <LED_Task4+0xe0>)
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	4618      	mov	r0, r3
 80025f2:	f009 fec3 	bl	800c37c <osDelay>

	    	if (Uart_debug_out & LEDS_DEBUG_OUT)
 80025f6:	4b18      	ldr	r3, [pc, #96]	@ (8002658 <LED_Task4+0xe4>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f003 0301 	and.w	r3, r3, #1
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d006      	beq.n	8002610 <LED_Task4+0x9c>
			{
				UART_puts("\r\n\t\t\tM4 led: "); UART_putint(leds);
 8002602:	4816      	ldr	r0, [pc, #88]	@ (800265c <LED_Task4+0xe8>)
 8002604:	f000 fc04 	bl	8002e10 <UART_puts>
 8002608:	693b      	ldr	r3, [r7, #16]
 800260a:	4618      	mov	r0, r3
 800260c:	f000 fc78 	bl	8002f00 <UART_putint>
	    for (i=0; i<4; i++) // voorbeeld hoe je je code zo overdraagbaar mogelijk maakt
 8002610:	697b      	ldr	r3, [r7, #20]
 8002612:	3301      	adds	r3, #1
 8002614:	617b      	str	r3, [r7, #20]
 8002616:	697b      	ldr	r3, [r7, #20]
 8002618:	2b03      	cmp	r3, #3
 800261a:	ddce      	ble.n	80025ba <LED_Task4+0x46>
			}
	    }

     	xSemaphoreGive(hLED_Sem); // free mutex
 800261c:	4b0c      	ldr	r3, [pc, #48]	@ (8002650 <LED_Task4+0xdc>)
 800261e:	6818      	ldr	r0, [r3, #0]
 8002620:	2300      	movs	r3, #0
 8002622:	2200      	movs	r2, #0
 8002624:	2100      	movs	r1, #0
 8002626:	f00a fc11 	bl	800ce4c <xQueueGenericSend>
		osDelay(200);
 800262a:	20c8      	movs	r0, #200	@ 0xc8
 800262c:	f009 fea6 	bl	800c37c <osDelay>

    	xTaskNotifyGive(hTask3); // give the ball back to task 3
 8002630:	2300      	movs	r3, #0
 8002632:	2202      	movs	r2, #2
 8002634:	2100      	movs	r1, #0
 8002636:	68f8      	ldr	r0, [r7, #12]
 8002638:	f00c fee2 	bl	800f400 <xTaskGenericNotify>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY); // wait for notification
 800263c:	e7ae      	b.n	800259c <LED_Task4+0x28>
 800263e:	bf00      	nop
 8002640:	08015cac 	.word	0x08015cac
 8002644:	08015cb8 	.word	0x08015cb8
 8002648:	08015d90 	.word	0x08015d90
 800264c:	08015c60 	.word	0x08015c60
 8002650:	20000480 	.word	0x20000480
 8002654:	20000248 	.word	0x20000248
 8002658:	20000474 	.word	0x20000474
 800265c:	08015cc4 	.word	0x08015cc4

08002660 <Waypoint>:
// hiermeer kunnen (STRC_AMOUNT) punten opgslagen worden.
// @return void


void Waypoint ()
{
 8002660:	b598      	push	{r3, r4, r7, lr}
 8002662:	af00      	add	r7, sp, #0
    if (xSemaphoreTake(hGpsDataMutex, portMAX_DELAY) == pdTRUE) // wacht tot de semaphore van de gps-data vrij is
 8002664:	4b21      	ldr	r3, [pc, #132]	@ (80026ec <Waypoint+0x8c>)
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f04f 31ff 	mov.w	r1, #4294967295
 800266c:	4618      	mov	r0, r3
 800266e:	f00a fe6f 	bl	800d350 <xQueueSemaphoreTake>
 8002672:	4603      	mov	r3, r0
 8002674:	2b01      	cmp	r3, #1
 8002676:	d136      	bne.n	80026e6 <Waypoint+0x86>
    {
		if (parsed_gnrmc.status == 'A') 						// check of de gps-data die ontvangen is goed is
 8002678:	4b1d      	ldr	r3, [pc, #116]	@ (80026f0 <Waypoint+0x90>)
 800267a:	7b1b      	ldrb	r3, [r3, #12]
 800267c:	2b41      	cmp	r3, #65	@ 0x41
 800267e:	d12b      	bne.n	80026d8 <Waypoint+0x78>
		{
			aWaypoints[current].lon = parsed_gnrmc.longitude;	// kopieer de latitude van de gps-data naar de waypoints-struct
 8002680:	4b1b      	ldr	r3, [pc, #108]	@ (80026f0 <Waypoint+0x90>)
 8002682:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002686:	491b      	ldr	r1, [pc, #108]	@ (80026f4 <Waypoint+0x94>)
 8002688:	680c      	ldr	r4, [r1, #0]
 800268a:	4610      	mov	r0, r2
 800268c:	4619      	mov	r1, r3
 800268e:	f7fe faab 	bl	8000be8 <__aeabi_d2f>
 8002692:	4602      	mov	r2, r0
 8002694:	4918      	ldr	r1, [pc, #96]	@ (80026f8 <Waypoint+0x98>)
 8002696:	00e3      	lsls	r3, r4, #3
 8002698:	440b      	add	r3, r1
 800269a:	601a      	str	r2, [r3, #0]
			aWaypoints[current].lat = parsed_gnrmc.latitude;	// kopieer de longitude van de gps-data naar de waypoints-struct
 800269c:	4b14      	ldr	r3, [pc, #80]	@ (80026f0 <Waypoint+0x90>)
 800269e:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80026a2:	4914      	ldr	r1, [pc, #80]	@ (80026f4 <Waypoint+0x94>)
 80026a4:	680c      	ldr	r4, [r1, #0]
 80026a6:	4610      	mov	r0, r2
 80026a8:	4619      	mov	r1, r3
 80026aa:	f7fe fa9d 	bl	8000be8 <__aeabi_d2f>
 80026ae:	4602      	mov	r2, r0
 80026b0:	4911      	ldr	r1, [pc, #68]	@ (80026f8 <Waypoint+0x98>)
 80026b2:	00e3      	lsls	r3, r4, #3
 80026b4:	440b      	add	r3, r1
 80026b6:	3304      	adds	r3, #4
 80026b8:	601a      	str	r2, [r3, #0]

			current++;
 80026ba:	4b0e      	ldr	r3, [pc, #56]	@ (80026f4 <Waypoint+0x94>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	3301      	adds	r3, #1
 80026c0:	4a0c      	ldr	r2, [pc, #48]	@ (80026f4 <Waypoint+0x94>)
 80026c2:	6013      	str	r3, [r2, #0]
			if (current >= STRC_AMOUNT)							// als er 20 sets data zijn opgeslagen, zet de pointer weer terug op de eerste set
 80026c4:	4b0b      	ldr	r3, [pc, #44]	@ (80026f4 <Waypoint+0x94>)
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	2b13      	cmp	r3, #19
 80026ca:	dd05      	ble.n	80026d8 <Waypoint+0x78>
			{
				filled = true;
 80026cc:	4b0b      	ldr	r3, [pc, #44]	@ (80026fc <Waypoint+0x9c>)
 80026ce:	2201      	movs	r2, #1
 80026d0:	701a      	strb	r2, [r3, #0]
				current = 0;
 80026d2:	4b08      	ldr	r3, [pc, #32]	@ (80026f4 <Waypoint+0x94>)
 80026d4:	2200      	movs	r2, #0
 80026d6:	601a      	str	r2, [r3, #0]
			}
		}

		xSemaphoreGive(hGpsDataMutex);							// geef de mutex weer vrij
 80026d8:	4b04      	ldr	r3, [pc, #16]	@ (80026ec <Waypoint+0x8c>)
 80026da:	6818      	ldr	r0, [r3, #0]
 80026dc:	2300      	movs	r3, #0
 80026de:	2200      	movs	r2, #0
 80026e0:	2100      	movs	r1, #0
 80026e2:	f00a fbb3 	bl	800ce4c <xQueueGenericSend>
    }
}
 80026e6:	bf00      	nop
 80026e8:	bd98      	pop	{r3, r4, r7, pc}
 80026ea:	bf00      	nop
 80026ec:	20000484 	.word	0x20000484
 80026f0:	200004e0 	.word	0x200004e0
 80026f4:	20000538 	.word	0x20000538
 80026f8:	20000540 	.word	0x20000540
 80026fc:	2000053c 	.word	0x2000053c

08002700 <returnWaypoints>:
// @return returnt een float met latitude of longitude waardes afhankelijk van waarde 'type'.



float returnWaypoints (int pointNumber, int type)
{
 8002700:	b480      	push	{r7}
 8002702:	b085      	sub	sp, #20
 8002704:	af00      	add	r7, sp, #0
 8002706:	6078      	str	r0, [r7, #4]
 8002708:	6039      	str	r1, [r7, #0]
	switch (type)
 800270a:	683b      	ldr	r3, [r7, #0]
 800270c:	2b01      	cmp	r3, #1
 800270e:	d003      	beq.n	8002718 <returnWaypoints+0x18>
 8002710:	683b      	ldr	r3, [r7, #0]
 8002712:	2b02      	cmp	r3, #2
 8002714:	d009      	beq.n	800272a <returnWaypoints+0x2a>
 8002716:	e010      	b.n	800273a <returnWaypoints+0x3a>
	{
		case 1: //
				float lat;
				lat = aWaypoints[pointNumber].lat;
 8002718:	4a0d      	ldr	r2, [pc, #52]	@ (8002750 <returnWaypoints+0x50>)
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	00db      	lsls	r3, r3, #3
 800271e:	4413      	add	r3, r2
 8002720:	3304      	adds	r3, #4
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	60bb      	str	r3, [r7, #8]
				return lat;
 8002726:	68bb      	ldr	r3, [r7, #8]
 8002728:	e008      	b.n	800273c <returnWaypoints+0x3c>
				break;

		case 2: //
				float lon;
				lon = aWaypoints[pointNumber].lon;
 800272a:	4a09      	ldr	r2, [pc, #36]	@ (8002750 <returnWaypoints+0x50>)
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	00db      	lsls	r3, r3, #3
 8002730:	4413      	add	r3, r2
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	60fb      	str	r3, [r7, #12]
				return lon;
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	e000      	b.n	800273c <returnWaypoints+0x3c>
				break;

		default: //
				return 475.39182; //if we see this number in the terminal we know that something is verrrryyyyyy wrong. Should not happen :)
 800273a:	4b06      	ldr	r3, [pc, #24]	@ (8002754 <returnWaypoints+0x54>)
				break;
	}
}
 800273c:	ee07 3a90 	vmov	s15, r3
 8002740:	eeb0 0a67 	vmov.f32	s0, s15
 8002744:	3714      	adds	r7, #20
 8002746:	46bd      	mov	sp, r7
 8002748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800274c:	4770      	bx	lr
 800274e:	bf00      	nop
 8002750:	20000540 	.word	0x20000540
 8002754:	43edb227 	.word	0x43edb227

08002758 <Student_task1>:
* @brief Oefentask voor studenten
* @param argument, kan evt vanuit tasks gebruikt worden
* @return void
*/
void Student_task1 (void *argument)
{
 8002758:	b580      	push	{r7, lr}
 800275a:	b098      	sub	sp, #96	@ 0x60
 800275c:	af00      	add	r7, sp, #0
 800275e:	6078      	str	r0, [r7, #4]
	UART_puts((char *)__func__); UART_puts(" started\r\n");
 8002760:	4811      	ldr	r0, [pc, #68]	@ (80027a8 <Student_task1+0x50>)
 8002762:	f000 fb55 	bl	8002e10 <UART_puts>
 8002766:	4811      	ldr	r0, [pc, #68]	@ (80027ac <Student_task1+0x54>)
 8002768:	f000 fb52 	bl	8002e10 <UART_puts>
	char buf[80];
	unsigned char i = 0;
 800276c:	2300      	movs	r3, #0
 800276e:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f

	while(TRUE)
	{
       	osDelay(1000);
 8002772:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002776:	f009 fe01 	bl	800c37c <osDelay>

		if (Uart_debug_out & STUDENT_DEBUG_OUT)
 800277a:	4b0d      	ldr	r3, [pc, #52]	@ (80027b0 <Student_task1+0x58>)
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	f003 0308 	and.w	r3, r3, #8
 8002782:	2b00      	cmp	r3, #0
 8002784:	d0f5      	beq.n	8002772 <Student_task1+0x1a>
		{
	       	sprintf(buf, "\r\n%s: %u", __func__, i++);
 8002786:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800278a:	1c5a      	adds	r2, r3, #1
 800278c:	f887 205f 	strb.w	r2, [r7, #95]	@ 0x5f
 8002790:	f107 000c 	add.w	r0, r7, #12
 8002794:	4a04      	ldr	r2, [pc, #16]	@ (80027a8 <Student_task1+0x50>)
 8002796:	4907      	ldr	r1, [pc, #28]	@ (80027b4 <Student_task1+0x5c>)
 8002798:	f00f fed2 	bl	8012540 <siprintf>
			UART_puts(buf);
 800279c:	f107 030c 	add.w	r3, r7, #12
 80027a0:	4618      	mov	r0, r3
 80027a2:	f000 fb35 	bl	8002e10 <UART_puts>
       	osDelay(1000);
 80027a6:	e7e4      	b.n	8002772 <Student_task1+0x1a>
 80027a8:	08015d9c 	.word	0x08015d9c
 80027ac:	08015cd4 	.word	0x08015cd4
 80027b0:	20000474 	.word	0x20000474
 80027b4:	08015ce0 	.word	0x08015ce0

080027b8 <BUZZER_put>:
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b084      	sub	sp, #16
 80027bc:	af00      	add	r7, sp, #0
 80027be:	6078      	str	r0, [r7, #4]
 80027c0:	2300      	movs	r3, #0
 80027c2:	60bb      	str	r3, [r7, #8]
 80027c4:	e023      	b.n	800280e <BUZZER_put+0x56>
 80027c6:	2201      	movs	r2, #1
 80027c8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80027cc:	4815      	ldr	r0, [pc, #84]	@ (8002824 <BUZZER_put+0x6c>)
 80027ce:	f001 fe5b 	bl	8004488 <HAL_GPIO_WritePin>
 80027d2:	2300      	movs	r3, #0
 80027d4:	60fb      	str	r3, [r7, #12]
 80027d6:	e002      	b.n	80027de <BUZZER_put+0x26>
 80027d8:	68fb      	ldr	r3, [r7, #12]
 80027da:	3301      	adds	r3, #1
 80027dc:	60fb      	str	r3, [r7, #12]
 80027de:	68ba      	ldr	r2, [r7, #8]
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	441a      	add	r2, r3
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	429a      	cmp	r2, r3
 80027e8:	d8f6      	bhi.n	80027d8 <BUZZER_put+0x20>
 80027ea:	2200      	movs	r2, #0
 80027ec:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80027f0:	480c      	ldr	r0, [pc, #48]	@ (8002824 <BUZZER_put+0x6c>)
 80027f2:	f001 fe49 	bl	8004488 <HAL_GPIO_WritePin>
 80027f6:	2300      	movs	r3, #0
 80027f8:	60fb      	str	r3, [r7, #12]
 80027fa:	e002      	b.n	8002802 <BUZZER_put+0x4a>
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	3301      	adds	r3, #1
 8002800:	60fb      	str	r3, [r7, #12]
 8002802:	68ba      	ldr	r2, [r7, #8]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	441a      	add	r2, r3
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	429a      	cmp	r2, r3
 800280c:	d8f6      	bhi.n	80027fc <BUZZER_put+0x44>
 800280e:	68bb      	ldr	r3, [r7, #8]
 8002810:	1c5a      	adds	r2, r3, #1
 8002812:	60ba      	str	r2, [r7, #8]
 8002814:	2b63      	cmp	r3, #99	@ 0x63
 8002816:	d9d6      	bls.n	80027c6 <BUZZER_put+0xe>
 8002818:	bf00      	nop
 800281a:	bf00      	nop
 800281c:	3710      	adds	r7, #16
 800281e:	46bd      	mov	sp, r7
 8002820:	bd80      	pop	{r7, pc}
 8002822:	bf00      	nop
 8002824:	40020800 	.word	0x40020800

08002828 <KEYS_init>:
 8002828:	b580      	push	{r7, lr}
 800282a:	b086      	sub	sp, #24
 800282c:	af00      	add	r7, sp, #0
 800282e:	2300      	movs	r3, #0
 8002830:	603b      	str	r3, [r7, #0]
 8002832:	4b18      	ldr	r3, [pc, #96]	@ (8002894 <KEYS_init+0x6c>)
 8002834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002836:	4a17      	ldr	r2, [pc, #92]	@ (8002894 <KEYS_init+0x6c>)
 8002838:	f043 0308 	orr.w	r3, r3, #8
 800283c:	6313      	str	r3, [r2, #48]	@ 0x30
 800283e:	4b15      	ldr	r3, [pc, #84]	@ (8002894 <KEYS_init+0x6c>)
 8002840:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002842:	f003 0308 	and.w	r3, r3, #8
 8002846:	603b      	str	r3, [r7, #0]
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	2301      	movs	r3, #1
 800284c:	60bb      	str	r3, [r7, #8]
 800284e:	2300      	movs	r3, #0
 8002850:	60fb      	str	r3, [r7, #12]
 8002852:	2303      	movs	r3, #3
 8002854:	613b      	str	r3, [r7, #16]
 8002856:	f640 030e 	movw	r3, #2062	@ 0x80e
 800285a:	607b      	str	r3, [r7, #4]
 800285c:	1d3b      	adds	r3, r7, #4
 800285e:	4619      	mov	r1, r3
 8002860:	480d      	ldr	r0, [pc, #52]	@ (8002898 <KEYS_init+0x70>)
 8002862:	f001 fc5d 	bl	8004120 <HAL_GPIO_Init>
 8002866:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
 800286a:	607b      	str	r3, [r7, #4]
 800286c:	2300      	movs	r3, #0
 800286e:	60bb      	str	r3, [r7, #8]
 8002870:	2302      	movs	r3, #2
 8002872:	60fb      	str	r3, [r7, #12]
 8002874:	1d3b      	adds	r3, r7, #4
 8002876:	4619      	mov	r1, r3
 8002878:	4807      	ldr	r0, [pc, #28]	@ (8002898 <KEYS_init+0x70>)
 800287a:	f001 fc51 	bl	8004120 <HAL_GPIO_Init>
 800287e:	2200      	movs	r2, #0
 8002880:	f640 010e 	movw	r1, #2062	@ 0x80e
 8002884:	4804      	ldr	r0, [pc, #16]	@ (8002898 <KEYS_init+0x70>)
 8002886:	f001 fdff 	bl	8004488 <HAL_GPIO_WritePin>
 800288a:	bf00      	nop
 800288c:	3718      	adds	r7, #24
 800288e:	46bd      	mov	sp, r7
 8002890:	bd80      	pop	{r7, pc}
 8002892:	bf00      	nop
 8002894:	40023800 	.word	0x40023800
 8002898:	40020c00 	.word	0x40020c00

0800289c <KEYS_initISR>:
 800289c:	b580      	push	{r7, lr}
 800289e:	b082      	sub	sp, #8
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	b2db      	uxtb	r3, r3
 80028a8:	461a      	mov	r2, r3
 80028aa:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80028ae:	480e      	ldr	r0, [pc, #56]	@ (80028e8 <KEYS_initISR+0x4c>)
 80028b0:	f001 fdea 	bl	8004488 <HAL_GPIO_WritePin>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	b2db      	uxtb	r3, r3
 80028b8:	461a      	mov	r2, r3
 80028ba:	2102      	movs	r1, #2
 80028bc:	480a      	ldr	r0, [pc, #40]	@ (80028e8 <KEYS_initISR+0x4c>)
 80028be:	f001 fde3 	bl	8004488 <HAL_GPIO_WritePin>
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	b2db      	uxtb	r3, r3
 80028c6:	461a      	mov	r2, r3
 80028c8:	2108      	movs	r1, #8
 80028ca:	4807      	ldr	r0, [pc, #28]	@ (80028e8 <KEYS_initISR+0x4c>)
 80028cc:	f001 fddc 	bl	8004488 <HAL_GPIO_WritePin>
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	b2db      	uxtb	r3, r3
 80028d4:	461a      	mov	r2, r3
 80028d6:	2104      	movs	r1, #4
 80028d8:	4803      	ldr	r0, [pc, #12]	@ (80028e8 <KEYS_initISR+0x4c>)
 80028da:	f001 fdd5 	bl	8004488 <HAL_GPIO_WritePin>
 80028de:	bf00      	nop
 80028e0:	3708      	adds	r7, #8
 80028e2:	46bd      	mov	sp, r7
 80028e4:	bd80      	pop	{r7, pc}
 80028e6:	bf00      	nop
 80028e8:	40020c00 	.word	0x40020c00

080028ec <KEYS_read>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b082      	sub	sp, #8
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	2300      	movs	r3, #0
 80028f4:	603b      	str	r3, [r7, #0]
 80028f6:	2300      	movs	r3, #0
 80028f8:	607b      	str	r3, [r7, #4]
 80028fa:	2200      	movs	r2, #0
 80028fc:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8002900:	4827      	ldr	r0, [pc, #156]	@ (80029a0 <KEYS_read+0xb4>)
 8002902:	f001 fdc1 	bl	8004488 <HAL_GPIO_WritePin>
 8002906:	2201      	movs	r2, #1
 8002908:	2108      	movs	r1, #8
 800290a:	4825      	ldr	r0, [pc, #148]	@ (80029a0 <KEYS_read+0xb4>)
 800290c:	f001 fdbc 	bl	8004488 <HAL_GPIO_WritePin>
 8002910:	f000 f848 	bl	80029a4 <KEYS_kolom>
 8002914:	6038      	str	r0, [r7, #0]
 8002916:	683b      	ldr	r3, [r7, #0]
 8002918:	2b00      	cmp	r3, #0
 800291a:	d002      	beq.n	8002922 <KEYS_read+0x36>
 800291c:	683b      	ldr	r3, [r7, #0]
 800291e:	330c      	adds	r3, #12
 8002920:	607b      	str	r3, [r7, #4]
 8002922:	2200      	movs	r2, #0
 8002924:	2108      	movs	r1, #8
 8002926:	481e      	ldr	r0, [pc, #120]	@ (80029a0 <KEYS_read+0xb4>)
 8002928:	f001 fdae 	bl	8004488 <HAL_GPIO_WritePin>
 800292c:	2201      	movs	r2, #1
 800292e:	2104      	movs	r1, #4
 8002930:	481b      	ldr	r0, [pc, #108]	@ (80029a0 <KEYS_read+0xb4>)
 8002932:	f001 fda9 	bl	8004488 <HAL_GPIO_WritePin>
 8002936:	f000 f835 	bl	80029a4 <KEYS_kolom>
 800293a:	6038      	str	r0, [r7, #0]
 800293c:	683b      	ldr	r3, [r7, #0]
 800293e:	2b00      	cmp	r3, #0
 8002940:	d002      	beq.n	8002948 <KEYS_read+0x5c>
 8002942:	683b      	ldr	r3, [r7, #0]
 8002944:	3308      	adds	r3, #8
 8002946:	607b      	str	r3, [r7, #4]
 8002948:	2200      	movs	r2, #0
 800294a:	2104      	movs	r1, #4
 800294c:	4814      	ldr	r0, [pc, #80]	@ (80029a0 <KEYS_read+0xb4>)
 800294e:	f001 fd9b 	bl	8004488 <HAL_GPIO_WritePin>
 8002952:	2201      	movs	r2, #1
 8002954:	2102      	movs	r1, #2
 8002956:	4812      	ldr	r0, [pc, #72]	@ (80029a0 <KEYS_read+0xb4>)
 8002958:	f001 fd96 	bl	8004488 <HAL_GPIO_WritePin>
 800295c:	f000 f822 	bl	80029a4 <KEYS_kolom>
 8002960:	6038      	str	r0, [r7, #0]
 8002962:	683b      	ldr	r3, [r7, #0]
 8002964:	2b00      	cmp	r3, #0
 8002966:	d002      	beq.n	800296e <KEYS_read+0x82>
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	3304      	adds	r3, #4
 800296c:	607b      	str	r3, [r7, #4]
 800296e:	2200      	movs	r2, #0
 8002970:	2102      	movs	r1, #2
 8002972:	480b      	ldr	r0, [pc, #44]	@ (80029a0 <KEYS_read+0xb4>)
 8002974:	f001 fd88 	bl	8004488 <HAL_GPIO_WritePin>
 8002978:	2201      	movs	r2, #1
 800297a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800297e:	4808      	ldr	r0, [pc, #32]	@ (80029a0 <KEYS_read+0xb4>)
 8002980:	f001 fd82 	bl	8004488 <HAL_GPIO_WritePin>
 8002984:	f000 f80e 	bl	80029a4 <KEYS_kolom>
 8002988:	6038      	str	r0, [r7, #0]
 800298a:	683b      	ldr	r3, [r7, #0]
 800298c:	2b00      	cmp	r3, #0
 800298e:	d001      	beq.n	8002994 <KEYS_read+0xa8>
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	607b      	str	r3, [r7, #4]
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	4618      	mov	r0, r3
 8002998:	3708      	adds	r7, #8
 800299a:	46bd      	mov	sp, r7
 800299c:	bd80      	pop	{r7, pc}
 800299e:	bf00      	nop
 80029a0:	40020c00 	.word	0x40020c00

080029a4 <KEYS_kolom>:
 80029a4:	b580      	push	{r7, lr}
 80029a6:	b082      	sub	sp, #8
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	2300      	movs	r3, #0
 80029ac:	607b      	str	r3, [r7, #4]
 80029ae:	2140      	movs	r1, #64	@ 0x40
 80029b0:	4814      	ldr	r0, [pc, #80]	@ (8002a04 <KEYS_kolom+0x60>)
 80029b2:	f001 fd51 	bl	8004458 <HAL_GPIO_ReadPin>
 80029b6:	4603      	mov	r3, r0
 80029b8:	2b01      	cmp	r3, #1
 80029ba:	d101      	bne.n	80029c0 <KEYS_kolom+0x1c>
 80029bc:	2301      	movs	r3, #1
 80029be:	607b      	str	r3, [r7, #4]
 80029c0:	2180      	movs	r1, #128	@ 0x80
 80029c2:	4810      	ldr	r0, [pc, #64]	@ (8002a04 <KEYS_kolom+0x60>)
 80029c4:	f001 fd48 	bl	8004458 <HAL_GPIO_ReadPin>
 80029c8:	4603      	mov	r3, r0
 80029ca:	2b01      	cmp	r3, #1
 80029cc:	d101      	bne.n	80029d2 <KEYS_kolom+0x2e>
 80029ce:	2302      	movs	r3, #2
 80029d0:	607b      	str	r3, [r7, #4]
 80029d2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80029d6:	480b      	ldr	r0, [pc, #44]	@ (8002a04 <KEYS_kolom+0x60>)
 80029d8:	f001 fd3e 	bl	8004458 <HAL_GPIO_ReadPin>
 80029dc:	4603      	mov	r3, r0
 80029de:	2b01      	cmp	r3, #1
 80029e0:	d101      	bne.n	80029e6 <KEYS_kolom+0x42>
 80029e2:	2303      	movs	r3, #3
 80029e4:	607b      	str	r3, [r7, #4]
 80029e6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80029ea:	4806      	ldr	r0, [pc, #24]	@ (8002a04 <KEYS_kolom+0x60>)
 80029ec:	f001 fd34 	bl	8004458 <HAL_GPIO_ReadPin>
 80029f0:	4603      	mov	r3, r0
 80029f2:	2b01      	cmp	r3, #1
 80029f4:	d101      	bne.n	80029fa <KEYS_kolom+0x56>
 80029f6:	2304      	movs	r3, #4
 80029f8:	607b      	str	r3, [r7, #4]
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	4618      	mov	r0, r3
 80029fe:	3708      	adds	r7, #8
 8002a00:	46bd      	mov	sp, r7
 8002a02:	bd80      	pop	{r7, pc}
 8002a04:	40020c00 	.word	0x40020c00

08002a08 <ClearBits>:
 8002a08:	b580      	push	{r7, lr}
 8002a0a:	af00      	add	r7, sp, #0
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	2108      	movs	r1, #8
 8002a10:	4809      	ldr	r0, [pc, #36]	@ (8002a38 <ClearBits+0x30>)
 8002a12:	f001 fd39 	bl	8004488 <HAL_GPIO_WritePin>
 8002a16:	2200      	movs	r2, #0
 8002a18:	2110      	movs	r1, #16
 8002a1a:	4807      	ldr	r0, [pc, #28]	@ (8002a38 <ClearBits+0x30>)
 8002a1c:	f001 fd34 	bl	8004488 <HAL_GPIO_WritePin>
 8002a20:	2200      	movs	r2, #0
 8002a22:	2120      	movs	r1, #32
 8002a24:	4804      	ldr	r0, [pc, #16]	@ (8002a38 <ClearBits+0x30>)
 8002a26:	f001 fd2f 	bl	8004488 <HAL_GPIO_WritePin>
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	2140      	movs	r1, #64	@ 0x40
 8002a2e:	4802      	ldr	r0, [pc, #8]	@ (8002a38 <ClearBits+0x30>)
 8002a30:	f001 fd2a 	bl	8004488 <HAL_GPIO_WritePin>
 8002a34:	bf00      	nop
 8002a36:	bd80      	pop	{r7, pc}
 8002a38:	40021000 	.word	0x40021000

08002a3c <LCD_clear>:
 8002a3c:	b580      	push	{r7, lr}
 8002a3e:	af00      	add	r7, sp, #0
 8002a40:	2001      	movs	r0, #1
 8002a42:	f000 f967 	bl	8002d14 <LCD_writecontrol>
 8002a46:	4b04      	ldr	r3, [pc, #16]	@ (8002a58 <LCD_clear+0x1c>)
 8002a48:	2200      	movs	r2, #0
 8002a4a:	701a      	strb	r2, [r3, #0]
 8002a4c:	2005      	movs	r0, #5
 8002a4e:	f001 f9cf 	bl	8003df0 <HAL_Delay>
 8002a52:	bf00      	nop
 8002a54:	bd80      	pop	{r7, pc}
 8002a56:	bf00      	nop
 8002a58:	200005e4 	.word	0x200005e4

08002a5c <LCD_init>:
 8002a5c:	b580      	push	{r7, lr}
 8002a5e:	b088      	sub	sp, #32
 8002a60:	af00      	add	r7, sp, #0
 8002a62:	2300      	movs	r3, #0
 8002a64:	60bb      	str	r3, [r7, #8]
 8002a66:	4b44      	ldr	r3, [pc, #272]	@ (8002b78 <LCD_init+0x11c>)
 8002a68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a6a:	4a43      	ldr	r2, [pc, #268]	@ (8002b78 <LCD_init+0x11c>)
 8002a6c:	f043 0310 	orr.w	r3, r3, #16
 8002a70:	6313      	str	r3, [r2, #48]	@ 0x30
 8002a72:	4b41      	ldr	r3, [pc, #260]	@ (8002b78 <LCD_init+0x11c>)
 8002a74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a76:	f003 0310 	and.w	r3, r3, #16
 8002a7a:	60bb      	str	r3, [r7, #8]
 8002a7c:	68bb      	ldr	r3, [r7, #8]
 8002a7e:	2300      	movs	r3, #0
 8002a80:	607b      	str	r3, [r7, #4]
 8002a82:	4b3d      	ldr	r3, [pc, #244]	@ (8002b78 <LCD_init+0x11c>)
 8002a84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a86:	4a3c      	ldr	r2, [pc, #240]	@ (8002b78 <LCD_init+0x11c>)
 8002a88:	f043 0304 	orr.w	r3, r3, #4
 8002a8c:	6313      	str	r3, [r2, #48]	@ 0x30
 8002a8e:	4b3a      	ldr	r3, [pc, #232]	@ (8002b78 <LCD_init+0x11c>)
 8002a90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a92:	f003 0304 	and.w	r3, r3, #4
 8002a96:	607b      	str	r3, [r7, #4]
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	603b      	str	r3, [r7, #0]
 8002a9e:	4b36      	ldr	r3, [pc, #216]	@ (8002b78 <LCD_init+0x11c>)
 8002aa0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aa2:	4a35      	ldr	r2, [pc, #212]	@ (8002b78 <LCD_init+0x11c>)
 8002aa4:	f043 0308 	orr.w	r3, r3, #8
 8002aa8:	6313      	str	r3, [r2, #48]	@ 0x30
 8002aaa:	4b33      	ldr	r3, [pc, #204]	@ (8002b78 <LCD_init+0x11c>)
 8002aac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aae:	f003 0308 	and.w	r3, r3, #8
 8002ab2:	603b      	str	r3, [r7, #0]
 8002ab4:	683b      	ldr	r3, [r7, #0]
 8002ab6:	2301      	movs	r3, #1
 8002ab8:	613b      	str	r3, [r7, #16]
 8002aba:	2300      	movs	r3, #0
 8002abc:	617b      	str	r3, [r7, #20]
 8002abe:	2303      	movs	r3, #3
 8002ac0:	61bb      	str	r3, [r7, #24]
 8002ac2:	2378      	movs	r3, #120	@ 0x78
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	f107 030c 	add.w	r3, r7, #12
 8002aca:	4619      	mov	r1, r3
 8002acc:	482b      	ldr	r0, [pc, #172]	@ (8002b7c <LCD_init+0x120>)
 8002ace:	f001 fb27 	bl	8004120 <HAL_GPIO_Init>
 8002ad2:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
 8002ad6:	60fb      	str	r3, [r7, #12]
 8002ad8:	f107 030c 	add.w	r3, r7, #12
 8002adc:	4619      	mov	r1, r3
 8002ade:	4828      	ldr	r0, [pc, #160]	@ (8002b80 <LCD_init+0x124>)
 8002ae0:	f001 fb1e 	bl	8004120 <HAL_GPIO_Init>
 8002ae4:	2301      	movs	r3, #1
 8002ae6:	60fb      	str	r3, [r7, #12]
 8002ae8:	f107 030c 	add.w	r3, r7, #12
 8002aec:	4619      	mov	r1, r3
 8002aee:	4825      	ldr	r0, [pc, #148]	@ (8002b84 <LCD_init+0x128>)
 8002af0:	f001 fb16 	bl	8004120 <HAL_GPIO_Init>
 8002af4:	2200      	movs	r2, #0
 8002af6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002afa:	4821      	ldr	r0, [pc, #132]	@ (8002b80 <LCD_init+0x124>)
 8002afc:	f001 fcc4 	bl	8004488 <HAL_GPIO_WritePin>
 8002b00:	2200      	movs	r2, #0
 8002b02:	2101      	movs	r1, #1
 8002b04:	481f      	ldr	r0, [pc, #124]	@ (8002b84 <LCD_init+0x128>)
 8002b06:	f001 fcbf 	bl	8004488 <HAL_GPIO_WritePin>
 8002b0a:	2200      	movs	r2, #0
 8002b0c:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8002b10:	481b      	ldr	r0, [pc, #108]	@ (8002b80 <LCD_init+0x124>)
 8002b12:	f001 fcb9 	bl	8004488 <HAL_GPIO_WritePin>
 8002b16:	200f      	movs	r0, #15
 8002b18:	f001 f96a 	bl	8003df0 <HAL_Delay>
 8002b1c:	2030      	movs	r0, #48	@ 0x30
 8002b1e:	f000 f8c7 	bl	8002cb0 <LCD_writebyte>
 8002b22:	2046      	movs	r0, #70	@ 0x46
 8002b24:	f001 f964 	bl	8003df0 <HAL_Delay>
 8002b28:	2030      	movs	r0, #48	@ 0x30
 8002b2a:	f000 f8c1 	bl	8002cb0 <LCD_writebyte>
 8002b2e:	2030      	movs	r0, #48	@ 0x30
 8002b30:	f000 f8be 	bl	8002cb0 <LCD_writebyte>
 8002b34:	2002      	movs	r0, #2
 8002b36:	f000 f8bb 	bl	8002cb0 <LCD_writebyte>
 8002b3a:	2005      	movs	r0, #5
 8002b3c:	f001 f958 	bl	8003df0 <HAL_Delay>
 8002b40:	202c      	movs	r0, #44	@ 0x2c
 8002b42:	f000 f8b5 	bl	8002cb0 <LCD_writebyte>
 8002b46:	200f      	movs	r0, #15
 8002b48:	f001 f952 	bl	8003df0 <HAL_Delay>
 8002b4c:	200c      	movs	r0, #12
 8002b4e:	f000 f8af 	bl	8002cb0 <LCD_writebyte>
 8002b52:	200f      	movs	r0, #15
 8002b54:	f001 f94c 	bl	8003df0 <HAL_Delay>
 8002b58:	2001      	movs	r0, #1
 8002b5a:	f000 f8a9 	bl	8002cb0 <LCD_writebyte>
 8002b5e:	200f      	movs	r0, #15
 8002b60:	f001 f946 	bl	8003df0 <HAL_Delay>
 8002b64:	2006      	movs	r0, #6
 8002b66:	f000 f8a3 	bl	8002cb0 <LCD_writebyte>
 8002b6a:	200f      	movs	r0, #15
 8002b6c:	f001 f940 	bl	8003df0 <HAL_Delay>
 8002b70:	bf00      	nop
 8002b72:	3720      	adds	r7, #32
 8002b74:	46bd      	mov	sp, r7
 8002b76:	bd80      	pop	{r7, pc}
 8002b78:	40023800 	.word	0x40023800
 8002b7c:	40021000 	.word	0x40021000
 8002b80:	40020800 	.word	0x40020800
 8002b84:	40020c00 	.word	0x40020c00

08002b88 <LCD_putchar>:
 8002b88:	b580      	push	{r7, lr}
 8002b8a:	b082      	sub	sp, #8
 8002b8c:	af00      	add	r7, sp, #0
 8002b8e:	4603      	mov	r3, r0
 8002b90:	71fb      	strb	r3, [r7, #7]
 8002b92:	2201      	movs	r2, #1
 8002b94:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002b98:	480b      	ldr	r0, [pc, #44]	@ (8002bc8 <LCD_putchar+0x40>)
 8002b9a:	f001 fc75 	bl	8004488 <HAL_GPIO_WritePin>
 8002b9e:	79fb      	ldrb	r3, [r7, #7]
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f000 f885 	bl	8002cb0 <LCD_writebyte>
 8002ba6:	4b09      	ldr	r3, [pc, #36]	@ (8002bcc <LCD_putchar+0x44>)
 8002ba8:	781b      	ldrb	r3, [r3, #0]
 8002baa:	3301      	adds	r3, #1
 8002bac:	b2da      	uxtb	r2, r3
 8002bae:	4b07      	ldr	r3, [pc, #28]	@ (8002bcc <LCD_putchar+0x44>)
 8002bb0:	701a      	strb	r2, [r3, #0]
 8002bb2:	4b06      	ldr	r3, [pc, #24]	@ (8002bcc <LCD_putchar+0x44>)
 8002bb4:	781b      	ldrb	r3, [r3, #0]
 8002bb6:	2b20      	cmp	r3, #32
 8002bb8:	d102      	bne.n	8002bc0 <LCD_putchar+0x38>
 8002bba:	4b04      	ldr	r3, [pc, #16]	@ (8002bcc <LCD_putchar+0x44>)
 8002bbc:	2200      	movs	r2, #0
 8002bbe:	701a      	strb	r2, [r3, #0]
 8002bc0:	bf00      	nop
 8002bc2:	3708      	adds	r7, #8
 8002bc4:	46bd      	mov	sp, r7
 8002bc6:	bd80      	pop	{r7, pc}
 8002bc8:	40020800 	.word	0x40020800
 8002bcc:	200005e4 	.word	0x200005e4

08002bd0 <LCD_put>:
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	b084      	sub	sp, #16
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	6078      	str	r0, [r7, #4]
 8002bd8:	2300      	movs	r3, #0
 8002bda:	73bb      	strb	r3, [r7, #14]
 8002bdc:	e019      	b.n	8002c12 <LCD_put+0x42>
 8002bde:	4b12      	ldr	r3, [pc, #72]	@ (8002c28 <LCD_put+0x58>)
 8002be0:	781b      	ldrb	r3, [r3, #0]
 8002be2:	2b08      	cmp	r3, #8
 8002be4:	d10b      	bne.n	8002bfe <LCD_put+0x2e>
 8002be6:	2300      	movs	r3, #0
 8002be8:	73fb      	strb	r3, [r7, #15]
 8002bea:	e005      	b.n	8002bf8 <LCD_put+0x28>
 8002bec:	2014      	movs	r0, #20
 8002bee:	f000 f891 	bl	8002d14 <LCD_writecontrol>
 8002bf2:	7bfb      	ldrb	r3, [r7, #15]
 8002bf4:	3301      	adds	r3, #1
 8002bf6:	73fb      	strb	r3, [r7, #15]
 8002bf8:	7bfb      	ldrb	r3, [r7, #15]
 8002bfa:	2b1f      	cmp	r3, #31
 8002bfc:	d9f6      	bls.n	8002bec <LCD_put+0x1c>
 8002bfe:	7bbb      	ldrb	r3, [r7, #14]
 8002c00:	687a      	ldr	r2, [r7, #4]
 8002c02:	4413      	add	r3, r2
 8002c04:	781b      	ldrb	r3, [r3, #0]
 8002c06:	4618      	mov	r0, r3
 8002c08:	f7ff ffbe 	bl	8002b88 <LCD_putchar>
 8002c0c:	7bbb      	ldrb	r3, [r7, #14]
 8002c0e:	3301      	adds	r3, #1
 8002c10:	73bb      	strb	r3, [r7, #14]
 8002c12:	7bbb      	ldrb	r3, [r7, #14]
 8002c14:	687a      	ldr	r2, [r7, #4]
 8002c16:	4413      	add	r3, r2
 8002c18:	781b      	ldrb	r3, [r3, #0]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d1df      	bne.n	8002bde <LCD_put+0xe>
 8002c1e:	bf00      	nop
 8002c20:	bf00      	nop
 8002c22:	3710      	adds	r7, #16
 8002c24:	46bd      	mov	sp, r7
 8002c26:	bd80      	pop	{r7, pc}
 8002c28:	200005e4 	.word	0x200005e4

08002c2c <LCD_puts>:
 8002c2c:	b580      	push	{r7, lr}
 8002c2e:	b082      	sub	sp, #8
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	6078      	str	r0, [r7, #4]
 8002c34:	6878      	ldr	r0, [r7, #4]
 8002c36:	f7ff ffcb 	bl	8002bd0 <LCD_put>
 8002c3a:	bf00      	nop
 8002c3c:	3708      	adds	r7, #8
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bd80      	pop	{r7, pc}
	...

08002c44 <LCD_writenibble>:
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b082      	sub	sp, #8
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	4603      	mov	r3, r0
 8002c4c:	71fb      	strb	r3, [r7, #7]
 8002c4e:	f7ff fedb 	bl	8002a08 <ClearBits>
 8002c52:	79fb      	ldrb	r3, [r7, #7]
 8002c54:	f003 0301 	and.w	r3, r3, #1
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d004      	beq.n	8002c66 <LCD_writenibble+0x22>
 8002c5c:	2201      	movs	r2, #1
 8002c5e:	2140      	movs	r1, #64	@ 0x40
 8002c60:	4812      	ldr	r0, [pc, #72]	@ (8002cac <LCD_writenibble+0x68>)
 8002c62:	f001 fc11 	bl	8004488 <HAL_GPIO_WritePin>
 8002c66:	79fb      	ldrb	r3, [r7, #7]
 8002c68:	f003 0302 	and.w	r3, r3, #2
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d004      	beq.n	8002c7a <LCD_writenibble+0x36>
 8002c70:	2201      	movs	r2, #1
 8002c72:	2120      	movs	r1, #32
 8002c74:	480d      	ldr	r0, [pc, #52]	@ (8002cac <LCD_writenibble+0x68>)
 8002c76:	f001 fc07 	bl	8004488 <HAL_GPIO_WritePin>
 8002c7a:	79fb      	ldrb	r3, [r7, #7]
 8002c7c:	f003 0304 	and.w	r3, r3, #4
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d004      	beq.n	8002c8e <LCD_writenibble+0x4a>
 8002c84:	2201      	movs	r2, #1
 8002c86:	2110      	movs	r1, #16
 8002c88:	4808      	ldr	r0, [pc, #32]	@ (8002cac <LCD_writenibble+0x68>)
 8002c8a:	f001 fbfd 	bl	8004488 <HAL_GPIO_WritePin>
 8002c8e:	79fb      	ldrb	r3, [r7, #7]
 8002c90:	f003 0308 	and.w	r3, r3, #8
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d004      	beq.n	8002ca2 <LCD_writenibble+0x5e>
 8002c98:	2201      	movs	r2, #1
 8002c9a:	2108      	movs	r1, #8
 8002c9c:	4803      	ldr	r0, [pc, #12]	@ (8002cac <LCD_writenibble+0x68>)
 8002c9e:	f001 fbf3 	bl	8004488 <HAL_GPIO_WritePin>
 8002ca2:	bf00      	nop
 8002ca4:	3708      	adds	r7, #8
 8002ca6:	46bd      	mov	sp, r7
 8002ca8:	bd80      	pop	{r7, pc}
 8002caa:	bf00      	nop
 8002cac:	40021000 	.word	0x40021000

08002cb0 <LCD_writebyte>:
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b082      	sub	sp, #8
 8002cb4:	af00      	add	r7, sp, #0
 8002cb6:	4603      	mov	r3, r0
 8002cb8:	71fb      	strb	r3, [r7, #7]
 8002cba:	2201      	movs	r2, #1
 8002cbc:	2101      	movs	r1, #1
 8002cbe:	4814      	ldr	r0, [pc, #80]	@ (8002d10 <LCD_writebyte+0x60>)
 8002cc0:	f001 fbe2 	bl	8004488 <HAL_GPIO_WritePin>
 8002cc4:	79fb      	ldrb	r3, [r7, #7]
 8002cc6:	091b      	lsrs	r3, r3, #4
 8002cc8:	b2db      	uxtb	r3, r3
 8002cca:	4618      	mov	r0, r3
 8002ccc:	f7ff ffba 	bl	8002c44 <LCD_writenibble>
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	2101      	movs	r1, #1
 8002cd4:	480e      	ldr	r0, [pc, #56]	@ (8002d10 <LCD_writebyte+0x60>)
 8002cd6:	f001 fbd7 	bl	8004488 <HAL_GPIO_WritePin>
 8002cda:	2002      	movs	r0, #2
 8002cdc:	f001 f888 	bl	8003df0 <HAL_Delay>
 8002ce0:	2201      	movs	r2, #1
 8002ce2:	2101      	movs	r1, #1
 8002ce4:	480a      	ldr	r0, [pc, #40]	@ (8002d10 <LCD_writebyte+0x60>)
 8002ce6:	f001 fbcf 	bl	8004488 <HAL_GPIO_WritePin>
 8002cea:	79fb      	ldrb	r3, [r7, #7]
 8002cec:	f003 030f 	and.w	r3, r3, #15
 8002cf0:	b2db      	uxtb	r3, r3
 8002cf2:	4618      	mov	r0, r3
 8002cf4:	f7ff ffa6 	bl	8002c44 <LCD_writenibble>
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	2101      	movs	r1, #1
 8002cfc:	4804      	ldr	r0, [pc, #16]	@ (8002d10 <LCD_writebyte+0x60>)
 8002cfe:	f001 fbc3 	bl	8004488 <HAL_GPIO_WritePin>
 8002d02:	2002      	movs	r0, #2
 8002d04:	f001 f874 	bl	8003df0 <HAL_Delay>
 8002d08:	bf00      	nop
 8002d0a:	3708      	adds	r7, #8
 8002d0c:	46bd      	mov	sp, r7
 8002d0e:	bd80      	pop	{r7, pc}
 8002d10:	40020c00 	.word	0x40020c00

08002d14 <LCD_writecontrol>:
 8002d14:	b580      	push	{r7, lr}
 8002d16:	b082      	sub	sp, #8
 8002d18:	af00      	add	r7, sp, #0
 8002d1a:	4603      	mov	r3, r0
 8002d1c:	71fb      	strb	r3, [r7, #7]
 8002d1e:	2200      	movs	r2, #0
 8002d20:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002d24:	4805      	ldr	r0, [pc, #20]	@ (8002d3c <LCD_writecontrol+0x28>)
 8002d26:	f001 fbaf 	bl	8004488 <HAL_GPIO_WritePin>
 8002d2a:	79fb      	ldrb	r3, [r7, #7]
 8002d2c:	4618      	mov	r0, r3
 8002d2e:	f7ff ffbf 	bl	8002cb0 <LCD_writebyte>
 8002d32:	bf00      	nop
 8002d34:	3708      	adds	r7, #8
 8002d36:	46bd      	mov	sp, r7
 8002d38:	bd80      	pop	{r7, pc}
 8002d3a:	bf00      	nop
 8002d3c:	40020800 	.word	0x40020800

08002d40 <LED_init>:
 8002d40:	b580      	push	{r7, lr}
 8002d42:	af00      	add	r7, sp, #0
 8002d44:	2200      	movs	r2, #0
 8002d46:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002d4a:	4809      	ldr	r0, [pc, #36]	@ (8002d70 <LED_init+0x30>)
 8002d4c:	f001 fb9c 	bl	8004488 <HAL_GPIO_WritePin>
 8002d50:	2200      	movs	r2, #0
 8002d52:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002d56:	4807      	ldr	r0, [pc, #28]	@ (8002d74 <LED_init+0x34>)
 8002d58:	f001 fb96 	bl	8004488 <HAL_GPIO_WritePin>
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	2102      	movs	r1, #2
 8002d60:	4804      	ldr	r0, [pc, #16]	@ (8002d74 <LED_init+0x34>)
 8002d62:	f001 fb91 	bl	8004488 <HAL_GPIO_WritePin>
 8002d66:	2000      	movs	r0, #0
 8002d68:	f000 f806 	bl	8002d78 <LED_put>
 8002d6c:	bf00      	nop
 8002d6e:	bd80      	pop	{r7, pc}
 8002d70:	40020000 	.word	0x40020000
 8002d74:	40020400 	.word	0x40020400

08002d78 <LED_put>:
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	b084      	sub	sp, #16
 8002d7c:	af00      	add	r7, sp, #0
 8002d7e:	4603      	mov	r3, r0
 8002d80:	80fb      	strh	r3, [r7, #6]
 8002d82:	2380      	movs	r3, #128	@ 0x80
 8002d84:	60fb      	str	r3, [r7, #12]
 8002d86:	e01c      	b.n	8002dc2 <LED_put+0x4a>
 8002d88:	88fa      	ldrh	r2, [r7, #6]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	4013      	ands	r3, r2
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	bf14      	ite	ne
 8002d92:	2301      	movne	r3, #1
 8002d94:	2300      	moveq	r3, #0
 8002d96:	b2db      	uxtb	r3, r3
 8002d98:	461a      	mov	r2, r3
 8002d9a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002d9e:	4811      	ldr	r0, [pc, #68]	@ (8002de4 <LED_put+0x6c>)
 8002da0:	f001 fb72 	bl	8004488 <HAL_GPIO_WritePin>
 8002da4:	2201      	movs	r2, #1
 8002da6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002daa:	480f      	ldr	r0, [pc, #60]	@ (8002de8 <LED_put+0x70>)
 8002dac:	f001 fb6c 	bl	8004488 <HAL_GPIO_WritePin>
 8002db0:	2200      	movs	r2, #0
 8002db2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002db6:	480c      	ldr	r0, [pc, #48]	@ (8002de8 <LED_put+0x70>)
 8002db8:	f001 fb66 	bl	8004488 <HAL_GPIO_WritePin>
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	085b      	lsrs	r3, r3, #1
 8002dc0:	60fb      	str	r3, [r7, #12]
 8002dc2:	68fb      	ldr	r3, [r7, #12]
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d1df      	bne.n	8002d88 <LED_put+0x10>
 8002dc8:	2201      	movs	r2, #1
 8002dca:	2102      	movs	r1, #2
 8002dcc:	4806      	ldr	r0, [pc, #24]	@ (8002de8 <LED_put+0x70>)
 8002dce:	f001 fb5b 	bl	8004488 <HAL_GPIO_WritePin>
 8002dd2:	2200      	movs	r2, #0
 8002dd4:	2102      	movs	r1, #2
 8002dd6:	4804      	ldr	r0, [pc, #16]	@ (8002de8 <LED_put+0x70>)
 8002dd8:	f001 fb56 	bl	8004488 <HAL_GPIO_WritePin>
 8002ddc:	bf00      	nop
 8002dde:	3710      	adds	r7, #16
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bd80      	pop	{r7, pc}
 8002de4:	40020000 	.word	0x40020000
 8002de8:	40020400 	.word	0x40020400

08002dec <UART_putchar>:
 8002dec:	b580      	push	{r7, lr}
 8002dee:	b082      	sub	sp, #8
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	4603      	mov	r3, r0
 8002df4:	71fb      	strb	r3, [r7, #7]
 8002df6:	1df9      	adds	r1, r7, #7
 8002df8:	2364      	movs	r3, #100	@ 0x64
 8002dfa:	2201      	movs	r2, #1
 8002dfc:	4803      	ldr	r0, [pc, #12]	@ (8002e0c <UART_putchar+0x20>)
 8002dfe:	f004 ff16 	bl	8007c2e <HAL_UART_Transmit>
 8002e02:	bf00      	nop
 8002e04:	3708      	adds	r7, #8
 8002e06:	46bd      	mov	sp, r7
 8002e08:	bd80      	pop	{r7, pc}
 8002e0a:	bf00      	nop
 8002e0c:	20000720 	.word	0x20000720

08002e10 <UART_puts>:
 8002e10:	b580      	push	{r7, lr}
 8002e12:	b084      	sub	sp, #16
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	6078      	str	r0, [r7, #4]
 8002e18:	2300      	movs	r3, #0
 8002e1a:	60fb      	str	r3, [r7, #12]
 8002e1c:	e009      	b.n	8002e32 <UART_puts+0x22>
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	687a      	ldr	r2, [r7, #4]
 8002e22:	4413      	add	r3, r2
 8002e24:	781b      	ldrb	r3, [r3, #0]
 8002e26:	4618      	mov	r0, r3
 8002e28:	f7ff ffe0 	bl	8002dec <UART_putchar>
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	3301      	adds	r3, #1
 8002e30:	60fb      	str	r3, [r7, #12]
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	687a      	ldr	r2, [r7, #4]
 8002e36:	4413      	add	r3, r2
 8002e38:	781b      	ldrb	r3, [r3, #0]
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	d1ef      	bne.n	8002e1e <UART_puts+0xe>
 8002e3e:	bf00      	nop
 8002e40:	bf00      	nop
 8002e42:	3710      	adds	r7, #16
 8002e44:	46bd      	mov	sp, r7
 8002e46:	bd80      	pop	{r7, pc}

08002e48 <UART_printf>:
 8002e48:	b40e      	push	{r1, r2, r3}
 8002e4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002e4e:	b088      	sub	sp, #32
 8002e50:	af00      	add	r7, sp, #0
 8002e52:	6078      	str	r0, [r7, #4]
 8002e54:	466b      	mov	r3, sp
 8002e56:	461e      	mov	r6, r3
 8002e58:	6879      	ldr	r1, [r7, #4]
 8002e5a:	460b      	mov	r3, r1
 8002e5c:	3b01      	subs	r3, #1
 8002e5e:	61fb      	str	r3, [r7, #28]
 8002e60:	2300      	movs	r3, #0
 8002e62:	4688      	mov	r8, r1
 8002e64:	4699      	mov	r9, r3
 8002e66:	f04f 0200 	mov.w	r2, #0
 8002e6a:	f04f 0300 	mov.w	r3, #0
 8002e6e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002e72:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002e76:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	460c      	mov	r4, r1
 8002e7e:	461d      	mov	r5, r3
 8002e80:	f04f 0200 	mov.w	r2, #0
 8002e84:	f04f 0300 	mov.w	r3, #0
 8002e88:	00eb      	lsls	r3, r5, #3
 8002e8a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002e8e:	00e2      	lsls	r2, r4, #3
 8002e90:	1dcb      	adds	r3, r1, #7
 8002e92:	08db      	lsrs	r3, r3, #3
 8002e94:	00db      	lsls	r3, r3, #3
 8002e96:	ebad 0d03 	sub.w	sp, sp, r3
 8002e9a:	466b      	mov	r3, sp
 8002e9c:	3300      	adds	r3, #0
 8002e9e:	61bb      	str	r3, [r7, #24]
 8002ea0:	69bb      	ldr	r3, [r7, #24]
 8002ea2:	617b      	str	r3, [r7, #20]
 8002ea4:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8002ea8:	60fb      	str	r3, [r7, #12]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8002eae:	6879      	ldr	r1, [r7, #4]
 8002eb0:	6978      	ldr	r0, [r7, #20]
 8002eb2:	f00f fbd9 	bl	8012668 <vsniprintf>
 8002eb6:	6138      	str	r0, [r7, #16]
 8002eb8:	b672      	cpsid	i
 8002eba:	2300      	movs	r3, #0
 8002ebc:	72fb      	strb	r3, [r7, #11]
 8002ebe:	e00d      	b.n	8002edc <UART_printf+0x94>
 8002ec0:	7afb      	ldrb	r3, [r7, #11]
 8002ec2:	b2db      	uxtb	r3, r3
 8002ec4:	461a      	mov	r2, r3
 8002ec6:	697b      	ldr	r3, [r7, #20]
 8002ec8:	4413      	add	r3, r2
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	4618      	mov	r0, r3
 8002ece:	f7ff ff8d 	bl	8002dec <UART_putchar>
 8002ed2:	7afb      	ldrb	r3, [r7, #11]
 8002ed4:	b2db      	uxtb	r3, r3
 8002ed6:	3301      	adds	r3, #1
 8002ed8:	b2db      	uxtb	r3, r3
 8002eda:	72fb      	strb	r3, [r7, #11]
 8002edc:	7afb      	ldrb	r3, [r7, #11]
 8002ede:	b2db      	uxtb	r3, r3
 8002ee0:	461a      	mov	r2, r3
 8002ee2:	697b      	ldr	r3, [r7, #20]
 8002ee4:	4413      	add	r3, r2
 8002ee6:	781b      	ldrb	r3, [r3, #0]
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d1e9      	bne.n	8002ec0 <UART_printf+0x78>
 8002eec:	b662      	cpsie	i
 8002eee:	693b      	ldr	r3, [r7, #16]
 8002ef0:	46b5      	mov	sp, r6
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	3720      	adds	r7, #32
 8002ef6:	46bd      	mov	sp, r7
 8002ef8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002efc:	b003      	add	sp, #12
 8002efe:	4770      	bx	lr

08002f00 <UART_putint>:
 8002f00:	b580      	push	{r7, lr}
 8002f02:	b082      	sub	sp, #8
 8002f04:	af00      	add	r7, sp, #0
 8002f06:	6078      	str	r0, [r7, #4]
 8002f08:	210a      	movs	r1, #10
 8002f0a:	6878      	ldr	r0, [r7, #4]
 8002f0c:	f000 f804 	bl	8002f18 <UART_putnum>
 8002f10:	bf00      	nop
 8002f12:	3708      	adds	r7, #8
 8002f14:	46bd      	mov	sp, r7
 8002f16:	bd80      	pop	{r7, pc}

08002f18 <UART_putnum>:
 8002f18:	b580      	push	{r7, lr}
 8002f1a:	b088      	sub	sp, #32
 8002f1c:	af00      	add	r7, sp, #0
 8002f1e:	6078      	str	r0, [r7, #4]
 8002f20:	460b      	mov	r3, r1
 8002f22:	70fb      	strb	r3, [r7, #3]
 8002f24:	230f      	movs	r3, #15
 8002f26:	61fb      	str	r3, [r7, #28]
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d129      	bne.n	8002f82 <UART_putnum+0x6a>
 8002f2e:	f107 0208 	add.w	r2, r7, #8
 8002f32:	69fb      	ldr	r3, [r7, #28]
 8002f34:	4413      	add	r3, r2
 8002f36:	2230      	movs	r2, #48	@ 0x30
 8002f38:	701a      	strb	r2, [r3, #0]
 8002f3a:	69fb      	ldr	r3, [r7, #28]
 8002f3c:	3b01      	subs	r3, #1
 8002f3e:	61fb      	str	r3, [r7, #28]
 8002f40:	e030      	b.n	8002fa4 <UART_putnum+0x8c>
 8002f42:	78fa      	ldrb	r2, [r7, #3]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	fbb3 f1f2 	udiv	r1, r3, r2
 8002f4a:	fb01 f202 	mul.w	r2, r1, r2
 8002f4e:	1a9b      	subs	r3, r3, r2
 8002f50:	61bb      	str	r3, [r7, #24]
 8002f52:	78fb      	ldrb	r3, [r7, #3]
 8002f54:	687a      	ldr	r2, [r7, #4]
 8002f56:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f5a:	607b      	str	r3, [r7, #4]
 8002f5c:	4a15      	ldr	r2, [pc, #84]	@ (8002fb4 <UART_putnum+0x9c>)
 8002f5e:	69bb      	ldr	r3, [r7, #24]
 8002f60:	4413      	add	r3, r2
 8002f62:	781b      	ldrb	r3, [r3, #0]
 8002f64:	b259      	sxtb	r1, r3
 8002f66:	f107 0208 	add.w	r2, r7, #8
 8002f6a:	69fb      	ldr	r3, [r7, #28]
 8002f6c:	4413      	add	r3, r2
 8002f6e:	460a      	mov	r2, r1
 8002f70:	701a      	strb	r2, [r3, #0]
 8002f72:	69fb      	ldr	r3, [r7, #28]
 8002f74:	3b01      	subs	r3, #1
 8002f76:	61fb      	str	r3, [r7, #28]
 8002f78:	69fb      	ldr	r3, [r7, #28]
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d101      	bne.n	8002f82 <UART_putnum+0x6a>
 8002f7e:	2300      	movs	r3, #0
 8002f80:	607b      	str	r3, [r7, #4]
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d1dc      	bne.n	8002f42 <UART_putnum+0x2a>
 8002f88:	e00c      	b.n	8002fa4 <UART_putnum+0x8c>
 8002f8a:	69fb      	ldr	r3, [r7, #28]
 8002f8c:	3301      	adds	r3, #1
 8002f8e:	61fb      	str	r3, [r7, #28]
 8002f90:	f107 0208 	add.w	r2, r7, #8
 8002f94:	69fb      	ldr	r3, [r7, #28]
 8002f96:	4413      	add	r3, r2
 8002f98:	f993 3000 	ldrsb.w	r3, [r3]
 8002f9c:	b2db      	uxtb	r3, r3
 8002f9e:	4618      	mov	r0, r3
 8002fa0:	f7ff ff24 	bl	8002dec <UART_putchar>
 8002fa4:	69fb      	ldr	r3, [r7, #28]
 8002fa6:	2b0e      	cmp	r3, #14
 8002fa8:	ddef      	ble.n	8002f8a <UART_putnum+0x72>
 8002faa:	bf00      	nop
 8002fac:	bf00      	nop
 8002fae:	3720      	adds	r7, #32
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	bd80      	pop	{r7, pc}
 8002fb4:	2000024c 	.word	0x2000024c

08002fb8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002fb8:	b580      	push	{r7, lr}
 8002fba:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002fbc:	f000 fed6 	bl	8003d6c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002fc0:	f000 f830 	bl	8003024 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002fc4:	f000 f980 	bl	80032c8 <MX_GPIO_Init>
  MX_I2C1_Init();
 8002fc8:	f000 f896 	bl	80030f8 <MX_I2C1_Init>
  MX_I2S3_Init();
 8002fcc:	f000 f8c2 	bl	8003154 <MX_I2S3_Init>
  MX_SPI1_Init();
 8002fd0:	f000 f8f0 	bl	80031b4 <MX_SPI1_Init>
  MX_USART2_UART_Init();
 8002fd4:	f000 f94e 	bl	8003274 <MX_USART2_UART_Init>
  MX_UART4_Init();
 8002fd8:	f000 f922 	bl	8003220 <MX_UART4_Init>
  /* USER CODE BEGIN 2 */

  LCD_init();
 8002fdc:	f7ff fd3e 	bl	8002a5c <LCD_init>
  KEYS_init();
 8002fe0:	f7ff fc22 	bl	8002828 <KEYS_init>
  KEYS_initISR(1); // set all lines high once
 8002fe4:	2001      	movs	r0, #1
 8002fe6:	f7ff fc59 	bl	800289c <KEYS_initISR>
  LED_init();
 8002fea:	f7ff fea9 	bl	8002d40 <LED_init>

  DisplayVersion();
 8002fee:	f7fe fb73 	bl	80016d8 <DisplayVersion>
  osDelay(500); // time to read version
 8002ff2:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8002ff6:	f009 f9c1 	bl	800c37c <osDelay>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8002ffa:	f009 f8a5 	bl	800c148 <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002ffe:	4a06      	ldr	r2, [pc, #24]	@ (8003018 <main+0x60>)
 8003000:	2100      	movs	r1, #0
 8003002:	4806      	ldr	r0, [pc, #24]	@ (800301c <main+0x64>)
 8003004:	f009 f928 	bl	800c258 <osThreadNew>
 8003008:	4603      	mov	r3, r0
 800300a:	4a05      	ldr	r2, [pc, #20]	@ (8003020 <main+0x68>)
 800300c:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 800300e:	f009 f8e7 	bl	800c1e0 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8003012:	bf00      	nop
 8003014:	e7fd      	b.n	8003012 <main+0x5a>
 8003016:	bf00      	nop
 8003018:	08015dac 	.word	0x08015dac
 800301c:	080035ad 	.word	0x080035ad
 8003020:	20000768 	.word	0x20000768

08003024 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003024:	b580      	push	{r7, lr}
 8003026:	b094      	sub	sp, #80	@ 0x50
 8003028:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800302a:	f107 0320 	add.w	r3, r7, #32
 800302e:	2230      	movs	r2, #48	@ 0x30
 8003030:	2100      	movs	r1, #0
 8003032:	4618      	mov	r0, r3
 8003034:	f00f fb26 	bl	8012684 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003038:	f107 030c 	add.w	r3, r7, #12
 800303c:	2200      	movs	r2, #0
 800303e:	601a      	str	r2, [r3, #0]
 8003040:	605a      	str	r2, [r3, #4]
 8003042:	609a      	str	r2, [r3, #8]
 8003044:	60da      	str	r2, [r3, #12]
 8003046:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003048:	2300      	movs	r3, #0
 800304a:	60bb      	str	r3, [r7, #8]
 800304c:	4b28      	ldr	r3, [pc, #160]	@ (80030f0 <SystemClock_Config+0xcc>)
 800304e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003050:	4a27      	ldr	r2, [pc, #156]	@ (80030f0 <SystemClock_Config+0xcc>)
 8003052:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003056:	6413      	str	r3, [r2, #64]	@ 0x40
 8003058:	4b25      	ldr	r3, [pc, #148]	@ (80030f0 <SystemClock_Config+0xcc>)
 800305a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800305c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003060:	60bb      	str	r3, [r7, #8]
 8003062:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003064:	2300      	movs	r3, #0
 8003066:	607b      	str	r3, [r7, #4]
 8003068:	4b22      	ldr	r3, [pc, #136]	@ (80030f4 <SystemClock_Config+0xd0>)
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	4a21      	ldr	r2, [pc, #132]	@ (80030f4 <SystemClock_Config+0xd0>)
 800306e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003072:	6013      	str	r3, [r2, #0]
 8003074:	4b1f      	ldr	r3, [pc, #124]	@ (80030f4 <SystemClock_Config+0xd0>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800307c:	607b      	str	r3, [r7, #4]
 800307e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003080:	2301      	movs	r3, #1
 8003082:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003084:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003088:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800308a:	2302      	movs	r3, #2
 800308c:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800308e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8003092:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8003094:	2308      	movs	r3, #8
 8003096:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8003098:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 800309c:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800309e:	2302      	movs	r3, #2
 80030a0:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 80030a2:	2307      	movs	r3, #7
 80030a4:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80030a6:	f107 0320 	add.w	r3, r7, #32
 80030aa:	4618      	mov	r0, r3
 80030ac:	f003 fc32 	bl	8006914 <HAL_RCC_OscConfig>
 80030b0:	4603      	mov	r3, r0
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	d001      	beq.n	80030ba <SystemClock_Config+0x96>
  {
    Error_Handler();
 80030b6:	f000 fab3 	bl	8003620 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80030ba:	230f      	movs	r3, #15
 80030bc:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80030be:	2302      	movs	r3, #2
 80030c0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80030c2:	2300      	movs	r3, #0
 80030c4:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80030c6:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80030ca:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80030cc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80030d0:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80030d2:	f107 030c 	add.w	r3, r7, #12
 80030d6:	2105      	movs	r1, #5
 80030d8:	4618      	mov	r0, r3
 80030da:	f003 fe93 	bl	8006e04 <HAL_RCC_ClockConfig>
 80030de:	4603      	mov	r3, r0
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d001      	beq.n	80030e8 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 80030e4:	f000 fa9c 	bl	8003620 <Error_Handler>
  }
}
 80030e8:	bf00      	nop
 80030ea:	3750      	adds	r7, #80	@ 0x50
 80030ec:	46bd      	mov	sp, r7
 80030ee:	bd80      	pop	{r7, pc}
 80030f0:	40023800 	.word	0x40023800
 80030f4:	40007000 	.word	0x40007000

080030f8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80030f8:	b580      	push	{r7, lr}
 80030fa:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80030fc:	4b12      	ldr	r3, [pc, #72]	@ (8003148 <MX_I2C1_Init+0x50>)
 80030fe:	4a13      	ldr	r2, [pc, #76]	@ (800314c <MX_I2C1_Init+0x54>)
 8003100:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8003102:	4b11      	ldr	r3, [pc, #68]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003104:	4a12      	ldr	r2, [pc, #72]	@ (8003150 <MX_I2C1_Init+0x58>)
 8003106:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003108:	4b0f      	ldr	r3, [pc, #60]	@ (8003148 <MX_I2C1_Init+0x50>)
 800310a:	2200      	movs	r2, #0
 800310c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800310e:	4b0e      	ldr	r3, [pc, #56]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003110:	2200      	movs	r2, #0
 8003112:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003114:	4b0c      	ldr	r3, [pc, #48]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003116:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800311a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800311c:	4b0a      	ldr	r3, [pc, #40]	@ (8003148 <MX_I2C1_Init+0x50>)
 800311e:	2200      	movs	r2, #0
 8003120:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8003122:	4b09      	ldr	r3, [pc, #36]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003124:	2200      	movs	r2, #0
 8003126:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003128:	4b07      	ldr	r3, [pc, #28]	@ (8003148 <MX_I2C1_Init+0x50>)
 800312a:	2200      	movs	r2, #0
 800312c:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800312e:	4b06      	ldr	r3, [pc, #24]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003130:	2200      	movs	r2, #0
 8003132:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003134:	4804      	ldr	r0, [pc, #16]	@ (8003148 <MX_I2C1_Init+0x50>)
 8003136:	f002 fe09 	bl	8005d4c <HAL_I2C_Init>
 800313a:	4603      	mov	r3, r0
 800313c:	2b00      	cmp	r3, #0
 800313e:	d001      	beq.n	8003144 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003140:	f000 fa6e 	bl	8003620 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003144:	bf00      	nop
 8003146:	bd80      	pop	{r7, pc}
 8003148:	200005e8 	.word	0x200005e8
 800314c:	40005400 	.word	0x40005400
 8003150:	000186a0 	.word	0x000186a0

08003154 <MX_I2S3_Init>:
  * @brief I2S3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S3_Init(void)
{
 8003154:	b580      	push	{r7, lr}
 8003156:	af00      	add	r7, sp, #0
  /* USER CODE END I2S3_Init 0 */

  /* USER CODE BEGIN I2S3_Init 1 */

  /* USER CODE END I2S3_Init 1 */
  hi2s3.Instance = SPI3;
 8003158:	4b13      	ldr	r3, [pc, #76]	@ (80031a8 <MX_I2S3_Init+0x54>)
 800315a:	4a14      	ldr	r2, [pc, #80]	@ (80031ac <MX_I2S3_Init+0x58>)
 800315c:	601a      	str	r2, [r3, #0]
  hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 800315e:	4b12      	ldr	r3, [pc, #72]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003160:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003164:	605a      	str	r2, [r3, #4]
  hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 8003166:	4b10      	ldr	r3, [pc, #64]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003168:	2200      	movs	r2, #0
 800316a:	609a      	str	r2, [r3, #8]
  hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 800316c:	4b0e      	ldr	r3, [pc, #56]	@ (80031a8 <MX_I2S3_Init+0x54>)
 800316e:	2200      	movs	r2, #0
 8003170:	60da      	str	r2, [r3, #12]
  hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 8003172:	4b0d      	ldr	r3, [pc, #52]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003174:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003178:	611a      	str	r2, [r3, #16]
  hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 800317a:	4b0b      	ldr	r3, [pc, #44]	@ (80031a8 <MX_I2S3_Init+0x54>)
 800317c:	4a0c      	ldr	r2, [pc, #48]	@ (80031b0 <MX_I2S3_Init+0x5c>)
 800317e:	615a      	str	r2, [r3, #20]
  hi2s3.Init.CPOL = I2S_CPOL_LOW;
 8003180:	4b09      	ldr	r3, [pc, #36]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003182:	2200      	movs	r2, #0
 8003184:	619a      	str	r2, [r3, #24]
  hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 8003186:	4b08      	ldr	r3, [pc, #32]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003188:	2200      	movs	r2, #0
 800318a:	61da      	str	r2, [r3, #28]
  hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 800318c:	4b06      	ldr	r3, [pc, #24]	@ (80031a8 <MX_I2S3_Init+0x54>)
 800318e:	2200      	movs	r2, #0
 8003190:	621a      	str	r2, [r3, #32]
  if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 8003192:	4805      	ldr	r0, [pc, #20]	@ (80031a8 <MX_I2S3_Init+0x54>)
 8003194:	f002 ff1e 	bl	8005fd4 <HAL_I2S_Init>
 8003198:	4603      	mov	r3, r0
 800319a:	2b00      	cmp	r3, #0
 800319c:	d001      	beq.n	80031a2 <MX_I2S3_Init+0x4e>
  {
    Error_Handler();
 800319e:	f000 fa3f 	bl	8003620 <Error_Handler>
  }
  /* USER CODE BEGIN I2S3_Init 2 */

  /* USER CODE END I2S3_Init 2 */

}
 80031a2:	bf00      	nop
 80031a4:	bd80      	pop	{r7, pc}
 80031a6:	bf00      	nop
 80031a8:	2000063c 	.word	0x2000063c
 80031ac:	40003c00 	.word	0x40003c00
 80031b0:	00017700 	.word	0x00017700

080031b4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80031b4:	b580      	push	{r7, lr}
 80031b6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80031b8:	4b17      	ldr	r3, [pc, #92]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031ba:	4a18      	ldr	r2, [pc, #96]	@ (800321c <MX_SPI1_Init+0x68>)
 80031bc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80031be:	4b16      	ldr	r3, [pc, #88]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031c0:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80031c4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80031c6:	4b14      	ldr	r3, [pc, #80]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031c8:	2200      	movs	r2, #0
 80031ca:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80031cc:	4b12      	ldr	r3, [pc, #72]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031ce:	2200      	movs	r2, #0
 80031d0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80031d2:	4b11      	ldr	r3, [pc, #68]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031d4:	2200      	movs	r2, #0
 80031d6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80031d8:	4b0f      	ldr	r3, [pc, #60]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031da:	2200      	movs	r2, #0
 80031dc:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80031de:	4b0e      	ldr	r3, [pc, #56]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031e0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031e4:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80031e6:	4b0c      	ldr	r3, [pc, #48]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031e8:	2200      	movs	r2, #0
 80031ea:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80031ec:	4b0a      	ldr	r3, [pc, #40]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031ee:	2200      	movs	r2, #0
 80031f0:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80031f2:	4b09      	ldr	r3, [pc, #36]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031f4:	2200      	movs	r2, #0
 80031f6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80031f8:	4b07      	ldr	r3, [pc, #28]	@ (8003218 <MX_SPI1_Init+0x64>)
 80031fa:	2200      	movs	r2, #0
 80031fc:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 80031fe:	4b06      	ldr	r3, [pc, #24]	@ (8003218 <MX_SPI1_Init+0x64>)
 8003200:	220a      	movs	r2, #10
 8003202:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8003204:	4804      	ldr	r0, [pc, #16]	@ (8003218 <MX_SPI1_Init+0x64>)
 8003206:	f004 f98f 	bl	8007528 <HAL_SPI_Init>
 800320a:	4603      	mov	r3, r0
 800320c:	2b00      	cmp	r3, #0
 800320e:	d001      	beq.n	8003214 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8003210:	f000 fa06 	bl	8003620 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8003214:	bf00      	nop
 8003216:	bd80      	pop	{r7, pc}
 8003218:	20000684 	.word	0x20000684
 800321c:	40013000 	.word	0x40013000

08003220 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8003220:	b580      	push	{r7, lr}
 8003222:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8003224:	4b11      	ldr	r3, [pc, #68]	@ (800326c <MX_UART4_Init+0x4c>)
 8003226:	4a12      	ldr	r2, [pc, #72]	@ (8003270 <MX_UART4_Init+0x50>)
 8003228:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 9600;
 800322a:	4b10      	ldr	r3, [pc, #64]	@ (800326c <MX_UART4_Init+0x4c>)
 800322c:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8003230:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8003232:	4b0e      	ldr	r3, [pc, #56]	@ (800326c <MX_UART4_Init+0x4c>)
 8003234:	2200      	movs	r2, #0
 8003236:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 8003238:	4b0c      	ldr	r3, [pc, #48]	@ (800326c <MX_UART4_Init+0x4c>)
 800323a:	2200      	movs	r2, #0
 800323c:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 800323e:	4b0b      	ldr	r3, [pc, #44]	@ (800326c <MX_UART4_Init+0x4c>)
 8003240:	2200      	movs	r2, #0
 8003242:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8003244:	4b09      	ldr	r3, [pc, #36]	@ (800326c <MX_UART4_Init+0x4c>)
 8003246:	220c      	movs	r2, #12
 8003248:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800324a:	4b08      	ldr	r3, [pc, #32]	@ (800326c <MX_UART4_Init+0x4c>)
 800324c:	2200      	movs	r2, #0
 800324e:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8003250:	4b06      	ldr	r3, [pc, #24]	@ (800326c <MX_UART4_Init+0x4c>)
 8003252:	2200      	movs	r2, #0
 8003254:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 8003256:	4805      	ldr	r0, [pc, #20]	@ (800326c <MX_UART4_Init+0x4c>)
 8003258:	f004 fc9c 	bl	8007b94 <HAL_UART_Init>
 800325c:	4603      	mov	r3, r0
 800325e:	2b00      	cmp	r3, #0
 8003260:	d001      	beq.n	8003266 <MX_UART4_Init+0x46>
  {
    Error_Handler();
 8003262:	f000 f9dd 	bl	8003620 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 8003266:	bf00      	nop
 8003268:	bd80      	pop	{r7, pc}
 800326a:	bf00      	nop
 800326c:	200006dc 	.word	0x200006dc
 8003270:	40004c00 	.word	0x40004c00

08003274 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8003274:	b580      	push	{r7, lr}
 8003276:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003278:	4b11      	ldr	r3, [pc, #68]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 800327a:	4a12      	ldr	r2, [pc, #72]	@ (80032c4 <MX_USART2_UART_Init+0x50>)
 800327c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800327e:	4b10      	ldr	r3, [pc, #64]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 8003280:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8003284:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003286:	4b0e      	ldr	r3, [pc, #56]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 8003288:	2200      	movs	r2, #0
 800328a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800328c:	4b0c      	ldr	r3, [pc, #48]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 800328e:	2200      	movs	r2, #0
 8003290:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8003292:	4b0b      	ldr	r3, [pc, #44]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 8003294:	2200      	movs	r2, #0
 8003296:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003298:	4b09      	ldr	r3, [pc, #36]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 800329a:	220c      	movs	r2, #12
 800329c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800329e:	4b08      	ldr	r3, [pc, #32]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 80032a0:	2200      	movs	r2, #0
 80032a2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80032a4:	4b06      	ldr	r3, [pc, #24]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 80032a6:	2200      	movs	r2, #0
 80032a8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80032aa:	4805      	ldr	r0, [pc, #20]	@ (80032c0 <MX_USART2_UART_Init+0x4c>)
 80032ac:	f004 fc72 	bl	8007b94 <HAL_UART_Init>
 80032b0:	4603      	mov	r3, r0
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d001      	beq.n	80032ba <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80032b6:	f000 f9b3 	bl	8003620 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80032ba:	bf00      	nop
 80032bc:	bd80      	pop	{r7, pc}
 80032be:	bf00      	nop
 80032c0:	20000720 	.word	0x20000720
 80032c4:	40004400 	.word	0x40004400

080032c8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80032c8:	b580      	push	{r7, lr}
 80032ca:	b08c      	sub	sp, #48	@ 0x30
 80032cc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032ce:	f107 031c 	add.w	r3, r7, #28
 80032d2:	2200      	movs	r2, #0
 80032d4:	601a      	str	r2, [r3, #0]
 80032d6:	605a      	str	r2, [r3, #4]
 80032d8:	609a      	str	r2, [r3, #8]
 80032da:	60da      	str	r2, [r3, #12]
 80032dc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80032de:	2300      	movs	r3, #0
 80032e0:	61bb      	str	r3, [r7, #24]
 80032e2:	4b8e      	ldr	r3, [pc, #568]	@ (800351c <MX_GPIO_Init+0x254>)
 80032e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032e6:	4a8d      	ldr	r2, [pc, #564]	@ (800351c <MX_GPIO_Init+0x254>)
 80032e8:	f043 0310 	orr.w	r3, r3, #16
 80032ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ee:	4b8b      	ldr	r3, [pc, #556]	@ (800351c <MX_GPIO_Init+0x254>)
 80032f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032f2:	f003 0310 	and.w	r3, r3, #16
 80032f6:	61bb      	str	r3, [r7, #24]
 80032f8:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80032fa:	2300      	movs	r3, #0
 80032fc:	617b      	str	r3, [r7, #20]
 80032fe:	4b87      	ldr	r3, [pc, #540]	@ (800351c <MX_GPIO_Init+0x254>)
 8003300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003302:	4a86      	ldr	r2, [pc, #536]	@ (800351c <MX_GPIO_Init+0x254>)
 8003304:	f043 0304 	orr.w	r3, r3, #4
 8003308:	6313      	str	r3, [r2, #48]	@ 0x30
 800330a:	4b84      	ldr	r3, [pc, #528]	@ (800351c <MX_GPIO_Init+0x254>)
 800330c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800330e:	f003 0304 	and.w	r3, r3, #4
 8003312:	617b      	str	r3, [r7, #20]
 8003314:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8003316:	2300      	movs	r3, #0
 8003318:	613b      	str	r3, [r7, #16]
 800331a:	4b80      	ldr	r3, [pc, #512]	@ (800351c <MX_GPIO_Init+0x254>)
 800331c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800331e:	4a7f      	ldr	r2, [pc, #508]	@ (800351c <MX_GPIO_Init+0x254>)
 8003320:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003324:	6313      	str	r3, [r2, #48]	@ 0x30
 8003326:	4b7d      	ldr	r3, [pc, #500]	@ (800351c <MX_GPIO_Init+0x254>)
 8003328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800332a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800332e:	613b      	str	r3, [r7, #16]
 8003330:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003332:	2300      	movs	r3, #0
 8003334:	60fb      	str	r3, [r7, #12]
 8003336:	4b79      	ldr	r3, [pc, #484]	@ (800351c <MX_GPIO_Init+0x254>)
 8003338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800333a:	4a78      	ldr	r2, [pc, #480]	@ (800351c <MX_GPIO_Init+0x254>)
 800333c:	f043 0301 	orr.w	r3, r3, #1
 8003340:	6313      	str	r3, [r2, #48]	@ 0x30
 8003342:	4b76      	ldr	r3, [pc, #472]	@ (800351c <MX_GPIO_Init+0x254>)
 8003344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003346:	f003 0301 	and.w	r3, r3, #1
 800334a:	60fb      	str	r3, [r7, #12]
 800334c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800334e:	2300      	movs	r3, #0
 8003350:	60bb      	str	r3, [r7, #8]
 8003352:	4b72      	ldr	r3, [pc, #456]	@ (800351c <MX_GPIO_Init+0x254>)
 8003354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003356:	4a71      	ldr	r2, [pc, #452]	@ (800351c <MX_GPIO_Init+0x254>)
 8003358:	f043 0302 	orr.w	r3, r3, #2
 800335c:	6313      	str	r3, [r2, #48]	@ 0x30
 800335e:	4b6f      	ldr	r3, [pc, #444]	@ (800351c <MX_GPIO_Init+0x254>)
 8003360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003362:	f003 0302 	and.w	r3, r3, #2
 8003366:	60bb      	str	r3, [r7, #8]
 8003368:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800336a:	2300      	movs	r3, #0
 800336c:	607b      	str	r3, [r7, #4]
 800336e:	4b6b      	ldr	r3, [pc, #428]	@ (800351c <MX_GPIO_Init+0x254>)
 8003370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003372:	4a6a      	ldr	r2, [pc, #424]	@ (800351c <MX_GPIO_Init+0x254>)
 8003374:	f043 0308 	orr.w	r3, r3, #8
 8003378:	6313      	str	r3, [r2, #48]	@ 0x30
 800337a:	4b68      	ldr	r3, [pc, #416]	@ (800351c <MX_GPIO_Init+0x254>)
 800337c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800337e:	f003 0308 	and.w	r3, r3, #8
 8003382:	607b      	str	r3, [r7, #4]
 8003384:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 8003386:	2200      	movs	r2, #0
 8003388:	2108      	movs	r1, #8
 800338a:	4865      	ldr	r0, [pc, #404]	@ (8003520 <MX_GPIO_Init+0x258>)
 800338c:	f001 f87c 	bl	8004488 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 8003390:	2201      	movs	r2, #1
 8003392:	2101      	movs	r1, #1
 8003394:	4863      	ldr	r0, [pc, #396]	@ (8003524 <MX_GPIO_Init+0x25c>)
 8003396:	f001 f877 	bl	8004488 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_RCK_Pin|LED_SCK_Pin, GPIO_PIN_RESET);
 800339a:	2200      	movs	r2, #0
 800339c:	f44f 7181 	mov.w	r1, #258	@ 0x102
 80033a0:	4861      	ldr	r0, [pc, #388]	@ (8003528 <MX_GPIO_Init+0x260>)
 80033a2:	f001 f871 	bl	8004488 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 80033a6:	2200      	movs	r2, #0
 80033a8:	f24f 0110 	movw	r1, #61456	@ 0xf010
 80033ac:	485f      	ldr	r0, [pc, #380]	@ (800352c <MX_GPIO_Init+0x264>)
 80033ae:	f001 f86b 	bl	8004488 <HAL_GPIO_WritePin>
                          |Audio_RST_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Buzzer_GPIO_Port, Buzzer_Pin, GPIO_PIN_RESET);
 80033b2:	2200      	movs	r2, #0
 80033b4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80033b8:	485a      	ldr	r0, [pc, #360]	@ (8003524 <MX_GPIO_Init+0x25c>)
 80033ba:	f001 f865 	bl	8004488 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_SER_GPIO_Port, LED_SER_Pin, GPIO_PIN_RESET);
 80033be:	2200      	movs	r2, #0
 80033c0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80033c4:	485a      	ldr	r0, [pc, #360]	@ (8003530 <MX_GPIO_Init+0x268>)
 80033c6:	f001 f85f 	bl	8004488 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : CS_I2C_SPI_Pin */
  GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 80033ca:	2308      	movs	r3, #8
 80033cc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80033ce:	2301      	movs	r3, #1
 80033d0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033d2:	2300      	movs	r3, #0
 80033d4:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80033d6:	2300      	movs	r3, #0
 80033d8:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 80033da:	f107 031c 	add.w	r3, r7, #28
 80033de:	4619      	mov	r1, r3
 80033e0:	484f      	ldr	r0, [pc, #316]	@ (8003520 <MX_GPIO_Init+0x258>)
 80033e2:	f000 fe9d 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pins : OTG_FS_PowerSwitchOn_Pin Buzzer_Pin */
  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin|Buzzer_Pin;
 80033e6:	f240 1301 	movw	r3, #257	@ 0x101
 80033ea:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80033ec:	2301      	movs	r3, #1
 80033ee:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033f0:	2300      	movs	r3, #0
 80033f2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80033f4:	2300      	movs	r3, #0
 80033f6:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80033f8:	f107 031c 	add.w	r3, r7, #28
 80033fc:	4619      	mov	r1, r3
 80033fe:	4849      	ldr	r0, [pc, #292]	@ (8003524 <MX_GPIO_Init+0x25c>)
 8003400:	f000 fe8e 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : PDM_OUT_Pin */
  GPIO_InitStruct.Pin = PDM_OUT_Pin;
 8003404:	2308      	movs	r3, #8
 8003406:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003408:	2302      	movs	r3, #2
 800340a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800340c:	2300      	movs	r3, #0
 800340e:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003410:	2300      	movs	r3, #0
 8003412:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8003414:	2305      	movs	r3, #5
 8003416:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 8003418:	f107 031c 	add.w	r3, r7, #28
 800341c:	4619      	mov	r1, r3
 800341e:	4841      	ldr	r0, [pc, #260]	@ (8003524 <MX_GPIO_Init+0x25c>)
 8003420:	f000 fe7e 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : Key_int_Pin */
  GPIO_InitStruct.Pin = Key_int_Pin;
 8003424:	2301      	movs	r3, #1
 8003426:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003428:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 800342c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800342e:	2300      	movs	r3, #0
 8003430:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(Key_int_GPIO_Port, &GPIO_InitStruct);
 8003432:	f107 031c 	add.w	r3, r7, #28
 8003436:	4619      	mov	r1, r3
 8003438:	483b      	ldr	r0, [pc, #236]	@ (8003528 <MX_GPIO_Init+0x260>)
 800343a:	f000 fe71 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_RCK_Pin LED_SCK_Pin */
  GPIO_InitStruct.Pin = LED_RCK_Pin|LED_SCK_Pin;
 800343e:	f44f 7381 	mov.w	r3, #258	@ 0x102
 8003442:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003444:	2301      	movs	r3, #1
 8003446:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003448:	2300      	movs	r3, #0
 800344a:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800344c:	2300      	movs	r3, #0
 800344e:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003450:	f107 031c 	add.w	r3, r7, #28
 8003454:	4619      	mov	r1, r3
 8003456:	4834      	ldr	r0, [pc, #208]	@ (8003528 <MX_GPIO_Init+0x260>)
 8003458:	f000 fe62 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : BOOT1_Pin */
  GPIO_InitStruct.Pin = BOOT1_Pin;
 800345c:	2304      	movs	r3, #4
 800345e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003460:	2300      	movs	r3, #0
 8003462:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003464:	2300      	movs	r3, #0
 8003466:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 8003468:	f107 031c 	add.w	r3, r7, #28
 800346c:	4619      	mov	r1, r3
 800346e:	482e      	ldr	r0, [pc, #184]	@ (8003528 <MX_GPIO_Init+0x260>)
 8003470:	f000 fe56 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : CLK_IN_Pin */
  GPIO_InitStruct.Pin = CLK_IN_Pin;
 8003474:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003478:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800347a:	2302      	movs	r3, #2
 800347c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800347e:	2300      	movs	r3, #0
 8003480:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003482:	2300      	movs	r3, #0
 8003484:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8003486:	2305      	movs	r3, #5
 8003488:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 800348a:	f107 031c 	add.w	r3, r7, #28
 800348e:	4619      	mov	r1, r3
 8003490:	4825      	ldr	r0, [pc, #148]	@ (8003528 <MX_GPIO_Init+0x260>)
 8003492:	f000 fe45 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin
                           Audio_RST_Pin */
  GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 8003496:	f24f 0310 	movw	r3, #61456	@ 0xf010
 800349a:	61fb      	str	r3, [r7, #28]
                          |Audio_RST_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800349c:	2301      	movs	r3, #1
 800349e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034a0:	2300      	movs	r3, #0
 80034a2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034a4:	2300      	movs	r3, #0
 80034a6:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034a8:	f107 031c 	add.w	r3, r7, #28
 80034ac:	4619      	mov	r1, r3
 80034ae:	481f      	ldr	r0, [pc, #124]	@ (800352c <MX_GPIO_Init+0x264>)
 80034b0:	f000 fe36 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_SER_Pin */
  GPIO_InitStruct.Pin = LED_SER_Pin;
 80034b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80034b8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80034ba:	2301      	movs	r3, #1
 80034bc:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034be:	2300      	movs	r3, #0
 80034c0:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034c2:	2300      	movs	r3, #0
 80034c4:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(LED_SER_GPIO_Port, &GPIO_InitStruct);
 80034c6:	f107 031c 	add.w	r3, r7, #28
 80034ca:	4619      	mov	r1, r3
 80034cc:	4818      	ldr	r0, [pc, #96]	@ (8003530 <MX_GPIO_Init+0x268>)
 80034ce:	f000 fe27 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 80034d2:	2320      	movs	r3, #32
 80034d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80034d6:	2300      	movs	r3, #0
 80034d8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034da:	2300      	movs	r3, #0
 80034dc:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 80034de:	f107 031c 	add.w	r3, r7, #28
 80034e2:	4619      	mov	r1, r3
 80034e4:	4811      	ldr	r0, [pc, #68]	@ (800352c <MX_GPIO_Init+0x264>)
 80034e6:	f000 fe1b 	bl	8004120 <HAL_GPIO_Init>

  /*Configure GPIO pin : MEMS_INT2_Pin */
  GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 80034ea:	2302      	movs	r3, #2
 80034ec:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 80034ee:	f44f 1390 	mov.w	r3, #1179648	@ 0x120000
 80034f2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034f4:	2300      	movs	r3, #0
 80034f6:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 80034f8:	f107 031c 	add.w	r3, r7, #28
 80034fc:	4619      	mov	r1, r3
 80034fe:	4808      	ldr	r0, [pc, #32]	@ (8003520 <MX_GPIO_Init+0x258>)
 8003500:	f000 fe0e 	bl	8004120 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 8003504:	2200      	movs	r2, #0
 8003506:	2105      	movs	r1, #5
 8003508:	2006      	movs	r0, #6
 800350a:	f000 fd4d 	bl	8003fa8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 800350e:	2006      	movs	r0, #6
 8003510:	f000 fd66 	bl	8003fe0 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8003514:	bf00      	nop
 8003516:	3730      	adds	r7, #48	@ 0x30
 8003518:	46bd      	mov	sp, r7
 800351a:	bd80      	pop	{r7, pc}
 800351c:	40023800 	.word	0x40023800
 8003520:	40021000 	.word	0x40021000
 8003524:	40020800 	.word	0x40020800
 8003528:	40020400 	.word	0x40020400
 800352c:	40020c00 	.word	0x40020c00
 8003530:	40020000 	.word	0x40020000

08003534 <HAL_UART_RxCpltCallback>:
  * <p>Demonstreert: xQueueSendFromISR(); portYIELD_FROM_ISR();</p>
  * @param huart
  * @return void.
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8003534:	b580      	push	{r7, lr}
 8003536:	b082      	sub	sp, #8
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART2) /// Receive data from usart/terminal
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	4a12      	ldr	r2, [pc, #72]	@ (800358c <HAL_UART_RxCpltCallback+0x58>)
 8003542:	4293      	cmp	r3, r2
 8003544:	d10c      	bne.n	8003560 <HAL_UART_RxCpltCallback+0x2c>
	{
		HAL_UART_Receive_IT(&huart2, &uart2_char, 1); /// Receive one byte in interrupt mode
 8003546:	2201      	movs	r2, #1
 8003548:	4911      	ldr	r1, [pc, #68]	@ (8003590 <HAL_UART_RxCpltCallback+0x5c>)
 800354a:	4812      	ldr	r0, [pc, #72]	@ (8003594 <HAL_UART_RxCpltCallback+0x60>)
 800354c:	f004 fc01 	bl	8007d52 <HAL_UART_Receive_IT>
		xQueueSendFromISR(hUART_Queue, &uart2_char, NULL); /// Zet de byte op de UART_queue
 8003550:	4b11      	ldr	r3, [pc, #68]	@ (8003598 <HAL_UART_RxCpltCallback+0x64>)
 8003552:	6818      	ldr	r0, [r3, #0]
 8003554:	2300      	movs	r3, #0
 8003556:	2200      	movs	r2, #0
 8003558:	490d      	ldr	r1, [pc, #52]	@ (8003590 <HAL_UART_RxCpltCallback+0x5c>)
 800355a:	f009 fd79 	bl	800d050 <xQueueGenericSendFromISR>
	else if (huart->Instance == UART4) // receive data from GPS
	{
		HAL_UART_Receive_IT(&huart4, &uart4_char, 1); /// Receive one byte in interrupt mode
		xQueueSendFromISR(hGPS_Queue, &uart4_char, NULL);
	}
}
 800355e:	e010      	b.n	8003582 <HAL_UART_RxCpltCallback+0x4e>
	else if (huart->Instance == UART4) // receive data from GPS
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	4a0d      	ldr	r2, [pc, #52]	@ (800359c <HAL_UART_RxCpltCallback+0x68>)
 8003566:	4293      	cmp	r3, r2
 8003568:	d10b      	bne.n	8003582 <HAL_UART_RxCpltCallback+0x4e>
		HAL_UART_Receive_IT(&huart4, &uart4_char, 1); /// Receive one byte in interrupt mode
 800356a:	2201      	movs	r2, #1
 800356c:	490c      	ldr	r1, [pc, #48]	@ (80035a0 <HAL_UART_RxCpltCallback+0x6c>)
 800356e:	480d      	ldr	r0, [pc, #52]	@ (80035a4 <HAL_UART_RxCpltCallback+0x70>)
 8003570:	f004 fbef 	bl	8007d52 <HAL_UART_Receive_IT>
		xQueueSendFromISR(hGPS_Queue, &uart4_char, NULL);
 8003574:	4b0c      	ldr	r3, [pc, #48]	@ (80035a8 <HAL_UART_RxCpltCallback+0x74>)
 8003576:	6818      	ldr	r0, [r3, #0]
 8003578:	2300      	movs	r3, #0
 800357a:	2200      	movs	r2, #0
 800357c:	4908      	ldr	r1, [pc, #32]	@ (80035a0 <HAL_UART_RxCpltCallback+0x6c>)
 800357e:	f009 fd67 	bl	800d050 <xQueueGenericSendFromISR>
}
 8003582:	bf00      	nop
 8003584:	3708      	adds	r7, #8
 8003586:	46bd      	mov	sp, r7
 8003588:	bd80      	pop	{r7, pc}
 800358a:	bf00      	nop
 800358c:	40004400 	.word	0x40004400
 8003590:	20000764 	.word	0x20000764
 8003594:	20000720 	.word	0x20000720
 8003598:	20000478 	.word	0x20000478
 800359c:	40004c00 	.word	0x40004c00
 80035a0:	20000765 	.word	0x20000765
 80035a4:	200006dc 	.word	0x200006dc
 80035a8:	2000047c 	.word	0x2000047c

080035ac <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b082      	sub	sp, #8
 80035b0:	af00      	add	r7, sp, #0
 80035b2:	6078      	str	r0, [r7, #4]
  /* init code for USB_HOST */
  MX_USB_HOST_Init();
 80035b4:	f00d f850 	bl	8010658 <MX_USB_HOST_Init>
  /* USER CODE BEGIN 5 */
  //unsigned char byte1, byte2;

  CreateHandles();
 80035b8:	f7fe f914 	bl	80017e4 <CreateHandles>
  CreateTasks();
 80035bc:	f7fe f9b4 	bl	8001928 <CreateTasks>

  // start the interrupt handlers after all handles are created
  HAL_UART_Receive_IT(&huart2, &uart2_char, 1); //start the UART2 interrupt engine for reading
 80035c0:	2201      	movs	r2, #1
 80035c2:	4909      	ldr	r1, [pc, #36]	@ (80035e8 <StartDefaultTask+0x3c>)
 80035c4:	4809      	ldr	r0, [pc, #36]	@ (80035ec <StartDefaultTask+0x40>)
 80035c6:	f004 fbc4 	bl	8007d52 <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart4, &uart4_char, 1); //start the UART4 interrupt engine GPS
 80035ca:	2201      	movs	r2, #1
 80035cc:	4908      	ldr	r1, [pc, #32]	@ (80035f0 <StartDefaultTask+0x44>)
 80035ce:	4809      	ldr	r0, [pc, #36]	@ (80035f4 <StartDefaultTask+0x48>)
 80035d0:	f004 fbbf 	bl	8007d52 <HAL_UART_Receive_IT>

  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80035d4:	2001      	movs	r0, #1
 80035d6:	f008 fed1 	bl	800c37c <osDelay>
    vTaskDelete(defaultTaskHandle); // remove this default task
 80035da:	4b07      	ldr	r3, [pc, #28]	@ (80035f8 <StartDefaultTask+0x4c>)
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	4618      	mov	r0, r3
 80035e0:	f00a fb8c 	bl	800dcfc <vTaskDelete>
    osDelay(1);
 80035e4:	bf00      	nop
 80035e6:	e7f5      	b.n	80035d4 <StartDefaultTask+0x28>
 80035e8:	20000764 	.word	0x20000764
 80035ec:	20000720 	.word	0x20000720
 80035f0:	20000765 	.word	0x20000765
 80035f4:	200006dc 	.word	0x200006dc
 80035f8:	20000768 	.word	0x20000768

080035fc <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80035fc:	b580      	push	{r7, lr}
 80035fe:	b082      	sub	sp, #8
 8003600:	af00      	add	r7, sp, #0
 8003602:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	4a04      	ldr	r2, [pc, #16]	@ (800361c <HAL_TIM_PeriodElapsedCallback+0x20>)
 800360a:	4293      	cmp	r3, r2
 800360c:	d101      	bne.n	8003612 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 800360e:	f000 fbcf 	bl	8003db0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003612:	bf00      	nop
 8003614:	3708      	adds	r7, #8
 8003616:	46bd      	mov	sp, r7
 8003618:	bd80      	pop	{r7, pc}
 800361a:	bf00      	nop
 800361c:	40010000 	.word	0x40010000

08003620 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003620:	b480      	push	{r7}
 8003622:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003624:	b672      	cpsid	i
}
 8003626:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003628:	bf00      	nop
 800362a:	e7fd      	b.n	8003628 <Error_Handler+0x8>

0800362c <HAL_MspInit>:
 800362c:	b580      	push	{r7, lr}
 800362e:	b082      	sub	sp, #8
 8003630:	af00      	add	r7, sp, #0
 8003632:	2300      	movs	r3, #0
 8003634:	607b      	str	r3, [r7, #4]
 8003636:	4b12      	ldr	r3, [pc, #72]	@ (8003680 <HAL_MspInit+0x54>)
 8003638:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800363a:	4a11      	ldr	r2, [pc, #68]	@ (8003680 <HAL_MspInit+0x54>)
 800363c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003640:	6453      	str	r3, [r2, #68]	@ 0x44
 8003642:	4b0f      	ldr	r3, [pc, #60]	@ (8003680 <HAL_MspInit+0x54>)
 8003644:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003646:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800364a:	607b      	str	r3, [r7, #4]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	2300      	movs	r3, #0
 8003650:	603b      	str	r3, [r7, #0]
 8003652:	4b0b      	ldr	r3, [pc, #44]	@ (8003680 <HAL_MspInit+0x54>)
 8003654:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003656:	4a0a      	ldr	r2, [pc, #40]	@ (8003680 <HAL_MspInit+0x54>)
 8003658:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800365c:	6413      	str	r3, [r2, #64]	@ 0x40
 800365e:	4b08      	ldr	r3, [pc, #32]	@ (8003680 <HAL_MspInit+0x54>)
 8003660:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003662:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003666:	603b      	str	r3, [r7, #0]
 8003668:	683b      	ldr	r3, [r7, #0]
 800366a:	2200      	movs	r2, #0
 800366c:	210f      	movs	r1, #15
 800366e:	f06f 0001 	mvn.w	r0, #1
 8003672:	f000 fc99 	bl	8003fa8 <HAL_NVIC_SetPriority>
 8003676:	bf00      	nop
 8003678:	3708      	adds	r7, #8
 800367a:	46bd      	mov	sp, r7
 800367c:	bd80      	pop	{r7, pc}
 800367e:	bf00      	nop
 8003680:	40023800 	.word	0x40023800

08003684 <HAL_I2C_MspInit>:
 8003684:	b580      	push	{r7, lr}
 8003686:	b08a      	sub	sp, #40	@ 0x28
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	f107 0314 	add.w	r3, r7, #20
 8003690:	2200      	movs	r2, #0
 8003692:	601a      	str	r2, [r3, #0]
 8003694:	605a      	str	r2, [r3, #4]
 8003696:	609a      	str	r2, [r3, #8]
 8003698:	60da      	str	r2, [r3, #12]
 800369a:	611a      	str	r2, [r3, #16]
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	4a19      	ldr	r2, [pc, #100]	@ (8003708 <HAL_I2C_MspInit+0x84>)
 80036a2:	4293      	cmp	r3, r2
 80036a4:	d12c      	bne.n	8003700 <HAL_I2C_MspInit+0x7c>
 80036a6:	2300      	movs	r3, #0
 80036a8:	613b      	str	r3, [r7, #16]
 80036aa:	4b18      	ldr	r3, [pc, #96]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036ae:	4a17      	ldr	r2, [pc, #92]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036b0:	f043 0302 	orr.w	r3, r3, #2
 80036b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80036b6:	4b15      	ldr	r3, [pc, #84]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036ba:	f003 0302 	and.w	r3, r3, #2
 80036be:	613b      	str	r3, [r7, #16]
 80036c0:	693b      	ldr	r3, [r7, #16]
 80036c2:	f44f 7310 	mov.w	r3, #576	@ 0x240
 80036c6:	617b      	str	r3, [r7, #20]
 80036c8:	2312      	movs	r3, #18
 80036ca:	61bb      	str	r3, [r7, #24]
 80036cc:	2301      	movs	r3, #1
 80036ce:	61fb      	str	r3, [r7, #28]
 80036d0:	2300      	movs	r3, #0
 80036d2:	623b      	str	r3, [r7, #32]
 80036d4:	2304      	movs	r3, #4
 80036d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80036d8:	f107 0314 	add.w	r3, r7, #20
 80036dc:	4619      	mov	r1, r3
 80036de:	480c      	ldr	r0, [pc, #48]	@ (8003710 <HAL_I2C_MspInit+0x8c>)
 80036e0:	f000 fd1e 	bl	8004120 <HAL_GPIO_Init>
 80036e4:	2300      	movs	r3, #0
 80036e6:	60fb      	str	r3, [r7, #12]
 80036e8:	4b08      	ldr	r3, [pc, #32]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036ec:	4a07      	ldr	r2, [pc, #28]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036ee:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80036f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80036f4:	4b05      	ldr	r3, [pc, #20]	@ (800370c <HAL_I2C_MspInit+0x88>)
 80036f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036f8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80036fc:	60fb      	str	r3, [r7, #12]
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	bf00      	nop
 8003702:	3728      	adds	r7, #40	@ 0x28
 8003704:	46bd      	mov	sp, r7
 8003706:	bd80      	pop	{r7, pc}
 8003708:	40005400 	.word	0x40005400
 800370c:	40023800 	.word	0x40023800
 8003710:	40020400 	.word	0x40020400

08003714 <HAL_I2S_MspInit>:
 8003714:	b580      	push	{r7, lr}
 8003716:	b08e      	sub	sp, #56	@ 0x38
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
 800371c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003720:	2200      	movs	r2, #0
 8003722:	601a      	str	r2, [r3, #0]
 8003724:	605a      	str	r2, [r3, #4]
 8003726:	609a      	str	r2, [r3, #8]
 8003728:	60da      	str	r2, [r3, #12]
 800372a:	611a      	str	r2, [r3, #16]
 800372c:	f107 0314 	add.w	r3, r7, #20
 8003730:	2200      	movs	r2, #0
 8003732:	601a      	str	r2, [r3, #0]
 8003734:	605a      	str	r2, [r3, #4]
 8003736:	609a      	str	r2, [r3, #8]
 8003738:	60da      	str	r2, [r3, #12]
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	4a31      	ldr	r2, [pc, #196]	@ (8003804 <HAL_I2S_MspInit+0xf0>)
 8003740:	4293      	cmp	r3, r2
 8003742:	d15a      	bne.n	80037fa <HAL_I2S_MspInit+0xe6>
 8003744:	2301      	movs	r3, #1
 8003746:	617b      	str	r3, [r7, #20]
 8003748:	23c0      	movs	r3, #192	@ 0xc0
 800374a:	61bb      	str	r3, [r7, #24]
 800374c:	2302      	movs	r3, #2
 800374e:	61fb      	str	r3, [r7, #28]
 8003750:	f107 0314 	add.w	r3, r7, #20
 8003754:	4618      	mov	r0, r3
 8003756:	f003 fda7 	bl	80072a8 <HAL_RCCEx_PeriphCLKConfig>
 800375a:	4603      	mov	r3, r0
 800375c:	2b00      	cmp	r3, #0
 800375e:	d001      	beq.n	8003764 <HAL_I2S_MspInit+0x50>
 8003760:	f7ff ff5e 	bl	8003620 <Error_Handler>
 8003764:	2300      	movs	r3, #0
 8003766:	613b      	str	r3, [r7, #16]
 8003768:	4b27      	ldr	r3, [pc, #156]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 800376a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800376c:	4a26      	ldr	r2, [pc, #152]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 800376e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003772:	6413      	str	r3, [r2, #64]	@ 0x40
 8003774:	4b24      	ldr	r3, [pc, #144]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 8003776:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003778:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800377c:	613b      	str	r3, [r7, #16]
 800377e:	693b      	ldr	r3, [r7, #16]
 8003780:	2300      	movs	r3, #0
 8003782:	60fb      	str	r3, [r7, #12]
 8003784:	4b20      	ldr	r3, [pc, #128]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 8003786:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003788:	4a1f      	ldr	r2, [pc, #124]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 800378a:	f043 0301 	orr.w	r3, r3, #1
 800378e:	6313      	str	r3, [r2, #48]	@ 0x30
 8003790:	4b1d      	ldr	r3, [pc, #116]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 8003792:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003794:	f003 0301 	and.w	r3, r3, #1
 8003798:	60fb      	str	r3, [r7, #12]
 800379a:	68fb      	ldr	r3, [r7, #12]
 800379c:	2300      	movs	r3, #0
 800379e:	60bb      	str	r3, [r7, #8]
 80037a0:	4b19      	ldr	r3, [pc, #100]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 80037a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037a4:	4a18      	ldr	r2, [pc, #96]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 80037a6:	f043 0304 	orr.w	r3, r3, #4
 80037aa:	6313      	str	r3, [r2, #48]	@ 0x30
 80037ac:	4b16      	ldr	r3, [pc, #88]	@ (8003808 <HAL_I2S_MspInit+0xf4>)
 80037ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037b0:	f003 0304 	and.w	r3, r3, #4
 80037b4:	60bb      	str	r3, [r7, #8]
 80037b6:	68bb      	ldr	r3, [r7, #8]
 80037b8:	2310      	movs	r3, #16
 80037ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80037bc:	2302      	movs	r3, #2
 80037be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037c0:	2300      	movs	r3, #0
 80037c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80037c4:	2300      	movs	r3, #0
 80037c6:	633b      	str	r3, [r7, #48]	@ 0x30
 80037c8:	2306      	movs	r3, #6
 80037ca:	637b      	str	r3, [r7, #52]	@ 0x34
 80037cc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80037d0:	4619      	mov	r1, r3
 80037d2:	480e      	ldr	r0, [pc, #56]	@ (800380c <HAL_I2S_MspInit+0xf8>)
 80037d4:	f000 fca4 	bl	8004120 <HAL_GPIO_Init>
 80037d8:	f44f 53a4 	mov.w	r3, #5248	@ 0x1480
 80037dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80037de:	2302      	movs	r3, #2
 80037e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037e2:	2300      	movs	r3, #0
 80037e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80037e6:	2300      	movs	r3, #0
 80037e8:	633b      	str	r3, [r7, #48]	@ 0x30
 80037ea:	2306      	movs	r3, #6
 80037ec:	637b      	str	r3, [r7, #52]	@ 0x34
 80037ee:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80037f2:	4619      	mov	r1, r3
 80037f4:	4806      	ldr	r0, [pc, #24]	@ (8003810 <HAL_I2S_MspInit+0xfc>)
 80037f6:	f000 fc93 	bl	8004120 <HAL_GPIO_Init>
 80037fa:	bf00      	nop
 80037fc:	3738      	adds	r7, #56	@ 0x38
 80037fe:	46bd      	mov	sp, r7
 8003800:	bd80      	pop	{r7, pc}
 8003802:	bf00      	nop
 8003804:	40003c00 	.word	0x40003c00
 8003808:	40023800 	.word	0x40023800
 800380c:	40020000 	.word	0x40020000
 8003810:	40020800 	.word	0x40020800

08003814 <HAL_SPI_MspInit>:
 8003814:	b580      	push	{r7, lr}
 8003816:	b08a      	sub	sp, #40	@ 0x28
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
 800381c:	f107 0314 	add.w	r3, r7, #20
 8003820:	2200      	movs	r2, #0
 8003822:	601a      	str	r2, [r3, #0]
 8003824:	605a      	str	r2, [r3, #4]
 8003826:	609a      	str	r2, [r3, #8]
 8003828:	60da      	str	r2, [r3, #12]
 800382a:	611a      	str	r2, [r3, #16]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	4a19      	ldr	r2, [pc, #100]	@ (8003898 <HAL_SPI_MspInit+0x84>)
 8003832:	4293      	cmp	r3, r2
 8003834:	d12b      	bne.n	800388e <HAL_SPI_MspInit+0x7a>
 8003836:	2300      	movs	r3, #0
 8003838:	613b      	str	r3, [r7, #16]
 800383a:	4b18      	ldr	r3, [pc, #96]	@ (800389c <HAL_SPI_MspInit+0x88>)
 800383c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800383e:	4a17      	ldr	r2, [pc, #92]	@ (800389c <HAL_SPI_MspInit+0x88>)
 8003840:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003844:	6453      	str	r3, [r2, #68]	@ 0x44
 8003846:	4b15      	ldr	r3, [pc, #84]	@ (800389c <HAL_SPI_MspInit+0x88>)
 8003848:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800384a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800384e:	613b      	str	r3, [r7, #16]
 8003850:	693b      	ldr	r3, [r7, #16]
 8003852:	2300      	movs	r3, #0
 8003854:	60fb      	str	r3, [r7, #12]
 8003856:	4b11      	ldr	r3, [pc, #68]	@ (800389c <HAL_SPI_MspInit+0x88>)
 8003858:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800385a:	4a10      	ldr	r2, [pc, #64]	@ (800389c <HAL_SPI_MspInit+0x88>)
 800385c:	f043 0301 	orr.w	r3, r3, #1
 8003860:	6313      	str	r3, [r2, #48]	@ 0x30
 8003862:	4b0e      	ldr	r3, [pc, #56]	@ (800389c <HAL_SPI_MspInit+0x88>)
 8003864:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003866:	f003 0301 	and.w	r3, r3, #1
 800386a:	60fb      	str	r3, [r7, #12]
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	23e0      	movs	r3, #224	@ 0xe0
 8003870:	617b      	str	r3, [r7, #20]
 8003872:	2302      	movs	r3, #2
 8003874:	61bb      	str	r3, [r7, #24]
 8003876:	2300      	movs	r3, #0
 8003878:	61fb      	str	r3, [r7, #28]
 800387a:	2300      	movs	r3, #0
 800387c:	623b      	str	r3, [r7, #32]
 800387e:	2305      	movs	r3, #5
 8003880:	627b      	str	r3, [r7, #36]	@ 0x24
 8003882:	f107 0314 	add.w	r3, r7, #20
 8003886:	4619      	mov	r1, r3
 8003888:	4805      	ldr	r0, [pc, #20]	@ (80038a0 <HAL_SPI_MspInit+0x8c>)
 800388a:	f000 fc49 	bl	8004120 <HAL_GPIO_Init>
 800388e:	bf00      	nop
 8003890:	3728      	adds	r7, #40	@ 0x28
 8003892:	46bd      	mov	sp, r7
 8003894:	bd80      	pop	{r7, pc}
 8003896:	bf00      	nop
 8003898:	40013000 	.word	0x40013000
 800389c:	40023800 	.word	0x40023800
 80038a0:	40020000 	.word	0x40020000

080038a4 <HAL_UART_MspInit>:
 80038a4:	b580      	push	{r7, lr}
 80038a6:	b08c      	sub	sp, #48	@ 0x30
 80038a8:	af00      	add	r7, sp, #0
 80038aa:	6078      	str	r0, [r7, #4]
 80038ac:	f107 031c 	add.w	r3, r7, #28
 80038b0:	2200      	movs	r2, #0
 80038b2:	601a      	str	r2, [r3, #0]
 80038b4:	605a      	str	r2, [r3, #4]
 80038b6:	609a      	str	r2, [r3, #8]
 80038b8:	60da      	str	r2, [r3, #12]
 80038ba:	611a      	str	r2, [r3, #16]
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	4a3a      	ldr	r2, [pc, #232]	@ (80039ac <HAL_UART_MspInit+0x108>)
 80038c2:	4293      	cmp	r3, r2
 80038c4:	d134      	bne.n	8003930 <HAL_UART_MspInit+0x8c>
 80038c6:	2300      	movs	r3, #0
 80038c8:	61bb      	str	r3, [r7, #24]
 80038ca:	4b39      	ldr	r3, [pc, #228]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038ce:	4a38      	ldr	r2, [pc, #224]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038d0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80038d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80038d6:	4b36      	ldr	r3, [pc, #216]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038da:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80038de:	61bb      	str	r3, [r7, #24]
 80038e0:	69bb      	ldr	r3, [r7, #24]
 80038e2:	2300      	movs	r3, #0
 80038e4:	617b      	str	r3, [r7, #20]
 80038e6:	4b32      	ldr	r3, [pc, #200]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038ea:	4a31      	ldr	r2, [pc, #196]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038ec:	f043 0301 	orr.w	r3, r3, #1
 80038f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80038f2:	4b2f      	ldr	r3, [pc, #188]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 80038f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038f6:	f003 0301 	and.w	r3, r3, #1
 80038fa:	617b      	str	r3, [r7, #20]
 80038fc:	697b      	ldr	r3, [r7, #20]
 80038fe:	2303      	movs	r3, #3
 8003900:	61fb      	str	r3, [r7, #28]
 8003902:	2302      	movs	r3, #2
 8003904:	623b      	str	r3, [r7, #32]
 8003906:	2300      	movs	r3, #0
 8003908:	627b      	str	r3, [r7, #36]	@ 0x24
 800390a:	2303      	movs	r3, #3
 800390c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800390e:	2308      	movs	r3, #8
 8003910:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003912:	f107 031c 	add.w	r3, r7, #28
 8003916:	4619      	mov	r1, r3
 8003918:	4826      	ldr	r0, [pc, #152]	@ (80039b4 <HAL_UART_MspInit+0x110>)
 800391a:	f000 fc01 	bl	8004120 <HAL_GPIO_Init>
 800391e:	2200      	movs	r2, #0
 8003920:	2105      	movs	r1, #5
 8003922:	2034      	movs	r0, #52	@ 0x34
 8003924:	f000 fb40 	bl	8003fa8 <HAL_NVIC_SetPriority>
 8003928:	2034      	movs	r0, #52	@ 0x34
 800392a:	f000 fb59 	bl	8003fe0 <HAL_NVIC_EnableIRQ>
 800392e:	e038      	b.n	80039a2 <HAL_UART_MspInit+0xfe>
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	4a20      	ldr	r2, [pc, #128]	@ (80039b8 <HAL_UART_MspInit+0x114>)
 8003936:	4293      	cmp	r3, r2
 8003938:	d133      	bne.n	80039a2 <HAL_UART_MspInit+0xfe>
 800393a:	2300      	movs	r3, #0
 800393c:	613b      	str	r3, [r7, #16]
 800393e:	4b1c      	ldr	r3, [pc, #112]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 8003940:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003942:	4a1b      	ldr	r2, [pc, #108]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 8003944:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003948:	6413      	str	r3, [r2, #64]	@ 0x40
 800394a:	4b19      	ldr	r3, [pc, #100]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 800394c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800394e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003952:	613b      	str	r3, [r7, #16]
 8003954:	693b      	ldr	r3, [r7, #16]
 8003956:	2300      	movs	r3, #0
 8003958:	60fb      	str	r3, [r7, #12]
 800395a:	4b15      	ldr	r3, [pc, #84]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 800395c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800395e:	4a14      	ldr	r2, [pc, #80]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 8003960:	f043 0301 	orr.w	r3, r3, #1
 8003964:	6313      	str	r3, [r2, #48]	@ 0x30
 8003966:	4b12      	ldr	r3, [pc, #72]	@ (80039b0 <HAL_UART_MspInit+0x10c>)
 8003968:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800396a:	f003 0301 	and.w	r3, r3, #1
 800396e:	60fb      	str	r3, [r7, #12]
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	230c      	movs	r3, #12
 8003974:	61fb      	str	r3, [r7, #28]
 8003976:	2302      	movs	r3, #2
 8003978:	623b      	str	r3, [r7, #32]
 800397a:	2300      	movs	r3, #0
 800397c:	627b      	str	r3, [r7, #36]	@ 0x24
 800397e:	2303      	movs	r3, #3
 8003980:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003982:	2307      	movs	r3, #7
 8003984:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003986:	f107 031c 	add.w	r3, r7, #28
 800398a:	4619      	mov	r1, r3
 800398c:	4809      	ldr	r0, [pc, #36]	@ (80039b4 <HAL_UART_MspInit+0x110>)
 800398e:	f000 fbc7 	bl	8004120 <HAL_GPIO_Init>
 8003992:	2200      	movs	r2, #0
 8003994:	2105      	movs	r1, #5
 8003996:	2026      	movs	r0, #38	@ 0x26
 8003998:	f000 fb06 	bl	8003fa8 <HAL_NVIC_SetPriority>
 800399c:	2026      	movs	r0, #38	@ 0x26
 800399e:	f000 fb1f 	bl	8003fe0 <HAL_NVIC_EnableIRQ>
 80039a2:	bf00      	nop
 80039a4:	3730      	adds	r7, #48	@ 0x30
 80039a6:	46bd      	mov	sp, r7
 80039a8:	bd80      	pop	{r7, pc}
 80039aa:	bf00      	nop
 80039ac:	40004c00 	.word	0x40004c00
 80039b0:	40023800 	.word	0x40023800
 80039b4:	40020000 	.word	0x40020000
 80039b8:	40004400 	.word	0x40004400

080039bc <HAL_InitTick>:
 80039bc:	b580      	push	{r7, lr}
 80039be:	b08c      	sub	sp, #48	@ 0x30
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	6078      	str	r0, [r7, #4]
 80039c4:	2300      	movs	r3, #0
 80039c6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80039c8:	2300      	movs	r3, #0
 80039ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80039cc:	2300      	movs	r3, #0
 80039ce:	60bb      	str	r3, [r7, #8]
 80039d0:	4b2f      	ldr	r3, [pc, #188]	@ (8003a90 <HAL_InitTick+0xd4>)
 80039d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80039d4:	4a2e      	ldr	r2, [pc, #184]	@ (8003a90 <HAL_InitTick+0xd4>)
 80039d6:	f043 0301 	orr.w	r3, r3, #1
 80039da:	6453      	str	r3, [r2, #68]	@ 0x44
 80039dc:	4b2c      	ldr	r3, [pc, #176]	@ (8003a90 <HAL_InitTick+0xd4>)
 80039de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80039e0:	f003 0301 	and.w	r3, r3, #1
 80039e4:	60bb      	str	r3, [r7, #8]
 80039e6:	68bb      	ldr	r3, [r7, #8]
 80039e8:	f107 020c 	add.w	r2, r7, #12
 80039ec:	f107 0310 	add.w	r3, r7, #16
 80039f0:	4611      	mov	r1, r2
 80039f2:	4618      	mov	r0, r3
 80039f4:	f003 fc26 	bl	8007244 <HAL_RCC_GetClockConfig>
 80039f8:	f003 fc10 	bl	800721c <HAL_RCC_GetPCLK2Freq>
 80039fc:	4603      	mov	r3, r0
 80039fe:	005b      	lsls	r3, r3, #1
 8003a00:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003a02:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003a04:	4a23      	ldr	r2, [pc, #140]	@ (8003a94 <HAL_InitTick+0xd8>)
 8003a06:	fba2 2303 	umull	r2, r3, r2, r3
 8003a0a:	0c9b      	lsrs	r3, r3, #18
 8003a0c:	3b01      	subs	r3, #1
 8003a0e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a10:	4b21      	ldr	r3, [pc, #132]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a12:	4a22      	ldr	r2, [pc, #136]	@ (8003a9c <HAL_InitTick+0xe0>)
 8003a14:	601a      	str	r2, [r3, #0]
 8003a16:	4b20      	ldr	r3, [pc, #128]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a18:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8003a1c:	60da      	str	r2, [r3, #12]
 8003a1e:	4a1e      	ldr	r2, [pc, #120]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a22:	6053      	str	r3, [r2, #4]
 8003a24:	4b1c      	ldr	r3, [pc, #112]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a26:	2200      	movs	r2, #0
 8003a28:	611a      	str	r2, [r3, #16]
 8003a2a:	4b1b      	ldr	r3, [pc, #108]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	609a      	str	r2, [r3, #8]
 8003a30:	4b19      	ldr	r3, [pc, #100]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a32:	2200      	movs	r2, #0
 8003a34:	619a      	str	r2, [r3, #24]
 8003a36:	4818      	ldr	r0, [pc, #96]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a38:	f003 fdff 	bl	800763a <HAL_TIM_Base_Init>
 8003a3c:	4603      	mov	r3, r0
 8003a3e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003a42:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	d11b      	bne.n	8003a82 <HAL_InitTick+0xc6>
 8003a4a:	4813      	ldr	r0, [pc, #76]	@ (8003a98 <HAL_InitTick+0xdc>)
 8003a4c:	f003 fe4e 	bl	80076ec <HAL_TIM_Base_Start_IT>
 8003a50:	4603      	mov	r3, r0
 8003a52:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003a56:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	d111      	bne.n	8003a82 <HAL_InitTick+0xc6>
 8003a5e:	2019      	movs	r0, #25
 8003a60:	f000 fabe 	bl	8003fe0 <HAL_NVIC_EnableIRQ>
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2b0f      	cmp	r3, #15
 8003a68:	d808      	bhi.n	8003a7c <HAL_InitTick+0xc0>
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	6879      	ldr	r1, [r7, #4]
 8003a6e:	2019      	movs	r0, #25
 8003a70:	f000 fa9a 	bl	8003fa8 <HAL_NVIC_SetPriority>
 8003a74:	4a0a      	ldr	r2, [pc, #40]	@ (8003aa0 <HAL_InitTick+0xe4>)
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	6013      	str	r3, [r2, #0]
 8003a7a:	e002      	b.n	8003a82 <HAL_InitTick+0xc6>
 8003a7c:	2301      	movs	r3, #1
 8003a7e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003a82:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003a86:	4618      	mov	r0, r3
 8003a88:	3730      	adds	r7, #48	@ 0x30
 8003a8a:	46bd      	mov	sp, r7
 8003a8c:	bd80      	pop	{r7, pc}
 8003a8e:	bf00      	nop
 8003a90:	40023800 	.word	0x40023800
 8003a94:	431bde83 	.word	0x431bde83
 8003a98:	2000076c 	.word	0x2000076c
 8003a9c:	40010000 	.word	0x40010000
 8003aa0:	20000260 	.word	0x20000260

08003aa4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003aa4:	b480      	push	{r7}
 8003aa6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003aa8:	bf00      	nop
 8003aaa:	e7fd      	b.n	8003aa8 <NMI_Handler+0x4>

08003aac <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003aac:	b480      	push	{r7}
 8003aae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003ab0:	bf00      	nop
 8003ab2:	e7fd      	b.n	8003ab0 <HardFault_Handler+0x4>

08003ab4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003ab4:	b480      	push	{r7}
 8003ab6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003ab8:	bf00      	nop
 8003aba:	e7fd      	b.n	8003ab8 <MemManage_Handler+0x4>

08003abc <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003abc:	b480      	push	{r7}
 8003abe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003ac0:	bf00      	nop
 8003ac2:	e7fd      	b.n	8003ac0 <BusFault_Handler+0x4>

08003ac4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003ac4:	b480      	push	{r7}
 8003ac6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003ac8:	bf00      	nop
 8003aca:	e7fd      	b.n	8003ac8 <UsageFault_Handler+0x4>

08003acc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003acc:	b480      	push	{r7}
 8003ace:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003ad0:	bf00      	nop
 8003ad2:	46bd      	mov	sp, r7
 8003ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ad8:	4770      	bx	lr
	...

08003adc <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8003adc:	b580      	push	{r7, lr}
 8003ade:	b082      	sub	sp, #8
 8003ae0:	af00      	add	r7, sp, #0
   * door de task ARM_keys_IRQ().
   *
   */
  int        key;

  HAL_GPIO_EXTI_IRQHandler(Key_int_Pin);
 8003ae2:	2001      	movs	r0, #1
 8003ae4:	f000 fd04 	bl	80044f0 <HAL_GPIO_EXTI_IRQHandler>

  key = KEYS_read(); // determine which key is pressed...
 8003ae8:	f7fe ff00 	bl	80028ec <KEYS_read>
 8003aec:	4603      	mov	r3, r0
 8003aee:	607b      	str	r3, [r7, #4]
  xEventGroupSetBitsFromISR (hKEY_Event, key, NULL);
 8003af0:	4b08      	ldr	r3, [pc, #32]	@ (8003b14 <EXTI0_IRQHandler+0x38>)
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	6879      	ldr	r1, [r7, #4]
 8003af6:	2200      	movs	r2, #0
 8003af8:	4618      	mov	r0, r3
 8003afa:	f008 ff67 	bl	800c9cc <xEventGroupSetBitsFromISR>

  // KEYS_initISR(0); // set all lines lo if you want repeating keys
  KEYS_initISR(1);    // set all lines hi for reading all 16 keys
 8003afe:	2001      	movs	r0, #1
 8003b00:	f7fe fecc 	bl	800289c <KEYS_initISR>

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Key_int_Pin);
 8003b04:	2001      	movs	r0, #1
 8003b06:	f000 fcf3 	bl	80044f0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8003b0a:	bf00      	nop
 8003b0c:	3708      	adds	r7, #8
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	bd80      	pop	{r7, pc}
 8003b12:	bf00      	nop
 8003b14:	20000488 	.word	0x20000488

08003b18 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8003b18:	b580      	push	{r7, lr}
 8003b1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8003b1c:	4802      	ldr	r0, [pc, #8]	@ (8003b28 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8003b1e:	f003 fe55 	bl	80077cc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8003b22:	bf00      	nop
 8003b24:	bd80      	pop	{r7, pc}
 8003b26:	bf00      	nop
 8003b28:	2000076c 	.word	0x2000076c

08003b2c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8003b2c:	b580      	push	{r7, lr}
 8003b2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8003b30:	4802      	ldr	r0, [pc, #8]	@ (8003b3c <USART2_IRQHandler+0x10>)
 8003b32:	f004 f93f 	bl	8007db4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8003b36:	bf00      	nop
 8003b38:	bd80      	pop	{r7, pc}
 8003b3a:	bf00      	nop
 8003b3c:	20000720 	.word	0x20000720

08003b40 <UART4_IRQHandler>:

/**
  * @brief This function handles UART4 global interrupt.
  */
void UART4_IRQHandler(void)
{
 8003b40:	b580      	push	{r7, lr}
 8003b42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART4_IRQn 0 */

  /* USER CODE END UART4_IRQn 0 */
  HAL_UART_IRQHandler(&huart4);
 8003b44:	4802      	ldr	r0, [pc, #8]	@ (8003b50 <UART4_IRQHandler+0x10>)
 8003b46:	f004 f935 	bl	8007db4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART4_IRQn 1 */

  /* USER CODE END UART4_IRQn 1 */
}
 8003b4a:	bf00      	nop
 8003b4c:	bd80      	pop	{r7, pc}
 8003b4e:	bf00      	nop
 8003b50:	200006dc 	.word	0x200006dc

08003b54 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8003b54:	b580      	push	{r7, lr}
 8003b56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_HCD_IRQHandler(&hhcd_USB_OTG_FS);
 8003b58:	4802      	ldr	r0, [pc, #8]	@ (8003b64 <OTG_FS_IRQHandler+0x10>)
 8003b5a:	f000 ff57 	bl	8004a0c <HAL_HCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 8003b5e:	bf00      	nop
 8003b60:	bd80      	pop	{r7, pc}
 8003b62:	bf00      	nop
 8003b64:	200113b0 	.word	0x200113b0

08003b68 <_getpid>:
 8003b68:	b480      	push	{r7}
 8003b6a:	af00      	add	r7, sp, #0
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	4618      	mov	r0, r3
 8003b70:	46bd      	mov	sp, r7
 8003b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b76:	4770      	bx	lr

08003b78 <_kill>:
 8003b78:	b580      	push	{r7, lr}
 8003b7a:	b082      	sub	sp, #8
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	6078      	str	r0, [r7, #4]
 8003b80:	6039      	str	r1, [r7, #0]
 8003b82:	f00e fecd 	bl	8012920 <__errno>
 8003b86:	4603      	mov	r3, r0
 8003b88:	2216      	movs	r2, #22
 8003b8a:	601a      	str	r2, [r3, #0]
 8003b8c:	f04f 33ff 	mov.w	r3, #4294967295
 8003b90:	4618      	mov	r0, r3
 8003b92:	3708      	adds	r7, #8
 8003b94:	46bd      	mov	sp, r7
 8003b96:	bd80      	pop	{r7, pc}

08003b98 <_exit>:
 8003b98:	b580      	push	{r7, lr}
 8003b9a:	b082      	sub	sp, #8
 8003b9c:	af00      	add	r7, sp, #0
 8003b9e:	6078      	str	r0, [r7, #4]
 8003ba0:	f04f 31ff 	mov.w	r1, #4294967295
 8003ba4:	6878      	ldr	r0, [r7, #4]
 8003ba6:	f7ff ffe7 	bl	8003b78 <_kill>
 8003baa:	bf00      	nop
 8003bac:	e7fd      	b.n	8003baa <_exit+0x12>

08003bae <_read>:
 8003bae:	b580      	push	{r7, lr}
 8003bb0:	b086      	sub	sp, #24
 8003bb2:	af00      	add	r7, sp, #0
 8003bb4:	60f8      	str	r0, [r7, #12]
 8003bb6:	60b9      	str	r1, [r7, #8]
 8003bb8:	607a      	str	r2, [r7, #4]
 8003bba:	2300      	movs	r3, #0
 8003bbc:	617b      	str	r3, [r7, #20]
 8003bbe:	e00a      	b.n	8003bd6 <_read+0x28>
 8003bc0:	f3af 8000 	nop.w
 8003bc4:	4601      	mov	r1, r0
 8003bc6:	68bb      	ldr	r3, [r7, #8]
 8003bc8:	1c5a      	adds	r2, r3, #1
 8003bca:	60ba      	str	r2, [r7, #8]
 8003bcc:	b2ca      	uxtb	r2, r1
 8003bce:	701a      	strb	r2, [r3, #0]
 8003bd0:	697b      	ldr	r3, [r7, #20]
 8003bd2:	3301      	adds	r3, #1
 8003bd4:	617b      	str	r3, [r7, #20]
 8003bd6:	697a      	ldr	r2, [r7, #20]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	429a      	cmp	r2, r3
 8003bdc:	dbf0      	blt.n	8003bc0 <_read+0x12>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	4618      	mov	r0, r3
 8003be2:	3718      	adds	r7, #24
 8003be4:	46bd      	mov	sp, r7
 8003be6:	bd80      	pop	{r7, pc}

08003be8 <_write>:
 8003be8:	b580      	push	{r7, lr}
 8003bea:	b086      	sub	sp, #24
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	60f8      	str	r0, [r7, #12]
 8003bf0:	60b9      	str	r1, [r7, #8]
 8003bf2:	607a      	str	r2, [r7, #4]
 8003bf4:	2300      	movs	r3, #0
 8003bf6:	617b      	str	r3, [r7, #20]
 8003bf8:	e009      	b.n	8003c0e <_write+0x26>
 8003bfa:	68bb      	ldr	r3, [r7, #8]
 8003bfc:	1c5a      	adds	r2, r3, #1
 8003bfe:	60ba      	str	r2, [r7, #8]
 8003c00:	781b      	ldrb	r3, [r3, #0]
 8003c02:	4618      	mov	r0, r3
 8003c04:	f3af 8000 	nop.w
 8003c08:	697b      	ldr	r3, [r7, #20]
 8003c0a:	3301      	adds	r3, #1
 8003c0c:	617b      	str	r3, [r7, #20]
 8003c0e:	697a      	ldr	r2, [r7, #20]
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	429a      	cmp	r2, r3
 8003c14:	dbf1      	blt.n	8003bfa <_write+0x12>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	4618      	mov	r0, r3
 8003c1a:	3718      	adds	r7, #24
 8003c1c:	46bd      	mov	sp, r7
 8003c1e:	bd80      	pop	{r7, pc}

08003c20 <_close>:
 8003c20:	b480      	push	{r7}
 8003c22:	b083      	sub	sp, #12
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	6078      	str	r0, [r7, #4]
 8003c28:	f04f 33ff 	mov.w	r3, #4294967295
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	370c      	adds	r7, #12
 8003c30:	46bd      	mov	sp, r7
 8003c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c36:	4770      	bx	lr

08003c38 <_fstat>:
 8003c38:	b480      	push	{r7}
 8003c3a:	b083      	sub	sp, #12
 8003c3c:	af00      	add	r7, sp, #0
 8003c3e:	6078      	str	r0, [r7, #4]
 8003c40:	6039      	str	r1, [r7, #0]
 8003c42:	683b      	ldr	r3, [r7, #0]
 8003c44:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003c48:	605a      	str	r2, [r3, #4]
 8003c4a:	2300      	movs	r3, #0
 8003c4c:	4618      	mov	r0, r3
 8003c4e:	370c      	adds	r7, #12
 8003c50:	46bd      	mov	sp, r7
 8003c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c56:	4770      	bx	lr

08003c58 <_isatty>:
 8003c58:	b480      	push	{r7}
 8003c5a:	b083      	sub	sp, #12
 8003c5c:	af00      	add	r7, sp, #0
 8003c5e:	6078      	str	r0, [r7, #4]
 8003c60:	2301      	movs	r3, #1
 8003c62:	4618      	mov	r0, r3
 8003c64:	370c      	adds	r7, #12
 8003c66:	46bd      	mov	sp, r7
 8003c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c6c:	4770      	bx	lr

08003c6e <_lseek>:
 8003c6e:	b480      	push	{r7}
 8003c70:	b085      	sub	sp, #20
 8003c72:	af00      	add	r7, sp, #0
 8003c74:	60f8      	str	r0, [r7, #12]
 8003c76:	60b9      	str	r1, [r7, #8]
 8003c78:	607a      	str	r2, [r7, #4]
 8003c7a:	2300      	movs	r3, #0
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	3714      	adds	r7, #20
 8003c80:	46bd      	mov	sp, r7
 8003c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c86:	4770      	bx	lr

08003c88 <_sbrk>:
 8003c88:	b580      	push	{r7, lr}
 8003c8a:	b086      	sub	sp, #24
 8003c8c:	af00      	add	r7, sp, #0
 8003c8e:	6078      	str	r0, [r7, #4]
 8003c90:	4a14      	ldr	r2, [pc, #80]	@ (8003ce4 <_sbrk+0x5c>)
 8003c92:	4b15      	ldr	r3, [pc, #84]	@ (8003ce8 <_sbrk+0x60>)
 8003c94:	1ad3      	subs	r3, r2, r3
 8003c96:	617b      	str	r3, [r7, #20]
 8003c98:	697b      	ldr	r3, [r7, #20]
 8003c9a:	613b      	str	r3, [r7, #16]
 8003c9c:	4b13      	ldr	r3, [pc, #76]	@ (8003cec <_sbrk+0x64>)
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d102      	bne.n	8003caa <_sbrk+0x22>
 8003ca4:	4b11      	ldr	r3, [pc, #68]	@ (8003cec <_sbrk+0x64>)
 8003ca6:	4a12      	ldr	r2, [pc, #72]	@ (8003cf0 <_sbrk+0x68>)
 8003ca8:	601a      	str	r2, [r3, #0]
 8003caa:	4b10      	ldr	r3, [pc, #64]	@ (8003cec <_sbrk+0x64>)
 8003cac:	681a      	ldr	r2, [r3, #0]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	4413      	add	r3, r2
 8003cb2:	693a      	ldr	r2, [r7, #16]
 8003cb4:	429a      	cmp	r2, r3
 8003cb6:	d207      	bcs.n	8003cc8 <_sbrk+0x40>
 8003cb8:	f00e fe32 	bl	8012920 <__errno>
 8003cbc:	4603      	mov	r3, r0
 8003cbe:	220c      	movs	r2, #12
 8003cc0:	601a      	str	r2, [r3, #0]
 8003cc2:	f04f 33ff 	mov.w	r3, #4294967295
 8003cc6:	e009      	b.n	8003cdc <_sbrk+0x54>
 8003cc8:	4b08      	ldr	r3, [pc, #32]	@ (8003cec <_sbrk+0x64>)
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	60fb      	str	r3, [r7, #12]
 8003cce:	4b07      	ldr	r3, [pc, #28]	@ (8003cec <_sbrk+0x64>)
 8003cd0:	681a      	ldr	r2, [r3, #0]
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	4413      	add	r3, r2
 8003cd6:	4a05      	ldr	r2, [pc, #20]	@ (8003cec <_sbrk+0x64>)
 8003cd8:	6013      	str	r3, [r2, #0]
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	4618      	mov	r0, r3
 8003cde:	3718      	adds	r7, #24
 8003ce0:	46bd      	mov	sp, r7
 8003ce2:	bd80      	pop	{r7, pc}
 8003ce4:	20020000 	.word	0x20020000
 8003ce8:	00000400 	.word	0x00000400
 8003cec:	200007b4 	.word	0x200007b4
 8003cf0:	20011800 	.word	0x20011800

08003cf4 <SystemInit>:
 8003cf4:	b480      	push	{r7}
 8003cf6:	af00      	add	r7, sp, #0
 8003cf8:	4b06      	ldr	r3, [pc, #24]	@ (8003d14 <SystemInit+0x20>)
 8003cfa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003cfe:	4a05      	ldr	r2, [pc, #20]	@ (8003d14 <SystemInit+0x20>)
 8003d00:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003d04:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003d08:	bf00      	nop
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d10:	4770      	bx	lr
 8003d12:	bf00      	nop
 8003d14:	e000ed00 	.word	0xe000ed00

08003d18 <Reset_Handler>:
 8003d18:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8003d50 <LoopFillZerobss+0x12>
 8003d1c:	480d      	ldr	r0, [pc, #52]	@ (8003d54 <LoopFillZerobss+0x16>)
 8003d1e:	490e      	ldr	r1, [pc, #56]	@ (8003d58 <LoopFillZerobss+0x1a>)
 8003d20:	4a0e      	ldr	r2, [pc, #56]	@ (8003d5c <LoopFillZerobss+0x1e>)
 8003d22:	2300      	movs	r3, #0
 8003d24:	e002      	b.n	8003d2c <LoopCopyDataInit>

08003d26 <CopyDataInit>:
 8003d26:	58d4      	ldr	r4, [r2, r3]
 8003d28:	50c4      	str	r4, [r0, r3]
 8003d2a:	3304      	adds	r3, #4

08003d2c <LoopCopyDataInit>:
 8003d2c:	18c4      	adds	r4, r0, r3
 8003d2e:	428c      	cmp	r4, r1
 8003d30:	d3f9      	bcc.n	8003d26 <CopyDataInit>
 8003d32:	4a0b      	ldr	r2, [pc, #44]	@ (8003d60 <LoopFillZerobss+0x22>)
 8003d34:	4c0b      	ldr	r4, [pc, #44]	@ (8003d64 <LoopFillZerobss+0x26>)
 8003d36:	2300      	movs	r3, #0
 8003d38:	e001      	b.n	8003d3e <LoopFillZerobss>

08003d3a <FillZerobss>:
 8003d3a:	6013      	str	r3, [r2, #0]
 8003d3c:	3204      	adds	r2, #4

08003d3e <LoopFillZerobss>:
 8003d3e:	42a2      	cmp	r2, r4
 8003d40:	d3fb      	bcc.n	8003d3a <FillZerobss>
 8003d42:	f7ff ffd7 	bl	8003cf4 <SystemInit>
 8003d46:	f00e fdf1 	bl	801292c <__libc_init_array>
 8003d4a:	f7ff f935 	bl	8002fb8 <main>
 8003d4e:	4770      	bx	lr
 8003d50:	20020000 	.word	0x20020000
 8003d54:	20000000 	.word	0x20000000
 8003d58:	20000454 	.word	0x20000454
 8003d5c:	08016278 	.word	0x08016278
 8003d60:	20000458 	.word	0x20000458
 8003d64:	20011800 	.word	0x20011800

08003d68 <ADC_IRQHandler>:
 8003d68:	e7fe      	b.n	8003d68 <ADC_IRQHandler>
	...

08003d6c <HAL_Init>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4b0e      	ldr	r3, [pc, #56]	@ (8003dac <HAL_Init+0x40>)
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4a0d      	ldr	r2, [pc, #52]	@ (8003dac <HAL_Init+0x40>)
 8003d76:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003d7a:	6013      	str	r3, [r2, #0]
 8003d7c:	4b0b      	ldr	r3, [pc, #44]	@ (8003dac <HAL_Init+0x40>)
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	4a0a      	ldr	r2, [pc, #40]	@ (8003dac <HAL_Init+0x40>)
 8003d82:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003d86:	6013      	str	r3, [r2, #0]
 8003d88:	4b08      	ldr	r3, [pc, #32]	@ (8003dac <HAL_Init+0x40>)
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	4a07      	ldr	r2, [pc, #28]	@ (8003dac <HAL_Init+0x40>)
 8003d8e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003d92:	6013      	str	r3, [r2, #0]
 8003d94:	2003      	movs	r0, #3
 8003d96:	f000 f8fc 	bl	8003f92 <HAL_NVIC_SetPriorityGrouping>
 8003d9a:	2000      	movs	r0, #0
 8003d9c:	f7ff fe0e 	bl	80039bc <HAL_InitTick>
 8003da0:	f7ff fc44 	bl	800362c <HAL_MspInit>
 8003da4:	2300      	movs	r3, #0
 8003da6:	4618      	mov	r0, r3
 8003da8:	bd80      	pop	{r7, pc}
 8003daa:	bf00      	nop
 8003dac:	40023c00 	.word	0x40023c00

08003db0 <HAL_IncTick>:
 8003db0:	b480      	push	{r7}
 8003db2:	af00      	add	r7, sp, #0
 8003db4:	4b06      	ldr	r3, [pc, #24]	@ (8003dd0 <HAL_IncTick+0x20>)
 8003db6:	781b      	ldrb	r3, [r3, #0]
 8003db8:	461a      	mov	r2, r3
 8003dba:	4b06      	ldr	r3, [pc, #24]	@ (8003dd4 <HAL_IncTick+0x24>)
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	4413      	add	r3, r2
 8003dc0:	4a04      	ldr	r2, [pc, #16]	@ (8003dd4 <HAL_IncTick+0x24>)
 8003dc2:	6013      	str	r3, [r2, #0]
 8003dc4:	bf00      	nop
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dcc:	4770      	bx	lr
 8003dce:	bf00      	nop
 8003dd0:	20000264 	.word	0x20000264
 8003dd4:	200007b8 	.word	0x200007b8

08003dd8 <HAL_GetTick>:
 8003dd8:	b480      	push	{r7}
 8003dda:	af00      	add	r7, sp, #0
 8003ddc:	4b03      	ldr	r3, [pc, #12]	@ (8003dec <HAL_GetTick+0x14>)
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	4618      	mov	r0, r3
 8003de2:	46bd      	mov	sp, r7
 8003de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de8:	4770      	bx	lr
 8003dea:	bf00      	nop
 8003dec:	200007b8 	.word	0x200007b8

08003df0 <HAL_Delay>:
 8003df0:	b580      	push	{r7, lr}
 8003df2:	b084      	sub	sp, #16
 8003df4:	af00      	add	r7, sp, #0
 8003df6:	6078      	str	r0, [r7, #4]
 8003df8:	f7ff ffee 	bl	8003dd8 <HAL_GetTick>
 8003dfc:	60b8      	str	r0, [r7, #8]
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	60fb      	str	r3, [r7, #12]
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003e08:	d005      	beq.n	8003e16 <HAL_Delay+0x26>
 8003e0a:	4b0a      	ldr	r3, [pc, #40]	@ (8003e34 <HAL_Delay+0x44>)
 8003e0c:	781b      	ldrb	r3, [r3, #0]
 8003e0e:	461a      	mov	r2, r3
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	4413      	add	r3, r2
 8003e14:	60fb      	str	r3, [r7, #12]
 8003e16:	bf00      	nop
 8003e18:	f7ff ffde 	bl	8003dd8 <HAL_GetTick>
 8003e1c:	4602      	mov	r2, r0
 8003e1e:	68bb      	ldr	r3, [r7, #8]
 8003e20:	1ad3      	subs	r3, r2, r3
 8003e22:	68fa      	ldr	r2, [r7, #12]
 8003e24:	429a      	cmp	r2, r3
 8003e26:	d8f7      	bhi.n	8003e18 <HAL_Delay+0x28>
 8003e28:	bf00      	nop
 8003e2a:	bf00      	nop
 8003e2c:	3710      	adds	r7, #16
 8003e2e:	46bd      	mov	sp, r7
 8003e30:	bd80      	pop	{r7, pc}
 8003e32:	bf00      	nop
 8003e34:	20000264 	.word	0x20000264

08003e38 <__NVIC_SetPriorityGrouping>:
 8003e38:	b480      	push	{r7}
 8003e3a:	b085      	sub	sp, #20
 8003e3c:	af00      	add	r7, sp, #0
 8003e3e:	6078      	str	r0, [r7, #4]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	f003 0307 	and.w	r3, r3, #7
 8003e46:	60fb      	str	r3, [r7, #12]
 8003e48:	4b0c      	ldr	r3, [pc, #48]	@ (8003e7c <__NVIC_SetPriorityGrouping+0x44>)
 8003e4a:	68db      	ldr	r3, [r3, #12]
 8003e4c:	60bb      	str	r3, [r7, #8]
 8003e4e:	68ba      	ldr	r2, [r7, #8]
 8003e50:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003e54:	4013      	ands	r3, r2
 8003e56:	60bb      	str	r3, [r7, #8]
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	021a      	lsls	r2, r3, #8
 8003e5c:	68bb      	ldr	r3, [r7, #8]
 8003e5e:	4313      	orrs	r3, r2
 8003e60:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003e64:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003e68:	60bb      	str	r3, [r7, #8]
 8003e6a:	4a04      	ldr	r2, [pc, #16]	@ (8003e7c <__NVIC_SetPriorityGrouping+0x44>)
 8003e6c:	68bb      	ldr	r3, [r7, #8]
 8003e6e:	60d3      	str	r3, [r2, #12]
 8003e70:	bf00      	nop
 8003e72:	3714      	adds	r7, #20
 8003e74:	46bd      	mov	sp, r7
 8003e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e7a:	4770      	bx	lr
 8003e7c:	e000ed00 	.word	0xe000ed00

08003e80 <__NVIC_GetPriorityGrouping>:
 8003e80:	b480      	push	{r7}
 8003e82:	af00      	add	r7, sp, #0
 8003e84:	4b04      	ldr	r3, [pc, #16]	@ (8003e98 <__NVIC_GetPriorityGrouping+0x18>)
 8003e86:	68db      	ldr	r3, [r3, #12]
 8003e88:	0a1b      	lsrs	r3, r3, #8
 8003e8a:	f003 0307 	and.w	r3, r3, #7
 8003e8e:	4618      	mov	r0, r3
 8003e90:	46bd      	mov	sp, r7
 8003e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e96:	4770      	bx	lr
 8003e98:	e000ed00 	.word	0xe000ed00

08003e9c <__NVIC_EnableIRQ>:
 8003e9c:	b480      	push	{r7}
 8003e9e:	b083      	sub	sp, #12
 8003ea0:	af00      	add	r7, sp, #0
 8003ea2:	4603      	mov	r3, r0
 8003ea4:	71fb      	strb	r3, [r7, #7]
 8003ea6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003eaa:	2b00      	cmp	r3, #0
 8003eac:	db0b      	blt.n	8003ec6 <__NVIC_EnableIRQ+0x2a>
 8003eae:	79fb      	ldrb	r3, [r7, #7]
 8003eb0:	f003 021f 	and.w	r2, r3, #31
 8003eb4:	4907      	ldr	r1, [pc, #28]	@ (8003ed4 <__NVIC_EnableIRQ+0x38>)
 8003eb6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003eba:	095b      	lsrs	r3, r3, #5
 8003ebc:	2001      	movs	r0, #1
 8003ebe:	fa00 f202 	lsl.w	r2, r0, r2
 8003ec2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ec6:	bf00      	nop
 8003ec8:	370c      	adds	r7, #12
 8003eca:	46bd      	mov	sp, r7
 8003ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed0:	4770      	bx	lr
 8003ed2:	bf00      	nop
 8003ed4:	e000e100 	.word	0xe000e100

08003ed8 <__NVIC_SetPriority>:
 8003ed8:	b480      	push	{r7}
 8003eda:	b083      	sub	sp, #12
 8003edc:	af00      	add	r7, sp, #0
 8003ede:	4603      	mov	r3, r0
 8003ee0:	6039      	str	r1, [r7, #0]
 8003ee2:	71fb      	strb	r3, [r7, #7]
 8003ee4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	db0a      	blt.n	8003f02 <__NVIC_SetPriority+0x2a>
 8003eec:	683b      	ldr	r3, [r7, #0]
 8003eee:	b2da      	uxtb	r2, r3
 8003ef0:	490c      	ldr	r1, [pc, #48]	@ (8003f24 <__NVIC_SetPriority+0x4c>)
 8003ef2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ef6:	0112      	lsls	r2, r2, #4
 8003ef8:	b2d2      	uxtb	r2, r2
 8003efa:	440b      	add	r3, r1
 8003efc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003f00:	e00a      	b.n	8003f18 <__NVIC_SetPriority+0x40>
 8003f02:	683b      	ldr	r3, [r7, #0]
 8003f04:	b2da      	uxtb	r2, r3
 8003f06:	4908      	ldr	r1, [pc, #32]	@ (8003f28 <__NVIC_SetPriority+0x50>)
 8003f08:	79fb      	ldrb	r3, [r7, #7]
 8003f0a:	f003 030f 	and.w	r3, r3, #15
 8003f0e:	3b04      	subs	r3, #4
 8003f10:	0112      	lsls	r2, r2, #4
 8003f12:	b2d2      	uxtb	r2, r2
 8003f14:	440b      	add	r3, r1
 8003f16:	761a      	strb	r2, [r3, #24]
 8003f18:	bf00      	nop
 8003f1a:	370c      	adds	r7, #12
 8003f1c:	46bd      	mov	sp, r7
 8003f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f22:	4770      	bx	lr
 8003f24:	e000e100 	.word	0xe000e100
 8003f28:	e000ed00 	.word	0xe000ed00

08003f2c <NVIC_EncodePriority>:
 8003f2c:	b480      	push	{r7}
 8003f2e:	b089      	sub	sp, #36	@ 0x24
 8003f30:	af00      	add	r7, sp, #0
 8003f32:	60f8      	str	r0, [r7, #12]
 8003f34:	60b9      	str	r1, [r7, #8]
 8003f36:	607a      	str	r2, [r7, #4]
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	f003 0307 	and.w	r3, r3, #7
 8003f3e:	61fb      	str	r3, [r7, #28]
 8003f40:	69fb      	ldr	r3, [r7, #28]
 8003f42:	f1c3 0307 	rsb	r3, r3, #7
 8003f46:	2b04      	cmp	r3, #4
 8003f48:	bf28      	it	cs
 8003f4a:	2304      	movcs	r3, #4
 8003f4c:	61bb      	str	r3, [r7, #24]
 8003f4e:	69fb      	ldr	r3, [r7, #28]
 8003f50:	3304      	adds	r3, #4
 8003f52:	2b06      	cmp	r3, #6
 8003f54:	d902      	bls.n	8003f5c <NVIC_EncodePriority+0x30>
 8003f56:	69fb      	ldr	r3, [r7, #28]
 8003f58:	3b03      	subs	r3, #3
 8003f5a:	e000      	b.n	8003f5e <NVIC_EncodePriority+0x32>
 8003f5c:	2300      	movs	r3, #0
 8003f5e:	617b      	str	r3, [r7, #20]
 8003f60:	f04f 32ff 	mov.w	r2, #4294967295
 8003f64:	69bb      	ldr	r3, [r7, #24]
 8003f66:	fa02 f303 	lsl.w	r3, r2, r3
 8003f6a:	43da      	mvns	r2, r3
 8003f6c:	68bb      	ldr	r3, [r7, #8]
 8003f6e:	401a      	ands	r2, r3
 8003f70:	697b      	ldr	r3, [r7, #20]
 8003f72:	409a      	lsls	r2, r3
 8003f74:	f04f 31ff 	mov.w	r1, #4294967295
 8003f78:	697b      	ldr	r3, [r7, #20]
 8003f7a:	fa01 f303 	lsl.w	r3, r1, r3
 8003f7e:	43d9      	mvns	r1, r3
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	400b      	ands	r3, r1
 8003f84:	4313      	orrs	r3, r2
 8003f86:	4618      	mov	r0, r3
 8003f88:	3724      	adds	r7, #36	@ 0x24
 8003f8a:	46bd      	mov	sp, r7
 8003f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f90:	4770      	bx	lr

08003f92 <HAL_NVIC_SetPriorityGrouping>:
 8003f92:	b580      	push	{r7, lr}
 8003f94:	b082      	sub	sp, #8
 8003f96:	af00      	add	r7, sp, #0
 8003f98:	6078      	str	r0, [r7, #4]
 8003f9a:	6878      	ldr	r0, [r7, #4]
 8003f9c:	f7ff ff4c 	bl	8003e38 <__NVIC_SetPriorityGrouping>
 8003fa0:	bf00      	nop
 8003fa2:	3708      	adds	r7, #8
 8003fa4:	46bd      	mov	sp, r7
 8003fa6:	bd80      	pop	{r7, pc}

08003fa8 <HAL_NVIC_SetPriority>:
 8003fa8:	b580      	push	{r7, lr}
 8003faa:	b086      	sub	sp, #24
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	4603      	mov	r3, r0
 8003fb0:	60b9      	str	r1, [r7, #8]
 8003fb2:	607a      	str	r2, [r7, #4]
 8003fb4:	73fb      	strb	r3, [r7, #15]
 8003fb6:	2300      	movs	r3, #0
 8003fb8:	617b      	str	r3, [r7, #20]
 8003fba:	f7ff ff61 	bl	8003e80 <__NVIC_GetPriorityGrouping>
 8003fbe:	6178      	str	r0, [r7, #20]
 8003fc0:	687a      	ldr	r2, [r7, #4]
 8003fc2:	68b9      	ldr	r1, [r7, #8]
 8003fc4:	6978      	ldr	r0, [r7, #20]
 8003fc6:	f7ff ffb1 	bl	8003f2c <NVIC_EncodePriority>
 8003fca:	4602      	mov	r2, r0
 8003fcc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003fd0:	4611      	mov	r1, r2
 8003fd2:	4618      	mov	r0, r3
 8003fd4:	f7ff ff80 	bl	8003ed8 <__NVIC_SetPriority>
 8003fd8:	bf00      	nop
 8003fda:	3718      	adds	r7, #24
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	bd80      	pop	{r7, pc}

08003fe0 <HAL_NVIC_EnableIRQ>:
 8003fe0:	b580      	push	{r7, lr}
 8003fe2:	b082      	sub	sp, #8
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	71fb      	strb	r3, [r7, #7]
 8003fea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003fee:	4618      	mov	r0, r3
 8003ff0:	f7ff ff54 	bl	8003e9c <__NVIC_EnableIRQ>
 8003ff4:	bf00      	nop
 8003ff6:	3708      	adds	r7, #8
 8003ff8:	46bd      	mov	sp, r7
 8003ffa:	bd80      	pop	{r7, pc}

08003ffc <HAL_DMA_Abort>:
 8003ffc:	b580      	push	{r7, lr}
 8003ffe:	b084      	sub	sp, #16
 8004000:	af00      	add	r7, sp, #0
 8004002:	6078      	str	r0, [r7, #4]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004008:	60fb      	str	r3, [r7, #12]
 800400a:	f7ff fee5 	bl	8003dd8 <HAL_GetTick>
 800400e:	60b8      	str	r0, [r7, #8]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004016:	b2db      	uxtb	r3, r3
 8004018:	2b02      	cmp	r3, #2
 800401a:	d008      	beq.n	800402e <HAL_DMA_Abort+0x32>
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	2280      	movs	r2, #128	@ 0x80
 8004020:	655a      	str	r2, [r3, #84]	@ 0x54
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	2200      	movs	r2, #0
 8004026:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800402a:	2301      	movs	r3, #1
 800402c:	e052      	b.n	80040d4 <HAL_DMA_Abort+0xd8>
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	681a      	ldr	r2, [r3, #0]
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	681b      	ldr	r3, [r3, #0]
 8004038:	f022 0216 	bic.w	r2, r2, #22
 800403c:	601a      	str	r2, [r3, #0]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	695a      	ldr	r2, [r3, #20]
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800404c:	615a      	str	r2, [r3, #20]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004052:	2b00      	cmp	r3, #0
 8004054:	d103      	bne.n	800405e <HAL_DMA_Abort+0x62>
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800405a:	2b00      	cmp	r3, #0
 800405c:	d007      	beq.n	800406e <HAL_DMA_Abort+0x72>
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	681a      	ldr	r2, [r3, #0]
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	f022 0208 	bic.w	r2, r2, #8
 800406c:	601a      	str	r2, [r3, #0]
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	681a      	ldr	r2, [r3, #0]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	f022 0201 	bic.w	r2, r2, #1
 800407c:	601a      	str	r2, [r3, #0]
 800407e:	e013      	b.n	80040a8 <HAL_DMA_Abort+0xac>
 8004080:	f7ff feaa 	bl	8003dd8 <HAL_GetTick>
 8004084:	4602      	mov	r2, r0
 8004086:	68bb      	ldr	r3, [r7, #8]
 8004088:	1ad3      	subs	r3, r2, r3
 800408a:	2b05      	cmp	r3, #5
 800408c:	d90c      	bls.n	80040a8 <HAL_DMA_Abort+0xac>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	2220      	movs	r2, #32
 8004092:	655a      	str	r2, [r3, #84]	@ 0x54
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	2203      	movs	r2, #3
 8004098:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	2200      	movs	r2, #0
 80040a0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80040a4:	2303      	movs	r3, #3
 80040a6:	e015      	b.n	80040d4 <HAL_DMA_Abort+0xd8>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f003 0301 	and.w	r3, r3, #1
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d1e4      	bne.n	8004080 <HAL_DMA_Abort+0x84>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80040ba:	223f      	movs	r2, #63	@ 0x3f
 80040bc:	409a      	lsls	r2, r3
 80040be:	68fb      	ldr	r3, [r7, #12]
 80040c0:	609a      	str	r2, [r3, #8]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	2201      	movs	r2, #1
 80040c6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	2200      	movs	r2, #0
 80040ce:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80040d2:	2300      	movs	r3, #0
 80040d4:	4618      	mov	r0, r3
 80040d6:	3710      	adds	r7, #16
 80040d8:	46bd      	mov	sp, r7
 80040da:	bd80      	pop	{r7, pc}

080040dc <HAL_DMA_Abort_IT>:
 80040dc:	b480      	push	{r7}
 80040de:	b083      	sub	sp, #12
 80040e0:	af00      	add	r7, sp, #0
 80040e2:	6078      	str	r0, [r7, #4]
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80040ea:	b2db      	uxtb	r3, r3
 80040ec:	2b02      	cmp	r3, #2
 80040ee:	d004      	beq.n	80040fa <HAL_DMA_Abort_IT+0x1e>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	2280      	movs	r2, #128	@ 0x80
 80040f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80040f6:	2301      	movs	r3, #1
 80040f8:	e00c      	b.n	8004114 <HAL_DMA_Abort_IT+0x38>
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	2205      	movs	r2, #5
 80040fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	681a      	ldr	r2, [r3, #0]
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	f022 0201 	bic.w	r2, r2, #1
 8004110:	601a      	str	r2, [r3, #0]
 8004112:	2300      	movs	r3, #0
 8004114:	4618      	mov	r0, r3
 8004116:	370c      	adds	r7, #12
 8004118:	46bd      	mov	sp, r7
 800411a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800411e:	4770      	bx	lr

08004120 <HAL_GPIO_Init>:
 8004120:	b480      	push	{r7}
 8004122:	b089      	sub	sp, #36	@ 0x24
 8004124:	af00      	add	r7, sp, #0
 8004126:	6078      	str	r0, [r7, #4]
 8004128:	6039      	str	r1, [r7, #0]
 800412a:	2300      	movs	r3, #0
 800412c:	617b      	str	r3, [r7, #20]
 800412e:	2300      	movs	r3, #0
 8004130:	613b      	str	r3, [r7, #16]
 8004132:	2300      	movs	r3, #0
 8004134:	61bb      	str	r3, [r7, #24]
 8004136:	2300      	movs	r3, #0
 8004138:	61fb      	str	r3, [r7, #28]
 800413a:	e16b      	b.n	8004414 <HAL_GPIO_Init+0x2f4>
 800413c:	2201      	movs	r2, #1
 800413e:	69fb      	ldr	r3, [r7, #28]
 8004140:	fa02 f303 	lsl.w	r3, r2, r3
 8004144:	617b      	str	r3, [r7, #20]
 8004146:	683b      	ldr	r3, [r7, #0]
 8004148:	681b      	ldr	r3, [r3, #0]
 800414a:	697a      	ldr	r2, [r7, #20]
 800414c:	4013      	ands	r3, r2
 800414e:	613b      	str	r3, [r7, #16]
 8004150:	693a      	ldr	r2, [r7, #16]
 8004152:	697b      	ldr	r3, [r7, #20]
 8004154:	429a      	cmp	r2, r3
 8004156:	f040 815a 	bne.w	800440e <HAL_GPIO_Init+0x2ee>
 800415a:	683b      	ldr	r3, [r7, #0]
 800415c:	685b      	ldr	r3, [r3, #4]
 800415e:	f003 0303 	and.w	r3, r3, #3
 8004162:	2b01      	cmp	r3, #1
 8004164:	d005      	beq.n	8004172 <HAL_GPIO_Init+0x52>
 8004166:	683b      	ldr	r3, [r7, #0]
 8004168:	685b      	ldr	r3, [r3, #4]
 800416a:	f003 0303 	and.w	r3, r3, #3
 800416e:	2b02      	cmp	r3, #2
 8004170:	d130      	bne.n	80041d4 <HAL_GPIO_Init+0xb4>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	689b      	ldr	r3, [r3, #8]
 8004176:	61bb      	str	r3, [r7, #24]
 8004178:	69fb      	ldr	r3, [r7, #28]
 800417a:	005b      	lsls	r3, r3, #1
 800417c:	2203      	movs	r2, #3
 800417e:	fa02 f303 	lsl.w	r3, r2, r3
 8004182:	43db      	mvns	r3, r3
 8004184:	69ba      	ldr	r2, [r7, #24]
 8004186:	4013      	ands	r3, r2
 8004188:	61bb      	str	r3, [r7, #24]
 800418a:	683b      	ldr	r3, [r7, #0]
 800418c:	68da      	ldr	r2, [r3, #12]
 800418e:	69fb      	ldr	r3, [r7, #28]
 8004190:	005b      	lsls	r3, r3, #1
 8004192:	fa02 f303 	lsl.w	r3, r2, r3
 8004196:	69ba      	ldr	r2, [r7, #24]
 8004198:	4313      	orrs	r3, r2
 800419a:	61bb      	str	r3, [r7, #24]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	69ba      	ldr	r2, [r7, #24]
 80041a0:	609a      	str	r2, [r3, #8]
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	685b      	ldr	r3, [r3, #4]
 80041a6:	61bb      	str	r3, [r7, #24]
 80041a8:	2201      	movs	r2, #1
 80041aa:	69fb      	ldr	r3, [r7, #28]
 80041ac:	fa02 f303 	lsl.w	r3, r2, r3
 80041b0:	43db      	mvns	r3, r3
 80041b2:	69ba      	ldr	r2, [r7, #24]
 80041b4:	4013      	ands	r3, r2
 80041b6:	61bb      	str	r3, [r7, #24]
 80041b8:	683b      	ldr	r3, [r7, #0]
 80041ba:	685b      	ldr	r3, [r3, #4]
 80041bc:	091b      	lsrs	r3, r3, #4
 80041be:	f003 0201 	and.w	r2, r3, #1
 80041c2:	69fb      	ldr	r3, [r7, #28]
 80041c4:	fa02 f303 	lsl.w	r3, r2, r3
 80041c8:	69ba      	ldr	r2, [r7, #24]
 80041ca:	4313      	orrs	r3, r2
 80041cc:	61bb      	str	r3, [r7, #24]
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	69ba      	ldr	r2, [r7, #24]
 80041d2:	605a      	str	r2, [r3, #4]
 80041d4:	683b      	ldr	r3, [r7, #0]
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	f003 0303 	and.w	r3, r3, #3
 80041dc:	2b03      	cmp	r3, #3
 80041de:	d017      	beq.n	8004210 <HAL_GPIO_Init+0xf0>
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	68db      	ldr	r3, [r3, #12]
 80041e4:	61bb      	str	r3, [r7, #24]
 80041e6:	69fb      	ldr	r3, [r7, #28]
 80041e8:	005b      	lsls	r3, r3, #1
 80041ea:	2203      	movs	r2, #3
 80041ec:	fa02 f303 	lsl.w	r3, r2, r3
 80041f0:	43db      	mvns	r3, r3
 80041f2:	69ba      	ldr	r2, [r7, #24]
 80041f4:	4013      	ands	r3, r2
 80041f6:	61bb      	str	r3, [r7, #24]
 80041f8:	683b      	ldr	r3, [r7, #0]
 80041fa:	689a      	ldr	r2, [r3, #8]
 80041fc:	69fb      	ldr	r3, [r7, #28]
 80041fe:	005b      	lsls	r3, r3, #1
 8004200:	fa02 f303 	lsl.w	r3, r2, r3
 8004204:	69ba      	ldr	r2, [r7, #24]
 8004206:	4313      	orrs	r3, r2
 8004208:	61bb      	str	r3, [r7, #24]
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	69ba      	ldr	r2, [r7, #24]
 800420e:	60da      	str	r2, [r3, #12]
 8004210:	683b      	ldr	r3, [r7, #0]
 8004212:	685b      	ldr	r3, [r3, #4]
 8004214:	f003 0303 	and.w	r3, r3, #3
 8004218:	2b02      	cmp	r3, #2
 800421a:	d123      	bne.n	8004264 <HAL_GPIO_Init+0x144>
 800421c:	69fb      	ldr	r3, [r7, #28]
 800421e:	08da      	lsrs	r2, r3, #3
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	3208      	adds	r2, #8
 8004224:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004228:	61bb      	str	r3, [r7, #24]
 800422a:	69fb      	ldr	r3, [r7, #28]
 800422c:	f003 0307 	and.w	r3, r3, #7
 8004230:	009b      	lsls	r3, r3, #2
 8004232:	220f      	movs	r2, #15
 8004234:	fa02 f303 	lsl.w	r3, r2, r3
 8004238:	43db      	mvns	r3, r3
 800423a:	69ba      	ldr	r2, [r7, #24]
 800423c:	4013      	ands	r3, r2
 800423e:	61bb      	str	r3, [r7, #24]
 8004240:	683b      	ldr	r3, [r7, #0]
 8004242:	691a      	ldr	r2, [r3, #16]
 8004244:	69fb      	ldr	r3, [r7, #28]
 8004246:	f003 0307 	and.w	r3, r3, #7
 800424a:	009b      	lsls	r3, r3, #2
 800424c:	fa02 f303 	lsl.w	r3, r2, r3
 8004250:	69ba      	ldr	r2, [r7, #24]
 8004252:	4313      	orrs	r3, r2
 8004254:	61bb      	str	r3, [r7, #24]
 8004256:	69fb      	ldr	r3, [r7, #28]
 8004258:	08da      	lsrs	r2, r3, #3
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	3208      	adds	r2, #8
 800425e:	69b9      	ldr	r1, [r7, #24]
 8004260:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	61bb      	str	r3, [r7, #24]
 800426a:	69fb      	ldr	r3, [r7, #28]
 800426c:	005b      	lsls	r3, r3, #1
 800426e:	2203      	movs	r2, #3
 8004270:	fa02 f303 	lsl.w	r3, r2, r3
 8004274:	43db      	mvns	r3, r3
 8004276:	69ba      	ldr	r2, [r7, #24]
 8004278:	4013      	ands	r3, r2
 800427a:	61bb      	str	r3, [r7, #24]
 800427c:	683b      	ldr	r3, [r7, #0]
 800427e:	685b      	ldr	r3, [r3, #4]
 8004280:	f003 0203 	and.w	r2, r3, #3
 8004284:	69fb      	ldr	r3, [r7, #28]
 8004286:	005b      	lsls	r3, r3, #1
 8004288:	fa02 f303 	lsl.w	r3, r2, r3
 800428c:	69ba      	ldr	r2, [r7, #24]
 800428e:	4313      	orrs	r3, r2
 8004290:	61bb      	str	r3, [r7, #24]
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	69ba      	ldr	r2, [r7, #24]
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	683b      	ldr	r3, [r7, #0]
 800429a:	685b      	ldr	r3, [r3, #4]
 800429c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	f000 80b4 	beq.w	800440e <HAL_GPIO_Init+0x2ee>
 80042a6:	2300      	movs	r3, #0
 80042a8:	60fb      	str	r3, [r7, #12]
 80042aa:	4b60      	ldr	r3, [pc, #384]	@ (800442c <HAL_GPIO_Init+0x30c>)
 80042ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80042ae:	4a5f      	ldr	r2, [pc, #380]	@ (800442c <HAL_GPIO_Init+0x30c>)
 80042b0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80042b4:	6453      	str	r3, [r2, #68]	@ 0x44
 80042b6:	4b5d      	ldr	r3, [pc, #372]	@ (800442c <HAL_GPIO_Init+0x30c>)
 80042b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80042ba:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80042be:	60fb      	str	r3, [r7, #12]
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	4a5b      	ldr	r2, [pc, #364]	@ (8004430 <HAL_GPIO_Init+0x310>)
 80042c4:	69fb      	ldr	r3, [r7, #28]
 80042c6:	089b      	lsrs	r3, r3, #2
 80042c8:	3302      	adds	r3, #2
 80042ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80042ce:	61bb      	str	r3, [r7, #24]
 80042d0:	69fb      	ldr	r3, [r7, #28]
 80042d2:	f003 0303 	and.w	r3, r3, #3
 80042d6:	009b      	lsls	r3, r3, #2
 80042d8:	220f      	movs	r2, #15
 80042da:	fa02 f303 	lsl.w	r3, r2, r3
 80042de:	43db      	mvns	r3, r3
 80042e0:	69ba      	ldr	r2, [r7, #24]
 80042e2:	4013      	ands	r3, r2
 80042e4:	61bb      	str	r3, [r7, #24]
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	4a52      	ldr	r2, [pc, #328]	@ (8004434 <HAL_GPIO_Init+0x314>)
 80042ea:	4293      	cmp	r3, r2
 80042ec:	d02b      	beq.n	8004346 <HAL_GPIO_Init+0x226>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	4a51      	ldr	r2, [pc, #324]	@ (8004438 <HAL_GPIO_Init+0x318>)
 80042f2:	4293      	cmp	r3, r2
 80042f4:	d025      	beq.n	8004342 <HAL_GPIO_Init+0x222>
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	4a50      	ldr	r2, [pc, #320]	@ (800443c <HAL_GPIO_Init+0x31c>)
 80042fa:	4293      	cmp	r3, r2
 80042fc:	d01f      	beq.n	800433e <HAL_GPIO_Init+0x21e>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	4a4f      	ldr	r2, [pc, #316]	@ (8004440 <HAL_GPIO_Init+0x320>)
 8004302:	4293      	cmp	r3, r2
 8004304:	d019      	beq.n	800433a <HAL_GPIO_Init+0x21a>
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	4a4e      	ldr	r2, [pc, #312]	@ (8004444 <HAL_GPIO_Init+0x324>)
 800430a:	4293      	cmp	r3, r2
 800430c:	d013      	beq.n	8004336 <HAL_GPIO_Init+0x216>
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	4a4d      	ldr	r2, [pc, #308]	@ (8004448 <HAL_GPIO_Init+0x328>)
 8004312:	4293      	cmp	r3, r2
 8004314:	d00d      	beq.n	8004332 <HAL_GPIO_Init+0x212>
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	4a4c      	ldr	r2, [pc, #304]	@ (800444c <HAL_GPIO_Init+0x32c>)
 800431a:	4293      	cmp	r3, r2
 800431c:	d007      	beq.n	800432e <HAL_GPIO_Init+0x20e>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	4a4b      	ldr	r2, [pc, #300]	@ (8004450 <HAL_GPIO_Init+0x330>)
 8004322:	4293      	cmp	r3, r2
 8004324:	d101      	bne.n	800432a <HAL_GPIO_Init+0x20a>
 8004326:	2307      	movs	r3, #7
 8004328:	e00e      	b.n	8004348 <HAL_GPIO_Init+0x228>
 800432a:	2308      	movs	r3, #8
 800432c:	e00c      	b.n	8004348 <HAL_GPIO_Init+0x228>
 800432e:	2306      	movs	r3, #6
 8004330:	e00a      	b.n	8004348 <HAL_GPIO_Init+0x228>
 8004332:	2305      	movs	r3, #5
 8004334:	e008      	b.n	8004348 <HAL_GPIO_Init+0x228>
 8004336:	2304      	movs	r3, #4
 8004338:	e006      	b.n	8004348 <HAL_GPIO_Init+0x228>
 800433a:	2303      	movs	r3, #3
 800433c:	e004      	b.n	8004348 <HAL_GPIO_Init+0x228>
 800433e:	2302      	movs	r3, #2
 8004340:	e002      	b.n	8004348 <HAL_GPIO_Init+0x228>
 8004342:	2301      	movs	r3, #1
 8004344:	e000      	b.n	8004348 <HAL_GPIO_Init+0x228>
 8004346:	2300      	movs	r3, #0
 8004348:	69fa      	ldr	r2, [r7, #28]
 800434a:	f002 0203 	and.w	r2, r2, #3
 800434e:	0092      	lsls	r2, r2, #2
 8004350:	4093      	lsls	r3, r2
 8004352:	69ba      	ldr	r2, [r7, #24]
 8004354:	4313      	orrs	r3, r2
 8004356:	61bb      	str	r3, [r7, #24]
 8004358:	4935      	ldr	r1, [pc, #212]	@ (8004430 <HAL_GPIO_Init+0x310>)
 800435a:	69fb      	ldr	r3, [r7, #28]
 800435c:	089b      	lsrs	r3, r3, #2
 800435e:	3302      	adds	r3, #2
 8004360:	69ba      	ldr	r2, [r7, #24]
 8004362:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004366:	4b3b      	ldr	r3, [pc, #236]	@ (8004454 <HAL_GPIO_Init+0x334>)
 8004368:	689b      	ldr	r3, [r3, #8]
 800436a:	61bb      	str	r3, [r7, #24]
 800436c:	693b      	ldr	r3, [r7, #16]
 800436e:	43db      	mvns	r3, r3
 8004370:	69ba      	ldr	r2, [r7, #24]
 8004372:	4013      	ands	r3, r2
 8004374:	61bb      	str	r3, [r7, #24]
 8004376:	683b      	ldr	r3, [r7, #0]
 8004378:	685b      	ldr	r3, [r3, #4]
 800437a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800437e:	2b00      	cmp	r3, #0
 8004380:	d003      	beq.n	800438a <HAL_GPIO_Init+0x26a>
 8004382:	69ba      	ldr	r2, [r7, #24]
 8004384:	693b      	ldr	r3, [r7, #16]
 8004386:	4313      	orrs	r3, r2
 8004388:	61bb      	str	r3, [r7, #24]
 800438a:	4a32      	ldr	r2, [pc, #200]	@ (8004454 <HAL_GPIO_Init+0x334>)
 800438c:	69bb      	ldr	r3, [r7, #24]
 800438e:	6093      	str	r3, [r2, #8]
 8004390:	4b30      	ldr	r3, [pc, #192]	@ (8004454 <HAL_GPIO_Init+0x334>)
 8004392:	68db      	ldr	r3, [r3, #12]
 8004394:	61bb      	str	r3, [r7, #24]
 8004396:	693b      	ldr	r3, [r7, #16]
 8004398:	43db      	mvns	r3, r3
 800439a:	69ba      	ldr	r2, [r7, #24]
 800439c:	4013      	ands	r3, r2
 800439e:	61bb      	str	r3, [r7, #24]
 80043a0:	683b      	ldr	r3, [r7, #0]
 80043a2:	685b      	ldr	r3, [r3, #4]
 80043a4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	d003      	beq.n	80043b4 <HAL_GPIO_Init+0x294>
 80043ac:	69ba      	ldr	r2, [r7, #24]
 80043ae:	693b      	ldr	r3, [r7, #16]
 80043b0:	4313      	orrs	r3, r2
 80043b2:	61bb      	str	r3, [r7, #24]
 80043b4:	4a27      	ldr	r2, [pc, #156]	@ (8004454 <HAL_GPIO_Init+0x334>)
 80043b6:	69bb      	ldr	r3, [r7, #24]
 80043b8:	60d3      	str	r3, [r2, #12]
 80043ba:	4b26      	ldr	r3, [pc, #152]	@ (8004454 <HAL_GPIO_Init+0x334>)
 80043bc:	685b      	ldr	r3, [r3, #4]
 80043be:	61bb      	str	r3, [r7, #24]
 80043c0:	693b      	ldr	r3, [r7, #16]
 80043c2:	43db      	mvns	r3, r3
 80043c4:	69ba      	ldr	r2, [r7, #24]
 80043c6:	4013      	ands	r3, r2
 80043c8:	61bb      	str	r3, [r7, #24]
 80043ca:	683b      	ldr	r3, [r7, #0]
 80043cc:	685b      	ldr	r3, [r3, #4]
 80043ce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d003      	beq.n	80043de <HAL_GPIO_Init+0x2be>
 80043d6:	69ba      	ldr	r2, [r7, #24]
 80043d8:	693b      	ldr	r3, [r7, #16]
 80043da:	4313      	orrs	r3, r2
 80043dc:	61bb      	str	r3, [r7, #24]
 80043de:	4a1d      	ldr	r2, [pc, #116]	@ (8004454 <HAL_GPIO_Init+0x334>)
 80043e0:	69bb      	ldr	r3, [r7, #24]
 80043e2:	6053      	str	r3, [r2, #4]
 80043e4:	4b1b      	ldr	r3, [pc, #108]	@ (8004454 <HAL_GPIO_Init+0x334>)
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	61bb      	str	r3, [r7, #24]
 80043ea:	693b      	ldr	r3, [r7, #16]
 80043ec:	43db      	mvns	r3, r3
 80043ee:	69ba      	ldr	r2, [r7, #24]
 80043f0:	4013      	ands	r3, r2
 80043f2:	61bb      	str	r3, [r7, #24]
 80043f4:	683b      	ldr	r3, [r7, #0]
 80043f6:	685b      	ldr	r3, [r3, #4]
 80043f8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80043fc:	2b00      	cmp	r3, #0
 80043fe:	d003      	beq.n	8004408 <HAL_GPIO_Init+0x2e8>
 8004400:	69ba      	ldr	r2, [r7, #24]
 8004402:	693b      	ldr	r3, [r7, #16]
 8004404:	4313      	orrs	r3, r2
 8004406:	61bb      	str	r3, [r7, #24]
 8004408:	4a12      	ldr	r2, [pc, #72]	@ (8004454 <HAL_GPIO_Init+0x334>)
 800440a:	69bb      	ldr	r3, [r7, #24]
 800440c:	6013      	str	r3, [r2, #0]
 800440e:	69fb      	ldr	r3, [r7, #28]
 8004410:	3301      	adds	r3, #1
 8004412:	61fb      	str	r3, [r7, #28]
 8004414:	69fb      	ldr	r3, [r7, #28]
 8004416:	2b0f      	cmp	r3, #15
 8004418:	f67f ae90 	bls.w	800413c <HAL_GPIO_Init+0x1c>
 800441c:	bf00      	nop
 800441e:	bf00      	nop
 8004420:	3724      	adds	r7, #36	@ 0x24
 8004422:	46bd      	mov	sp, r7
 8004424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004428:	4770      	bx	lr
 800442a:	bf00      	nop
 800442c:	40023800 	.word	0x40023800
 8004430:	40013800 	.word	0x40013800
 8004434:	40020000 	.word	0x40020000
 8004438:	40020400 	.word	0x40020400
 800443c:	40020800 	.word	0x40020800
 8004440:	40020c00 	.word	0x40020c00
 8004444:	40021000 	.word	0x40021000
 8004448:	40021400 	.word	0x40021400
 800444c:	40021800 	.word	0x40021800
 8004450:	40021c00 	.word	0x40021c00
 8004454:	40013c00 	.word	0x40013c00

08004458 <HAL_GPIO_ReadPin>:
 8004458:	b480      	push	{r7}
 800445a:	b085      	sub	sp, #20
 800445c:	af00      	add	r7, sp, #0
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	460b      	mov	r3, r1
 8004462:	807b      	strh	r3, [r7, #2]
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	691a      	ldr	r2, [r3, #16]
 8004468:	887b      	ldrh	r3, [r7, #2]
 800446a:	4013      	ands	r3, r2
 800446c:	2b00      	cmp	r3, #0
 800446e:	d002      	beq.n	8004476 <HAL_GPIO_ReadPin+0x1e>
 8004470:	2301      	movs	r3, #1
 8004472:	73fb      	strb	r3, [r7, #15]
 8004474:	e001      	b.n	800447a <HAL_GPIO_ReadPin+0x22>
 8004476:	2300      	movs	r3, #0
 8004478:	73fb      	strb	r3, [r7, #15]
 800447a:	7bfb      	ldrb	r3, [r7, #15]
 800447c:	4618      	mov	r0, r3
 800447e:	3714      	adds	r7, #20
 8004480:	46bd      	mov	sp, r7
 8004482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004486:	4770      	bx	lr

08004488 <HAL_GPIO_WritePin>:
 8004488:	b480      	push	{r7}
 800448a:	b083      	sub	sp, #12
 800448c:	af00      	add	r7, sp, #0
 800448e:	6078      	str	r0, [r7, #4]
 8004490:	460b      	mov	r3, r1
 8004492:	807b      	strh	r3, [r7, #2]
 8004494:	4613      	mov	r3, r2
 8004496:	707b      	strb	r3, [r7, #1]
 8004498:	787b      	ldrb	r3, [r7, #1]
 800449a:	2b00      	cmp	r3, #0
 800449c:	d003      	beq.n	80044a6 <HAL_GPIO_WritePin+0x1e>
 800449e:	887a      	ldrh	r2, [r7, #2]
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	619a      	str	r2, [r3, #24]
 80044a4:	e003      	b.n	80044ae <HAL_GPIO_WritePin+0x26>
 80044a6:	887b      	ldrh	r3, [r7, #2]
 80044a8:	041a      	lsls	r2, r3, #16
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	619a      	str	r2, [r3, #24]
 80044ae:	bf00      	nop
 80044b0:	370c      	adds	r7, #12
 80044b2:	46bd      	mov	sp, r7
 80044b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044b8:	4770      	bx	lr

080044ba <HAL_GPIO_TogglePin>:
 80044ba:	b480      	push	{r7}
 80044bc:	b085      	sub	sp, #20
 80044be:	af00      	add	r7, sp, #0
 80044c0:	6078      	str	r0, [r7, #4]
 80044c2:	460b      	mov	r3, r1
 80044c4:	807b      	strh	r3, [r7, #2]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	695b      	ldr	r3, [r3, #20]
 80044ca:	60fb      	str	r3, [r7, #12]
 80044cc:	887a      	ldrh	r2, [r7, #2]
 80044ce:	68fb      	ldr	r3, [r7, #12]
 80044d0:	4013      	ands	r3, r2
 80044d2:	041a      	lsls	r2, r3, #16
 80044d4:	68fb      	ldr	r3, [r7, #12]
 80044d6:	43d9      	mvns	r1, r3
 80044d8:	887b      	ldrh	r3, [r7, #2]
 80044da:	400b      	ands	r3, r1
 80044dc:	431a      	orrs	r2, r3
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	619a      	str	r2, [r3, #24]
 80044e2:	bf00      	nop
 80044e4:	3714      	adds	r7, #20
 80044e6:	46bd      	mov	sp, r7
 80044e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044ec:	4770      	bx	lr
	...

080044f0 <HAL_GPIO_EXTI_IRQHandler>:
 80044f0:	b580      	push	{r7, lr}
 80044f2:	b082      	sub	sp, #8
 80044f4:	af00      	add	r7, sp, #0
 80044f6:	4603      	mov	r3, r0
 80044f8:	80fb      	strh	r3, [r7, #6]
 80044fa:	4b08      	ldr	r3, [pc, #32]	@ (800451c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80044fc:	695a      	ldr	r2, [r3, #20]
 80044fe:	88fb      	ldrh	r3, [r7, #6]
 8004500:	4013      	ands	r3, r2
 8004502:	2b00      	cmp	r3, #0
 8004504:	d006      	beq.n	8004514 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004506:	4a05      	ldr	r2, [pc, #20]	@ (800451c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004508:	88fb      	ldrh	r3, [r7, #6]
 800450a:	6153      	str	r3, [r2, #20]
 800450c:	88fb      	ldrh	r3, [r7, #6]
 800450e:	4618      	mov	r0, r3
 8004510:	f000 f806 	bl	8004520 <HAL_GPIO_EXTI_Callback>
 8004514:	bf00      	nop
 8004516:	3708      	adds	r7, #8
 8004518:	46bd      	mov	sp, r7
 800451a:	bd80      	pop	{r7, pc}
 800451c:	40013c00 	.word	0x40013c00

08004520 <HAL_GPIO_EXTI_Callback>:
 8004520:	b480      	push	{r7}
 8004522:	b083      	sub	sp, #12
 8004524:	af00      	add	r7, sp, #0
 8004526:	4603      	mov	r3, r0
 8004528:	80fb      	strh	r3, [r7, #6]
 800452a:	bf00      	nop
 800452c:	370c      	adds	r7, #12
 800452e:	46bd      	mov	sp, r7
 8004530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004534:	4770      	bx	lr

08004536 <HAL_HCD_Init>:
 8004536:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004538:	b08f      	sub	sp, #60	@ 0x3c
 800453a:	af0a      	add	r7, sp, #40	@ 0x28
 800453c:	6078      	str	r0, [r7, #4]
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	2b00      	cmp	r3, #0
 8004542:	d101      	bne.n	8004548 <HAL_HCD_Init+0x12>
 8004544:	2301      	movs	r3, #1
 8004546:	e054      	b.n	80045f2 <HAL_HCD_Init+0xbc>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	60fb      	str	r3, [r7, #12]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	f893 32f9 	ldrb.w	r3, [r3, #761]	@ 0x2f9
 8004554:	b2db      	uxtb	r3, r3
 8004556:	2b00      	cmp	r3, #0
 8004558:	d106      	bne.n	8004568 <HAL_HCD_Init+0x32>
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	2200      	movs	r2, #0
 800455e:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004562:	6878      	ldr	r0, [r7, #4]
 8004564:	f00c f8cc 	bl	8010700 <HAL_HCD_MspInit>
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	2203      	movs	r2, #3
 800456c:	f883 22f9 	strb.w	r2, [r3, #761]	@ 0x2f9
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004574:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004578:	2b00      	cmp	r3, #0
 800457a:	d102      	bne.n	8004582 <HAL_HCD_Init+0x4c>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	2200      	movs	r2, #0
 8004580:	611a      	str	r2, [r3, #16]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	4618      	mov	r0, r3
 8004588:	f004 fbee 	bl	8008d68 <USB_DisableGlobalInt>
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	603b      	str	r3, [r7, #0]
 8004592:	687e      	ldr	r6, [r7, #4]
 8004594:	466d      	mov	r5, sp
 8004596:	f106 0410 	add.w	r4, r6, #16
 800459a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800459c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800459e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80045a0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80045a2:	e894 0003 	ldmia.w	r4, {r0, r1}
 80045a6:	e885 0003 	stmia.w	r5, {r0, r1}
 80045aa:	1d33      	adds	r3, r6, #4
 80045ac:	cb0e      	ldmia	r3, {r1, r2, r3}
 80045ae:	6838      	ldr	r0, [r7, #0]
 80045b0:	f004 fb68 	bl	8008c84 <USB_CoreInit>
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	2101      	movs	r1, #1
 80045ba:	4618      	mov	r0, r3
 80045bc:	f004 fbe5 	bl	8008d8a <USB_SetCurrentMode>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	603b      	str	r3, [r7, #0]
 80045c6:	687e      	ldr	r6, [r7, #4]
 80045c8:	466d      	mov	r5, sp
 80045ca:	f106 0410 	add.w	r4, r6, #16
 80045ce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80045d0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80045d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80045d4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80045d6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80045da:	e885 0003 	stmia.w	r5, {r0, r1}
 80045de:	1d33      	adds	r3, r6, #4
 80045e0:	cb0e      	ldmia	r3, {r1, r2, r3}
 80045e2:	6838      	ldr	r0, [r7, #0]
 80045e4:	f004 fd6e 	bl	80090c4 <USB_HostInit>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2201      	movs	r2, #1
 80045ec:	f883 22f9 	strb.w	r2, [r3, #761]	@ 0x2f9
 80045f0:	2300      	movs	r3, #0
 80045f2:	4618      	mov	r0, r3
 80045f4:	3714      	adds	r7, #20
 80045f6:	46bd      	mov	sp, r7
 80045f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080045fa <HAL_HCD_HC_Init>:
 80045fa:	b590      	push	{r4, r7, lr}
 80045fc:	b089      	sub	sp, #36	@ 0x24
 80045fe:	af04      	add	r7, sp, #16
 8004600:	6078      	str	r0, [r7, #4]
 8004602:	4608      	mov	r0, r1
 8004604:	4611      	mov	r1, r2
 8004606:	461a      	mov	r2, r3
 8004608:	4603      	mov	r3, r0
 800460a:	70fb      	strb	r3, [r7, #3]
 800460c:	460b      	mov	r3, r1
 800460e:	70bb      	strb	r3, [r7, #2]
 8004610:	4613      	mov	r3, r2
 8004612:	707b      	strb	r3, [r7, #1]
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	f893 32f8 	ldrb.w	r3, [r3, #760]	@ 0x2f8
 800461a:	2b01      	cmp	r3, #1
 800461c:	d101      	bne.n	8004622 <HAL_HCD_HC_Init+0x28>
 800461e:	2302      	movs	r3, #2
 8004620:	e076      	b.n	8004710 <HAL_HCD_HC_Init+0x116>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	2201      	movs	r2, #1
 8004626:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 800462a:	78fb      	ldrb	r3, [r7, #3]
 800462c:	687a      	ldr	r2, [r7, #4]
 800462e:	212c      	movs	r1, #44	@ 0x2c
 8004630:	fb01 f303 	mul.w	r3, r1, r3
 8004634:	4413      	add	r3, r2
 8004636:	333d      	adds	r3, #61	@ 0x3d
 8004638:	2200      	movs	r2, #0
 800463a:	701a      	strb	r2, [r3, #0]
 800463c:	78fb      	ldrb	r3, [r7, #3]
 800463e:	687a      	ldr	r2, [r7, #4]
 8004640:	212c      	movs	r1, #44	@ 0x2c
 8004642:	fb01 f303 	mul.w	r3, r1, r3
 8004646:	4413      	add	r3, r2
 8004648:	3338      	adds	r3, #56	@ 0x38
 800464a:	787a      	ldrb	r2, [r7, #1]
 800464c:	701a      	strb	r2, [r3, #0]
 800464e:	78fb      	ldrb	r3, [r7, #3]
 8004650:	687a      	ldr	r2, [r7, #4]
 8004652:	212c      	movs	r1, #44	@ 0x2c
 8004654:	fb01 f303 	mul.w	r3, r1, r3
 8004658:	4413      	add	r3, r2
 800465a:	3340      	adds	r3, #64	@ 0x40
 800465c:	8d3a      	ldrh	r2, [r7, #40]	@ 0x28
 800465e:	801a      	strh	r2, [r3, #0]
 8004660:	78fb      	ldrb	r3, [r7, #3]
 8004662:	687a      	ldr	r2, [r7, #4]
 8004664:	212c      	movs	r1, #44	@ 0x2c
 8004666:	fb01 f303 	mul.w	r3, r1, r3
 800466a:	4413      	add	r3, r2
 800466c:	3339      	adds	r3, #57	@ 0x39
 800466e:	78fa      	ldrb	r2, [r7, #3]
 8004670:	701a      	strb	r2, [r3, #0]
 8004672:	78fb      	ldrb	r3, [r7, #3]
 8004674:	687a      	ldr	r2, [r7, #4]
 8004676:	212c      	movs	r1, #44	@ 0x2c
 8004678:	fb01 f303 	mul.w	r3, r1, r3
 800467c:	4413      	add	r3, r2
 800467e:	333f      	adds	r3, #63	@ 0x3f
 8004680:	f897 2024 	ldrb.w	r2, [r7, #36]	@ 0x24
 8004684:	701a      	strb	r2, [r3, #0]
 8004686:	78fb      	ldrb	r3, [r7, #3]
 8004688:	78ba      	ldrb	r2, [r7, #2]
 800468a:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800468e:	b2d0      	uxtb	r0, r2
 8004690:	687a      	ldr	r2, [r7, #4]
 8004692:	212c      	movs	r1, #44	@ 0x2c
 8004694:	fb01 f303 	mul.w	r3, r1, r3
 8004698:	4413      	add	r3, r2
 800469a:	333a      	adds	r3, #58	@ 0x3a
 800469c:	4602      	mov	r2, r0
 800469e:	701a      	strb	r2, [r3, #0]
 80046a0:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	da09      	bge.n	80046bc <HAL_HCD_HC_Init+0xc2>
 80046a8:	78fb      	ldrb	r3, [r7, #3]
 80046aa:	687a      	ldr	r2, [r7, #4]
 80046ac:	212c      	movs	r1, #44	@ 0x2c
 80046ae:	fb01 f303 	mul.w	r3, r1, r3
 80046b2:	4413      	add	r3, r2
 80046b4:	333b      	adds	r3, #59	@ 0x3b
 80046b6:	2201      	movs	r2, #1
 80046b8:	701a      	strb	r2, [r3, #0]
 80046ba:	e008      	b.n	80046ce <HAL_HCD_HC_Init+0xd4>
 80046bc:	78fb      	ldrb	r3, [r7, #3]
 80046be:	687a      	ldr	r2, [r7, #4]
 80046c0:	212c      	movs	r1, #44	@ 0x2c
 80046c2:	fb01 f303 	mul.w	r3, r1, r3
 80046c6:	4413      	add	r3, r2
 80046c8:	333b      	adds	r3, #59	@ 0x3b
 80046ca:	2200      	movs	r2, #0
 80046cc:	701a      	strb	r2, [r3, #0]
 80046ce:	78fb      	ldrb	r3, [r7, #3]
 80046d0:	687a      	ldr	r2, [r7, #4]
 80046d2:	212c      	movs	r1, #44	@ 0x2c
 80046d4:	fb01 f303 	mul.w	r3, r1, r3
 80046d8:	4413      	add	r3, r2
 80046da:	333c      	adds	r3, #60	@ 0x3c
 80046dc:	f897 2020 	ldrb.w	r2, [r7, #32]
 80046e0:	701a      	strb	r2, [r3, #0]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	6818      	ldr	r0, [r3, #0]
 80046e6:	787c      	ldrb	r4, [r7, #1]
 80046e8:	78ba      	ldrb	r2, [r7, #2]
 80046ea:	78f9      	ldrb	r1, [r7, #3]
 80046ec:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 80046ee:	9302      	str	r3, [sp, #8]
 80046f0:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80046f4:	9301      	str	r3, [sp, #4]
 80046f6:	f897 3020 	ldrb.w	r3, [r7, #32]
 80046fa:	9300      	str	r3, [sp, #0]
 80046fc:	4623      	mov	r3, r4
 80046fe:	f004 fe67 	bl	80093d0 <USB_HC_Init>
 8004702:	4603      	mov	r3, r0
 8004704:	73fb      	strb	r3, [r7, #15]
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	2200      	movs	r2, #0
 800470a:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 800470e:	7bfb      	ldrb	r3, [r7, #15]
 8004710:	4618      	mov	r0, r3
 8004712:	3714      	adds	r7, #20
 8004714:	46bd      	mov	sp, r7
 8004716:	bd90      	pop	{r4, r7, pc}

08004718 <HAL_HCD_HC_Halt>:
 8004718:	b580      	push	{r7, lr}
 800471a:	b084      	sub	sp, #16
 800471c:	af00      	add	r7, sp, #0
 800471e:	6078      	str	r0, [r7, #4]
 8004720:	460b      	mov	r3, r1
 8004722:	70fb      	strb	r3, [r7, #3]
 8004724:	2300      	movs	r3, #0
 8004726:	73fb      	strb	r3, [r7, #15]
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	f893 32f8 	ldrb.w	r3, [r3, #760]	@ 0x2f8
 800472e:	2b01      	cmp	r3, #1
 8004730:	d101      	bne.n	8004736 <HAL_HCD_HC_Halt+0x1e>
 8004732:	2302      	movs	r3, #2
 8004734:	e00f      	b.n	8004756 <HAL_HCD_HC_Halt+0x3e>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	2201      	movs	r2, #1
 800473a:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	78fa      	ldrb	r2, [r7, #3]
 8004744:	4611      	mov	r1, r2
 8004746:	4618      	mov	r0, r3
 8004748:	f005 f8b7 	bl	80098ba <USB_HC_Halt>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	2200      	movs	r2, #0
 8004750:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004754:	7bfb      	ldrb	r3, [r7, #15]
 8004756:	4618      	mov	r0, r3
 8004758:	3710      	adds	r7, #16
 800475a:	46bd      	mov	sp, r7
 800475c:	bd80      	pop	{r7, pc}
	...

08004760 <HAL_HCD_HC_SubmitRequest>:
 8004760:	b580      	push	{r7, lr}
 8004762:	b082      	sub	sp, #8
 8004764:	af00      	add	r7, sp, #0
 8004766:	6078      	str	r0, [r7, #4]
 8004768:	4608      	mov	r0, r1
 800476a:	4611      	mov	r1, r2
 800476c:	461a      	mov	r2, r3
 800476e:	4603      	mov	r3, r0
 8004770:	70fb      	strb	r3, [r7, #3]
 8004772:	460b      	mov	r3, r1
 8004774:	70bb      	strb	r3, [r7, #2]
 8004776:	4613      	mov	r3, r2
 8004778:	707b      	strb	r3, [r7, #1]
 800477a:	78fb      	ldrb	r3, [r7, #3]
 800477c:	687a      	ldr	r2, [r7, #4]
 800477e:	212c      	movs	r1, #44	@ 0x2c
 8004780:	fb01 f303 	mul.w	r3, r1, r3
 8004784:	4413      	add	r3, r2
 8004786:	333b      	adds	r3, #59	@ 0x3b
 8004788:	78ba      	ldrb	r2, [r7, #2]
 800478a:	701a      	strb	r2, [r3, #0]
 800478c:	78fb      	ldrb	r3, [r7, #3]
 800478e:	687a      	ldr	r2, [r7, #4]
 8004790:	212c      	movs	r1, #44	@ 0x2c
 8004792:	fb01 f303 	mul.w	r3, r1, r3
 8004796:	4413      	add	r3, r2
 8004798:	333f      	adds	r3, #63	@ 0x3f
 800479a:	787a      	ldrb	r2, [r7, #1]
 800479c:	701a      	strb	r2, [r3, #0]
 800479e:	7c3b      	ldrb	r3, [r7, #16]
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d112      	bne.n	80047ca <HAL_HCD_HC_SubmitRequest+0x6a>
 80047a4:	78fb      	ldrb	r3, [r7, #3]
 80047a6:	687a      	ldr	r2, [r7, #4]
 80047a8:	212c      	movs	r1, #44	@ 0x2c
 80047aa:	fb01 f303 	mul.w	r3, r1, r3
 80047ae:	4413      	add	r3, r2
 80047b0:	3342      	adds	r3, #66	@ 0x42
 80047b2:	2203      	movs	r2, #3
 80047b4:	701a      	strb	r2, [r3, #0]
 80047b6:	78fb      	ldrb	r3, [r7, #3]
 80047b8:	687a      	ldr	r2, [r7, #4]
 80047ba:	212c      	movs	r1, #44	@ 0x2c
 80047bc:	fb01 f303 	mul.w	r3, r1, r3
 80047c0:	4413      	add	r3, r2
 80047c2:	333d      	adds	r3, #61	@ 0x3d
 80047c4:	7f3a      	ldrb	r2, [r7, #28]
 80047c6:	701a      	strb	r2, [r3, #0]
 80047c8:	e008      	b.n	80047dc <HAL_HCD_HC_SubmitRequest+0x7c>
 80047ca:	78fb      	ldrb	r3, [r7, #3]
 80047cc:	687a      	ldr	r2, [r7, #4]
 80047ce:	212c      	movs	r1, #44	@ 0x2c
 80047d0:	fb01 f303 	mul.w	r3, r1, r3
 80047d4:	4413      	add	r3, r2
 80047d6:	3342      	adds	r3, #66	@ 0x42
 80047d8:	2202      	movs	r2, #2
 80047da:	701a      	strb	r2, [r3, #0]
 80047dc:	787b      	ldrb	r3, [r7, #1]
 80047de:	2b03      	cmp	r3, #3
 80047e0:	f200 80c6 	bhi.w	8004970 <HAL_HCD_HC_SubmitRequest+0x210>
 80047e4:	a201      	add	r2, pc, #4	@ (adr r2, 80047ec <HAL_HCD_HC_SubmitRequest+0x8c>)
 80047e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047ea:	bf00      	nop
 80047ec:	080047fd 	.word	0x080047fd
 80047f0:	0800495d 	.word	0x0800495d
 80047f4:	08004861 	.word	0x08004861
 80047f8:	080048df 	.word	0x080048df
 80047fc:	7c3b      	ldrb	r3, [r7, #16]
 80047fe:	2b01      	cmp	r3, #1
 8004800:	f040 80b8 	bne.w	8004974 <HAL_HCD_HC_SubmitRequest+0x214>
 8004804:	78bb      	ldrb	r3, [r7, #2]
 8004806:	2b00      	cmp	r3, #0
 8004808:	f040 80b4 	bne.w	8004974 <HAL_HCD_HC_SubmitRequest+0x214>
 800480c:	8b3b      	ldrh	r3, [r7, #24]
 800480e:	2b00      	cmp	r3, #0
 8004810:	d108      	bne.n	8004824 <HAL_HCD_HC_SubmitRequest+0xc4>
 8004812:	78fb      	ldrb	r3, [r7, #3]
 8004814:	687a      	ldr	r2, [r7, #4]
 8004816:	212c      	movs	r1, #44	@ 0x2c
 8004818:	fb01 f303 	mul.w	r3, r1, r3
 800481c:	4413      	add	r3, r2
 800481e:	3355      	adds	r3, #85	@ 0x55
 8004820:	2201      	movs	r2, #1
 8004822:	701a      	strb	r2, [r3, #0]
 8004824:	78fb      	ldrb	r3, [r7, #3]
 8004826:	687a      	ldr	r2, [r7, #4]
 8004828:	212c      	movs	r1, #44	@ 0x2c
 800482a:	fb01 f303 	mul.w	r3, r1, r3
 800482e:	4413      	add	r3, r2
 8004830:	3355      	adds	r3, #85	@ 0x55
 8004832:	781b      	ldrb	r3, [r3, #0]
 8004834:	2b00      	cmp	r3, #0
 8004836:	d109      	bne.n	800484c <HAL_HCD_HC_SubmitRequest+0xec>
 8004838:	78fb      	ldrb	r3, [r7, #3]
 800483a:	687a      	ldr	r2, [r7, #4]
 800483c:	212c      	movs	r1, #44	@ 0x2c
 800483e:	fb01 f303 	mul.w	r3, r1, r3
 8004842:	4413      	add	r3, r2
 8004844:	3342      	adds	r3, #66	@ 0x42
 8004846:	2200      	movs	r2, #0
 8004848:	701a      	strb	r2, [r3, #0]
 800484a:	e093      	b.n	8004974 <HAL_HCD_HC_SubmitRequest+0x214>
 800484c:	78fb      	ldrb	r3, [r7, #3]
 800484e:	687a      	ldr	r2, [r7, #4]
 8004850:	212c      	movs	r1, #44	@ 0x2c
 8004852:	fb01 f303 	mul.w	r3, r1, r3
 8004856:	4413      	add	r3, r2
 8004858:	3342      	adds	r3, #66	@ 0x42
 800485a:	2202      	movs	r2, #2
 800485c:	701a      	strb	r2, [r3, #0]
 800485e:	e089      	b.n	8004974 <HAL_HCD_HC_SubmitRequest+0x214>
 8004860:	78bb      	ldrb	r3, [r7, #2]
 8004862:	2b00      	cmp	r3, #0
 8004864:	d11d      	bne.n	80048a2 <HAL_HCD_HC_SubmitRequest+0x142>
 8004866:	78fb      	ldrb	r3, [r7, #3]
 8004868:	687a      	ldr	r2, [r7, #4]
 800486a:	212c      	movs	r1, #44	@ 0x2c
 800486c:	fb01 f303 	mul.w	r3, r1, r3
 8004870:	4413      	add	r3, r2
 8004872:	3355      	adds	r3, #85	@ 0x55
 8004874:	781b      	ldrb	r3, [r3, #0]
 8004876:	2b00      	cmp	r3, #0
 8004878:	d109      	bne.n	800488e <HAL_HCD_HC_SubmitRequest+0x12e>
 800487a:	78fb      	ldrb	r3, [r7, #3]
 800487c:	687a      	ldr	r2, [r7, #4]
 800487e:	212c      	movs	r1, #44	@ 0x2c
 8004880:	fb01 f303 	mul.w	r3, r1, r3
 8004884:	4413      	add	r3, r2
 8004886:	3342      	adds	r3, #66	@ 0x42
 8004888:	2200      	movs	r2, #0
 800488a:	701a      	strb	r2, [r3, #0]
 800488c:	e073      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 800488e:	78fb      	ldrb	r3, [r7, #3]
 8004890:	687a      	ldr	r2, [r7, #4]
 8004892:	212c      	movs	r1, #44	@ 0x2c
 8004894:	fb01 f303 	mul.w	r3, r1, r3
 8004898:	4413      	add	r3, r2
 800489a:	3342      	adds	r3, #66	@ 0x42
 800489c:	2202      	movs	r2, #2
 800489e:	701a      	strb	r2, [r3, #0]
 80048a0:	e069      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 80048a2:	78fb      	ldrb	r3, [r7, #3]
 80048a4:	687a      	ldr	r2, [r7, #4]
 80048a6:	212c      	movs	r1, #44	@ 0x2c
 80048a8:	fb01 f303 	mul.w	r3, r1, r3
 80048ac:	4413      	add	r3, r2
 80048ae:	3354      	adds	r3, #84	@ 0x54
 80048b0:	781b      	ldrb	r3, [r3, #0]
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d109      	bne.n	80048ca <HAL_HCD_HC_SubmitRequest+0x16a>
 80048b6:	78fb      	ldrb	r3, [r7, #3]
 80048b8:	687a      	ldr	r2, [r7, #4]
 80048ba:	212c      	movs	r1, #44	@ 0x2c
 80048bc:	fb01 f303 	mul.w	r3, r1, r3
 80048c0:	4413      	add	r3, r2
 80048c2:	3342      	adds	r3, #66	@ 0x42
 80048c4:	2200      	movs	r2, #0
 80048c6:	701a      	strb	r2, [r3, #0]
 80048c8:	e055      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 80048ca:	78fb      	ldrb	r3, [r7, #3]
 80048cc:	687a      	ldr	r2, [r7, #4]
 80048ce:	212c      	movs	r1, #44	@ 0x2c
 80048d0:	fb01 f303 	mul.w	r3, r1, r3
 80048d4:	4413      	add	r3, r2
 80048d6:	3342      	adds	r3, #66	@ 0x42
 80048d8:	2202      	movs	r2, #2
 80048da:	701a      	strb	r2, [r3, #0]
 80048dc:	e04b      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 80048de:	78bb      	ldrb	r3, [r7, #2]
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	d11d      	bne.n	8004920 <HAL_HCD_HC_SubmitRequest+0x1c0>
 80048e4:	78fb      	ldrb	r3, [r7, #3]
 80048e6:	687a      	ldr	r2, [r7, #4]
 80048e8:	212c      	movs	r1, #44	@ 0x2c
 80048ea:	fb01 f303 	mul.w	r3, r1, r3
 80048ee:	4413      	add	r3, r2
 80048f0:	3355      	adds	r3, #85	@ 0x55
 80048f2:	781b      	ldrb	r3, [r3, #0]
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	d109      	bne.n	800490c <HAL_HCD_HC_SubmitRequest+0x1ac>
 80048f8:	78fb      	ldrb	r3, [r7, #3]
 80048fa:	687a      	ldr	r2, [r7, #4]
 80048fc:	212c      	movs	r1, #44	@ 0x2c
 80048fe:	fb01 f303 	mul.w	r3, r1, r3
 8004902:	4413      	add	r3, r2
 8004904:	3342      	adds	r3, #66	@ 0x42
 8004906:	2200      	movs	r2, #0
 8004908:	701a      	strb	r2, [r3, #0]
 800490a:	e034      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 800490c:	78fb      	ldrb	r3, [r7, #3]
 800490e:	687a      	ldr	r2, [r7, #4]
 8004910:	212c      	movs	r1, #44	@ 0x2c
 8004912:	fb01 f303 	mul.w	r3, r1, r3
 8004916:	4413      	add	r3, r2
 8004918:	3342      	adds	r3, #66	@ 0x42
 800491a:	2202      	movs	r2, #2
 800491c:	701a      	strb	r2, [r3, #0]
 800491e:	e02a      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 8004920:	78fb      	ldrb	r3, [r7, #3]
 8004922:	687a      	ldr	r2, [r7, #4]
 8004924:	212c      	movs	r1, #44	@ 0x2c
 8004926:	fb01 f303 	mul.w	r3, r1, r3
 800492a:	4413      	add	r3, r2
 800492c:	3354      	adds	r3, #84	@ 0x54
 800492e:	781b      	ldrb	r3, [r3, #0]
 8004930:	2b00      	cmp	r3, #0
 8004932:	d109      	bne.n	8004948 <HAL_HCD_HC_SubmitRequest+0x1e8>
 8004934:	78fb      	ldrb	r3, [r7, #3]
 8004936:	687a      	ldr	r2, [r7, #4]
 8004938:	212c      	movs	r1, #44	@ 0x2c
 800493a:	fb01 f303 	mul.w	r3, r1, r3
 800493e:	4413      	add	r3, r2
 8004940:	3342      	adds	r3, #66	@ 0x42
 8004942:	2200      	movs	r2, #0
 8004944:	701a      	strb	r2, [r3, #0]
 8004946:	e016      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 8004948:	78fb      	ldrb	r3, [r7, #3]
 800494a:	687a      	ldr	r2, [r7, #4]
 800494c:	212c      	movs	r1, #44	@ 0x2c
 800494e:	fb01 f303 	mul.w	r3, r1, r3
 8004952:	4413      	add	r3, r2
 8004954:	3342      	adds	r3, #66	@ 0x42
 8004956:	2202      	movs	r2, #2
 8004958:	701a      	strb	r2, [r3, #0]
 800495a:	e00c      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 800495c:	78fb      	ldrb	r3, [r7, #3]
 800495e:	687a      	ldr	r2, [r7, #4]
 8004960:	212c      	movs	r1, #44	@ 0x2c
 8004962:	fb01 f303 	mul.w	r3, r1, r3
 8004966:	4413      	add	r3, r2
 8004968:	3342      	adds	r3, #66	@ 0x42
 800496a:	2200      	movs	r2, #0
 800496c:	701a      	strb	r2, [r3, #0]
 800496e:	e002      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 8004970:	bf00      	nop
 8004972:	e000      	b.n	8004976 <HAL_HCD_HC_SubmitRequest+0x216>
 8004974:	bf00      	nop
 8004976:	78fb      	ldrb	r3, [r7, #3]
 8004978:	687a      	ldr	r2, [r7, #4]
 800497a:	212c      	movs	r1, #44	@ 0x2c
 800497c:	fb01 f303 	mul.w	r3, r1, r3
 8004980:	4413      	add	r3, r2
 8004982:	3344      	adds	r3, #68	@ 0x44
 8004984:	697a      	ldr	r2, [r7, #20]
 8004986:	601a      	str	r2, [r3, #0]
 8004988:	78fb      	ldrb	r3, [r7, #3]
 800498a:	8b3a      	ldrh	r2, [r7, #24]
 800498c:	6879      	ldr	r1, [r7, #4]
 800498e:	202c      	movs	r0, #44	@ 0x2c
 8004990:	fb00 f303 	mul.w	r3, r0, r3
 8004994:	440b      	add	r3, r1
 8004996:	334c      	adds	r3, #76	@ 0x4c
 8004998:	601a      	str	r2, [r3, #0]
 800499a:	78fb      	ldrb	r3, [r7, #3]
 800499c:	687a      	ldr	r2, [r7, #4]
 800499e:	212c      	movs	r1, #44	@ 0x2c
 80049a0:	fb01 f303 	mul.w	r3, r1, r3
 80049a4:	4413      	add	r3, r2
 80049a6:	3360      	adds	r3, #96	@ 0x60
 80049a8:	2200      	movs	r2, #0
 80049aa:	701a      	strb	r2, [r3, #0]
 80049ac:	78fb      	ldrb	r3, [r7, #3]
 80049ae:	687a      	ldr	r2, [r7, #4]
 80049b0:	212c      	movs	r1, #44	@ 0x2c
 80049b2:	fb01 f303 	mul.w	r3, r1, r3
 80049b6:	4413      	add	r3, r2
 80049b8:	3350      	adds	r3, #80	@ 0x50
 80049ba:	2200      	movs	r2, #0
 80049bc:	601a      	str	r2, [r3, #0]
 80049be:	78fb      	ldrb	r3, [r7, #3]
 80049c0:	687a      	ldr	r2, [r7, #4]
 80049c2:	212c      	movs	r1, #44	@ 0x2c
 80049c4:	fb01 f303 	mul.w	r3, r1, r3
 80049c8:	4413      	add	r3, r2
 80049ca:	3339      	adds	r3, #57	@ 0x39
 80049cc:	78fa      	ldrb	r2, [r7, #3]
 80049ce:	701a      	strb	r2, [r3, #0]
 80049d0:	78fb      	ldrb	r3, [r7, #3]
 80049d2:	687a      	ldr	r2, [r7, #4]
 80049d4:	212c      	movs	r1, #44	@ 0x2c
 80049d6:	fb01 f303 	mul.w	r3, r1, r3
 80049da:	4413      	add	r3, r2
 80049dc:	3361      	adds	r3, #97	@ 0x61
 80049de:	2200      	movs	r2, #0
 80049e0:	701a      	strb	r2, [r3, #0]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	6818      	ldr	r0, [r3, #0]
 80049e6:	78fb      	ldrb	r3, [r7, #3]
 80049e8:	222c      	movs	r2, #44	@ 0x2c
 80049ea:	fb02 f303 	mul.w	r3, r2, r3
 80049ee:	3338      	adds	r3, #56	@ 0x38
 80049f0:	687a      	ldr	r2, [r7, #4]
 80049f2:	18d1      	adds	r1, r2, r3
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	691b      	ldr	r3, [r3, #16]
 80049f8:	b2db      	uxtb	r3, r3
 80049fa:	461a      	mov	r2, r3
 80049fc:	f004 fe0a 	bl	8009614 <USB_HC_StartXfer>
 8004a00:	4603      	mov	r3, r0
 8004a02:	4618      	mov	r0, r3
 8004a04:	3708      	adds	r7, #8
 8004a06:	46bd      	mov	sp, r7
 8004a08:	bd80      	pop	{r7, pc}
 8004a0a:	bf00      	nop

08004a0c <HAL_HCD_IRQHandler>:
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	b086      	sub	sp, #24
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	6078      	str	r0, [r7, #4]
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	613b      	str	r3, [r7, #16]
 8004a1a:	693b      	ldr	r3, [r7, #16]
 8004a1c:	60fb      	str	r3, [r7, #12]
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	4618      	mov	r0, r3
 8004a24:	f004 fb0b 	bl	800903e <USB_GetMode>
 8004a28:	4603      	mov	r3, r0
 8004a2a:	2b01      	cmp	r3, #1
 8004a2c:	f040 80f6 	bne.w	8004c1c <HAL_HCD_IRQHandler+0x210>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4618      	mov	r0, r3
 8004a36:	f004 faef 	bl	8009018 <USB_ReadInterrupts>
 8004a3a:	4603      	mov	r3, r0
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	f000 80ec 	beq.w	8004c1a <HAL_HCD_IRQHandler+0x20e>
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	681b      	ldr	r3, [r3, #0]
 8004a46:	4618      	mov	r0, r3
 8004a48:	f004 fae6 	bl	8009018 <USB_ReadInterrupts>
 8004a4c:	4603      	mov	r3, r0
 8004a4e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004a52:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004a56:	d104      	bne.n	8004a62 <HAL_HCD_IRQHandler+0x56>
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8004a60:	615a      	str	r2, [r3, #20]
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	4618      	mov	r0, r3
 8004a68:	f004 fad6 	bl	8009018 <USB_ReadInterrupts>
 8004a6c:	4603      	mov	r3, r0
 8004a6e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004a72:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004a76:	d104      	bne.n	8004a82 <HAL_HCD_IRQHandler+0x76>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8004a80:	615a      	str	r2, [r3, #20]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	4618      	mov	r0, r3
 8004a88:	f004 fac6 	bl	8009018 <USB_ReadInterrupts>
 8004a8c:	4603      	mov	r3, r0
 8004a8e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8004a92:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8004a96:	d104      	bne.n	8004aa2 <HAL_HCD_IRQHandler+0x96>
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8004aa0:	615a      	str	r2, [r3, #20]
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	4618      	mov	r0, r3
 8004aa8:	f004 fab6 	bl	8009018 <USB_ReadInterrupts>
 8004aac:	4603      	mov	r3, r0
 8004aae:	f003 0302 	and.w	r3, r3, #2
 8004ab2:	2b02      	cmp	r3, #2
 8004ab4:	d103      	bne.n	8004abe <HAL_HCD_IRQHandler+0xb2>
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	681b      	ldr	r3, [r3, #0]
 8004aba:	2202      	movs	r2, #2
 8004abc:	615a      	str	r2, [r3, #20]
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4618      	mov	r0, r3
 8004ac4:	f004 faa8 	bl	8009018 <USB_ReadInterrupts>
 8004ac8:	4603      	mov	r3, r0
 8004aca:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8004ace:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004ad2:	d11c      	bne.n	8004b0e <HAL_HCD_IRQHandler+0x102>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 8004adc:	615a      	str	r2, [r3, #20]
 8004ade:	68fb      	ldr	r3, [r7, #12]
 8004ae0:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	f003 0301 	and.w	r3, r3, #1
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d10f      	bne.n	8004b0e <HAL_HCD_IRQHandler+0x102>
 8004aee:	2110      	movs	r1, #16
 8004af0:	6938      	ldr	r0, [r7, #16]
 8004af2:	f004 f997 	bl	8008e24 <USB_FlushTxFifo>
 8004af6:	6938      	ldr	r0, [r7, #16]
 8004af8:	f004 f9c8 	bl	8008e8c <USB_FlushRxFifo>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	2101      	movs	r1, #1
 8004b02:	4618      	mov	r0, r3
 8004b04:	f004 fb9e 	bl	8009244 <USB_InitFSLSPClkSel>
 8004b08:	6878      	ldr	r0, [r7, #4]
 8004b0a:	f00b fe77 	bl	80107fc <HAL_HCD_Disconnect_Callback>
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	4618      	mov	r0, r3
 8004b14:	f004 fa80 	bl	8009018 <USB_ReadInterrupts>
 8004b18:	4603      	mov	r3, r0
 8004b1a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004b1e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004b22:	d102      	bne.n	8004b2a <HAL_HCD_IRQHandler+0x11e>
 8004b24:	6878      	ldr	r0, [r7, #4]
 8004b26:	f001 f89e 	bl	8005c66 <HCD_Port_IRQHandler>
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	681b      	ldr	r3, [r3, #0]
 8004b2e:	4618      	mov	r0, r3
 8004b30:	f004 fa72 	bl	8009018 <USB_ReadInterrupts>
 8004b34:	4603      	mov	r3, r0
 8004b36:	f003 0308 	and.w	r3, r3, #8
 8004b3a:	2b08      	cmp	r3, #8
 8004b3c:	d106      	bne.n	8004b4c <HAL_HCD_IRQHandler+0x140>
 8004b3e:	6878      	ldr	r0, [r7, #4]
 8004b40:	f00b fe40 	bl	80107c4 <HAL_HCD_SOF_Callback>
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	2208      	movs	r2, #8
 8004b4a:	615a      	str	r2, [r3, #20]
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	4618      	mov	r0, r3
 8004b52:	f004 fa61 	bl	8009018 <USB_ReadInterrupts>
 8004b56:	4603      	mov	r3, r0
 8004b58:	f003 0310 	and.w	r3, r3, #16
 8004b5c:	2b10      	cmp	r3, #16
 8004b5e:	d101      	bne.n	8004b64 <HAL_HCD_IRQHandler+0x158>
 8004b60:	2301      	movs	r3, #1
 8004b62:	e000      	b.n	8004b66 <HAL_HCD_IRQHandler+0x15a>
 8004b64:	2300      	movs	r3, #0
 8004b66:	2b00      	cmp	r3, #0
 8004b68:	d012      	beq.n	8004b90 <HAL_HCD_IRQHandler+0x184>
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	699a      	ldr	r2, [r3, #24]
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	f022 0210 	bic.w	r2, r2, #16
 8004b78:	619a      	str	r2, [r3, #24]
 8004b7a:	6878      	ldr	r0, [r7, #4]
 8004b7c:	f000 ffa1 	bl	8005ac2 <HCD_RXQLVL_IRQHandler>
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	699a      	ldr	r2, [r3, #24]
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	f042 0210 	orr.w	r2, r2, #16
 8004b8e:	619a      	str	r2, [r3, #24]
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	4618      	mov	r0, r3
 8004b96:	f004 fa3f 	bl	8009018 <USB_ReadInterrupts>
 8004b9a:	4603      	mov	r3, r0
 8004b9c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004ba0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004ba4:	d13a      	bne.n	8004c1c <HAL_HCD_IRQHandler+0x210>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	4618      	mov	r0, r3
 8004bac:	f004 fe74 	bl	8009898 <USB_HC_ReadInterrupt>
 8004bb0:	60b8      	str	r0, [r7, #8]
 8004bb2:	2300      	movs	r3, #0
 8004bb4:	617b      	str	r3, [r7, #20]
 8004bb6:	e025      	b.n	8004c04 <HAL_HCD_IRQHandler+0x1f8>
 8004bb8:	697b      	ldr	r3, [r7, #20]
 8004bba:	f003 030f 	and.w	r3, r3, #15
 8004bbe:	68ba      	ldr	r2, [r7, #8]
 8004bc0:	fa22 f303 	lsr.w	r3, r2, r3
 8004bc4:	f003 0301 	and.w	r3, r3, #1
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d018      	beq.n	8004bfe <HAL_HCD_IRQHandler+0x1f2>
 8004bcc:	697b      	ldr	r3, [r7, #20]
 8004bce:	015a      	lsls	r2, r3, #5
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	4413      	add	r3, r2
 8004bd4:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004bde:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004be2:	d106      	bne.n	8004bf2 <HAL_HCD_IRQHandler+0x1e6>
 8004be4:	697b      	ldr	r3, [r7, #20]
 8004be6:	b2db      	uxtb	r3, r3
 8004be8:	4619      	mov	r1, r3
 8004bea:	6878      	ldr	r0, [r7, #4]
 8004bec:	f000 f8ab 	bl	8004d46 <HCD_HC_IN_IRQHandler>
 8004bf0:	e005      	b.n	8004bfe <HAL_HCD_IRQHandler+0x1f2>
 8004bf2:	697b      	ldr	r3, [r7, #20]
 8004bf4:	b2db      	uxtb	r3, r3
 8004bf6:	4619      	mov	r1, r3
 8004bf8:	6878      	ldr	r0, [r7, #4]
 8004bfa:	f000 fbf9 	bl	80053f0 <HCD_HC_OUT_IRQHandler>
 8004bfe:	697b      	ldr	r3, [r7, #20]
 8004c00:	3301      	adds	r3, #1
 8004c02:	617b      	str	r3, [r7, #20]
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	689b      	ldr	r3, [r3, #8]
 8004c08:	697a      	ldr	r2, [r7, #20]
 8004c0a:	429a      	cmp	r2, r3
 8004c0c:	d3d4      	bcc.n	8004bb8 <HAL_HCD_IRQHandler+0x1ac>
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004c16:	615a      	str	r2, [r3, #20]
 8004c18:	e000      	b.n	8004c1c <HAL_HCD_IRQHandler+0x210>
 8004c1a:	bf00      	nop
 8004c1c:	3718      	adds	r7, #24
 8004c1e:	46bd      	mov	sp, r7
 8004c20:	bd80      	pop	{r7, pc}

08004c22 <HAL_HCD_Start>:
 8004c22:	b580      	push	{r7, lr}
 8004c24:	b082      	sub	sp, #8
 8004c26:	af00      	add	r7, sp, #0
 8004c28:	6078      	str	r0, [r7, #4]
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	f893 32f8 	ldrb.w	r3, [r3, #760]	@ 0x2f8
 8004c30:	2b01      	cmp	r3, #1
 8004c32:	d101      	bne.n	8004c38 <HAL_HCD_Start+0x16>
 8004c34:	2302      	movs	r3, #2
 8004c36:	e013      	b.n	8004c60 <HAL_HCD_Start+0x3e>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	2201      	movs	r2, #1
 8004c3c:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	2101      	movs	r1, #1
 8004c46:	4618      	mov	r0, r3
 8004c48:	f004 fb60 	bl	800930c <USB_DriveVbus>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	4618      	mov	r0, r3
 8004c52:	f004 f878 	bl	8008d46 <USB_EnableGlobalInt>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	2200      	movs	r2, #0
 8004c5a:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004c5e:	2300      	movs	r3, #0
 8004c60:	4618      	mov	r0, r3
 8004c62:	3708      	adds	r7, #8
 8004c64:	46bd      	mov	sp, r7
 8004c66:	bd80      	pop	{r7, pc}

08004c68 <HAL_HCD_Stop>:
 8004c68:	b580      	push	{r7, lr}
 8004c6a:	b082      	sub	sp, #8
 8004c6c:	af00      	add	r7, sp, #0
 8004c6e:	6078      	str	r0, [r7, #4]
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	f893 32f8 	ldrb.w	r3, [r3, #760]	@ 0x2f8
 8004c76:	2b01      	cmp	r3, #1
 8004c78:	d101      	bne.n	8004c7e <HAL_HCD_Stop+0x16>
 8004c7a:	2302      	movs	r3, #2
 8004c7c:	e00d      	b.n	8004c9a <HAL_HCD_Stop+0x32>
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	2201      	movs	r2, #1
 8004c82:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	4618      	mov	r0, r3
 8004c8c:	f004 ff4e 	bl	8009b2c <USB_StopHost>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	2200      	movs	r2, #0
 8004c94:	f883 22f8 	strb.w	r2, [r3, #760]	@ 0x2f8
 8004c98:	2300      	movs	r3, #0
 8004c9a:	4618      	mov	r0, r3
 8004c9c:	3708      	adds	r7, #8
 8004c9e:	46bd      	mov	sp, r7
 8004ca0:	bd80      	pop	{r7, pc}

08004ca2 <HAL_HCD_ResetPort>:
 8004ca2:	b580      	push	{r7, lr}
 8004ca4:	b082      	sub	sp, #8
 8004ca6:	af00      	add	r7, sp, #0
 8004ca8:	6078      	str	r0, [r7, #4]
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4618      	mov	r0, r3
 8004cb0:	f004 fb02 	bl	80092b8 <USB_ResetPort>
 8004cb4:	4603      	mov	r3, r0
 8004cb6:	4618      	mov	r0, r3
 8004cb8:	3708      	adds	r7, #8
 8004cba:	46bd      	mov	sp, r7
 8004cbc:	bd80      	pop	{r7, pc}

08004cbe <HAL_HCD_HC_GetURBState>:
 8004cbe:	b480      	push	{r7}
 8004cc0:	b083      	sub	sp, #12
 8004cc2:	af00      	add	r7, sp, #0
 8004cc4:	6078      	str	r0, [r7, #4]
 8004cc6:	460b      	mov	r3, r1
 8004cc8:	70fb      	strb	r3, [r7, #3]
 8004cca:	78fb      	ldrb	r3, [r7, #3]
 8004ccc:	687a      	ldr	r2, [r7, #4]
 8004cce:	212c      	movs	r1, #44	@ 0x2c
 8004cd0:	fb01 f303 	mul.w	r3, r1, r3
 8004cd4:	4413      	add	r3, r2
 8004cd6:	3360      	adds	r3, #96	@ 0x60
 8004cd8:	781b      	ldrb	r3, [r3, #0]
 8004cda:	4618      	mov	r0, r3
 8004cdc:	370c      	adds	r7, #12
 8004cde:	46bd      	mov	sp, r7
 8004ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ce4:	4770      	bx	lr

08004ce6 <HAL_HCD_HC_GetXferCount>:
 8004ce6:	b480      	push	{r7}
 8004ce8:	b083      	sub	sp, #12
 8004cea:	af00      	add	r7, sp, #0
 8004cec:	6078      	str	r0, [r7, #4]
 8004cee:	460b      	mov	r3, r1
 8004cf0:	70fb      	strb	r3, [r7, #3]
 8004cf2:	78fb      	ldrb	r3, [r7, #3]
 8004cf4:	687a      	ldr	r2, [r7, #4]
 8004cf6:	212c      	movs	r1, #44	@ 0x2c
 8004cf8:	fb01 f303 	mul.w	r3, r1, r3
 8004cfc:	4413      	add	r3, r2
 8004cfe:	3350      	adds	r3, #80	@ 0x50
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	4618      	mov	r0, r3
 8004d04:	370c      	adds	r7, #12
 8004d06:	46bd      	mov	sp, r7
 8004d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d0c:	4770      	bx	lr

08004d0e <HAL_HCD_GetCurrentFrame>:
 8004d0e:	b580      	push	{r7, lr}
 8004d10:	b082      	sub	sp, #8
 8004d12:	af00      	add	r7, sp, #0
 8004d14:	6078      	str	r0, [r7, #4]
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	4618      	mov	r0, r3
 8004d1c:	f004 fb46 	bl	80093ac <USB_GetCurrentFrame>
 8004d20:	4603      	mov	r3, r0
 8004d22:	4618      	mov	r0, r3
 8004d24:	3708      	adds	r7, #8
 8004d26:	46bd      	mov	sp, r7
 8004d28:	bd80      	pop	{r7, pc}

08004d2a <HAL_HCD_GetCurrentSpeed>:
 8004d2a:	b580      	push	{r7, lr}
 8004d2c:	b082      	sub	sp, #8
 8004d2e:	af00      	add	r7, sp, #0
 8004d30:	6078      	str	r0, [r7, #4]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	4618      	mov	r0, r3
 8004d38:	f004 fb21 	bl	800937e <USB_GetHostSpeed>
 8004d3c:	4603      	mov	r3, r0
 8004d3e:	4618      	mov	r0, r3
 8004d40:	3708      	adds	r7, #8
 8004d42:	46bd      	mov	sp, r7
 8004d44:	bd80      	pop	{r7, pc}

08004d46 <HCD_HC_IN_IRQHandler>:
 8004d46:	b580      	push	{r7, lr}
 8004d48:	b086      	sub	sp, #24
 8004d4a:	af00      	add	r7, sp, #0
 8004d4c:	6078      	str	r0, [r7, #4]
 8004d4e:	460b      	mov	r3, r1
 8004d50:	70fb      	strb	r3, [r7, #3]
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	617b      	str	r3, [r7, #20]
 8004d58:	697b      	ldr	r3, [r7, #20]
 8004d5a:	613b      	str	r3, [r7, #16]
 8004d5c:	78fb      	ldrb	r3, [r7, #3]
 8004d5e:	60fb      	str	r3, [r7, #12]
 8004d60:	68fb      	ldr	r3, [r7, #12]
 8004d62:	015a      	lsls	r2, r3, #5
 8004d64:	693b      	ldr	r3, [r7, #16]
 8004d66:	4413      	add	r3, r2
 8004d68:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004d6c:	689b      	ldr	r3, [r3, #8]
 8004d6e:	f003 0304 	and.w	r3, r3, #4
 8004d72:	2b04      	cmp	r3, #4
 8004d74:	d11a      	bne.n	8004dac <HCD_HC_IN_IRQHandler+0x66>
 8004d76:	68fb      	ldr	r3, [r7, #12]
 8004d78:	015a      	lsls	r2, r3, #5
 8004d7a:	693b      	ldr	r3, [r7, #16]
 8004d7c:	4413      	add	r3, r2
 8004d7e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004d82:	461a      	mov	r2, r3
 8004d84:	2304      	movs	r3, #4
 8004d86:	6093      	str	r3, [r2, #8]
 8004d88:	687a      	ldr	r2, [r7, #4]
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	212c      	movs	r1, #44	@ 0x2c
 8004d8e:	fb01 f303 	mul.w	r3, r1, r3
 8004d92:	4413      	add	r3, r2
 8004d94:	3361      	adds	r3, #97	@ 0x61
 8004d96:	2206      	movs	r2, #6
 8004d98:	701a      	strb	r2, [r3, #0]
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	68fa      	ldr	r2, [r7, #12]
 8004da0:	b2d2      	uxtb	r2, r2
 8004da2:	4611      	mov	r1, r2
 8004da4:	4618      	mov	r0, r3
 8004da6:	f004 fd88 	bl	80098ba <USB_HC_Halt>
 8004daa:	e0af      	b.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	015a      	lsls	r2, r3, #5
 8004db0:	693b      	ldr	r3, [r7, #16]
 8004db2:	4413      	add	r3, r2
 8004db4:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004db8:	689b      	ldr	r3, [r3, #8]
 8004dba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004dbe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004dc2:	d11b      	bne.n	8004dfc <HCD_HC_IN_IRQHandler+0xb6>
 8004dc4:	68fb      	ldr	r3, [r7, #12]
 8004dc6:	015a      	lsls	r2, r3, #5
 8004dc8:	693b      	ldr	r3, [r7, #16]
 8004dca:	4413      	add	r3, r2
 8004dcc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004dd0:	461a      	mov	r2, r3
 8004dd2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8004dd6:	6093      	str	r3, [r2, #8]
 8004dd8:	687a      	ldr	r2, [r7, #4]
 8004dda:	68fb      	ldr	r3, [r7, #12]
 8004ddc:	212c      	movs	r1, #44	@ 0x2c
 8004dde:	fb01 f303 	mul.w	r3, r1, r3
 8004de2:	4413      	add	r3, r2
 8004de4:	3361      	adds	r3, #97	@ 0x61
 8004de6:	2207      	movs	r2, #7
 8004de8:	701a      	strb	r2, [r3, #0]
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	68fa      	ldr	r2, [r7, #12]
 8004df0:	b2d2      	uxtb	r2, r2
 8004df2:	4611      	mov	r1, r2
 8004df4:	4618      	mov	r0, r3
 8004df6:	f004 fd60 	bl	80098ba <USB_HC_Halt>
 8004dfa:	e087      	b.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	015a      	lsls	r2, r3, #5
 8004e00:	693b      	ldr	r3, [r7, #16]
 8004e02:	4413      	add	r3, r2
 8004e04:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e08:	689b      	ldr	r3, [r3, #8]
 8004e0a:	f003 0320 	and.w	r3, r3, #32
 8004e0e:	2b20      	cmp	r3, #32
 8004e10:	d109      	bne.n	8004e26 <HCD_HC_IN_IRQHandler+0xe0>
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	015a      	lsls	r2, r3, #5
 8004e16:	693b      	ldr	r3, [r7, #16]
 8004e18:	4413      	add	r3, r2
 8004e1a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e1e:	461a      	mov	r2, r3
 8004e20:	2320      	movs	r3, #32
 8004e22:	6093      	str	r3, [r2, #8]
 8004e24:	e072      	b.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	015a      	lsls	r2, r3, #5
 8004e2a:	693b      	ldr	r3, [r7, #16]
 8004e2c:	4413      	add	r3, r2
 8004e2e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e32:	689b      	ldr	r3, [r3, #8]
 8004e34:	f003 0308 	and.w	r3, r3, #8
 8004e38:	2b08      	cmp	r3, #8
 8004e3a:	d11a      	bne.n	8004e72 <HCD_HC_IN_IRQHandler+0x12c>
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	015a      	lsls	r2, r3, #5
 8004e40:	693b      	ldr	r3, [r7, #16]
 8004e42:	4413      	add	r3, r2
 8004e44:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e48:	461a      	mov	r2, r3
 8004e4a:	2308      	movs	r3, #8
 8004e4c:	6093      	str	r3, [r2, #8]
 8004e4e:	687a      	ldr	r2, [r7, #4]
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	212c      	movs	r1, #44	@ 0x2c
 8004e54:	fb01 f303 	mul.w	r3, r1, r3
 8004e58:	4413      	add	r3, r2
 8004e5a:	3361      	adds	r3, #97	@ 0x61
 8004e5c:	2205      	movs	r2, #5
 8004e5e:	701a      	strb	r2, [r3, #0]
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	68fa      	ldr	r2, [r7, #12]
 8004e66:	b2d2      	uxtb	r2, r2
 8004e68:	4611      	mov	r1, r2
 8004e6a:	4618      	mov	r0, r3
 8004e6c:	f004 fd25 	bl	80098ba <USB_HC_Halt>
 8004e70:	e04c      	b.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004e72:	68fb      	ldr	r3, [r7, #12]
 8004e74:	015a      	lsls	r2, r3, #5
 8004e76:	693b      	ldr	r3, [r7, #16]
 8004e78:	4413      	add	r3, r2
 8004e7a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e7e:	689b      	ldr	r3, [r3, #8]
 8004e80:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004e84:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004e88:	d11b      	bne.n	8004ec2 <HCD_HC_IN_IRQHandler+0x17c>
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	015a      	lsls	r2, r3, #5
 8004e8e:	693b      	ldr	r3, [r7, #16]
 8004e90:	4413      	add	r3, r2
 8004e92:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e96:	461a      	mov	r2, r3
 8004e98:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004e9c:	6093      	str	r3, [r2, #8]
 8004e9e:	687a      	ldr	r2, [r7, #4]
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	212c      	movs	r1, #44	@ 0x2c
 8004ea4:	fb01 f303 	mul.w	r3, r1, r3
 8004ea8:	4413      	add	r3, r2
 8004eaa:	3361      	adds	r3, #97	@ 0x61
 8004eac:	2208      	movs	r2, #8
 8004eae:	701a      	strb	r2, [r3, #0]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	68fa      	ldr	r2, [r7, #12]
 8004eb6:	b2d2      	uxtb	r2, r2
 8004eb8:	4611      	mov	r1, r2
 8004eba:	4618      	mov	r0, r3
 8004ebc:	f004 fcfd 	bl	80098ba <USB_HC_Halt>
 8004ec0:	e024      	b.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	015a      	lsls	r2, r3, #5
 8004ec6:	693b      	ldr	r3, [r7, #16]
 8004ec8:	4413      	add	r3, r2
 8004eca:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004ece:	689b      	ldr	r3, [r3, #8]
 8004ed0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ed4:	2b80      	cmp	r3, #128	@ 0x80
 8004ed6:	d119      	bne.n	8004f0c <HCD_HC_IN_IRQHandler+0x1c6>
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	015a      	lsls	r2, r3, #5
 8004edc:	693b      	ldr	r3, [r7, #16]
 8004ede:	4413      	add	r3, r2
 8004ee0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004ee4:	461a      	mov	r2, r3
 8004ee6:	2380      	movs	r3, #128	@ 0x80
 8004ee8:	6093      	str	r3, [r2, #8]
 8004eea:	687a      	ldr	r2, [r7, #4]
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	212c      	movs	r1, #44	@ 0x2c
 8004ef0:	fb01 f303 	mul.w	r3, r1, r3
 8004ef4:	4413      	add	r3, r2
 8004ef6:	3361      	adds	r3, #97	@ 0x61
 8004ef8:	2206      	movs	r2, #6
 8004efa:	701a      	strb	r2, [r3, #0]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	68fa      	ldr	r2, [r7, #12]
 8004f02:	b2d2      	uxtb	r2, r2
 8004f04:	4611      	mov	r1, r2
 8004f06:	4618      	mov	r0, r3
 8004f08:	f004 fcd7 	bl	80098ba <USB_HC_Halt>
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	015a      	lsls	r2, r3, #5
 8004f10:	693b      	ldr	r3, [r7, #16]
 8004f12:	4413      	add	r3, r2
 8004f14:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004f18:	689b      	ldr	r3, [r3, #8]
 8004f1a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004f1e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004f22:	d112      	bne.n	8004f4a <HCD_HC_IN_IRQHandler+0x204>
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	68fa      	ldr	r2, [r7, #12]
 8004f2a:	b2d2      	uxtb	r2, r2
 8004f2c:	4611      	mov	r1, r2
 8004f2e:	4618      	mov	r0, r3
 8004f30:	f004 fcc3 	bl	80098ba <USB_HC_Halt>
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	015a      	lsls	r2, r3, #5
 8004f38:	693b      	ldr	r3, [r7, #16]
 8004f3a:	4413      	add	r3, r2
 8004f3c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004f40:	461a      	mov	r2, r3
 8004f42:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004f46:	6093      	str	r3, [r2, #8]
 8004f48:	e24e      	b.n	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 8004f4a:	68fb      	ldr	r3, [r7, #12]
 8004f4c:	015a      	lsls	r2, r3, #5
 8004f4e:	693b      	ldr	r3, [r7, #16]
 8004f50:	4413      	add	r3, r2
 8004f52:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004f56:	689b      	ldr	r3, [r3, #8]
 8004f58:	f003 0301 	and.w	r3, r3, #1
 8004f5c:	2b01      	cmp	r3, #1
 8004f5e:	f040 80df 	bne.w	8005120 <HCD_HC_IN_IRQHandler+0x3da>
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	691b      	ldr	r3, [r3, #16]
 8004f66:	2b00      	cmp	r3, #0
 8004f68:	d019      	beq.n	8004f9e <HCD_HC_IN_IRQHandler+0x258>
 8004f6a:	687a      	ldr	r2, [r7, #4]
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	212c      	movs	r1, #44	@ 0x2c
 8004f70:	fb01 f303 	mul.w	r3, r1, r3
 8004f74:	4413      	add	r3, r2
 8004f76:	3348      	adds	r3, #72	@ 0x48
 8004f78:	681a      	ldr	r2, [r3, #0]
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	0159      	lsls	r1, r3, #5
 8004f7e:	693b      	ldr	r3, [r7, #16]
 8004f80:	440b      	add	r3, r1
 8004f82:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004f86:	691b      	ldr	r3, [r3, #16]
 8004f88:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004f8c:	1ad2      	subs	r2, r2, r3
 8004f8e:	6879      	ldr	r1, [r7, #4]
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	202c      	movs	r0, #44	@ 0x2c
 8004f94:	fb00 f303 	mul.w	r3, r0, r3
 8004f98:	440b      	add	r3, r1
 8004f9a:	3350      	adds	r3, #80	@ 0x50
 8004f9c:	601a      	str	r2, [r3, #0]
 8004f9e:	687a      	ldr	r2, [r7, #4]
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	212c      	movs	r1, #44	@ 0x2c
 8004fa4:	fb01 f303 	mul.w	r3, r1, r3
 8004fa8:	4413      	add	r3, r2
 8004faa:	3361      	adds	r3, #97	@ 0x61
 8004fac:	2201      	movs	r2, #1
 8004fae:	701a      	strb	r2, [r3, #0]
 8004fb0:	687a      	ldr	r2, [r7, #4]
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	212c      	movs	r1, #44	@ 0x2c
 8004fb6:	fb01 f303 	mul.w	r3, r1, r3
 8004fba:	4413      	add	r3, r2
 8004fbc:	335c      	adds	r3, #92	@ 0x5c
 8004fbe:	2200      	movs	r2, #0
 8004fc0:	601a      	str	r2, [r3, #0]
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	015a      	lsls	r2, r3, #5
 8004fc6:	693b      	ldr	r3, [r7, #16]
 8004fc8:	4413      	add	r3, r2
 8004fca:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004fce:	461a      	mov	r2, r3
 8004fd0:	2301      	movs	r3, #1
 8004fd2:	6093      	str	r3, [r2, #8]
 8004fd4:	687a      	ldr	r2, [r7, #4]
 8004fd6:	68fb      	ldr	r3, [r7, #12]
 8004fd8:	212c      	movs	r1, #44	@ 0x2c
 8004fda:	fb01 f303 	mul.w	r3, r1, r3
 8004fde:	4413      	add	r3, r2
 8004fe0:	333f      	adds	r3, #63	@ 0x3f
 8004fe2:	781b      	ldrb	r3, [r3, #0]
 8004fe4:	2b00      	cmp	r3, #0
 8004fe6:	d009      	beq.n	8004ffc <HCD_HC_IN_IRQHandler+0x2b6>
 8004fe8:	687a      	ldr	r2, [r7, #4]
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	212c      	movs	r1, #44	@ 0x2c
 8004fee:	fb01 f303 	mul.w	r3, r1, r3
 8004ff2:	4413      	add	r3, r2
 8004ff4:	333f      	adds	r3, #63	@ 0x3f
 8004ff6:	781b      	ldrb	r3, [r3, #0]
 8004ff8:	2b02      	cmp	r3, #2
 8004ffa:	d111      	bne.n	8005020 <HCD_HC_IN_IRQHandler+0x2da>
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	68fa      	ldr	r2, [r7, #12]
 8005002:	b2d2      	uxtb	r2, r2
 8005004:	4611      	mov	r1, r2
 8005006:	4618      	mov	r0, r3
 8005008:	f004 fc57 	bl	80098ba <USB_HC_Halt>
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	015a      	lsls	r2, r3, #5
 8005010:	693b      	ldr	r3, [r7, #16]
 8005012:	4413      	add	r3, r2
 8005014:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005018:	461a      	mov	r2, r3
 800501a:	2310      	movs	r3, #16
 800501c:	6093      	str	r3, [r2, #8]
 800501e:	e03a      	b.n	8005096 <HCD_HC_IN_IRQHandler+0x350>
 8005020:	687a      	ldr	r2, [r7, #4]
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	212c      	movs	r1, #44	@ 0x2c
 8005026:	fb01 f303 	mul.w	r3, r1, r3
 800502a:	4413      	add	r3, r2
 800502c:	333f      	adds	r3, #63	@ 0x3f
 800502e:	781b      	ldrb	r3, [r3, #0]
 8005030:	2b03      	cmp	r3, #3
 8005032:	d009      	beq.n	8005048 <HCD_HC_IN_IRQHandler+0x302>
 8005034:	687a      	ldr	r2, [r7, #4]
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	212c      	movs	r1, #44	@ 0x2c
 800503a:	fb01 f303 	mul.w	r3, r1, r3
 800503e:	4413      	add	r3, r2
 8005040:	333f      	adds	r3, #63	@ 0x3f
 8005042:	781b      	ldrb	r3, [r3, #0]
 8005044:	2b01      	cmp	r3, #1
 8005046:	d126      	bne.n	8005096 <HCD_HC_IN_IRQHandler+0x350>
 8005048:	68fb      	ldr	r3, [r7, #12]
 800504a:	015a      	lsls	r2, r3, #5
 800504c:	693b      	ldr	r3, [r7, #16]
 800504e:	4413      	add	r3, r2
 8005050:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	68fa      	ldr	r2, [r7, #12]
 8005058:	0151      	lsls	r1, r2, #5
 800505a:	693a      	ldr	r2, [r7, #16]
 800505c:	440a      	add	r2, r1
 800505e:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005062:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8005066:	6013      	str	r3, [r2, #0]
 8005068:	687a      	ldr	r2, [r7, #4]
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	212c      	movs	r1, #44	@ 0x2c
 800506e:	fb01 f303 	mul.w	r3, r1, r3
 8005072:	4413      	add	r3, r2
 8005074:	3360      	adds	r3, #96	@ 0x60
 8005076:	2201      	movs	r2, #1
 8005078:	701a      	strb	r2, [r3, #0]
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	b2d9      	uxtb	r1, r3
 800507e:	687a      	ldr	r2, [r7, #4]
 8005080:	68fb      	ldr	r3, [r7, #12]
 8005082:	202c      	movs	r0, #44	@ 0x2c
 8005084:	fb00 f303 	mul.w	r3, r0, r3
 8005088:	4413      	add	r3, r2
 800508a:	3360      	adds	r3, #96	@ 0x60
 800508c:	781b      	ldrb	r3, [r3, #0]
 800508e:	461a      	mov	r2, r3
 8005090:	6878      	ldr	r0, [r7, #4]
 8005092:	f00b fbc1 	bl	8010818 <HAL_HCD_HC_NotifyURBChange_Callback>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	691b      	ldr	r3, [r3, #16]
 800509a:	2b01      	cmp	r3, #1
 800509c:	d12b      	bne.n	80050f6 <HCD_HC_IN_IRQHandler+0x3b0>
 800509e:	687a      	ldr	r2, [r7, #4]
 80050a0:	68fb      	ldr	r3, [r7, #12]
 80050a2:	212c      	movs	r1, #44	@ 0x2c
 80050a4:	fb01 f303 	mul.w	r3, r1, r3
 80050a8:	4413      	add	r3, r2
 80050aa:	3348      	adds	r3, #72	@ 0x48
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	6879      	ldr	r1, [r7, #4]
 80050b0:	68fa      	ldr	r2, [r7, #12]
 80050b2:	202c      	movs	r0, #44	@ 0x2c
 80050b4:	fb00 f202 	mul.w	r2, r0, r2
 80050b8:	440a      	add	r2, r1
 80050ba:	3240      	adds	r2, #64	@ 0x40
 80050bc:	8812      	ldrh	r2, [r2, #0]
 80050be:	fbb3 f3f2 	udiv	r3, r3, r2
 80050c2:	f003 0301 	and.w	r3, r3, #1
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	f000 818e 	beq.w	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 80050cc:	687a      	ldr	r2, [r7, #4]
 80050ce:	68fb      	ldr	r3, [r7, #12]
 80050d0:	212c      	movs	r1, #44	@ 0x2c
 80050d2:	fb01 f303 	mul.w	r3, r1, r3
 80050d6:	4413      	add	r3, r2
 80050d8:	3354      	adds	r3, #84	@ 0x54
 80050da:	781b      	ldrb	r3, [r3, #0]
 80050dc:	f083 0301 	eor.w	r3, r3, #1
 80050e0:	b2d8      	uxtb	r0, r3
 80050e2:	687a      	ldr	r2, [r7, #4]
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	212c      	movs	r1, #44	@ 0x2c
 80050e8:	fb01 f303 	mul.w	r3, r1, r3
 80050ec:	4413      	add	r3, r2
 80050ee:	3354      	adds	r3, #84	@ 0x54
 80050f0:	4602      	mov	r2, r0
 80050f2:	701a      	strb	r2, [r3, #0]
 80050f4:	e178      	b.n	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 80050f6:	687a      	ldr	r2, [r7, #4]
 80050f8:	68fb      	ldr	r3, [r7, #12]
 80050fa:	212c      	movs	r1, #44	@ 0x2c
 80050fc:	fb01 f303 	mul.w	r3, r1, r3
 8005100:	4413      	add	r3, r2
 8005102:	3354      	adds	r3, #84	@ 0x54
 8005104:	781b      	ldrb	r3, [r3, #0]
 8005106:	f083 0301 	eor.w	r3, r3, #1
 800510a:	b2d8      	uxtb	r0, r3
 800510c:	687a      	ldr	r2, [r7, #4]
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	212c      	movs	r1, #44	@ 0x2c
 8005112:	fb01 f303 	mul.w	r3, r1, r3
 8005116:	4413      	add	r3, r2
 8005118:	3354      	adds	r3, #84	@ 0x54
 800511a:	4602      	mov	r2, r0
 800511c:	701a      	strb	r2, [r3, #0]
 800511e:	e163      	b.n	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 8005120:	68fb      	ldr	r3, [r7, #12]
 8005122:	015a      	lsls	r2, r3, #5
 8005124:	693b      	ldr	r3, [r7, #16]
 8005126:	4413      	add	r3, r2
 8005128:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800512c:	689b      	ldr	r3, [r3, #8]
 800512e:	f003 0302 	and.w	r3, r3, #2
 8005132:	2b02      	cmp	r3, #2
 8005134:	f040 80f6 	bne.w	8005324 <HCD_HC_IN_IRQHandler+0x5de>
 8005138:	687a      	ldr	r2, [r7, #4]
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	212c      	movs	r1, #44	@ 0x2c
 800513e:	fb01 f303 	mul.w	r3, r1, r3
 8005142:	4413      	add	r3, r2
 8005144:	3361      	adds	r3, #97	@ 0x61
 8005146:	781b      	ldrb	r3, [r3, #0]
 8005148:	2b01      	cmp	r3, #1
 800514a:	d109      	bne.n	8005160 <HCD_HC_IN_IRQHandler+0x41a>
 800514c:	687a      	ldr	r2, [r7, #4]
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	212c      	movs	r1, #44	@ 0x2c
 8005152:	fb01 f303 	mul.w	r3, r1, r3
 8005156:	4413      	add	r3, r2
 8005158:	3360      	adds	r3, #96	@ 0x60
 800515a:	2201      	movs	r2, #1
 800515c:	701a      	strb	r2, [r3, #0]
 800515e:	e0c9      	b.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 8005160:	687a      	ldr	r2, [r7, #4]
 8005162:	68fb      	ldr	r3, [r7, #12]
 8005164:	212c      	movs	r1, #44	@ 0x2c
 8005166:	fb01 f303 	mul.w	r3, r1, r3
 800516a:	4413      	add	r3, r2
 800516c:	3361      	adds	r3, #97	@ 0x61
 800516e:	781b      	ldrb	r3, [r3, #0]
 8005170:	2b05      	cmp	r3, #5
 8005172:	d109      	bne.n	8005188 <HCD_HC_IN_IRQHandler+0x442>
 8005174:	687a      	ldr	r2, [r7, #4]
 8005176:	68fb      	ldr	r3, [r7, #12]
 8005178:	212c      	movs	r1, #44	@ 0x2c
 800517a:	fb01 f303 	mul.w	r3, r1, r3
 800517e:	4413      	add	r3, r2
 8005180:	3360      	adds	r3, #96	@ 0x60
 8005182:	2205      	movs	r2, #5
 8005184:	701a      	strb	r2, [r3, #0]
 8005186:	e0b5      	b.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 8005188:	687a      	ldr	r2, [r7, #4]
 800518a:	68fb      	ldr	r3, [r7, #12]
 800518c:	212c      	movs	r1, #44	@ 0x2c
 800518e:	fb01 f303 	mul.w	r3, r1, r3
 8005192:	4413      	add	r3, r2
 8005194:	3361      	adds	r3, #97	@ 0x61
 8005196:	781b      	ldrb	r3, [r3, #0]
 8005198:	2b06      	cmp	r3, #6
 800519a:	d009      	beq.n	80051b0 <HCD_HC_IN_IRQHandler+0x46a>
 800519c:	687a      	ldr	r2, [r7, #4]
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	212c      	movs	r1, #44	@ 0x2c
 80051a2:	fb01 f303 	mul.w	r3, r1, r3
 80051a6:	4413      	add	r3, r2
 80051a8:	3361      	adds	r3, #97	@ 0x61
 80051aa:	781b      	ldrb	r3, [r3, #0]
 80051ac:	2b08      	cmp	r3, #8
 80051ae:	d150      	bne.n	8005252 <HCD_HC_IN_IRQHandler+0x50c>
 80051b0:	687a      	ldr	r2, [r7, #4]
 80051b2:	68fb      	ldr	r3, [r7, #12]
 80051b4:	212c      	movs	r1, #44	@ 0x2c
 80051b6:	fb01 f303 	mul.w	r3, r1, r3
 80051ba:	4413      	add	r3, r2
 80051bc:	335c      	adds	r3, #92	@ 0x5c
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	1c5a      	adds	r2, r3, #1
 80051c2:	6879      	ldr	r1, [r7, #4]
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	202c      	movs	r0, #44	@ 0x2c
 80051c8:	fb00 f303 	mul.w	r3, r0, r3
 80051cc:	440b      	add	r3, r1
 80051ce:	335c      	adds	r3, #92	@ 0x5c
 80051d0:	601a      	str	r2, [r3, #0]
 80051d2:	687a      	ldr	r2, [r7, #4]
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	212c      	movs	r1, #44	@ 0x2c
 80051d8:	fb01 f303 	mul.w	r3, r1, r3
 80051dc:	4413      	add	r3, r2
 80051de:	335c      	adds	r3, #92	@ 0x5c
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	2b02      	cmp	r3, #2
 80051e4:	d912      	bls.n	800520c <HCD_HC_IN_IRQHandler+0x4c6>
 80051e6:	687a      	ldr	r2, [r7, #4]
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	212c      	movs	r1, #44	@ 0x2c
 80051ec:	fb01 f303 	mul.w	r3, r1, r3
 80051f0:	4413      	add	r3, r2
 80051f2:	335c      	adds	r3, #92	@ 0x5c
 80051f4:	2200      	movs	r2, #0
 80051f6:	601a      	str	r2, [r3, #0]
 80051f8:	687a      	ldr	r2, [r7, #4]
 80051fa:	68fb      	ldr	r3, [r7, #12]
 80051fc:	212c      	movs	r1, #44	@ 0x2c
 80051fe:	fb01 f303 	mul.w	r3, r1, r3
 8005202:	4413      	add	r3, r2
 8005204:	3360      	adds	r3, #96	@ 0x60
 8005206:	2204      	movs	r2, #4
 8005208:	701a      	strb	r2, [r3, #0]
 800520a:	e073      	b.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 800520c:	687a      	ldr	r2, [r7, #4]
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	212c      	movs	r1, #44	@ 0x2c
 8005212:	fb01 f303 	mul.w	r3, r1, r3
 8005216:	4413      	add	r3, r2
 8005218:	3360      	adds	r3, #96	@ 0x60
 800521a:	2202      	movs	r2, #2
 800521c:	701a      	strb	r2, [r3, #0]
 800521e:	68fb      	ldr	r3, [r7, #12]
 8005220:	015a      	lsls	r2, r3, #5
 8005222:	693b      	ldr	r3, [r7, #16]
 8005224:	4413      	add	r3, r2
 8005226:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800522a:	681b      	ldr	r3, [r3, #0]
 800522c:	60bb      	str	r3, [r7, #8]
 800522e:	68bb      	ldr	r3, [r7, #8]
 8005230:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005234:	60bb      	str	r3, [r7, #8]
 8005236:	68bb      	ldr	r3, [r7, #8]
 8005238:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800523c:	60bb      	str	r3, [r7, #8]
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	015a      	lsls	r2, r3, #5
 8005242:	693b      	ldr	r3, [r7, #16]
 8005244:	4413      	add	r3, r2
 8005246:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800524a:	461a      	mov	r2, r3
 800524c:	68bb      	ldr	r3, [r7, #8]
 800524e:	6013      	str	r3, [r2, #0]
 8005250:	e050      	b.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 8005252:	687a      	ldr	r2, [r7, #4]
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	212c      	movs	r1, #44	@ 0x2c
 8005258:	fb01 f303 	mul.w	r3, r1, r3
 800525c:	4413      	add	r3, r2
 800525e:	3361      	adds	r3, #97	@ 0x61
 8005260:	781b      	ldrb	r3, [r3, #0]
 8005262:	2b03      	cmp	r3, #3
 8005264:	d122      	bne.n	80052ac <HCD_HC_IN_IRQHandler+0x566>
 8005266:	687a      	ldr	r2, [r7, #4]
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	212c      	movs	r1, #44	@ 0x2c
 800526c:	fb01 f303 	mul.w	r3, r1, r3
 8005270:	4413      	add	r3, r2
 8005272:	3360      	adds	r3, #96	@ 0x60
 8005274:	2202      	movs	r2, #2
 8005276:	701a      	strb	r2, [r3, #0]
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	015a      	lsls	r2, r3, #5
 800527c:	693b      	ldr	r3, [r7, #16]
 800527e:	4413      	add	r3, r2
 8005280:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	60bb      	str	r3, [r7, #8]
 8005288:	68bb      	ldr	r3, [r7, #8]
 800528a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800528e:	60bb      	str	r3, [r7, #8]
 8005290:	68bb      	ldr	r3, [r7, #8]
 8005292:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005296:	60bb      	str	r3, [r7, #8]
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	015a      	lsls	r2, r3, #5
 800529c:	693b      	ldr	r3, [r7, #16]
 800529e:	4413      	add	r3, r2
 80052a0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80052a4:	461a      	mov	r2, r3
 80052a6:	68bb      	ldr	r3, [r7, #8]
 80052a8:	6013      	str	r3, [r2, #0]
 80052aa:	e023      	b.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 80052ac:	687a      	ldr	r2, [r7, #4]
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	212c      	movs	r1, #44	@ 0x2c
 80052b2:	fb01 f303 	mul.w	r3, r1, r3
 80052b6:	4413      	add	r3, r2
 80052b8:	3361      	adds	r3, #97	@ 0x61
 80052ba:	781b      	ldrb	r3, [r3, #0]
 80052bc:	2b07      	cmp	r3, #7
 80052be:	d119      	bne.n	80052f4 <HCD_HC_IN_IRQHandler+0x5ae>
 80052c0:	687a      	ldr	r2, [r7, #4]
 80052c2:	68fb      	ldr	r3, [r7, #12]
 80052c4:	212c      	movs	r1, #44	@ 0x2c
 80052c6:	fb01 f303 	mul.w	r3, r1, r3
 80052ca:	4413      	add	r3, r2
 80052cc:	335c      	adds	r3, #92	@ 0x5c
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	1c5a      	adds	r2, r3, #1
 80052d2:	6879      	ldr	r1, [r7, #4]
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	202c      	movs	r0, #44	@ 0x2c
 80052d8:	fb00 f303 	mul.w	r3, r0, r3
 80052dc:	440b      	add	r3, r1
 80052de:	335c      	adds	r3, #92	@ 0x5c
 80052e0:	601a      	str	r2, [r3, #0]
 80052e2:	687a      	ldr	r2, [r7, #4]
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	212c      	movs	r1, #44	@ 0x2c
 80052e8:	fb01 f303 	mul.w	r3, r1, r3
 80052ec:	4413      	add	r3, r2
 80052ee:	3360      	adds	r3, #96	@ 0x60
 80052f0:	2204      	movs	r2, #4
 80052f2:	701a      	strb	r2, [r3, #0]
 80052f4:	68fb      	ldr	r3, [r7, #12]
 80052f6:	015a      	lsls	r2, r3, #5
 80052f8:	693b      	ldr	r3, [r7, #16]
 80052fa:	4413      	add	r3, r2
 80052fc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005300:	461a      	mov	r2, r3
 8005302:	2302      	movs	r3, #2
 8005304:	6093      	str	r3, [r2, #8]
 8005306:	68fb      	ldr	r3, [r7, #12]
 8005308:	b2d9      	uxtb	r1, r3
 800530a:	687a      	ldr	r2, [r7, #4]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	202c      	movs	r0, #44	@ 0x2c
 8005310:	fb00 f303 	mul.w	r3, r0, r3
 8005314:	4413      	add	r3, r2
 8005316:	3360      	adds	r3, #96	@ 0x60
 8005318:	781b      	ldrb	r3, [r3, #0]
 800531a:	461a      	mov	r2, r3
 800531c:	6878      	ldr	r0, [r7, #4]
 800531e:	f00b fa7b 	bl	8010818 <HAL_HCD_HC_NotifyURBChange_Callback>
 8005322:	e061      	b.n	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	015a      	lsls	r2, r3, #5
 8005328:	693b      	ldr	r3, [r7, #16]
 800532a:	4413      	add	r3, r2
 800532c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005330:	689b      	ldr	r3, [r3, #8]
 8005332:	f003 0310 	and.w	r3, r3, #16
 8005336:	2b10      	cmp	r3, #16
 8005338:	d156      	bne.n	80053e8 <HCD_HC_IN_IRQHandler+0x6a2>
 800533a:	687a      	ldr	r2, [r7, #4]
 800533c:	68fb      	ldr	r3, [r7, #12]
 800533e:	212c      	movs	r1, #44	@ 0x2c
 8005340:	fb01 f303 	mul.w	r3, r1, r3
 8005344:	4413      	add	r3, r2
 8005346:	333f      	adds	r3, #63	@ 0x3f
 8005348:	781b      	ldrb	r3, [r3, #0]
 800534a:	2b03      	cmp	r3, #3
 800534c:	d111      	bne.n	8005372 <HCD_HC_IN_IRQHandler+0x62c>
 800534e:	687a      	ldr	r2, [r7, #4]
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	212c      	movs	r1, #44	@ 0x2c
 8005354:	fb01 f303 	mul.w	r3, r1, r3
 8005358:	4413      	add	r3, r2
 800535a:	335c      	adds	r3, #92	@ 0x5c
 800535c:	2200      	movs	r2, #0
 800535e:	601a      	str	r2, [r3, #0]
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	68fa      	ldr	r2, [r7, #12]
 8005366:	b2d2      	uxtb	r2, r2
 8005368:	4611      	mov	r1, r2
 800536a:	4618      	mov	r0, r3
 800536c:	f004 faa5 	bl	80098ba <USB_HC_Halt>
 8005370:	e031      	b.n	80053d6 <HCD_HC_IN_IRQHandler+0x690>
 8005372:	687a      	ldr	r2, [r7, #4]
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	212c      	movs	r1, #44	@ 0x2c
 8005378:	fb01 f303 	mul.w	r3, r1, r3
 800537c:	4413      	add	r3, r2
 800537e:	333f      	adds	r3, #63	@ 0x3f
 8005380:	781b      	ldrb	r3, [r3, #0]
 8005382:	2b00      	cmp	r3, #0
 8005384:	d009      	beq.n	800539a <HCD_HC_IN_IRQHandler+0x654>
 8005386:	687a      	ldr	r2, [r7, #4]
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	212c      	movs	r1, #44	@ 0x2c
 800538c:	fb01 f303 	mul.w	r3, r1, r3
 8005390:	4413      	add	r3, r2
 8005392:	333f      	adds	r3, #63	@ 0x3f
 8005394:	781b      	ldrb	r3, [r3, #0]
 8005396:	2b02      	cmp	r3, #2
 8005398:	d11d      	bne.n	80053d6 <HCD_HC_IN_IRQHandler+0x690>
 800539a:	687a      	ldr	r2, [r7, #4]
 800539c:	68fb      	ldr	r3, [r7, #12]
 800539e:	212c      	movs	r1, #44	@ 0x2c
 80053a0:	fb01 f303 	mul.w	r3, r1, r3
 80053a4:	4413      	add	r3, r2
 80053a6:	335c      	adds	r3, #92	@ 0x5c
 80053a8:	2200      	movs	r2, #0
 80053aa:	601a      	str	r2, [r3, #0]
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	691b      	ldr	r3, [r3, #16]
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d110      	bne.n	80053d6 <HCD_HC_IN_IRQHandler+0x690>
 80053b4:	687a      	ldr	r2, [r7, #4]
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	212c      	movs	r1, #44	@ 0x2c
 80053ba:	fb01 f303 	mul.w	r3, r1, r3
 80053be:	4413      	add	r3, r2
 80053c0:	3361      	adds	r3, #97	@ 0x61
 80053c2:	2203      	movs	r2, #3
 80053c4:	701a      	strb	r2, [r3, #0]
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	68fa      	ldr	r2, [r7, #12]
 80053cc:	b2d2      	uxtb	r2, r2
 80053ce:	4611      	mov	r1, r2
 80053d0:	4618      	mov	r0, r3
 80053d2:	f004 fa72 	bl	80098ba <USB_HC_Halt>
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	015a      	lsls	r2, r3, #5
 80053da:	693b      	ldr	r3, [r7, #16]
 80053dc:	4413      	add	r3, r2
 80053de:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80053e2:	461a      	mov	r2, r3
 80053e4:	2310      	movs	r3, #16
 80053e6:	6093      	str	r3, [r2, #8]
 80053e8:	bf00      	nop
 80053ea:	3718      	adds	r7, #24
 80053ec:	46bd      	mov	sp, r7
 80053ee:	bd80      	pop	{r7, pc}

080053f0 <HCD_HC_OUT_IRQHandler>:
 80053f0:	b580      	push	{r7, lr}
 80053f2:	b088      	sub	sp, #32
 80053f4:	af00      	add	r7, sp, #0
 80053f6:	6078      	str	r0, [r7, #4]
 80053f8:	460b      	mov	r3, r1
 80053fa:	70fb      	strb	r3, [r7, #3]
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	61fb      	str	r3, [r7, #28]
 8005402:	69fb      	ldr	r3, [r7, #28]
 8005404:	61bb      	str	r3, [r7, #24]
 8005406:	78fb      	ldrb	r3, [r7, #3]
 8005408:	617b      	str	r3, [r7, #20]
 800540a:	697b      	ldr	r3, [r7, #20]
 800540c:	015a      	lsls	r2, r3, #5
 800540e:	69bb      	ldr	r3, [r7, #24]
 8005410:	4413      	add	r3, r2
 8005412:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005416:	689b      	ldr	r3, [r3, #8]
 8005418:	f003 0304 	and.w	r3, r3, #4
 800541c:	2b04      	cmp	r3, #4
 800541e:	d11a      	bne.n	8005456 <HCD_HC_OUT_IRQHandler+0x66>
 8005420:	697b      	ldr	r3, [r7, #20]
 8005422:	015a      	lsls	r2, r3, #5
 8005424:	69bb      	ldr	r3, [r7, #24]
 8005426:	4413      	add	r3, r2
 8005428:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800542c:	461a      	mov	r2, r3
 800542e:	2304      	movs	r3, #4
 8005430:	6093      	str	r3, [r2, #8]
 8005432:	687a      	ldr	r2, [r7, #4]
 8005434:	697b      	ldr	r3, [r7, #20]
 8005436:	212c      	movs	r1, #44	@ 0x2c
 8005438:	fb01 f303 	mul.w	r3, r1, r3
 800543c:	4413      	add	r3, r2
 800543e:	3361      	adds	r3, #97	@ 0x61
 8005440:	2206      	movs	r2, #6
 8005442:	701a      	strb	r2, [r3, #0]
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	681b      	ldr	r3, [r3, #0]
 8005448:	697a      	ldr	r2, [r7, #20]
 800544a:	b2d2      	uxtb	r2, r2
 800544c:	4611      	mov	r1, r2
 800544e:	4618      	mov	r0, r3
 8005450:	f004 fa33 	bl	80098ba <USB_HC_Halt>
 8005454:	e331      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 8005456:	697b      	ldr	r3, [r7, #20]
 8005458:	015a      	lsls	r2, r3, #5
 800545a:	69bb      	ldr	r3, [r7, #24]
 800545c:	4413      	add	r3, r2
 800545e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005462:	689b      	ldr	r3, [r3, #8]
 8005464:	f003 0320 	and.w	r3, r3, #32
 8005468:	2b20      	cmp	r3, #32
 800546a:	d12e      	bne.n	80054ca <HCD_HC_OUT_IRQHandler+0xda>
 800546c:	697b      	ldr	r3, [r7, #20]
 800546e:	015a      	lsls	r2, r3, #5
 8005470:	69bb      	ldr	r3, [r7, #24]
 8005472:	4413      	add	r3, r2
 8005474:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005478:	461a      	mov	r2, r3
 800547a:	2320      	movs	r3, #32
 800547c:	6093      	str	r3, [r2, #8]
 800547e:	687a      	ldr	r2, [r7, #4]
 8005480:	697b      	ldr	r3, [r7, #20]
 8005482:	212c      	movs	r1, #44	@ 0x2c
 8005484:	fb01 f303 	mul.w	r3, r1, r3
 8005488:	4413      	add	r3, r2
 800548a:	333d      	adds	r3, #61	@ 0x3d
 800548c:	781b      	ldrb	r3, [r3, #0]
 800548e:	2b01      	cmp	r3, #1
 8005490:	f040 8313 	bne.w	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 8005494:	687a      	ldr	r2, [r7, #4]
 8005496:	697b      	ldr	r3, [r7, #20]
 8005498:	212c      	movs	r1, #44	@ 0x2c
 800549a:	fb01 f303 	mul.w	r3, r1, r3
 800549e:	4413      	add	r3, r2
 80054a0:	333d      	adds	r3, #61	@ 0x3d
 80054a2:	2200      	movs	r2, #0
 80054a4:	701a      	strb	r2, [r3, #0]
 80054a6:	687a      	ldr	r2, [r7, #4]
 80054a8:	697b      	ldr	r3, [r7, #20]
 80054aa:	212c      	movs	r1, #44	@ 0x2c
 80054ac:	fb01 f303 	mul.w	r3, r1, r3
 80054b0:	4413      	add	r3, r2
 80054b2:	3360      	adds	r3, #96	@ 0x60
 80054b4:	2202      	movs	r2, #2
 80054b6:	701a      	strb	r2, [r3, #0]
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	697a      	ldr	r2, [r7, #20]
 80054be:	b2d2      	uxtb	r2, r2
 80054c0:	4611      	mov	r1, r2
 80054c2:	4618      	mov	r0, r3
 80054c4:	f004 f9f9 	bl	80098ba <USB_HC_Halt>
 80054c8:	e2f7      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 80054ca:	697b      	ldr	r3, [r7, #20]
 80054cc:	015a      	lsls	r2, r3, #5
 80054ce:	69bb      	ldr	r3, [r7, #24]
 80054d0:	4413      	add	r3, r2
 80054d2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80054d6:	689b      	ldr	r3, [r3, #8]
 80054d8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80054dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80054e0:	d112      	bne.n	8005508 <HCD_HC_OUT_IRQHandler+0x118>
 80054e2:	697b      	ldr	r3, [r7, #20]
 80054e4:	015a      	lsls	r2, r3, #5
 80054e6:	69bb      	ldr	r3, [r7, #24]
 80054e8:	4413      	add	r3, r2
 80054ea:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80054ee:	461a      	mov	r2, r3
 80054f0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80054f4:	6093      	str	r3, [r2, #8]
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	697a      	ldr	r2, [r7, #20]
 80054fc:	b2d2      	uxtb	r2, r2
 80054fe:	4611      	mov	r1, r2
 8005500:	4618      	mov	r0, r3
 8005502:	f004 f9da 	bl	80098ba <USB_HC_Halt>
 8005506:	e2d8      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 8005508:	697b      	ldr	r3, [r7, #20]
 800550a:	015a      	lsls	r2, r3, #5
 800550c:	69bb      	ldr	r3, [r7, #24]
 800550e:	4413      	add	r3, r2
 8005510:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005514:	689b      	ldr	r3, [r3, #8]
 8005516:	f003 0301 	and.w	r3, r3, #1
 800551a:	2b01      	cmp	r3, #1
 800551c:	d140      	bne.n	80055a0 <HCD_HC_OUT_IRQHandler+0x1b0>
 800551e:	687a      	ldr	r2, [r7, #4]
 8005520:	697b      	ldr	r3, [r7, #20]
 8005522:	212c      	movs	r1, #44	@ 0x2c
 8005524:	fb01 f303 	mul.w	r3, r1, r3
 8005528:	4413      	add	r3, r2
 800552a:	335c      	adds	r3, #92	@ 0x5c
 800552c:	2200      	movs	r2, #0
 800552e:	601a      	str	r2, [r3, #0]
 8005530:	697b      	ldr	r3, [r7, #20]
 8005532:	015a      	lsls	r2, r3, #5
 8005534:	69bb      	ldr	r3, [r7, #24]
 8005536:	4413      	add	r3, r2
 8005538:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800553c:	689b      	ldr	r3, [r3, #8]
 800553e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005542:	2b40      	cmp	r3, #64	@ 0x40
 8005544:	d111      	bne.n	800556a <HCD_HC_OUT_IRQHandler+0x17a>
 8005546:	687a      	ldr	r2, [r7, #4]
 8005548:	697b      	ldr	r3, [r7, #20]
 800554a:	212c      	movs	r1, #44	@ 0x2c
 800554c:	fb01 f303 	mul.w	r3, r1, r3
 8005550:	4413      	add	r3, r2
 8005552:	333d      	adds	r3, #61	@ 0x3d
 8005554:	2201      	movs	r2, #1
 8005556:	701a      	strb	r2, [r3, #0]
 8005558:	697b      	ldr	r3, [r7, #20]
 800555a:	015a      	lsls	r2, r3, #5
 800555c:	69bb      	ldr	r3, [r7, #24]
 800555e:	4413      	add	r3, r2
 8005560:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005564:	461a      	mov	r2, r3
 8005566:	2340      	movs	r3, #64	@ 0x40
 8005568:	6093      	str	r3, [r2, #8]
 800556a:	697b      	ldr	r3, [r7, #20]
 800556c:	015a      	lsls	r2, r3, #5
 800556e:	69bb      	ldr	r3, [r7, #24]
 8005570:	4413      	add	r3, r2
 8005572:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005576:	461a      	mov	r2, r3
 8005578:	2301      	movs	r3, #1
 800557a:	6093      	str	r3, [r2, #8]
 800557c:	687a      	ldr	r2, [r7, #4]
 800557e:	697b      	ldr	r3, [r7, #20]
 8005580:	212c      	movs	r1, #44	@ 0x2c
 8005582:	fb01 f303 	mul.w	r3, r1, r3
 8005586:	4413      	add	r3, r2
 8005588:	3361      	adds	r3, #97	@ 0x61
 800558a:	2201      	movs	r2, #1
 800558c:	701a      	strb	r2, [r3, #0]
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	697a      	ldr	r2, [r7, #20]
 8005594:	b2d2      	uxtb	r2, r2
 8005596:	4611      	mov	r1, r2
 8005598:	4618      	mov	r0, r3
 800559a:	f004 f98e 	bl	80098ba <USB_HC_Halt>
 800559e:	e28c      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 80055a0:	697b      	ldr	r3, [r7, #20]
 80055a2:	015a      	lsls	r2, r3, #5
 80055a4:	69bb      	ldr	r3, [r7, #24]
 80055a6:	4413      	add	r3, r2
 80055a8:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80055ac:	689b      	ldr	r3, [r3, #8]
 80055ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80055b2:	2b40      	cmp	r3, #64	@ 0x40
 80055b4:	d12c      	bne.n	8005610 <HCD_HC_OUT_IRQHandler+0x220>
 80055b6:	687a      	ldr	r2, [r7, #4]
 80055b8:	697b      	ldr	r3, [r7, #20]
 80055ba:	212c      	movs	r1, #44	@ 0x2c
 80055bc:	fb01 f303 	mul.w	r3, r1, r3
 80055c0:	4413      	add	r3, r2
 80055c2:	3361      	adds	r3, #97	@ 0x61
 80055c4:	2204      	movs	r2, #4
 80055c6:	701a      	strb	r2, [r3, #0]
 80055c8:	687a      	ldr	r2, [r7, #4]
 80055ca:	697b      	ldr	r3, [r7, #20]
 80055cc:	212c      	movs	r1, #44	@ 0x2c
 80055ce:	fb01 f303 	mul.w	r3, r1, r3
 80055d2:	4413      	add	r3, r2
 80055d4:	333d      	adds	r3, #61	@ 0x3d
 80055d6:	2201      	movs	r2, #1
 80055d8:	701a      	strb	r2, [r3, #0]
 80055da:	687a      	ldr	r2, [r7, #4]
 80055dc:	697b      	ldr	r3, [r7, #20]
 80055de:	212c      	movs	r1, #44	@ 0x2c
 80055e0:	fb01 f303 	mul.w	r3, r1, r3
 80055e4:	4413      	add	r3, r2
 80055e6:	335c      	adds	r3, #92	@ 0x5c
 80055e8:	2200      	movs	r2, #0
 80055ea:	601a      	str	r2, [r3, #0]
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	697a      	ldr	r2, [r7, #20]
 80055f2:	b2d2      	uxtb	r2, r2
 80055f4:	4611      	mov	r1, r2
 80055f6:	4618      	mov	r0, r3
 80055f8:	f004 f95f 	bl	80098ba <USB_HC_Halt>
 80055fc:	697b      	ldr	r3, [r7, #20]
 80055fe:	015a      	lsls	r2, r3, #5
 8005600:	69bb      	ldr	r3, [r7, #24]
 8005602:	4413      	add	r3, r2
 8005604:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005608:	461a      	mov	r2, r3
 800560a:	2340      	movs	r3, #64	@ 0x40
 800560c:	6093      	str	r3, [r2, #8]
 800560e:	e254      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 8005610:	697b      	ldr	r3, [r7, #20]
 8005612:	015a      	lsls	r2, r3, #5
 8005614:	69bb      	ldr	r3, [r7, #24]
 8005616:	4413      	add	r3, r2
 8005618:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800561c:	689b      	ldr	r3, [r3, #8]
 800561e:	f003 0308 	and.w	r3, r3, #8
 8005622:	2b08      	cmp	r3, #8
 8005624:	d11a      	bne.n	800565c <HCD_HC_OUT_IRQHandler+0x26c>
 8005626:	697b      	ldr	r3, [r7, #20]
 8005628:	015a      	lsls	r2, r3, #5
 800562a:	69bb      	ldr	r3, [r7, #24]
 800562c:	4413      	add	r3, r2
 800562e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005632:	461a      	mov	r2, r3
 8005634:	2308      	movs	r3, #8
 8005636:	6093      	str	r3, [r2, #8]
 8005638:	687a      	ldr	r2, [r7, #4]
 800563a:	697b      	ldr	r3, [r7, #20]
 800563c:	212c      	movs	r1, #44	@ 0x2c
 800563e:	fb01 f303 	mul.w	r3, r1, r3
 8005642:	4413      	add	r3, r2
 8005644:	3361      	adds	r3, #97	@ 0x61
 8005646:	2205      	movs	r2, #5
 8005648:	701a      	strb	r2, [r3, #0]
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	697a      	ldr	r2, [r7, #20]
 8005650:	b2d2      	uxtb	r2, r2
 8005652:	4611      	mov	r1, r2
 8005654:	4618      	mov	r0, r3
 8005656:	f004 f930 	bl	80098ba <USB_HC_Halt>
 800565a:	e22e      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 800565c:	697b      	ldr	r3, [r7, #20]
 800565e:	015a      	lsls	r2, r3, #5
 8005660:	69bb      	ldr	r3, [r7, #24]
 8005662:	4413      	add	r3, r2
 8005664:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005668:	689b      	ldr	r3, [r3, #8]
 800566a:	f003 0310 	and.w	r3, r3, #16
 800566e:	2b10      	cmp	r3, #16
 8005670:	d140      	bne.n	80056f4 <HCD_HC_OUT_IRQHandler+0x304>
 8005672:	687a      	ldr	r2, [r7, #4]
 8005674:	697b      	ldr	r3, [r7, #20]
 8005676:	212c      	movs	r1, #44	@ 0x2c
 8005678:	fb01 f303 	mul.w	r3, r1, r3
 800567c:	4413      	add	r3, r2
 800567e:	335c      	adds	r3, #92	@ 0x5c
 8005680:	2200      	movs	r2, #0
 8005682:	601a      	str	r2, [r3, #0]
 8005684:	687a      	ldr	r2, [r7, #4]
 8005686:	697b      	ldr	r3, [r7, #20]
 8005688:	212c      	movs	r1, #44	@ 0x2c
 800568a:	fb01 f303 	mul.w	r3, r1, r3
 800568e:	4413      	add	r3, r2
 8005690:	3361      	adds	r3, #97	@ 0x61
 8005692:	2203      	movs	r2, #3
 8005694:	701a      	strb	r2, [r3, #0]
 8005696:	687a      	ldr	r2, [r7, #4]
 8005698:	697b      	ldr	r3, [r7, #20]
 800569a:	212c      	movs	r1, #44	@ 0x2c
 800569c:	fb01 f303 	mul.w	r3, r1, r3
 80056a0:	4413      	add	r3, r2
 80056a2:	333d      	adds	r3, #61	@ 0x3d
 80056a4:	781b      	ldrb	r3, [r3, #0]
 80056a6:	2b00      	cmp	r3, #0
 80056a8:	d112      	bne.n	80056d0 <HCD_HC_OUT_IRQHandler+0x2e0>
 80056aa:	687a      	ldr	r2, [r7, #4]
 80056ac:	697b      	ldr	r3, [r7, #20]
 80056ae:	212c      	movs	r1, #44	@ 0x2c
 80056b0:	fb01 f303 	mul.w	r3, r1, r3
 80056b4:	4413      	add	r3, r2
 80056b6:	333c      	adds	r3, #60	@ 0x3c
 80056b8:	781b      	ldrb	r3, [r3, #0]
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d108      	bne.n	80056d0 <HCD_HC_OUT_IRQHandler+0x2e0>
 80056be:	687a      	ldr	r2, [r7, #4]
 80056c0:	697b      	ldr	r3, [r7, #20]
 80056c2:	212c      	movs	r1, #44	@ 0x2c
 80056c4:	fb01 f303 	mul.w	r3, r1, r3
 80056c8:	4413      	add	r3, r2
 80056ca:	333d      	adds	r3, #61	@ 0x3d
 80056cc:	2201      	movs	r2, #1
 80056ce:	701a      	strb	r2, [r3, #0]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	697a      	ldr	r2, [r7, #20]
 80056d6:	b2d2      	uxtb	r2, r2
 80056d8:	4611      	mov	r1, r2
 80056da:	4618      	mov	r0, r3
 80056dc:	f004 f8ed 	bl	80098ba <USB_HC_Halt>
 80056e0:	697b      	ldr	r3, [r7, #20]
 80056e2:	015a      	lsls	r2, r3, #5
 80056e4:	69bb      	ldr	r3, [r7, #24]
 80056e6:	4413      	add	r3, r2
 80056e8:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80056ec:	461a      	mov	r2, r3
 80056ee:	2310      	movs	r3, #16
 80056f0:	6093      	str	r3, [r2, #8]
 80056f2:	e1e2      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 80056f4:	697b      	ldr	r3, [r7, #20]
 80056f6:	015a      	lsls	r2, r3, #5
 80056f8:	69bb      	ldr	r3, [r7, #24]
 80056fa:	4413      	add	r3, r2
 80056fc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005700:	689b      	ldr	r3, [r3, #8]
 8005702:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005706:	2b80      	cmp	r3, #128	@ 0x80
 8005708:	d164      	bne.n	80057d4 <HCD_HC_OUT_IRQHandler+0x3e4>
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	691b      	ldr	r3, [r3, #16]
 800570e:	2b00      	cmp	r3, #0
 8005710:	d111      	bne.n	8005736 <HCD_HC_OUT_IRQHandler+0x346>
 8005712:	687a      	ldr	r2, [r7, #4]
 8005714:	697b      	ldr	r3, [r7, #20]
 8005716:	212c      	movs	r1, #44	@ 0x2c
 8005718:	fb01 f303 	mul.w	r3, r1, r3
 800571c:	4413      	add	r3, r2
 800571e:	3361      	adds	r3, #97	@ 0x61
 8005720:	2206      	movs	r2, #6
 8005722:	701a      	strb	r2, [r3, #0]
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	697a      	ldr	r2, [r7, #20]
 800572a:	b2d2      	uxtb	r2, r2
 800572c:	4611      	mov	r1, r2
 800572e:	4618      	mov	r0, r3
 8005730:	f004 f8c3 	bl	80098ba <USB_HC_Halt>
 8005734:	e044      	b.n	80057c0 <HCD_HC_OUT_IRQHandler+0x3d0>
 8005736:	687a      	ldr	r2, [r7, #4]
 8005738:	697b      	ldr	r3, [r7, #20]
 800573a:	212c      	movs	r1, #44	@ 0x2c
 800573c:	fb01 f303 	mul.w	r3, r1, r3
 8005740:	4413      	add	r3, r2
 8005742:	335c      	adds	r3, #92	@ 0x5c
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	1c5a      	adds	r2, r3, #1
 8005748:	6879      	ldr	r1, [r7, #4]
 800574a:	697b      	ldr	r3, [r7, #20]
 800574c:	202c      	movs	r0, #44	@ 0x2c
 800574e:	fb00 f303 	mul.w	r3, r0, r3
 8005752:	440b      	add	r3, r1
 8005754:	335c      	adds	r3, #92	@ 0x5c
 8005756:	601a      	str	r2, [r3, #0]
 8005758:	687a      	ldr	r2, [r7, #4]
 800575a:	697b      	ldr	r3, [r7, #20]
 800575c:	212c      	movs	r1, #44	@ 0x2c
 800575e:	fb01 f303 	mul.w	r3, r1, r3
 8005762:	4413      	add	r3, r2
 8005764:	335c      	adds	r3, #92	@ 0x5c
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	2b02      	cmp	r3, #2
 800576a:	d920      	bls.n	80057ae <HCD_HC_OUT_IRQHandler+0x3be>
 800576c:	687a      	ldr	r2, [r7, #4]
 800576e:	697b      	ldr	r3, [r7, #20]
 8005770:	212c      	movs	r1, #44	@ 0x2c
 8005772:	fb01 f303 	mul.w	r3, r1, r3
 8005776:	4413      	add	r3, r2
 8005778:	335c      	adds	r3, #92	@ 0x5c
 800577a:	2200      	movs	r2, #0
 800577c:	601a      	str	r2, [r3, #0]
 800577e:	687a      	ldr	r2, [r7, #4]
 8005780:	697b      	ldr	r3, [r7, #20]
 8005782:	212c      	movs	r1, #44	@ 0x2c
 8005784:	fb01 f303 	mul.w	r3, r1, r3
 8005788:	4413      	add	r3, r2
 800578a:	3360      	adds	r3, #96	@ 0x60
 800578c:	2204      	movs	r2, #4
 800578e:	701a      	strb	r2, [r3, #0]
 8005790:	697b      	ldr	r3, [r7, #20]
 8005792:	b2d9      	uxtb	r1, r3
 8005794:	687a      	ldr	r2, [r7, #4]
 8005796:	697b      	ldr	r3, [r7, #20]
 8005798:	202c      	movs	r0, #44	@ 0x2c
 800579a:	fb00 f303 	mul.w	r3, r0, r3
 800579e:	4413      	add	r3, r2
 80057a0:	3360      	adds	r3, #96	@ 0x60
 80057a2:	781b      	ldrb	r3, [r3, #0]
 80057a4:	461a      	mov	r2, r3
 80057a6:	6878      	ldr	r0, [r7, #4]
 80057a8:	f00b f836 	bl	8010818 <HAL_HCD_HC_NotifyURBChange_Callback>
 80057ac:	e008      	b.n	80057c0 <HCD_HC_OUT_IRQHandler+0x3d0>
 80057ae:	687a      	ldr	r2, [r7, #4]
 80057b0:	697b      	ldr	r3, [r7, #20]
 80057b2:	212c      	movs	r1, #44	@ 0x2c
 80057b4:	fb01 f303 	mul.w	r3, r1, r3
 80057b8:	4413      	add	r3, r2
 80057ba:	3360      	adds	r3, #96	@ 0x60
 80057bc:	2202      	movs	r2, #2
 80057be:	701a      	strb	r2, [r3, #0]
 80057c0:	697b      	ldr	r3, [r7, #20]
 80057c2:	015a      	lsls	r2, r3, #5
 80057c4:	69bb      	ldr	r3, [r7, #24]
 80057c6:	4413      	add	r3, r2
 80057c8:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80057cc:	461a      	mov	r2, r3
 80057ce:	2380      	movs	r3, #128	@ 0x80
 80057d0:	6093      	str	r3, [r2, #8]
 80057d2:	e172      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 80057d4:	697b      	ldr	r3, [r7, #20]
 80057d6:	015a      	lsls	r2, r3, #5
 80057d8:	69bb      	ldr	r3, [r7, #24]
 80057da:	4413      	add	r3, r2
 80057dc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80057e0:	689b      	ldr	r3, [r3, #8]
 80057e2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80057e6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80057ea:	d11b      	bne.n	8005824 <HCD_HC_OUT_IRQHandler+0x434>
 80057ec:	687a      	ldr	r2, [r7, #4]
 80057ee:	697b      	ldr	r3, [r7, #20]
 80057f0:	212c      	movs	r1, #44	@ 0x2c
 80057f2:	fb01 f303 	mul.w	r3, r1, r3
 80057f6:	4413      	add	r3, r2
 80057f8:	3361      	adds	r3, #97	@ 0x61
 80057fa:	2208      	movs	r2, #8
 80057fc:	701a      	strb	r2, [r3, #0]
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	697a      	ldr	r2, [r7, #20]
 8005804:	b2d2      	uxtb	r2, r2
 8005806:	4611      	mov	r1, r2
 8005808:	4618      	mov	r0, r3
 800580a:	f004 f856 	bl	80098ba <USB_HC_Halt>
 800580e:	697b      	ldr	r3, [r7, #20]
 8005810:	015a      	lsls	r2, r3, #5
 8005812:	69bb      	ldr	r3, [r7, #24]
 8005814:	4413      	add	r3, r2
 8005816:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800581a:	461a      	mov	r2, r3
 800581c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8005820:	6093      	str	r3, [r2, #8]
 8005822:	e14a      	b.n	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 8005824:	697b      	ldr	r3, [r7, #20]
 8005826:	015a      	lsls	r2, r3, #5
 8005828:	69bb      	ldr	r3, [r7, #24]
 800582a:	4413      	add	r3, r2
 800582c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005830:	689b      	ldr	r3, [r3, #8]
 8005832:	f003 0302 	and.w	r3, r3, #2
 8005836:	2b02      	cmp	r3, #2
 8005838:	f040 813f 	bne.w	8005aba <HCD_HC_OUT_IRQHandler+0x6ca>
 800583c:	687a      	ldr	r2, [r7, #4]
 800583e:	697b      	ldr	r3, [r7, #20]
 8005840:	212c      	movs	r1, #44	@ 0x2c
 8005842:	fb01 f303 	mul.w	r3, r1, r3
 8005846:	4413      	add	r3, r2
 8005848:	3361      	adds	r3, #97	@ 0x61
 800584a:	781b      	ldrb	r3, [r3, #0]
 800584c:	2b01      	cmp	r3, #1
 800584e:	d17d      	bne.n	800594c <HCD_HC_OUT_IRQHandler+0x55c>
 8005850:	687a      	ldr	r2, [r7, #4]
 8005852:	697b      	ldr	r3, [r7, #20]
 8005854:	212c      	movs	r1, #44	@ 0x2c
 8005856:	fb01 f303 	mul.w	r3, r1, r3
 800585a:	4413      	add	r3, r2
 800585c:	3360      	adds	r3, #96	@ 0x60
 800585e:	2201      	movs	r2, #1
 8005860:	701a      	strb	r2, [r3, #0]
 8005862:	687a      	ldr	r2, [r7, #4]
 8005864:	697b      	ldr	r3, [r7, #20]
 8005866:	212c      	movs	r1, #44	@ 0x2c
 8005868:	fb01 f303 	mul.w	r3, r1, r3
 800586c:	4413      	add	r3, r2
 800586e:	333f      	adds	r3, #63	@ 0x3f
 8005870:	781b      	ldrb	r3, [r3, #0]
 8005872:	2b02      	cmp	r3, #2
 8005874:	d00a      	beq.n	800588c <HCD_HC_OUT_IRQHandler+0x49c>
 8005876:	687a      	ldr	r2, [r7, #4]
 8005878:	697b      	ldr	r3, [r7, #20]
 800587a:	212c      	movs	r1, #44	@ 0x2c
 800587c:	fb01 f303 	mul.w	r3, r1, r3
 8005880:	4413      	add	r3, r2
 8005882:	333f      	adds	r3, #63	@ 0x3f
 8005884:	781b      	ldrb	r3, [r3, #0]
 8005886:	2b03      	cmp	r3, #3
 8005888:	f040 8100 	bne.w	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	691b      	ldr	r3, [r3, #16]
 8005890:	2b00      	cmp	r3, #0
 8005892:	d113      	bne.n	80058bc <HCD_HC_OUT_IRQHandler+0x4cc>
 8005894:	687a      	ldr	r2, [r7, #4]
 8005896:	697b      	ldr	r3, [r7, #20]
 8005898:	212c      	movs	r1, #44	@ 0x2c
 800589a:	fb01 f303 	mul.w	r3, r1, r3
 800589e:	4413      	add	r3, r2
 80058a0:	3355      	adds	r3, #85	@ 0x55
 80058a2:	781b      	ldrb	r3, [r3, #0]
 80058a4:	f083 0301 	eor.w	r3, r3, #1
 80058a8:	b2d8      	uxtb	r0, r3
 80058aa:	687a      	ldr	r2, [r7, #4]
 80058ac:	697b      	ldr	r3, [r7, #20]
 80058ae:	212c      	movs	r1, #44	@ 0x2c
 80058b0:	fb01 f303 	mul.w	r3, r1, r3
 80058b4:	4413      	add	r3, r2
 80058b6:	3355      	adds	r3, #85	@ 0x55
 80058b8:	4602      	mov	r2, r0
 80058ba:	701a      	strb	r2, [r3, #0]
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	691b      	ldr	r3, [r3, #16]
 80058c0:	2b01      	cmp	r3, #1
 80058c2:	f040 80e3 	bne.w	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 80058c6:	687a      	ldr	r2, [r7, #4]
 80058c8:	697b      	ldr	r3, [r7, #20]
 80058ca:	212c      	movs	r1, #44	@ 0x2c
 80058cc:	fb01 f303 	mul.w	r3, r1, r3
 80058d0:	4413      	add	r3, r2
 80058d2:	334c      	adds	r3, #76	@ 0x4c
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	f000 80d8 	beq.w	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 80058dc:	687a      	ldr	r2, [r7, #4]
 80058de:	697b      	ldr	r3, [r7, #20]
 80058e0:	212c      	movs	r1, #44	@ 0x2c
 80058e2:	fb01 f303 	mul.w	r3, r1, r3
 80058e6:	4413      	add	r3, r2
 80058e8:	334c      	adds	r3, #76	@ 0x4c
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	6879      	ldr	r1, [r7, #4]
 80058ee:	697a      	ldr	r2, [r7, #20]
 80058f0:	202c      	movs	r0, #44	@ 0x2c
 80058f2:	fb00 f202 	mul.w	r2, r0, r2
 80058f6:	440a      	add	r2, r1
 80058f8:	3240      	adds	r2, #64	@ 0x40
 80058fa:	8812      	ldrh	r2, [r2, #0]
 80058fc:	4413      	add	r3, r2
 80058fe:	3b01      	subs	r3, #1
 8005900:	6879      	ldr	r1, [r7, #4]
 8005902:	697a      	ldr	r2, [r7, #20]
 8005904:	202c      	movs	r0, #44	@ 0x2c
 8005906:	fb00 f202 	mul.w	r2, r0, r2
 800590a:	440a      	add	r2, r1
 800590c:	3240      	adds	r2, #64	@ 0x40
 800590e:	8812      	ldrh	r2, [r2, #0]
 8005910:	fbb3 f3f2 	udiv	r3, r3, r2
 8005914:	60fb      	str	r3, [r7, #12]
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	f003 0301 	and.w	r3, r3, #1
 800591c:	2b00      	cmp	r3, #0
 800591e:	f000 80b5 	beq.w	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 8005922:	687a      	ldr	r2, [r7, #4]
 8005924:	697b      	ldr	r3, [r7, #20]
 8005926:	212c      	movs	r1, #44	@ 0x2c
 8005928:	fb01 f303 	mul.w	r3, r1, r3
 800592c:	4413      	add	r3, r2
 800592e:	3355      	adds	r3, #85	@ 0x55
 8005930:	781b      	ldrb	r3, [r3, #0]
 8005932:	f083 0301 	eor.w	r3, r3, #1
 8005936:	b2d8      	uxtb	r0, r3
 8005938:	687a      	ldr	r2, [r7, #4]
 800593a:	697b      	ldr	r3, [r7, #20]
 800593c:	212c      	movs	r1, #44	@ 0x2c
 800593e:	fb01 f303 	mul.w	r3, r1, r3
 8005942:	4413      	add	r3, r2
 8005944:	3355      	adds	r3, #85	@ 0x55
 8005946:	4602      	mov	r2, r0
 8005948:	701a      	strb	r2, [r3, #0]
 800594a:	e09f      	b.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 800594c:	687a      	ldr	r2, [r7, #4]
 800594e:	697b      	ldr	r3, [r7, #20]
 8005950:	212c      	movs	r1, #44	@ 0x2c
 8005952:	fb01 f303 	mul.w	r3, r1, r3
 8005956:	4413      	add	r3, r2
 8005958:	3361      	adds	r3, #97	@ 0x61
 800595a:	781b      	ldrb	r3, [r3, #0]
 800595c:	2b03      	cmp	r3, #3
 800595e:	d109      	bne.n	8005974 <HCD_HC_OUT_IRQHandler+0x584>
 8005960:	687a      	ldr	r2, [r7, #4]
 8005962:	697b      	ldr	r3, [r7, #20]
 8005964:	212c      	movs	r1, #44	@ 0x2c
 8005966:	fb01 f303 	mul.w	r3, r1, r3
 800596a:	4413      	add	r3, r2
 800596c:	3360      	adds	r3, #96	@ 0x60
 800596e:	2202      	movs	r2, #2
 8005970:	701a      	strb	r2, [r3, #0]
 8005972:	e08b      	b.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 8005974:	687a      	ldr	r2, [r7, #4]
 8005976:	697b      	ldr	r3, [r7, #20]
 8005978:	212c      	movs	r1, #44	@ 0x2c
 800597a:	fb01 f303 	mul.w	r3, r1, r3
 800597e:	4413      	add	r3, r2
 8005980:	3361      	adds	r3, #97	@ 0x61
 8005982:	781b      	ldrb	r3, [r3, #0]
 8005984:	2b04      	cmp	r3, #4
 8005986:	d109      	bne.n	800599c <HCD_HC_OUT_IRQHandler+0x5ac>
 8005988:	687a      	ldr	r2, [r7, #4]
 800598a:	697b      	ldr	r3, [r7, #20]
 800598c:	212c      	movs	r1, #44	@ 0x2c
 800598e:	fb01 f303 	mul.w	r3, r1, r3
 8005992:	4413      	add	r3, r2
 8005994:	3360      	adds	r3, #96	@ 0x60
 8005996:	2202      	movs	r2, #2
 8005998:	701a      	strb	r2, [r3, #0]
 800599a:	e077      	b.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 800599c:	687a      	ldr	r2, [r7, #4]
 800599e:	697b      	ldr	r3, [r7, #20]
 80059a0:	212c      	movs	r1, #44	@ 0x2c
 80059a2:	fb01 f303 	mul.w	r3, r1, r3
 80059a6:	4413      	add	r3, r2
 80059a8:	3361      	adds	r3, #97	@ 0x61
 80059aa:	781b      	ldrb	r3, [r3, #0]
 80059ac:	2b05      	cmp	r3, #5
 80059ae:	d109      	bne.n	80059c4 <HCD_HC_OUT_IRQHandler+0x5d4>
 80059b0:	687a      	ldr	r2, [r7, #4]
 80059b2:	697b      	ldr	r3, [r7, #20]
 80059b4:	212c      	movs	r1, #44	@ 0x2c
 80059b6:	fb01 f303 	mul.w	r3, r1, r3
 80059ba:	4413      	add	r3, r2
 80059bc:	3360      	adds	r3, #96	@ 0x60
 80059be:	2205      	movs	r2, #5
 80059c0:	701a      	strb	r2, [r3, #0]
 80059c2:	e063      	b.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 80059c4:	687a      	ldr	r2, [r7, #4]
 80059c6:	697b      	ldr	r3, [r7, #20]
 80059c8:	212c      	movs	r1, #44	@ 0x2c
 80059ca:	fb01 f303 	mul.w	r3, r1, r3
 80059ce:	4413      	add	r3, r2
 80059d0:	3361      	adds	r3, #97	@ 0x61
 80059d2:	781b      	ldrb	r3, [r3, #0]
 80059d4:	2b06      	cmp	r3, #6
 80059d6:	d009      	beq.n	80059ec <HCD_HC_OUT_IRQHandler+0x5fc>
 80059d8:	687a      	ldr	r2, [r7, #4]
 80059da:	697b      	ldr	r3, [r7, #20]
 80059dc:	212c      	movs	r1, #44	@ 0x2c
 80059de:	fb01 f303 	mul.w	r3, r1, r3
 80059e2:	4413      	add	r3, r2
 80059e4:	3361      	adds	r3, #97	@ 0x61
 80059e6:	781b      	ldrb	r3, [r3, #0]
 80059e8:	2b08      	cmp	r3, #8
 80059ea:	d14f      	bne.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 80059ec:	687a      	ldr	r2, [r7, #4]
 80059ee:	697b      	ldr	r3, [r7, #20]
 80059f0:	212c      	movs	r1, #44	@ 0x2c
 80059f2:	fb01 f303 	mul.w	r3, r1, r3
 80059f6:	4413      	add	r3, r2
 80059f8:	335c      	adds	r3, #92	@ 0x5c
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	1c5a      	adds	r2, r3, #1
 80059fe:	6879      	ldr	r1, [r7, #4]
 8005a00:	697b      	ldr	r3, [r7, #20]
 8005a02:	202c      	movs	r0, #44	@ 0x2c
 8005a04:	fb00 f303 	mul.w	r3, r0, r3
 8005a08:	440b      	add	r3, r1
 8005a0a:	335c      	adds	r3, #92	@ 0x5c
 8005a0c:	601a      	str	r2, [r3, #0]
 8005a0e:	687a      	ldr	r2, [r7, #4]
 8005a10:	697b      	ldr	r3, [r7, #20]
 8005a12:	212c      	movs	r1, #44	@ 0x2c
 8005a14:	fb01 f303 	mul.w	r3, r1, r3
 8005a18:	4413      	add	r3, r2
 8005a1a:	335c      	adds	r3, #92	@ 0x5c
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	2b02      	cmp	r3, #2
 8005a20:	d912      	bls.n	8005a48 <HCD_HC_OUT_IRQHandler+0x658>
 8005a22:	687a      	ldr	r2, [r7, #4]
 8005a24:	697b      	ldr	r3, [r7, #20]
 8005a26:	212c      	movs	r1, #44	@ 0x2c
 8005a28:	fb01 f303 	mul.w	r3, r1, r3
 8005a2c:	4413      	add	r3, r2
 8005a2e:	335c      	adds	r3, #92	@ 0x5c
 8005a30:	2200      	movs	r2, #0
 8005a32:	601a      	str	r2, [r3, #0]
 8005a34:	687a      	ldr	r2, [r7, #4]
 8005a36:	697b      	ldr	r3, [r7, #20]
 8005a38:	212c      	movs	r1, #44	@ 0x2c
 8005a3a:	fb01 f303 	mul.w	r3, r1, r3
 8005a3e:	4413      	add	r3, r2
 8005a40:	3360      	adds	r3, #96	@ 0x60
 8005a42:	2204      	movs	r2, #4
 8005a44:	701a      	strb	r2, [r3, #0]
 8005a46:	e021      	b.n	8005a8c <HCD_HC_OUT_IRQHandler+0x69c>
 8005a48:	687a      	ldr	r2, [r7, #4]
 8005a4a:	697b      	ldr	r3, [r7, #20]
 8005a4c:	212c      	movs	r1, #44	@ 0x2c
 8005a4e:	fb01 f303 	mul.w	r3, r1, r3
 8005a52:	4413      	add	r3, r2
 8005a54:	3360      	adds	r3, #96	@ 0x60
 8005a56:	2202      	movs	r2, #2
 8005a58:	701a      	strb	r2, [r3, #0]
 8005a5a:	697b      	ldr	r3, [r7, #20]
 8005a5c:	015a      	lsls	r2, r3, #5
 8005a5e:	69bb      	ldr	r3, [r7, #24]
 8005a60:	4413      	add	r3, r2
 8005a62:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	613b      	str	r3, [r7, #16]
 8005a6a:	693b      	ldr	r3, [r7, #16]
 8005a6c:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005a70:	613b      	str	r3, [r7, #16]
 8005a72:	693b      	ldr	r3, [r7, #16]
 8005a74:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005a78:	613b      	str	r3, [r7, #16]
 8005a7a:	697b      	ldr	r3, [r7, #20]
 8005a7c:	015a      	lsls	r2, r3, #5
 8005a7e:	69bb      	ldr	r3, [r7, #24]
 8005a80:	4413      	add	r3, r2
 8005a82:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005a86:	461a      	mov	r2, r3
 8005a88:	693b      	ldr	r3, [r7, #16]
 8005a8a:	6013      	str	r3, [r2, #0]
 8005a8c:	697b      	ldr	r3, [r7, #20]
 8005a8e:	015a      	lsls	r2, r3, #5
 8005a90:	69bb      	ldr	r3, [r7, #24]
 8005a92:	4413      	add	r3, r2
 8005a94:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005a98:	461a      	mov	r2, r3
 8005a9a:	2302      	movs	r3, #2
 8005a9c:	6093      	str	r3, [r2, #8]
 8005a9e:	697b      	ldr	r3, [r7, #20]
 8005aa0:	b2d9      	uxtb	r1, r3
 8005aa2:	687a      	ldr	r2, [r7, #4]
 8005aa4:	697b      	ldr	r3, [r7, #20]
 8005aa6:	202c      	movs	r0, #44	@ 0x2c
 8005aa8:	fb00 f303 	mul.w	r3, r0, r3
 8005aac:	4413      	add	r3, r2
 8005aae:	3360      	adds	r3, #96	@ 0x60
 8005ab0:	781b      	ldrb	r3, [r3, #0]
 8005ab2:	461a      	mov	r2, r3
 8005ab4:	6878      	ldr	r0, [r7, #4]
 8005ab6:	f00a feaf 	bl	8010818 <HAL_HCD_HC_NotifyURBChange_Callback>
 8005aba:	bf00      	nop
 8005abc:	3720      	adds	r7, #32
 8005abe:	46bd      	mov	sp, r7
 8005ac0:	bd80      	pop	{r7, pc}

08005ac2 <HCD_RXQLVL_IRQHandler>:
 8005ac2:	b580      	push	{r7, lr}
 8005ac4:	b08a      	sub	sp, #40	@ 0x28
 8005ac6:	af00      	add	r7, sp, #0
 8005ac8:	6078      	str	r0, [r7, #4]
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ad0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005ad2:	623b      	str	r3, [r7, #32]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	6a1b      	ldr	r3, [r3, #32]
 8005ada:	61fb      	str	r3, [r7, #28]
 8005adc:	69fb      	ldr	r3, [r7, #28]
 8005ade:	f003 030f 	and.w	r3, r3, #15
 8005ae2:	61bb      	str	r3, [r7, #24]
 8005ae4:	69fb      	ldr	r3, [r7, #28]
 8005ae6:	0c5b      	lsrs	r3, r3, #17
 8005ae8:	f003 030f 	and.w	r3, r3, #15
 8005aec:	617b      	str	r3, [r7, #20]
 8005aee:	69fb      	ldr	r3, [r7, #28]
 8005af0:	091b      	lsrs	r3, r3, #4
 8005af2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005af6:	613b      	str	r3, [r7, #16]
 8005af8:	697b      	ldr	r3, [r7, #20]
 8005afa:	2b02      	cmp	r3, #2
 8005afc:	d004      	beq.n	8005b08 <HCD_RXQLVL_IRQHandler+0x46>
 8005afe:	697b      	ldr	r3, [r7, #20]
 8005b00:	2b05      	cmp	r3, #5
 8005b02:	f000 80a9 	beq.w	8005c58 <HCD_RXQLVL_IRQHandler+0x196>
 8005b06:	e0aa      	b.n	8005c5e <HCD_RXQLVL_IRQHandler+0x19c>
 8005b08:	693b      	ldr	r3, [r7, #16]
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	f000 80a6 	beq.w	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005b10:	687a      	ldr	r2, [r7, #4]
 8005b12:	69bb      	ldr	r3, [r7, #24]
 8005b14:	212c      	movs	r1, #44	@ 0x2c
 8005b16:	fb01 f303 	mul.w	r3, r1, r3
 8005b1a:	4413      	add	r3, r2
 8005b1c:	3344      	adds	r3, #68	@ 0x44
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	2b00      	cmp	r3, #0
 8005b22:	f000 809b 	beq.w	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005b26:	687a      	ldr	r2, [r7, #4]
 8005b28:	69bb      	ldr	r3, [r7, #24]
 8005b2a:	212c      	movs	r1, #44	@ 0x2c
 8005b2c:	fb01 f303 	mul.w	r3, r1, r3
 8005b30:	4413      	add	r3, r2
 8005b32:	3350      	adds	r3, #80	@ 0x50
 8005b34:	681a      	ldr	r2, [r3, #0]
 8005b36:	693b      	ldr	r3, [r7, #16]
 8005b38:	441a      	add	r2, r3
 8005b3a:	6879      	ldr	r1, [r7, #4]
 8005b3c:	69bb      	ldr	r3, [r7, #24]
 8005b3e:	202c      	movs	r0, #44	@ 0x2c
 8005b40:	fb00 f303 	mul.w	r3, r0, r3
 8005b44:	440b      	add	r3, r1
 8005b46:	334c      	adds	r3, #76	@ 0x4c
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	429a      	cmp	r2, r3
 8005b4c:	d87a      	bhi.n	8005c44 <HCD_RXQLVL_IRQHandler+0x182>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	6818      	ldr	r0, [r3, #0]
 8005b52:	687a      	ldr	r2, [r7, #4]
 8005b54:	69bb      	ldr	r3, [r7, #24]
 8005b56:	212c      	movs	r1, #44	@ 0x2c
 8005b58:	fb01 f303 	mul.w	r3, r1, r3
 8005b5c:	4413      	add	r3, r2
 8005b5e:	3344      	adds	r3, #68	@ 0x44
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	693a      	ldr	r2, [r7, #16]
 8005b64:	b292      	uxth	r2, r2
 8005b66:	4619      	mov	r1, r3
 8005b68:	f003 f9fe 	bl	8008f68 <USB_ReadPacket>
 8005b6c:	687a      	ldr	r2, [r7, #4]
 8005b6e:	69bb      	ldr	r3, [r7, #24]
 8005b70:	212c      	movs	r1, #44	@ 0x2c
 8005b72:	fb01 f303 	mul.w	r3, r1, r3
 8005b76:	4413      	add	r3, r2
 8005b78:	3344      	adds	r3, #68	@ 0x44
 8005b7a:	681a      	ldr	r2, [r3, #0]
 8005b7c:	693b      	ldr	r3, [r7, #16]
 8005b7e:	441a      	add	r2, r3
 8005b80:	6879      	ldr	r1, [r7, #4]
 8005b82:	69bb      	ldr	r3, [r7, #24]
 8005b84:	202c      	movs	r0, #44	@ 0x2c
 8005b86:	fb00 f303 	mul.w	r3, r0, r3
 8005b8a:	440b      	add	r3, r1
 8005b8c:	3344      	adds	r3, #68	@ 0x44
 8005b8e:	601a      	str	r2, [r3, #0]
 8005b90:	687a      	ldr	r2, [r7, #4]
 8005b92:	69bb      	ldr	r3, [r7, #24]
 8005b94:	212c      	movs	r1, #44	@ 0x2c
 8005b96:	fb01 f303 	mul.w	r3, r1, r3
 8005b9a:	4413      	add	r3, r2
 8005b9c:	3350      	adds	r3, #80	@ 0x50
 8005b9e:	681a      	ldr	r2, [r3, #0]
 8005ba0:	693b      	ldr	r3, [r7, #16]
 8005ba2:	441a      	add	r2, r3
 8005ba4:	6879      	ldr	r1, [r7, #4]
 8005ba6:	69bb      	ldr	r3, [r7, #24]
 8005ba8:	202c      	movs	r0, #44	@ 0x2c
 8005baa:	fb00 f303 	mul.w	r3, r0, r3
 8005bae:	440b      	add	r3, r1
 8005bb0:	3350      	adds	r3, #80	@ 0x50
 8005bb2:	601a      	str	r2, [r3, #0]
 8005bb4:	69bb      	ldr	r3, [r7, #24]
 8005bb6:	015a      	lsls	r2, r3, #5
 8005bb8:	6a3b      	ldr	r3, [r7, #32]
 8005bba:	4413      	add	r3, r2
 8005bbc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005bc0:	691b      	ldr	r3, [r3, #16]
 8005bc2:	0cdb      	lsrs	r3, r3, #19
 8005bc4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005bc8:	60fb      	str	r3, [r7, #12]
 8005bca:	687a      	ldr	r2, [r7, #4]
 8005bcc:	69bb      	ldr	r3, [r7, #24]
 8005bce:	212c      	movs	r1, #44	@ 0x2c
 8005bd0:	fb01 f303 	mul.w	r3, r1, r3
 8005bd4:	4413      	add	r3, r2
 8005bd6:	3340      	adds	r3, #64	@ 0x40
 8005bd8:	881b      	ldrh	r3, [r3, #0]
 8005bda:	461a      	mov	r2, r3
 8005bdc:	693b      	ldr	r3, [r7, #16]
 8005bde:	4293      	cmp	r3, r2
 8005be0:	d13c      	bne.n	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005be2:	68fb      	ldr	r3, [r7, #12]
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	d039      	beq.n	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005be8:	69bb      	ldr	r3, [r7, #24]
 8005bea:	015a      	lsls	r2, r3, #5
 8005bec:	6a3b      	ldr	r3, [r7, #32]
 8005bee:	4413      	add	r3, r2
 8005bf0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	60bb      	str	r3, [r7, #8]
 8005bf8:	68bb      	ldr	r3, [r7, #8]
 8005bfa:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005bfe:	60bb      	str	r3, [r7, #8]
 8005c00:	68bb      	ldr	r3, [r7, #8]
 8005c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005c06:	60bb      	str	r3, [r7, #8]
 8005c08:	69bb      	ldr	r3, [r7, #24]
 8005c0a:	015a      	lsls	r2, r3, #5
 8005c0c:	6a3b      	ldr	r3, [r7, #32]
 8005c0e:	4413      	add	r3, r2
 8005c10:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005c14:	461a      	mov	r2, r3
 8005c16:	68bb      	ldr	r3, [r7, #8]
 8005c18:	6013      	str	r3, [r2, #0]
 8005c1a:	687a      	ldr	r2, [r7, #4]
 8005c1c:	69bb      	ldr	r3, [r7, #24]
 8005c1e:	212c      	movs	r1, #44	@ 0x2c
 8005c20:	fb01 f303 	mul.w	r3, r1, r3
 8005c24:	4413      	add	r3, r2
 8005c26:	3354      	adds	r3, #84	@ 0x54
 8005c28:	781b      	ldrb	r3, [r3, #0]
 8005c2a:	f083 0301 	eor.w	r3, r3, #1
 8005c2e:	b2d8      	uxtb	r0, r3
 8005c30:	687a      	ldr	r2, [r7, #4]
 8005c32:	69bb      	ldr	r3, [r7, #24]
 8005c34:	212c      	movs	r1, #44	@ 0x2c
 8005c36:	fb01 f303 	mul.w	r3, r1, r3
 8005c3a:	4413      	add	r3, r2
 8005c3c:	3354      	adds	r3, #84	@ 0x54
 8005c3e:	4602      	mov	r2, r0
 8005c40:	701a      	strb	r2, [r3, #0]
 8005c42:	e00b      	b.n	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005c44:	687a      	ldr	r2, [r7, #4]
 8005c46:	69bb      	ldr	r3, [r7, #24]
 8005c48:	212c      	movs	r1, #44	@ 0x2c
 8005c4a:	fb01 f303 	mul.w	r3, r1, r3
 8005c4e:	4413      	add	r3, r2
 8005c50:	3360      	adds	r3, #96	@ 0x60
 8005c52:	2204      	movs	r2, #4
 8005c54:	701a      	strb	r2, [r3, #0]
 8005c56:	e001      	b.n	8005c5c <HCD_RXQLVL_IRQHandler+0x19a>
 8005c58:	bf00      	nop
 8005c5a:	e000      	b.n	8005c5e <HCD_RXQLVL_IRQHandler+0x19c>
 8005c5c:	bf00      	nop
 8005c5e:	bf00      	nop
 8005c60:	3728      	adds	r7, #40	@ 0x28
 8005c62:	46bd      	mov	sp, r7
 8005c64:	bd80      	pop	{r7, pc}

08005c66 <HCD_Port_IRQHandler>:
 8005c66:	b580      	push	{r7, lr}
 8005c68:	b086      	sub	sp, #24
 8005c6a:	af00      	add	r7, sp, #0
 8005c6c:	6078      	str	r0, [r7, #4]
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	617b      	str	r3, [r7, #20]
 8005c74:	697b      	ldr	r3, [r7, #20]
 8005c76:	613b      	str	r3, [r7, #16]
 8005c78:	693b      	ldr	r3, [r7, #16]
 8005c7a:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	60fb      	str	r3, [r7, #12]
 8005c82:	693b      	ldr	r3, [r7, #16]
 8005c84:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	60bb      	str	r3, [r7, #8]
 8005c8c:	68bb      	ldr	r3, [r7, #8]
 8005c8e:	f023 032e 	bic.w	r3, r3, #46	@ 0x2e
 8005c92:	60bb      	str	r3, [r7, #8]
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	f003 0302 	and.w	r3, r3, #2
 8005c9a:	2b02      	cmp	r3, #2
 8005c9c:	d10b      	bne.n	8005cb6 <HCD_Port_IRQHandler+0x50>
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	f003 0301 	and.w	r3, r3, #1
 8005ca4:	2b01      	cmp	r3, #1
 8005ca6:	d102      	bne.n	8005cae <HCD_Port_IRQHandler+0x48>
 8005ca8:	6878      	ldr	r0, [r7, #4]
 8005caa:	f00a fd99 	bl	80107e0 <HAL_HCD_Connect_Callback>
 8005cae:	68bb      	ldr	r3, [r7, #8]
 8005cb0:	f043 0302 	orr.w	r3, r3, #2
 8005cb4:	60bb      	str	r3, [r7, #8]
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	f003 0308 	and.w	r3, r3, #8
 8005cbc:	2b08      	cmp	r3, #8
 8005cbe:	d132      	bne.n	8005d26 <HCD_Port_IRQHandler+0xc0>
 8005cc0:	68bb      	ldr	r3, [r7, #8]
 8005cc2:	f043 0308 	orr.w	r3, r3, #8
 8005cc6:	60bb      	str	r3, [r7, #8]
 8005cc8:	68fb      	ldr	r3, [r7, #12]
 8005cca:	f003 0304 	and.w	r3, r3, #4
 8005cce:	2b04      	cmp	r3, #4
 8005cd0:	d126      	bne.n	8005d20 <HCD_Port_IRQHandler+0xba>
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	699b      	ldr	r3, [r3, #24]
 8005cd6:	2b02      	cmp	r3, #2
 8005cd8:	d113      	bne.n	8005d02 <HCD_Port_IRQHandler+0x9c>
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	f403 23c0 	and.w	r3, r3, #393216	@ 0x60000
 8005ce0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005ce4:	d106      	bne.n	8005cf4 <HCD_Port_IRQHandler+0x8e>
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	2102      	movs	r1, #2
 8005cec:	4618      	mov	r0, r3
 8005cee:	f003 faa9 	bl	8009244 <USB_InitFSLSPClkSel>
 8005cf2:	e011      	b.n	8005d18 <HCD_Port_IRQHandler+0xb2>
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	681b      	ldr	r3, [r3, #0]
 8005cf8:	2101      	movs	r1, #1
 8005cfa:	4618      	mov	r0, r3
 8005cfc:	f003 faa2 	bl	8009244 <USB_InitFSLSPClkSel>
 8005d00:	e00a      	b.n	8005d18 <HCD_Port_IRQHandler+0xb2>
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	68db      	ldr	r3, [r3, #12]
 8005d06:	2b01      	cmp	r3, #1
 8005d08:	d106      	bne.n	8005d18 <HCD_Port_IRQHandler+0xb2>
 8005d0a:	693b      	ldr	r3, [r7, #16]
 8005d0c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005d10:	461a      	mov	r2, r3
 8005d12:	f64e 2360 	movw	r3, #60000	@ 0xea60
 8005d16:	6053      	str	r3, [r2, #4]
 8005d18:	6878      	ldr	r0, [r7, #4]
 8005d1a:	f00a fd8f 	bl	801083c <HAL_HCD_PortEnabled_Callback>
 8005d1e:	e002      	b.n	8005d26 <HCD_Port_IRQHandler+0xc0>
 8005d20:	6878      	ldr	r0, [r7, #4]
 8005d22:	f00a fd99 	bl	8010858 <HAL_HCD_PortDisabled_Callback>
 8005d26:	68fb      	ldr	r3, [r7, #12]
 8005d28:	f003 0320 	and.w	r3, r3, #32
 8005d2c:	2b20      	cmp	r3, #32
 8005d2e:	d103      	bne.n	8005d38 <HCD_Port_IRQHandler+0xd2>
 8005d30:	68bb      	ldr	r3, [r7, #8]
 8005d32:	f043 0320 	orr.w	r3, r3, #32
 8005d36:	60bb      	str	r3, [r7, #8]
 8005d38:	693b      	ldr	r3, [r7, #16]
 8005d3a:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8005d3e:	461a      	mov	r2, r3
 8005d40:	68bb      	ldr	r3, [r7, #8]
 8005d42:	6013      	str	r3, [r2, #0]
 8005d44:	bf00      	nop
 8005d46:	3718      	adds	r7, #24
 8005d48:	46bd      	mov	sp, r7
 8005d4a:	bd80      	pop	{r7, pc}

08005d4c <HAL_I2C_Init>:
 8005d4c:	b580      	push	{r7, lr}
 8005d4e:	b084      	sub	sp, #16
 8005d50:	af00      	add	r7, sp, #0
 8005d52:	6078      	str	r0, [r7, #4]
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d101      	bne.n	8005d5e <HAL_I2C_Init+0x12>
 8005d5a:	2301      	movs	r3, #1
 8005d5c:	e12b      	b.n	8005fb6 <HAL_I2C_Init+0x26a>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005d64:	b2db      	uxtb	r3, r3
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d106      	bne.n	8005d78 <HAL_I2C_Init+0x2c>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	2200      	movs	r2, #0
 8005d6e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d72:	6878      	ldr	r0, [r7, #4]
 8005d74:	f7fd fc86 	bl	8003684 <HAL_I2C_MspInit>
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	2224      	movs	r2, #36	@ 0x24
 8005d7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	681a      	ldr	r2, [r3, #0]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f022 0201 	bic.w	r2, r2, #1
 8005d8e:	601a      	str	r2, [r3, #0]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	681a      	ldr	r2, [r3, #0]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005d9e:	601a      	str	r2, [r3, #0]
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005dae:	601a      	str	r2, [r3, #0]
 8005db0:	f001 fa20 	bl	80071f4 <HAL_RCC_GetPCLK1Freq>
 8005db4:	60f8      	str	r0, [r7, #12]
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	685b      	ldr	r3, [r3, #4]
 8005dba:	4a81      	ldr	r2, [pc, #516]	@ (8005fc0 <HAL_I2C_Init+0x274>)
 8005dbc:	4293      	cmp	r3, r2
 8005dbe:	d807      	bhi.n	8005dd0 <HAL_I2C_Init+0x84>
 8005dc0:	68fb      	ldr	r3, [r7, #12]
 8005dc2:	4a80      	ldr	r2, [pc, #512]	@ (8005fc4 <HAL_I2C_Init+0x278>)
 8005dc4:	4293      	cmp	r3, r2
 8005dc6:	bf94      	ite	ls
 8005dc8:	2301      	movls	r3, #1
 8005dca:	2300      	movhi	r3, #0
 8005dcc:	b2db      	uxtb	r3, r3
 8005dce:	e006      	b.n	8005dde <HAL_I2C_Init+0x92>
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	4a7d      	ldr	r2, [pc, #500]	@ (8005fc8 <HAL_I2C_Init+0x27c>)
 8005dd4:	4293      	cmp	r3, r2
 8005dd6:	bf94      	ite	ls
 8005dd8:	2301      	movls	r3, #1
 8005dda:	2300      	movhi	r3, #0
 8005ddc:	b2db      	uxtb	r3, r3
 8005dde:	2b00      	cmp	r3, #0
 8005de0:	d001      	beq.n	8005de6 <HAL_I2C_Init+0x9a>
 8005de2:	2301      	movs	r3, #1
 8005de4:	e0e7      	b.n	8005fb6 <HAL_I2C_Init+0x26a>
 8005de6:	68fb      	ldr	r3, [r7, #12]
 8005de8:	4a78      	ldr	r2, [pc, #480]	@ (8005fcc <HAL_I2C_Init+0x280>)
 8005dea:	fba2 2303 	umull	r2, r3, r2, r3
 8005dee:	0c9b      	lsrs	r3, r3, #18
 8005df0:	60bb      	str	r3, [r7, #8]
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	685b      	ldr	r3, [r3, #4]
 8005df8:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	68ba      	ldr	r2, [r7, #8]
 8005e02:	430a      	orrs	r2, r1
 8005e04:	605a      	str	r2, [r3, #4]
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	6a1b      	ldr	r3, [r3, #32]
 8005e0c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	685b      	ldr	r3, [r3, #4]
 8005e14:	4a6a      	ldr	r2, [pc, #424]	@ (8005fc0 <HAL_I2C_Init+0x274>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d802      	bhi.n	8005e20 <HAL_I2C_Init+0xd4>
 8005e1a:	68bb      	ldr	r3, [r7, #8]
 8005e1c:	3301      	adds	r3, #1
 8005e1e:	e009      	b.n	8005e34 <HAL_I2C_Init+0xe8>
 8005e20:	68bb      	ldr	r3, [r7, #8]
 8005e22:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8005e26:	fb02 f303 	mul.w	r3, r2, r3
 8005e2a:	4a69      	ldr	r2, [pc, #420]	@ (8005fd0 <HAL_I2C_Init+0x284>)
 8005e2c:	fba2 2303 	umull	r2, r3, r2, r3
 8005e30:	099b      	lsrs	r3, r3, #6
 8005e32:	3301      	adds	r3, #1
 8005e34:	687a      	ldr	r2, [r7, #4]
 8005e36:	6812      	ldr	r2, [r2, #0]
 8005e38:	430b      	orrs	r3, r1
 8005e3a:	6213      	str	r3, [r2, #32]
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	69db      	ldr	r3, [r3, #28]
 8005e42:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8005e46:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	685b      	ldr	r3, [r3, #4]
 8005e4e:	495c      	ldr	r1, [pc, #368]	@ (8005fc0 <HAL_I2C_Init+0x274>)
 8005e50:	428b      	cmp	r3, r1
 8005e52:	d819      	bhi.n	8005e88 <HAL_I2C_Init+0x13c>
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	1e59      	subs	r1, r3, #1
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	685b      	ldr	r3, [r3, #4]
 8005e5c:	005b      	lsls	r3, r3, #1
 8005e5e:	fbb1 f3f3 	udiv	r3, r1, r3
 8005e62:	1c59      	adds	r1, r3, #1
 8005e64:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8005e68:	400b      	ands	r3, r1
 8005e6a:	2b00      	cmp	r3, #0
 8005e6c:	d00a      	beq.n	8005e84 <HAL_I2C_Init+0x138>
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	1e59      	subs	r1, r3, #1
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	685b      	ldr	r3, [r3, #4]
 8005e76:	005b      	lsls	r3, r3, #1
 8005e78:	fbb1 f3f3 	udiv	r3, r1, r3
 8005e7c:	3301      	adds	r3, #1
 8005e7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005e82:	e051      	b.n	8005f28 <HAL_I2C_Init+0x1dc>
 8005e84:	2304      	movs	r3, #4
 8005e86:	e04f      	b.n	8005f28 <HAL_I2C_Init+0x1dc>
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	689b      	ldr	r3, [r3, #8]
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d111      	bne.n	8005eb4 <HAL_I2C_Init+0x168>
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	1e58      	subs	r0, r3, #1
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	6859      	ldr	r1, [r3, #4]
 8005e98:	460b      	mov	r3, r1
 8005e9a:	005b      	lsls	r3, r3, #1
 8005e9c:	440b      	add	r3, r1
 8005e9e:	fbb0 f3f3 	udiv	r3, r0, r3
 8005ea2:	3301      	adds	r3, #1
 8005ea4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ea8:	2b00      	cmp	r3, #0
 8005eaa:	bf0c      	ite	eq
 8005eac:	2301      	moveq	r3, #1
 8005eae:	2300      	movne	r3, #0
 8005eb0:	b2db      	uxtb	r3, r3
 8005eb2:	e012      	b.n	8005eda <HAL_I2C_Init+0x18e>
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	1e58      	subs	r0, r3, #1
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	6859      	ldr	r1, [r3, #4]
 8005ebc:	460b      	mov	r3, r1
 8005ebe:	009b      	lsls	r3, r3, #2
 8005ec0:	440b      	add	r3, r1
 8005ec2:	0099      	lsls	r1, r3, #2
 8005ec4:	440b      	add	r3, r1
 8005ec6:	fbb0 f3f3 	udiv	r3, r0, r3
 8005eca:	3301      	adds	r3, #1
 8005ecc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ed0:	2b00      	cmp	r3, #0
 8005ed2:	bf0c      	ite	eq
 8005ed4:	2301      	moveq	r3, #1
 8005ed6:	2300      	movne	r3, #0
 8005ed8:	b2db      	uxtb	r3, r3
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	d001      	beq.n	8005ee2 <HAL_I2C_Init+0x196>
 8005ede:	2301      	movs	r3, #1
 8005ee0:	e022      	b.n	8005f28 <HAL_I2C_Init+0x1dc>
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	689b      	ldr	r3, [r3, #8]
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d10e      	bne.n	8005f08 <HAL_I2C_Init+0x1bc>
 8005eea:	68fb      	ldr	r3, [r7, #12]
 8005eec:	1e58      	subs	r0, r3, #1
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	6859      	ldr	r1, [r3, #4]
 8005ef2:	460b      	mov	r3, r1
 8005ef4:	005b      	lsls	r3, r3, #1
 8005ef6:	440b      	add	r3, r1
 8005ef8:	fbb0 f3f3 	udiv	r3, r0, r3
 8005efc:	3301      	adds	r3, #1
 8005efe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f02:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005f06:	e00f      	b.n	8005f28 <HAL_I2C_Init+0x1dc>
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	1e58      	subs	r0, r3, #1
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	6859      	ldr	r1, [r3, #4]
 8005f10:	460b      	mov	r3, r1
 8005f12:	009b      	lsls	r3, r3, #2
 8005f14:	440b      	add	r3, r1
 8005f16:	0099      	lsls	r1, r3, #2
 8005f18:	440b      	add	r3, r1
 8005f1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8005f1e:	3301      	adds	r3, #1
 8005f20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f24:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005f28:	6879      	ldr	r1, [r7, #4]
 8005f2a:	6809      	ldr	r1, [r1, #0]
 8005f2c:	4313      	orrs	r3, r2
 8005f2e:	61cb      	str	r3, [r1, #28]
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	681b      	ldr	r3, [r3, #0]
 8005f36:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	69da      	ldr	r2, [r3, #28]
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	6a1b      	ldr	r3, [r3, #32]
 8005f42:	431a      	orrs	r2, r3
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	430a      	orrs	r2, r1
 8005f4a:	601a      	str	r2, [r3, #0]
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	689b      	ldr	r3, [r3, #8]
 8005f52:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8005f56:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8005f5a:	687a      	ldr	r2, [r7, #4]
 8005f5c:	6911      	ldr	r1, [r2, #16]
 8005f5e:	687a      	ldr	r2, [r7, #4]
 8005f60:	68d2      	ldr	r2, [r2, #12]
 8005f62:	4311      	orrs	r1, r2
 8005f64:	687a      	ldr	r2, [r7, #4]
 8005f66:	6812      	ldr	r2, [r2, #0]
 8005f68:	430b      	orrs	r3, r1
 8005f6a:	6093      	str	r3, [r2, #8]
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	68db      	ldr	r3, [r3, #12]
 8005f72:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	695a      	ldr	r2, [r3, #20]
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	699b      	ldr	r3, [r3, #24]
 8005f7e:	431a      	orrs	r2, r3
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	430a      	orrs	r2, r1
 8005f86:	60da      	str	r2, [r3, #12]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	681a      	ldr	r2, [r3, #0]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	f042 0201 	orr.w	r2, r2, #1
 8005f96:	601a      	str	r2, [r3, #0]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	2220      	movs	r2, #32
 8005fa2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	2200      	movs	r2, #0
 8005faa:	631a      	str	r2, [r3, #48]	@ 0x30
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	2200      	movs	r2, #0
 8005fb0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	3710      	adds	r7, #16
 8005fba:	46bd      	mov	sp, r7
 8005fbc:	bd80      	pop	{r7, pc}
 8005fbe:	bf00      	nop
 8005fc0:	000186a0 	.word	0x000186a0
 8005fc4:	001e847f 	.word	0x001e847f
 8005fc8:	003d08ff 	.word	0x003d08ff
 8005fcc:	431bde83 	.word	0x431bde83
 8005fd0:	10624dd3 	.word	0x10624dd3

08005fd4 <HAL_I2S_Init>:
 8005fd4:	b580      	push	{r7, lr}
 8005fd6:	b088      	sub	sp, #32
 8005fd8:	af00      	add	r7, sp, #0
 8005fda:	6078      	str	r0, [r7, #4]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	2b00      	cmp	r3, #0
 8005fe0:	d101      	bne.n	8005fe6 <HAL_I2S_Init+0x12>
 8005fe2:	2301      	movs	r3, #1
 8005fe4:	e128      	b.n	8006238 <HAL_I2S_Init+0x264>
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005fec:	b2db      	uxtb	r3, r3
 8005fee:	2b00      	cmp	r3, #0
 8005ff0:	d109      	bne.n	8006006 <HAL_I2S_Init+0x32>
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	2200      	movs	r2, #0
 8005ff6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	4a90      	ldr	r2, [pc, #576]	@ (8006240 <HAL_I2S_Init+0x26c>)
 8005ffe:	635a      	str	r2, [r3, #52]	@ 0x34
 8006000:	6878      	ldr	r0, [r7, #4]
 8006002:	f7fd fb87 	bl	8003714 <HAL_I2S_MspInit>
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	2202      	movs	r2, #2
 800600a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	681b      	ldr	r3, [r3, #0]
 8006012:	69db      	ldr	r3, [r3, #28]
 8006014:	687a      	ldr	r2, [r7, #4]
 8006016:	6812      	ldr	r2, [r2, #0]
 8006018:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 800601c:	f023 030f 	bic.w	r3, r3, #15
 8006020:	61d3      	str	r3, [r2, #28]
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	2202      	movs	r2, #2
 8006028:	621a      	str	r2, [r3, #32]
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	695b      	ldr	r3, [r3, #20]
 800602e:	2b02      	cmp	r3, #2
 8006030:	d060      	beq.n	80060f4 <HAL_I2S_Init+0x120>
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	68db      	ldr	r3, [r3, #12]
 8006036:	2b00      	cmp	r3, #0
 8006038:	d102      	bne.n	8006040 <HAL_I2S_Init+0x6c>
 800603a:	2310      	movs	r3, #16
 800603c:	617b      	str	r3, [r7, #20]
 800603e:	e001      	b.n	8006044 <HAL_I2S_Init+0x70>
 8006040:	2320      	movs	r3, #32
 8006042:	617b      	str	r3, [r7, #20]
 8006044:	687b      	ldr	r3, [r7, #4]
 8006046:	689b      	ldr	r3, [r3, #8]
 8006048:	2b20      	cmp	r3, #32
 800604a:	d802      	bhi.n	8006052 <HAL_I2S_Init+0x7e>
 800604c:	697b      	ldr	r3, [r7, #20]
 800604e:	005b      	lsls	r3, r3, #1
 8006050:	617b      	str	r3, [r7, #20]
 8006052:	2001      	movs	r0, #1
 8006054:	f001 fa0a 	bl	800746c <HAL_RCCEx_GetPeriphCLKFreq>
 8006058:	60f8      	str	r0, [r7, #12]
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	691b      	ldr	r3, [r3, #16]
 800605e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006062:	d125      	bne.n	80060b0 <HAL_I2S_Init+0xdc>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	68db      	ldr	r3, [r3, #12]
 8006068:	2b00      	cmp	r3, #0
 800606a:	d010      	beq.n	800608e <HAL_I2S_Init+0xba>
 800606c:	697b      	ldr	r3, [r7, #20]
 800606e:	009b      	lsls	r3, r3, #2
 8006070:	68fa      	ldr	r2, [r7, #12]
 8006072:	fbb2 f2f3 	udiv	r2, r2, r3
 8006076:	4613      	mov	r3, r2
 8006078:	009b      	lsls	r3, r3, #2
 800607a:	4413      	add	r3, r2
 800607c:	005b      	lsls	r3, r3, #1
 800607e:	461a      	mov	r2, r3
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	695b      	ldr	r3, [r3, #20]
 8006084:	fbb2 f3f3 	udiv	r3, r2, r3
 8006088:	3305      	adds	r3, #5
 800608a:	613b      	str	r3, [r7, #16]
 800608c:	e01f      	b.n	80060ce <HAL_I2S_Init+0xfa>
 800608e:	697b      	ldr	r3, [r7, #20]
 8006090:	00db      	lsls	r3, r3, #3
 8006092:	68fa      	ldr	r2, [r7, #12]
 8006094:	fbb2 f2f3 	udiv	r2, r2, r3
 8006098:	4613      	mov	r3, r2
 800609a:	009b      	lsls	r3, r3, #2
 800609c:	4413      	add	r3, r2
 800609e:	005b      	lsls	r3, r3, #1
 80060a0:	461a      	mov	r2, r3
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	695b      	ldr	r3, [r3, #20]
 80060a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80060aa:	3305      	adds	r3, #5
 80060ac:	613b      	str	r3, [r7, #16]
 80060ae:	e00e      	b.n	80060ce <HAL_I2S_Init+0xfa>
 80060b0:	68fa      	ldr	r2, [r7, #12]
 80060b2:	697b      	ldr	r3, [r7, #20]
 80060b4:	fbb2 f2f3 	udiv	r2, r2, r3
 80060b8:	4613      	mov	r3, r2
 80060ba:	009b      	lsls	r3, r3, #2
 80060bc:	4413      	add	r3, r2
 80060be:	005b      	lsls	r3, r3, #1
 80060c0:	461a      	mov	r2, r3
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	695b      	ldr	r3, [r3, #20]
 80060c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80060ca:	3305      	adds	r3, #5
 80060cc:	613b      	str	r3, [r7, #16]
 80060ce:	693b      	ldr	r3, [r7, #16]
 80060d0:	4a5c      	ldr	r2, [pc, #368]	@ (8006244 <HAL_I2S_Init+0x270>)
 80060d2:	fba2 2303 	umull	r2, r3, r2, r3
 80060d6:	08db      	lsrs	r3, r3, #3
 80060d8:	613b      	str	r3, [r7, #16]
 80060da:	693b      	ldr	r3, [r7, #16]
 80060dc:	f003 0301 	and.w	r3, r3, #1
 80060e0:	61bb      	str	r3, [r7, #24]
 80060e2:	693a      	ldr	r2, [r7, #16]
 80060e4:	69bb      	ldr	r3, [r7, #24]
 80060e6:	1ad3      	subs	r3, r2, r3
 80060e8:	085b      	lsrs	r3, r3, #1
 80060ea:	61fb      	str	r3, [r7, #28]
 80060ec:	69bb      	ldr	r3, [r7, #24]
 80060ee:	021b      	lsls	r3, r3, #8
 80060f0:	61bb      	str	r3, [r7, #24]
 80060f2:	e003      	b.n	80060fc <HAL_I2S_Init+0x128>
 80060f4:	2302      	movs	r3, #2
 80060f6:	61fb      	str	r3, [r7, #28]
 80060f8:	2300      	movs	r3, #0
 80060fa:	61bb      	str	r3, [r7, #24]
 80060fc:	69fb      	ldr	r3, [r7, #28]
 80060fe:	2b01      	cmp	r3, #1
 8006100:	d902      	bls.n	8006108 <HAL_I2S_Init+0x134>
 8006102:	69fb      	ldr	r3, [r7, #28]
 8006104:	2bff      	cmp	r3, #255	@ 0xff
 8006106:	d907      	bls.n	8006118 <HAL_I2S_Init+0x144>
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800610c:	f043 0210 	orr.w	r2, r3, #16
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	645a      	str	r2, [r3, #68]	@ 0x44
 8006114:	2301      	movs	r3, #1
 8006116:	e08f      	b.n	8006238 <HAL_I2S_Init+0x264>
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	691a      	ldr	r2, [r3, #16]
 800611c:	69bb      	ldr	r3, [r7, #24]
 800611e:	ea42 0103 	orr.w	r1, r2, r3
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	681b      	ldr	r3, [r3, #0]
 8006126:	69fa      	ldr	r2, [r7, #28]
 8006128:	430a      	orrs	r2, r1
 800612a:	621a      	str	r2, [r3, #32]
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	69db      	ldr	r3, [r3, #28]
 8006132:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 8006136:	f023 030f 	bic.w	r3, r3, #15
 800613a:	687a      	ldr	r2, [r7, #4]
 800613c:	6851      	ldr	r1, [r2, #4]
 800613e:	687a      	ldr	r2, [r7, #4]
 8006140:	6892      	ldr	r2, [r2, #8]
 8006142:	4311      	orrs	r1, r2
 8006144:	687a      	ldr	r2, [r7, #4]
 8006146:	68d2      	ldr	r2, [r2, #12]
 8006148:	4311      	orrs	r1, r2
 800614a:	687a      	ldr	r2, [r7, #4]
 800614c:	6992      	ldr	r2, [r2, #24]
 800614e:	430a      	orrs	r2, r1
 8006150:	431a      	orrs	r2, r3
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800615a:	61da      	str	r2, [r3, #28]
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	6a1b      	ldr	r3, [r3, #32]
 8006160:	2b01      	cmp	r3, #1
 8006162:	d161      	bne.n	8006228 <HAL_I2S_Init+0x254>
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	4a38      	ldr	r2, [pc, #224]	@ (8006248 <HAL_I2S_Init+0x274>)
 8006168:	635a      	str	r2, [r3, #52]	@ 0x34
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	4a37      	ldr	r2, [pc, #220]	@ (800624c <HAL_I2S_Init+0x278>)
 8006170:	4293      	cmp	r3, r2
 8006172:	d101      	bne.n	8006178 <HAL_I2S_Init+0x1a4>
 8006174:	4b36      	ldr	r3, [pc, #216]	@ (8006250 <HAL_I2S_Init+0x27c>)
 8006176:	e001      	b.n	800617c <HAL_I2S_Init+0x1a8>
 8006178:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 800617c:	69db      	ldr	r3, [r3, #28]
 800617e:	687a      	ldr	r2, [r7, #4]
 8006180:	6812      	ldr	r2, [r2, #0]
 8006182:	4932      	ldr	r1, [pc, #200]	@ (800624c <HAL_I2S_Init+0x278>)
 8006184:	428a      	cmp	r2, r1
 8006186:	d101      	bne.n	800618c <HAL_I2S_Init+0x1b8>
 8006188:	4a31      	ldr	r2, [pc, #196]	@ (8006250 <HAL_I2S_Init+0x27c>)
 800618a:	e001      	b.n	8006190 <HAL_I2S_Init+0x1bc>
 800618c:	f04f 2240 	mov.w	r2, #1073758208	@ 0x40004000
 8006190:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 8006194:	f023 030f 	bic.w	r3, r3, #15
 8006198:	61d3      	str	r3, [r2, #28]
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	681b      	ldr	r3, [r3, #0]
 800619e:	4a2b      	ldr	r2, [pc, #172]	@ (800624c <HAL_I2S_Init+0x278>)
 80061a0:	4293      	cmp	r3, r2
 80061a2:	d101      	bne.n	80061a8 <HAL_I2S_Init+0x1d4>
 80061a4:	4b2a      	ldr	r3, [pc, #168]	@ (8006250 <HAL_I2S_Init+0x27c>)
 80061a6:	e001      	b.n	80061ac <HAL_I2S_Init+0x1d8>
 80061a8:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80061ac:	2202      	movs	r2, #2
 80061ae:	621a      	str	r2, [r3, #32]
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	4a25      	ldr	r2, [pc, #148]	@ (800624c <HAL_I2S_Init+0x278>)
 80061b6:	4293      	cmp	r3, r2
 80061b8:	d101      	bne.n	80061be <HAL_I2S_Init+0x1ea>
 80061ba:	4b25      	ldr	r3, [pc, #148]	@ (8006250 <HAL_I2S_Init+0x27c>)
 80061bc:	e001      	b.n	80061c2 <HAL_I2S_Init+0x1ee>
 80061be:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80061c2:	69db      	ldr	r3, [r3, #28]
 80061c4:	817b      	strh	r3, [r7, #10]
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	685b      	ldr	r3, [r3, #4]
 80061ca:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80061ce:	d003      	beq.n	80061d8 <HAL_I2S_Init+0x204>
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	685b      	ldr	r3, [r3, #4]
 80061d4:	2b00      	cmp	r3, #0
 80061d6:	d103      	bne.n	80061e0 <HAL_I2S_Init+0x20c>
 80061d8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80061dc:	613b      	str	r3, [r7, #16]
 80061de:	e001      	b.n	80061e4 <HAL_I2S_Init+0x210>
 80061e0:	2300      	movs	r3, #0
 80061e2:	613b      	str	r3, [r7, #16]
 80061e4:	693b      	ldr	r3, [r7, #16]
 80061e6:	b29a      	uxth	r2, r3
 80061e8:	687b      	ldr	r3, [r7, #4]
 80061ea:	689b      	ldr	r3, [r3, #8]
 80061ec:	b29b      	uxth	r3, r3
 80061ee:	4313      	orrs	r3, r2
 80061f0:	b29a      	uxth	r2, r3
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	68db      	ldr	r3, [r3, #12]
 80061f6:	b29b      	uxth	r3, r3
 80061f8:	4313      	orrs	r3, r2
 80061fa:	b29a      	uxth	r2, r3
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	699b      	ldr	r3, [r3, #24]
 8006200:	b29b      	uxth	r3, r3
 8006202:	4313      	orrs	r3, r2
 8006204:	b29a      	uxth	r2, r3
 8006206:	897b      	ldrh	r3, [r7, #10]
 8006208:	4313      	orrs	r3, r2
 800620a:	b29b      	uxth	r3, r3
 800620c:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8006210:	817b      	strh	r3, [r7, #10]
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	4a0d      	ldr	r2, [pc, #52]	@ (800624c <HAL_I2S_Init+0x278>)
 8006218:	4293      	cmp	r3, r2
 800621a:	d101      	bne.n	8006220 <HAL_I2S_Init+0x24c>
 800621c:	4b0c      	ldr	r3, [pc, #48]	@ (8006250 <HAL_I2S_Init+0x27c>)
 800621e:	e001      	b.n	8006224 <HAL_I2S_Init+0x250>
 8006220:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006224:	897a      	ldrh	r2, [r7, #10]
 8006226:	61da      	str	r2, [r3, #28]
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	2200      	movs	r2, #0
 800622c:	645a      	str	r2, [r3, #68]	@ 0x44
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	2201      	movs	r2, #1
 8006232:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006236:	2300      	movs	r3, #0
 8006238:	4618      	mov	r0, r3
 800623a:	3720      	adds	r7, #32
 800623c:	46bd      	mov	sp, r7
 800623e:	bd80      	pop	{r7, pc}
 8006240:	0800634b 	.word	0x0800634b
 8006244:	cccccccd 	.word	0xcccccccd
 8006248:	08006461 	.word	0x08006461
 800624c:	40003800 	.word	0x40003800
 8006250:	40003400 	.word	0x40003400

08006254 <HAL_I2S_TxCpltCallback>:
 8006254:	b480      	push	{r7}
 8006256:	b083      	sub	sp, #12
 8006258:	af00      	add	r7, sp, #0
 800625a:	6078      	str	r0, [r7, #4]
 800625c:	bf00      	nop
 800625e:	370c      	adds	r7, #12
 8006260:	46bd      	mov	sp, r7
 8006262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006266:	4770      	bx	lr

08006268 <HAL_I2S_RxCpltCallback>:
 8006268:	b480      	push	{r7}
 800626a:	b083      	sub	sp, #12
 800626c:	af00      	add	r7, sp, #0
 800626e:	6078      	str	r0, [r7, #4]
 8006270:	bf00      	nop
 8006272:	370c      	adds	r7, #12
 8006274:	46bd      	mov	sp, r7
 8006276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800627a:	4770      	bx	lr

0800627c <HAL_I2S_ErrorCallback>:
 800627c:	b480      	push	{r7}
 800627e:	b083      	sub	sp, #12
 8006280:	af00      	add	r7, sp, #0
 8006282:	6078      	str	r0, [r7, #4]
 8006284:	bf00      	nop
 8006286:	370c      	adds	r7, #12
 8006288:	46bd      	mov	sp, r7
 800628a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800628e:	4770      	bx	lr

08006290 <I2S_Transmit_IT>:
 8006290:	b580      	push	{r7, lr}
 8006292:	b082      	sub	sp, #8
 8006294:	af00      	add	r7, sp, #0
 8006296:	6078      	str	r0, [r7, #4]
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800629c:	881a      	ldrh	r2, [r3, #0]
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	60da      	str	r2, [r3, #12]
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80062a8:	1c9a      	adds	r2, r3, #2
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	625a      	str	r2, [r3, #36]	@ 0x24
 80062ae:	687b      	ldr	r3, [r7, #4]
 80062b0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80062b2:	b29b      	uxth	r3, r3
 80062b4:	3b01      	subs	r3, #1
 80062b6:	b29a      	uxth	r2, r3
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80062c0:	b29b      	uxth	r3, r3
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d10e      	bne.n	80062e4 <I2S_Transmit_IT+0x54>
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	685a      	ldr	r2, [r3, #4]
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80062d4:	605a      	str	r2, [r3, #4]
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	2201      	movs	r2, #1
 80062da:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80062de:	6878      	ldr	r0, [r7, #4]
 80062e0:	f7ff ffb8 	bl	8006254 <HAL_I2S_TxCpltCallback>
 80062e4:	bf00      	nop
 80062e6:	3708      	adds	r7, #8
 80062e8:	46bd      	mov	sp, r7
 80062ea:	bd80      	pop	{r7, pc}

080062ec <I2S_Receive_IT>:
 80062ec:	b580      	push	{r7, lr}
 80062ee:	b082      	sub	sp, #8
 80062f0:	af00      	add	r7, sp, #0
 80062f2:	6078      	str	r0, [r7, #4]
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	68da      	ldr	r2, [r3, #12]
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80062fe:	b292      	uxth	r2, r2
 8006300:	801a      	strh	r2, [r3, #0]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006306:	1c9a      	adds	r2, r3, #2
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006310:	b29b      	uxth	r3, r3
 8006312:	3b01      	subs	r3, #1
 8006314:	b29a      	uxth	r2, r3
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	865a      	strh	r2, [r3, #50]	@ 0x32
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800631e:	b29b      	uxth	r3, r3
 8006320:	2b00      	cmp	r3, #0
 8006322:	d10e      	bne.n	8006342 <I2S_Receive_IT+0x56>
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	681b      	ldr	r3, [r3, #0]
 8006328:	685a      	ldr	r2, [r3, #4]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8006332:	605a      	str	r2, [r3, #4]
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	2201      	movs	r2, #1
 8006338:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800633c:	6878      	ldr	r0, [r7, #4]
 800633e:	f7ff ff93 	bl	8006268 <HAL_I2S_RxCpltCallback>
 8006342:	bf00      	nop
 8006344:	3708      	adds	r7, #8
 8006346:	46bd      	mov	sp, r7
 8006348:	bd80      	pop	{r7, pc}

0800634a <I2S_IRQHandler>:
 800634a:	b580      	push	{r7, lr}
 800634c:	b086      	sub	sp, #24
 800634e:	af00      	add	r7, sp, #0
 8006350:	6078      	str	r0, [r7, #4]
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	689b      	ldr	r3, [r3, #8]
 8006358:	617b      	str	r3, [r7, #20]
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006360:	b2db      	uxtb	r3, r3
 8006362:	2b04      	cmp	r3, #4
 8006364:	d13a      	bne.n	80063dc <I2S_IRQHandler+0x92>
 8006366:	697b      	ldr	r3, [r7, #20]
 8006368:	f003 0301 	and.w	r3, r3, #1
 800636c:	2b01      	cmp	r3, #1
 800636e:	d109      	bne.n	8006384 <I2S_IRQHandler+0x3a>
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	685b      	ldr	r3, [r3, #4]
 8006376:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800637a:	2b40      	cmp	r3, #64	@ 0x40
 800637c:	d102      	bne.n	8006384 <I2S_IRQHandler+0x3a>
 800637e:	6878      	ldr	r0, [r7, #4]
 8006380:	f7ff ffb4 	bl	80062ec <I2S_Receive_IT>
 8006384:	697b      	ldr	r3, [r7, #20]
 8006386:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800638a:	2b40      	cmp	r3, #64	@ 0x40
 800638c:	d126      	bne.n	80063dc <I2S_IRQHandler+0x92>
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	685b      	ldr	r3, [r3, #4]
 8006394:	f003 0320 	and.w	r3, r3, #32
 8006398:	2b20      	cmp	r3, #32
 800639a:	d11f      	bne.n	80063dc <I2S_IRQHandler+0x92>
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	685a      	ldr	r2, [r3, #4]
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	681b      	ldr	r3, [r3, #0]
 80063a6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80063aa:	605a      	str	r2, [r3, #4]
 80063ac:	2300      	movs	r3, #0
 80063ae:	613b      	str	r3, [r7, #16]
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	68db      	ldr	r3, [r3, #12]
 80063b6:	613b      	str	r3, [r7, #16]
 80063b8:	687b      	ldr	r3, [r7, #4]
 80063ba:	681b      	ldr	r3, [r3, #0]
 80063bc:	689b      	ldr	r3, [r3, #8]
 80063be:	613b      	str	r3, [r7, #16]
 80063c0:	693b      	ldr	r3, [r7, #16]
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	2201      	movs	r2, #1
 80063c6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80063ce:	f043 0202 	orr.w	r2, r3, #2
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80063d6:	6878      	ldr	r0, [r7, #4]
 80063d8:	f7ff ff50 	bl	800627c <HAL_I2S_ErrorCallback>
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80063e2:	b2db      	uxtb	r3, r3
 80063e4:	2b03      	cmp	r3, #3
 80063e6:	d136      	bne.n	8006456 <I2S_IRQHandler+0x10c>
 80063e8:	697b      	ldr	r3, [r7, #20]
 80063ea:	f003 0302 	and.w	r3, r3, #2
 80063ee:	2b02      	cmp	r3, #2
 80063f0:	d109      	bne.n	8006406 <I2S_IRQHandler+0xbc>
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	685b      	ldr	r3, [r3, #4]
 80063f8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80063fc:	2b80      	cmp	r3, #128	@ 0x80
 80063fe:	d102      	bne.n	8006406 <I2S_IRQHandler+0xbc>
 8006400:	6878      	ldr	r0, [r7, #4]
 8006402:	f7ff ff45 	bl	8006290 <I2S_Transmit_IT>
 8006406:	697b      	ldr	r3, [r7, #20]
 8006408:	f003 0308 	and.w	r3, r3, #8
 800640c:	2b08      	cmp	r3, #8
 800640e:	d122      	bne.n	8006456 <I2S_IRQHandler+0x10c>
 8006410:	687b      	ldr	r3, [r7, #4]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	685b      	ldr	r3, [r3, #4]
 8006416:	f003 0320 	and.w	r3, r3, #32
 800641a:	2b20      	cmp	r3, #32
 800641c:	d11b      	bne.n	8006456 <I2S_IRQHandler+0x10c>
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	685a      	ldr	r2, [r3, #4]
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800642c:	605a      	str	r2, [r3, #4]
 800642e:	2300      	movs	r3, #0
 8006430:	60fb      	str	r3, [r7, #12]
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	689b      	ldr	r3, [r3, #8]
 8006438:	60fb      	str	r3, [r7, #12]
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	2201      	movs	r2, #1
 8006440:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006448:	f043 0204 	orr.w	r2, r3, #4
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	645a      	str	r2, [r3, #68]	@ 0x44
 8006450:	6878      	ldr	r0, [r7, #4]
 8006452:	f7ff ff13 	bl	800627c <HAL_I2S_ErrorCallback>
 8006456:	bf00      	nop
 8006458:	3718      	adds	r7, #24
 800645a:	46bd      	mov	sp, r7
 800645c:	bd80      	pop	{r7, pc}
	...

08006460 <HAL_I2SEx_FullDuplex_IRQHandler>:
 8006460:	b580      	push	{r7, lr}
 8006462:	b088      	sub	sp, #32
 8006464:	af00      	add	r7, sp, #0
 8006466:	6078      	str	r0, [r7, #4]
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	689b      	ldr	r3, [r3, #8]
 800646e:	61fb      	str	r3, [r7, #28]
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	4a92      	ldr	r2, [pc, #584]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006476:	4293      	cmp	r3, r2
 8006478:	d101      	bne.n	800647e <HAL_I2SEx_FullDuplex_IRQHandler+0x1e>
 800647a:	4b92      	ldr	r3, [pc, #584]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800647c:	e001      	b.n	8006482 <HAL_I2SEx_FullDuplex_IRQHandler+0x22>
 800647e:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006482:	689b      	ldr	r3, [r3, #8]
 8006484:	61bb      	str	r3, [r7, #24]
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	685b      	ldr	r3, [r3, #4]
 800648c:	617b      	str	r3, [r7, #20]
 800648e:	687b      	ldr	r3, [r7, #4]
 8006490:	681b      	ldr	r3, [r3, #0]
 8006492:	4a8b      	ldr	r2, [pc, #556]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006494:	4293      	cmp	r3, r2
 8006496:	d101      	bne.n	800649c <HAL_I2SEx_FullDuplex_IRQHandler+0x3c>
 8006498:	4b8a      	ldr	r3, [pc, #552]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800649a:	e001      	b.n	80064a0 <HAL_I2SEx_FullDuplex_IRQHandler+0x40>
 800649c:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80064a0:	685b      	ldr	r3, [r3, #4]
 80064a2:	613b      	str	r3, [r7, #16]
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	685b      	ldr	r3, [r3, #4]
 80064a8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80064ac:	d004      	beq.n	80064b8 <HAL_I2SEx_FullDuplex_IRQHandler+0x58>
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	685b      	ldr	r3, [r3, #4]
 80064b2:	2b00      	cmp	r3, #0
 80064b4:	f040 8099 	bne.w	80065ea <HAL_I2SEx_FullDuplex_IRQHandler+0x18a>
 80064b8:	69fb      	ldr	r3, [r7, #28]
 80064ba:	f003 0302 	and.w	r3, r3, #2
 80064be:	2b02      	cmp	r3, #2
 80064c0:	d107      	bne.n	80064d2 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 80064c2:	697b      	ldr	r3, [r7, #20]
 80064c4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	d002      	beq.n	80064d2 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 80064cc:	6878      	ldr	r0, [r7, #4]
 80064ce:	f000 f925 	bl	800671c <I2SEx_TxISR_I2S>
 80064d2:	69bb      	ldr	r3, [r7, #24]
 80064d4:	f003 0301 	and.w	r3, r3, #1
 80064d8:	2b01      	cmp	r3, #1
 80064da:	d107      	bne.n	80064ec <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 80064dc:	693b      	ldr	r3, [r7, #16]
 80064de:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064e2:	2b00      	cmp	r3, #0
 80064e4:	d002      	beq.n	80064ec <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 80064e6:	6878      	ldr	r0, [r7, #4]
 80064e8:	f000 f9c8 	bl	800687c <I2SEx_RxISR_I2SExt>
 80064ec:	69bb      	ldr	r3, [r7, #24]
 80064ee:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064f2:	2b40      	cmp	r3, #64	@ 0x40
 80064f4:	d13a      	bne.n	800656c <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 80064f6:	693b      	ldr	r3, [r7, #16]
 80064f8:	f003 0320 	and.w	r3, r3, #32
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d035      	beq.n	800656c <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	4a6e      	ldr	r2, [pc, #440]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006506:	4293      	cmp	r3, r2
 8006508:	d101      	bne.n	800650e <HAL_I2SEx_FullDuplex_IRQHandler+0xae>
 800650a:	4b6e      	ldr	r3, [pc, #440]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800650c:	e001      	b.n	8006512 <HAL_I2SEx_FullDuplex_IRQHandler+0xb2>
 800650e:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006512:	685a      	ldr	r2, [r3, #4]
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	681b      	ldr	r3, [r3, #0]
 8006518:	4969      	ldr	r1, [pc, #420]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800651a:	428b      	cmp	r3, r1
 800651c:	d101      	bne.n	8006522 <HAL_I2SEx_FullDuplex_IRQHandler+0xc2>
 800651e:	4b69      	ldr	r3, [pc, #420]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006520:	e001      	b.n	8006526 <HAL_I2SEx_FullDuplex_IRQHandler+0xc6>
 8006522:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006526:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800652a:	605a      	str	r2, [r3, #4]
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	685a      	ldr	r2, [r3, #4]
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	681b      	ldr	r3, [r3, #0]
 8006536:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800653a:	605a      	str	r2, [r3, #4]
 800653c:	2300      	movs	r3, #0
 800653e:	60fb      	str	r3, [r7, #12]
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	681b      	ldr	r3, [r3, #0]
 8006544:	68db      	ldr	r3, [r3, #12]
 8006546:	60fb      	str	r3, [r7, #12]
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	689b      	ldr	r3, [r3, #8]
 800654e:	60fb      	str	r3, [r7, #12]
 8006550:	68fb      	ldr	r3, [r7, #12]
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	2201      	movs	r2, #1
 8006556:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800655e:	f043 0202 	orr.w	r2, r3, #2
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	645a      	str	r2, [r3, #68]	@ 0x44
 8006566:	6878      	ldr	r0, [r7, #4]
 8006568:	f7ff fe88 	bl	800627c <HAL_I2S_ErrorCallback>
 800656c:	69fb      	ldr	r3, [r7, #28]
 800656e:	f003 0308 	and.w	r3, r3, #8
 8006572:	2b08      	cmp	r3, #8
 8006574:	f040 80c3 	bne.w	80066fe <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
 8006578:	697b      	ldr	r3, [r7, #20]
 800657a:	f003 0320 	and.w	r3, r3, #32
 800657e:	2b00      	cmp	r3, #0
 8006580:	f000 80bd 	beq.w	80066fe <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	685a      	ldr	r2, [r3, #4]
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 8006592:	605a      	str	r2, [r3, #4]
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	4a49      	ldr	r2, [pc, #292]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800659a:	4293      	cmp	r3, r2
 800659c:	d101      	bne.n	80065a2 <HAL_I2SEx_FullDuplex_IRQHandler+0x142>
 800659e:	4b49      	ldr	r3, [pc, #292]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80065a0:	e001      	b.n	80065a6 <HAL_I2SEx_FullDuplex_IRQHandler+0x146>
 80065a2:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80065a6:	685a      	ldr	r2, [r3, #4]
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	4944      	ldr	r1, [pc, #272]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80065ae:	428b      	cmp	r3, r1
 80065b0:	d101      	bne.n	80065b6 <HAL_I2SEx_FullDuplex_IRQHandler+0x156>
 80065b2:	4b44      	ldr	r3, [pc, #272]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80065b4:	e001      	b.n	80065ba <HAL_I2SEx_FullDuplex_IRQHandler+0x15a>
 80065b6:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80065ba:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80065be:	605a      	str	r2, [r3, #4]
 80065c0:	2300      	movs	r3, #0
 80065c2:	60bb      	str	r3, [r7, #8]
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	689b      	ldr	r3, [r3, #8]
 80065ca:	60bb      	str	r3, [r7, #8]
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	2201      	movs	r2, #1
 80065d2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80065da:	f043 0204 	orr.w	r2, r3, #4
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80065e2:	6878      	ldr	r0, [r7, #4]
 80065e4:	f7ff fe4a 	bl	800627c <HAL_I2S_ErrorCallback>
 80065e8:	e089      	b.n	80066fe <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
 80065ea:	69bb      	ldr	r3, [r7, #24]
 80065ec:	f003 0302 	and.w	r3, r3, #2
 80065f0:	2b02      	cmp	r3, #2
 80065f2:	d107      	bne.n	8006604 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 80065f4:	693b      	ldr	r3, [r7, #16]
 80065f6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d002      	beq.n	8006604 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 80065fe:	6878      	ldr	r0, [r7, #4]
 8006600:	f000 f8be 	bl	8006780 <I2SEx_TxISR_I2SExt>
 8006604:	69fb      	ldr	r3, [r7, #28]
 8006606:	f003 0301 	and.w	r3, r3, #1
 800660a:	2b01      	cmp	r3, #1
 800660c:	d107      	bne.n	800661e <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 800660e:	697b      	ldr	r3, [r7, #20]
 8006610:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006614:	2b00      	cmp	r3, #0
 8006616:	d002      	beq.n	800661e <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 8006618:	6878      	ldr	r0, [r7, #4]
 800661a:	f000 f8fd 	bl	8006818 <I2SEx_RxISR_I2S>
 800661e:	69fb      	ldr	r3, [r7, #28]
 8006620:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006624:	2b40      	cmp	r3, #64	@ 0x40
 8006626:	d12f      	bne.n	8006688 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8006628:	697b      	ldr	r3, [r7, #20]
 800662a:	f003 0320 	and.w	r3, r3, #32
 800662e:	2b00      	cmp	r3, #0
 8006630:	d02a      	beq.n	8006688 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	685a      	ldr	r2, [r3, #4]
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	681b      	ldr	r3, [r3, #0]
 800663c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8006640:	605a      	str	r2, [r3, #4]
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	4a1e      	ldr	r2, [pc, #120]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006648:	4293      	cmp	r3, r2
 800664a:	d101      	bne.n	8006650 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f0>
 800664c:	4b1d      	ldr	r3, [pc, #116]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800664e:	e001      	b.n	8006654 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f4>
 8006650:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006654:	685a      	ldr	r2, [r3, #4]
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	4919      	ldr	r1, [pc, #100]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800665c:	428b      	cmp	r3, r1
 800665e:	d101      	bne.n	8006664 <HAL_I2SEx_FullDuplex_IRQHandler+0x204>
 8006660:	4b18      	ldr	r3, [pc, #96]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006662:	e001      	b.n	8006668 <HAL_I2SEx_FullDuplex_IRQHandler+0x208>
 8006664:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006668:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800666c:	605a      	str	r2, [r3, #4]
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	2201      	movs	r2, #1
 8006672:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800667a:	f043 0202 	orr.w	r2, r3, #2
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	645a      	str	r2, [r3, #68]	@ 0x44
 8006682:	6878      	ldr	r0, [r7, #4]
 8006684:	f7ff fdfa 	bl	800627c <HAL_I2S_ErrorCallback>
 8006688:	69bb      	ldr	r3, [r7, #24]
 800668a:	f003 0308 	and.w	r3, r3, #8
 800668e:	2b08      	cmp	r3, #8
 8006690:	d136      	bne.n	8006700 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
 8006692:	693b      	ldr	r3, [r7, #16]
 8006694:	f003 0320 	and.w	r3, r3, #32
 8006698:	2b00      	cmp	r3, #0
 800669a:	d031      	beq.n	8006700 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	4a07      	ldr	r2, [pc, #28]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80066a2:	4293      	cmp	r3, r2
 80066a4:	d101      	bne.n	80066aa <HAL_I2SEx_FullDuplex_IRQHandler+0x24a>
 80066a6:	4b07      	ldr	r3, [pc, #28]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80066a8:	e001      	b.n	80066ae <HAL_I2SEx_FullDuplex_IRQHandler+0x24e>
 80066aa:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80066ae:	685a      	ldr	r2, [r3, #4]
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	681b      	ldr	r3, [r3, #0]
 80066b4:	4902      	ldr	r1, [pc, #8]	@ (80066c0 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80066b6:	428b      	cmp	r3, r1
 80066b8:	d106      	bne.n	80066c8 <HAL_I2SEx_FullDuplex_IRQHandler+0x268>
 80066ba:	4b02      	ldr	r3, [pc, #8]	@ (80066c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80066bc:	e006      	b.n	80066cc <HAL_I2SEx_FullDuplex_IRQHandler+0x26c>
 80066be:	bf00      	nop
 80066c0:	40003800 	.word	0x40003800
 80066c4:	40003400 	.word	0x40003400
 80066c8:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80066cc:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80066d0:	605a      	str	r2, [r3, #4]
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	685a      	ldr	r2, [r3, #4]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80066e0:	605a      	str	r2, [r3, #4]
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	2201      	movs	r2, #1
 80066e6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80066ee:	f043 0204 	orr.w	r2, r3, #4
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	645a      	str	r2, [r3, #68]	@ 0x44
 80066f6:	6878      	ldr	r0, [r7, #4]
 80066f8:	f7ff fdc0 	bl	800627c <HAL_I2S_ErrorCallback>
 80066fc:	e000      	b.n	8006700 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
 80066fe:	bf00      	nop
 8006700:	bf00      	nop
 8006702:	3720      	adds	r7, #32
 8006704:	46bd      	mov	sp, r7
 8006706:	bd80      	pop	{r7, pc}

08006708 <HAL_I2SEx_TxRxCpltCallback>:
 8006708:	b480      	push	{r7}
 800670a:	b083      	sub	sp, #12
 800670c:	af00      	add	r7, sp, #0
 800670e:	6078      	str	r0, [r7, #4]
 8006710:	bf00      	nop
 8006712:	370c      	adds	r7, #12
 8006714:	46bd      	mov	sp, r7
 8006716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800671a:	4770      	bx	lr

0800671c <I2SEx_TxISR_I2S>:
 800671c:	b580      	push	{r7, lr}
 800671e:	b082      	sub	sp, #8
 8006720:	af00      	add	r7, sp, #0
 8006722:	6078      	str	r0, [r7, #4]
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006728:	1c99      	adds	r1, r3, #2
 800672a:	687a      	ldr	r2, [r7, #4]
 800672c:	6251      	str	r1, [r2, #36]	@ 0x24
 800672e:	881a      	ldrh	r2, [r3, #0]
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	60da      	str	r2, [r3, #12]
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800673a:	b29b      	uxth	r3, r3
 800673c:	3b01      	subs	r3, #1
 800673e:	b29a      	uxth	r2, r3
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006748:	b29b      	uxth	r3, r3
 800674a:	2b00      	cmp	r3, #0
 800674c:	d113      	bne.n	8006776 <I2SEx_TxISR_I2S+0x5a>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	685a      	ldr	r2, [r3, #4]
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800675c:	605a      	str	r2, [r3, #4]
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006762:	b29b      	uxth	r3, r3
 8006764:	2b00      	cmp	r3, #0
 8006766:	d106      	bne.n	8006776 <I2SEx_TxISR_I2S+0x5a>
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	2201      	movs	r2, #1
 800676c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006770:	6878      	ldr	r0, [r7, #4]
 8006772:	f7ff ffc9 	bl	8006708 <HAL_I2SEx_TxRxCpltCallback>
 8006776:	bf00      	nop
 8006778:	3708      	adds	r7, #8
 800677a:	46bd      	mov	sp, r7
 800677c:	bd80      	pop	{r7, pc}
	...

08006780 <I2SEx_TxISR_I2SExt>:
 8006780:	b580      	push	{r7, lr}
 8006782:	b082      	sub	sp, #8
 8006784:	af00      	add	r7, sp, #0
 8006786:	6078      	str	r0, [r7, #4]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800678c:	1c99      	adds	r1, r3, #2
 800678e:	687a      	ldr	r2, [r7, #4]
 8006790:	6251      	str	r1, [r2, #36]	@ 0x24
 8006792:	8819      	ldrh	r1, [r3, #0]
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	4a1d      	ldr	r2, [pc, #116]	@ (8006810 <I2SEx_TxISR_I2SExt+0x90>)
 800679a:	4293      	cmp	r3, r2
 800679c:	d101      	bne.n	80067a2 <I2SEx_TxISR_I2SExt+0x22>
 800679e:	4b1d      	ldr	r3, [pc, #116]	@ (8006814 <I2SEx_TxISR_I2SExt+0x94>)
 80067a0:	e001      	b.n	80067a6 <I2SEx_TxISR_I2SExt+0x26>
 80067a2:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80067a6:	460a      	mov	r2, r1
 80067a8:	60da      	str	r2, [r3, #12]
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80067ae:	b29b      	uxth	r3, r3
 80067b0:	3b01      	subs	r3, #1
 80067b2:	b29a      	uxth	r2, r3
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80067bc:	b29b      	uxth	r3, r3
 80067be:	2b00      	cmp	r3, #0
 80067c0:	d121      	bne.n	8006806 <I2SEx_TxISR_I2SExt+0x86>
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	681b      	ldr	r3, [r3, #0]
 80067c6:	4a12      	ldr	r2, [pc, #72]	@ (8006810 <I2SEx_TxISR_I2SExt+0x90>)
 80067c8:	4293      	cmp	r3, r2
 80067ca:	d101      	bne.n	80067d0 <I2SEx_TxISR_I2SExt+0x50>
 80067cc:	4b11      	ldr	r3, [pc, #68]	@ (8006814 <I2SEx_TxISR_I2SExt+0x94>)
 80067ce:	e001      	b.n	80067d4 <I2SEx_TxISR_I2SExt+0x54>
 80067d0:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80067d4:	685a      	ldr	r2, [r3, #4]
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	490d      	ldr	r1, [pc, #52]	@ (8006810 <I2SEx_TxISR_I2SExt+0x90>)
 80067dc:	428b      	cmp	r3, r1
 80067de:	d101      	bne.n	80067e4 <I2SEx_TxISR_I2SExt+0x64>
 80067e0:	4b0c      	ldr	r3, [pc, #48]	@ (8006814 <I2SEx_TxISR_I2SExt+0x94>)
 80067e2:	e001      	b.n	80067e8 <I2SEx_TxISR_I2SExt+0x68>
 80067e4:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80067e8:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80067ec:	605a      	str	r2, [r3, #4]
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 80067f2:	b29b      	uxth	r3, r3
 80067f4:	2b00      	cmp	r3, #0
 80067f6:	d106      	bne.n	8006806 <I2SEx_TxISR_I2SExt+0x86>
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	2201      	movs	r2, #1
 80067fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006800:	6878      	ldr	r0, [r7, #4]
 8006802:	f7ff ff81 	bl	8006708 <HAL_I2SEx_TxRxCpltCallback>
 8006806:	bf00      	nop
 8006808:	3708      	adds	r7, #8
 800680a:	46bd      	mov	sp, r7
 800680c:	bd80      	pop	{r7, pc}
 800680e:	bf00      	nop
 8006810:	40003800 	.word	0x40003800
 8006814:	40003400 	.word	0x40003400

08006818 <I2SEx_RxISR_I2S>:
 8006818:	b580      	push	{r7, lr}
 800681a:	b082      	sub	sp, #8
 800681c:	af00      	add	r7, sp, #0
 800681e:	6078      	str	r0, [r7, #4]
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	68d8      	ldr	r0, [r3, #12]
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800682a:	1c99      	adds	r1, r3, #2
 800682c:	687a      	ldr	r2, [r7, #4]
 800682e:	62d1      	str	r1, [r2, #44]	@ 0x2c
 8006830:	b282      	uxth	r2, r0
 8006832:	801a      	strh	r2, [r3, #0]
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006838:	b29b      	uxth	r3, r3
 800683a:	3b01      	subs	r3, #1
 800683c:	b29a      	uxth	r2, r3
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	865a      	strh	r2, [r3, #50]	@ 0x32
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006846:	b29b      	uxth	r3, r3
 8006848:	2b00      	cmp	r3, #0
 800684a:	d113      	bne.n	8006874 <I2SEx_RxISR_I2S+0x5c>
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	685a      	ldr	r2, [r3, #4]
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800685a:	605a      	str	r2, [r3, #4]
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006860:	b29b      	uxth	r3, r3
 8006862:	2b00      	cmp	r3, #0
 8006864:	d106      	bne.n	8006874 <I2SEx_RxISR_I2S+0x5c>
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	2201      	movs	r2, #1
 800686a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800686e:	6878      	ldr	r0, [r7, #4]
 8006870:	f7ff ff4a 	bl	8006708 <HAL_I2SEx_TxRxCpltCallback>
 8006874:	bf00      	nop
 8006876:	3708      	adds	r7, #8
 8006878:	46bd      	mov	sp, r7
 800687a:	bd80      	pop	{r7, pc}

0800687c <I2SEx_RxISR_I2SExt>:
 800687c:	b580      	push	{r7, lr}
 800687e:	b082      	sub	sp, #8
 8006880:	af00      	add	r7, sp, #0
 8006882:	6078      	str	r0, [r7, #4]
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	4a20      	ldr	r2, [pc, #128]	@ (800690c <I2SEx_RxISR_I2SExt+0x90>)
 800688a:	4293      	cmp	r3, r2
 800688c:	d101      	bne.n	8006892 <I2SEx_RxISR_I2SExt+0x16>
 800688e:	4b20      	ldr	r3, [pc, #128]	@ (8006910 <I2SEx_RxISR_I2SExt+0x94>)
 8006890:	e001      	b.n	8006896 <I2SEx_RxISR_I2SExt+0x1a>
 8006892:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006896:	68d8      	ldr	r0, [r3, #12]
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800689c:	1c99      	adds	r1, r3, #2
 800689e:	687a      	ldr	r2, [r7, #4]
 80068a0:	62d1      	str	r1, [r2, #44]	@ 0x2c
 80068a2:	b282      	uxth	r2, r0
 80068a4:	801a      	strh	r2, [r3, #0]
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 80068aa:	b29b      	uxth	r3, r3
 80068ac:	3b01      	subs	r3, #1
 80068ae:	b29a      	uxth	r2, r3
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	865a      	strh	r2, [r3, #50]	@ 0x32
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 80068b8:	b29b      	uxth	r3, r3
 80068ba:	2b00      	cmp	r3, #0
 80068bc:	d121      	bne.n	8006902 <I2SEx_RxISR_I2SExt+0x86>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	681b      	ldr	r3, [r3, #0]
 80068c2:	4a12      	ldr	r2, [pc, #72]	@ (800690c <I2SEx_RxISR_I2SExt+0x90>)
 80068c4:	4293      	cmp	r3, r2
 80068c6:	d101      	bne.n	80068cc <I2SEx_RxISR_I2SExt+0x50>
 80068c8:	4b11      	ldr	r3, [pc, #68]	@ (8006910 <I2SEx_RxISR_I2SExt+0x94>)
 80068ca:	e001      	b.n	80068d0 <I2SEx_RxISR_I2SExt+0x54>
 80068cc:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80068d0:	685a      	ldr	r2, [r3, #4]
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	490d      	ldr	r1, [pc, #52]	@ (800690c <I2SEx_RxISR_I2SExt+0x90>)
 80068d8:	428b      	cmp	r3, r1
 80068da:	d101      	bne.n	80068e0 <I2SEx_RxISR_I2SExt+0x64>
 80068dc:	4b0c      	ldr	r3, [pc, #48]	@ (8006910 <I2SEx_RxISR_I2SExt+0x94>)
 80068de:	e001      	b.n	80068e4 <I2SEx_RxISR_I2SExt+0x68>
 80068e0:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80068e4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80068e8:	605a      	str	r2, [r3, #4]
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80068ee:	b29b      	uxth	r3, r3
 80068f0:	2b00      	cmp	r3, #0
 80068f2:	d106      	bne.n	8006902 <I2SEx_RxISR_I2SExt+0x86>
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	2201      	movs	r2, #1
 80068f8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80068fc:	6878      	ldr	r0, [r7, #4]
 80068fe:	f7ff ff03 	bl	8006708 <HAL_I2SEx_TxRxCpltCallback>
 8006902:	bf00      	nop
 8006904:	3708      	adds	r7, #8
 8006906:	46bd      	mov	sp, r7
 8006908:	bd80      	pop	{r7, pc}
 800690a:	bf00      	nop
 800690c:	40003800 	.word	0x40003800
 8006910:	40003400 	.word	0x40003400

08006914 <HAL_RCC_OscConfig>:
 8006914:	b580      	push	{r7, lr}
 8006916:	b086      	sub	sp, #24
 8006918:	af00      	add	r7, sp, #0
 800691a:	6078      	str	r0, [r7, #4]
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	2b00      	cmp	r3, #0
 8006920:	d101      	bne.n	8006926 <HAL_RCC_OscConfig+0x12>
 8006922:	2301      	movs	r3, #1
 8006924:	e267      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	f003 0301 	and.w	r3, r3, #1
 800692e:	2b00      	cmp	r3, #0
 8006930:	d075      	beq.n	8006a1e <HAL_RCC_OscConfig+0x10a>
 8006932:	4b88      	ldr	r3, [pc, #544]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006934:	689b      	ldr	r3, [r3, #8]
 8006936:	f003 030c 	and.w	r3, r3, #12
 800693a:	2b04      	cmp	r3, #4
 800693c:	d00c      	beq.n	8006958 <HAL_RCC_OscConfig+0x44>
 800693e:	4b85      	ldr	r3, [pc, #532]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006940:	689b      	ldr	r3, [r3, #8]
 8006942:	f003 030c 	and.w	r3, r3, #12
 8006946:	2b08      	cmp	r3, #8
 8006948:	d112      	bne.n	8006970 <HAL_RCC_OscConfig+0x5c>
 800694a:	4b82      	ldr	r3, [pc, #520]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 800694c:	685b      	ldr	r3, [r3, #4]
 800694e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006952:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006956:	d10b      	bne.n	8006970 <HAL_RCC_OscConfig+0x5c>
 8006958:	4b7e      	ldr	r3, [pc, #504]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 800695a:	681b      	ldr	r3, [r3, #0]
 800695c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006960:	2b00      	cmp	r3, #0
 8006962:	d05b      	beq.n	8006a1c <HAL_RCC_OscConfig+0x108>
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	685b      	ldr	r3, [r3, #4]
 8006968:	2b00      	cmp	r3, #0
 800696a:	d157      	bne.n	8006a1c <HAL_RCC_OscConfig+0x108>
 800696c:	2301      	movs	r3, #1
 800696e:	e242      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	685b      	ldr	r3, [r3, #4]
 8006974:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006978:	d106      	bne.n	8006988 <HAL_RCC_OscConfig+0x74>
 800697a:	4b76      	ldr	r3, [pc, #472]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	4a75      	ldr	r2, [pc, #468]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006980:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006984:	6013      	str	r3, [r2, #0]
 8006986:	e01d      	b.n	80069c4 <HAL_RCC_OscConfig+0xb0>
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	685b      	ldr	r3, [r3, #4]
 800698c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006990:	d10c      	bne.n	80069ac <HAL_RCC_OscConfig+0x98>
 8006992:	4b70      	ldr	r3, [pc, #448]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	4a6f      	ldr	r2, [pc, #444]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006998:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800699c:	6013      	str	r3, [r2, #0]
 800699e:	4b6d      	ldr	r3, [pc, #436]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	4a6c      	ldr	r2, [pc, #432]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80069a8:	6013      	str	r3, [r2, #0]
 80069aa:	e00b      	b.n	80069c4 <HAL_RCC_OscConfig+0xb0>
 80069ac:	4b69      	ldr	r3, [pc, #420]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	4a68      	ldr	r2, [pc, #416]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069b2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80069b6:	6013      	str	r3, [r2, #0]
 80069b8:	4b66      	ldr	r3, [pc, #408]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	4a65      	ldr	r2, [pc, #404]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069be:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80069c2:	6013      	str	r3, [r2, #0]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	685b      	ldr	r3, [r3, #4]
 80069c8:	2b00      	cmp	r3, #0
 80069ca:	d013      	beq.n	80069f4 <HAL_RCC_OscConfig+0xe0>
 80069cc:	f7fd fa04 	bl	8003dd8 <HAL_GetTick>
 80069d0:	6138      	str	r0, [r7, #16]
 80069d2:	e008      	b.n	80069e6 <HAL_RCC_OscConfig+0xd2>
 80069d4:	f7fd fa00 	bl	8003dd8 <HAL_GetTick>
 80069d8:	4602      	mov	r2, r0
 80069da:	693b      	ldr	r3, [r7, #16]
 80069dc:	1ad3      	subs	r3, r2, r3
 80069de:	2b64      	cmp	r3, #100	@ 0x64
 80069e0:	d901      	bls.n	80069e6 <HAL_RCC_OscConfig+0xd2>
 80069e2:	2303      	movs	r3, #3
 80069e4:	e207      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 80069e6:	4b5b      	ldr	r3, [pc, #364]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 80069e8:	681b      	ldr	r3, [r3, #0]
 80069ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d0f0      	beq.n	80069d4 <HAL_RCC_OscConfig+0xc0>
 80069f2:	e014      	b.n	8006a1e <HAL_RCC_OscConfig+0x10a>
 80069f4:	f7fd f9f0 	bl	8003dd8 <HAL_GetTick>
 80069f8:	6138      	str	r0, [r7, #16]
 80069fa:	e008      	b.n	8006a0e <HAL_RCC_OscConfig+0xfa>
 80069fc:	f7fd f9ec 	bl	8003dd8 <HAL_GetTick>
 8006a00:	4602      	mov	r2, r0
 8006a02:	693b      	ldr	r3, [r7, #16]
 8006a04:	1ad3      	subs	r3, r2, r3
 8006a06:	2b64      	cmp	r3, #100	@ 0x64
 8006a08:	d901      	bls.n	8006a0e <HAL_RCC_OscConfig+0xfa>
 8006a0a:	2303      	movs	r3, #3
 8006a0c:	e1f3      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006a0e:	4b51      	ldr	r3, [pc, #324]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	d1f0      	bne.n	80069fc <HAL_RCC_OscConfig+0xe8>
 8006a1a:	e000      	b.n	8006a1e <HAL_RCC_OscConfig+0x10a>
 8006a1c:	bf00      	nop
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	f003 0302 	and.w	r3, r3, #2
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d063      	beq.n	8006af2 <HAL_RCC_OscConfig+0x1de>
 8006a2a:	4b4a      	ldr	r3, [pc, #296]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a2c:	689b      	ldr	r3, [r3, #8]
 8006a2e:	f003 030c 	and.w	r3, r3, #12
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d00b      	beq.n	8006a4e <HAL_RCC_OscConfig+0x13a>
 8006a36:	4b47      	ldr	r3, [pc, #284]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a38:	689b      	ldr	r3, [r3, #8]
 8006a3a:	f003 030c 	and.w	r3, r3, #12
 8006a3e:	2b08      	cmp	r3, #8
 8006a40:	d11c      	bne.n	8006a7c <HAL_RCC_OscConfig+0x168>
 8006a42:	4b44      	ldr	r3, [pc, #272]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a44:	685b      	ldr	r3, [r3, #4]
 8006a46:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	d116      	bne.n	8006a7c <HAL_RCC_OscConfig+0x168>
 8006a4e:	4b41      	ldr	r3, [pc, #260]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a50:	681b      	ldr	r3, [r3, #0]
 8006a52:	f003 0302 	and.w	r3, r3, #2
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d005      	beq.n	8006a66 <HAL_RCC_OscConfig+0x152>
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	68db      	ldr	r3, [r3, #12]
 8006a5e:	2b01      	cmp	r3, #1
 8006a60:	d001      	beq.n	8006a66 <HAL_RCC_OscConfig+0x152>
 8006a62:	2301      	movs	r3, #1
 8006a64:	e1c7      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006a66:	4b3b      	ldr	r3, [pc, #236]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	691b      	ldr	r3, [r3, #16]
 8006a72:	00db      	lsls	r3, r3, #3
 8006a74:	4937      	ldr	r1, [pc, #220]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006a76:	4313      	orrs	r3, r2
 8006a78:	600b      	str	r3, [r1, #0]
 8006a7a:	e03a      	b.n	8006af2 <HAL_RCC_OscConfig+0x1de>
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	68db      	ldr	r3, [r3, #12]
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d020      	beq.n	8006ac6 <HAL_RCC_OscConfig+0x1b2>
 8006a84:	4b34      	ldr	r3, [pc, #208]	@ (8006b58 <HAL_RCC_OscConfig+0x244>)
 8006a86:	2201      	movs	r2, #1
 8006a88:	601a      	str	r2, [r3, #0]
 8006a8a:	f7fd f9a5 	bl	8003dd8 <HAL_GetTick>
 8006a8e:	6138      	str	r0, [r7, #16]
 8006a90:	e008      	b.n	8006aa4 <HAL_RCC_OscConfig+0x190>
 8006a92:	f7fd f9a1 	bl	8003dd8 <HAL_GetTick>
 8006a96:	4602      	mov	r2, r0
 8006a98:	693b      	ldr	r3, [r7, #16]
 8006a9a:	1ad3      	subs	r3, r2, r3
 8006a9c:	2b02      	cmp	r3, #2
 8006a9e:	d901      	bls.n	8006aa4 <HAL_RCC_OscConfig+0x190>
 8006aa0:	2303      	movs	r3, #3
 8006aa2:	e1a8      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006aa4:	4b2b      	ldr	r3, [pc, #172]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	f003 0302 	and.w	r3, r3, #2
 8006aac:	2b00      	cmp	r3, #0
 8006aae:	d0f0      	beq.n	8006a92 <HAL_RCC_OscConfig+0x17e>
 8006ab0:	4b28      	ldr	r3, [pc, #160]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006ab2:	681b      	ldr	r3, [r3, #0]
 8006ab4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	691b      	ldr	r3, [r3, #16]
 8006abc:	00db      	lsls	r3, r3, #3
 8006abe:	4925      	ldr	r1, [pc, #148]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006ac0:	4313      	orrs	r3, r2
 8006ac2:	600b      	str	r3, [r1, #0]
 8006ac4:	e015      	b.n	8006af2 <HAL_RCC_OscConfig+0x1de>
 8006ac6:	4b24      	ldr	r3, [pc, #144]	@ (8006b58 <HAL_RCC_OscConfig+0x244>)
 8006ac8:	2200      	movs	r2, #0
 8006aca:	601a      	str	r2, [r3, #0]
 8006acc:	f7fd f984 	bl	8003dd8 <HAL_GetTick>
 8006ad0:	6138      	str	r0, [r7, #16]
 8006ad2:	e008      	b.n	8006ae6 <HAL_RCC_OscConfig+0x1d2>
 8006ad4:	f7fd f980 	bl	8003dd8 <HAL_GetTick>
 8006ad8:	4602      	mov	r2, r0
 8006ada:	693b      	ldr	r3, [r7, #16]
 8006adc:	1ad3      	subs	r3, r2, r3
 8006ade:	2b02      	cmp	r3, #2
 8006ae0:	d901      	bls.n	8006ae6 <HAL_RCC_OscConfig+0x1d2>
 8006ae2:	2303      	movs	r3, #3
 8006ae4:	e187      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006ae6:	4b1b      	ldr	r3, [pc, #108]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	f003 0302 	and.w	r3, r3, #2
 8006aee:	2b00      	cmp	r3, #0
 8006af0:	d1f0      	bne.n	8006ad4 <HAL_RCC_OscConfig+0x1c0>
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	f003 0308 	and.w	r3, r3, #8
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d036      	beq.n	8006b6c <HAL_RCC_OscConfig+0x258>
 8006afe:	687b      	ldr	r3, [r7, #4]
 8006b00:	695b      	ldr	r3, [r3, #20]
 8006b02:	2b00      	cmp	r3, #0
 8006b04:	d016      	beq.n	8006b34 <HAL_RCC_OscConfig+0x220>
 8006b06:	4b15      	ldr	r3, [pc, #84]	@ (8006b5c <HAL_RCC_OscConfig+0x248>)
 8006b08:	2201      	movs	r2, #1
 8006b0a:	601a      	str	r2, [r3, #0]
 8006b0c:	f7fd f964 	bl	8003dd8 <HAL_GetTick>
 8006b10:	6138      	str	r0, [r7, #16]
 8006b12:	e008      	b.n	8006b26 <HAL_RCC_OscConfig+0x212>
 8006b14:	f7fd f960 	bl	8003dd8 <HAL_GetTick>
 8006b18:	4602      	mov	r2, r0
 8006b1a:	693b      	ldr	r3, [r7, #16]
 8006b1c:	1ad3      	subs	r3, r2, r3
 8006b1e:	2b02      	cmp	r3, #2
 8006b20:	d901      	bls.n	8006b26 <HAL_RCC_OscConfig+0x212>
 8006b22:	2303      	movs	r3, #3
 8006b24:	e167      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006b26:	4b0b      	ldr	r3, [pc, #44]	@ (8006b54 <HAL_RCC_OscConfig+0x240>)
 8006b28:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006b2a:	f003 0302 	and.w	r3, r3, #2
 8006b2e:	2b00      	cmp	r3, #0
 8006b30:	d0f0      	beq.n	8006b14 <HAL_RCC_OscConfig+0x200>
 8006b32:	e01b      	b.n	8006b6c <HAL_RCC_OscConfig+0x258>
 8006b34:	4b09      	ldr	r3, [pc, #36]	@ (8006b5c <HAL_RCC_OscConfig+0x248>)
 8006b36:	2200      	movs	r2, #0
 8006b38:	601a      	str	r2, [r3, #0]
 8006b3a:	f7fd f94d 	bl	8003dd8 <HAL_GetTick>
 8006b3e:	6138      	str	r0, [r7, #16]
 8006b40:	e00e      	b.n	8006b60 <HAL_RCC_OscConfig+0x24c>
 8006b42:	f7fd f949 	bl	8003dd8 <HAL_GetTick>
 8006b46:	4602      	mov	r2, r0
 8006b48:	693b      	ldr	r3, [r7, #16]
 8006b4a:	1ad3      	subs	r3, r2, r3
 8006b4c:	2b02      	cmp	r3, #2
 8006b4e:	d907      	bls.n	8006b60 <HAL_RCC_OscConfig+0x24c>
 8006b50:	2303      	movs	r3, #3
 8006b52:	e150      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006b54:	40023800 	.word	0x40023800
 8006b58:	42470000 	.word	0x42470000
 8006b5c:	42470e80 	.word	0x42470e80
 8006b60:	4b88      	ldr	r3, [pc, #544]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006b62:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006b64:	f003 0302 	and.w	r3, r3, #2
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d1ea      	bne.n	8006b42 <HAL_RCC_OscConfig+0x22e>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	681b      	ldr	r3, [r3, #0]
 8006b70:	f003 0304 	and.w	r3, r3, #4
 8006b74:	2b00      	cmp	r3, #0
 8006b76:	f000 8097 	beq.w	8006ca8 <HAL_RCC_OscConfig+0x394>
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	75fb      	strb	r3, [r7, #23]
 8006b7e:	4b81      	ldr	r3, [pc, #516]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006b80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b82:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006b86:	2b00      	cmp	r3, #0
 8006b88:	d10f      	bne.n	8006baa <HAL_RCC_OscConfig+0x296>
 8006b8a:	2300      	movs	r3, #0
 8006b8c:	60bb      	str	r3, [r7, #8]
 8006b8e:	4b7d      	ldr	r3, [pc, #500]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006b90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b92:	4a7c      	ldr	r2, [pc, #496]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006b94:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006b98:	6413      	str	r3, [r2, #64]	@ 0x40
 8006b9a:	4b7a      	ldr	r3, [pc, #488]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006b9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006b9e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006ba2:	60bb      	str	r3, [r7, #8]
 8006ba4:	68bb      	ldr	r3, [r7, #8]
 8006ba6:	2301      	movs	r3, #1
 8006ba8:	75fb      	strb	r3, [r7, #23]
 8006baa:	4b77      	ldr	r3, [pc, #476]	@ (8006d88 <HAL_RCC_OscConfig+0x474>)
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006bb2:	2b00      	cmp	r3, #0
 8006bb4:	d118      	bne.n	8006be8 <HAL_RCC_OscConfig+0x2d4>
 8006bb6:	4b74      	ldr	r3, [pc, #464]	@ (8006d88 <HAL_RCC_OscConfig+0x474>)
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	4a73      	ldr	r2, [pc, #460]	@ (8006d88 <HAL_RCC_OscConfig+0x474>)
 8006bbc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006bc0:	6013      	str	r3, [r2, #0]
 8006bc2:	f7fd f909 	bl	8003dd8 <HAL_GetTick>
 8006bc6:	6138      	str	r0, [r7, #16]
 8006bc8:	e008      	b.n	8006bdc <HAL_RCC_OscConfig+0x2c8>
 8006bca:	f7fd f905 	bl	8003dd8 <HAL_GetTick>
 8006bce:	4602      	mov	r2, r0
 8006bd0:	693b      	ldr	r3, [r7, #16]
 8006bd2:	1ad3      	subs	r3, r2, r3
 8006bd4:	2b02      	cmp	r3, #2
 8006bd6:	d901      	bls.n	8006bdc <HAL_RCC_OscConfig+0x2c8>
 8006bd8:	2303      	movs	r3, #3
 8006bda:	e10c      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006bdc:	4b6a      	ldr	r3, [pc, #424]	@ (8006d88 <HAL_RCC_OscConfig+0x474>)
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d0f0      	beq.n	8006bca <HAL_RCC_OscConfig+0x2b6>
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	689b      	ldr	r3, [r3, #8]
 8006bec:	2b01      	cmp	r3, #1
 8006bee:	d106      	bne.n	8006bfe <HAL_RCC_OscConfig+0x2ea>
 8006bf0:	4b64      	ldr	r3, [pc, #400]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006bf2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006bf4:	4a63      	ldr	r2, [pc, #396]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006bf6:	f043 0301 	orr.w	r3, r3, #1
 8006bfa:	6713      	str	r3, [r2, #112]	@ 0x70
 8006bfc:	e01c      	b.n	8006c38 <HAL_RCC_OscConfig+0x324>
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	689b      	ldr	r3, [r3, #8]
 8006c02:	2b05      	cmp	r3, #5
 8006c04:	d10c      	bne.n	8006c20 <HAL_RCC_OscConfig+0x30c>
 8006c06:	4b5f      	ldr	r3, [pc, #380]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c08:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c0a:	4a5e      	ldr	r2, [pc, #376]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c0c:	f043 0304 	orr.w	r3, r3, #4
 8006c10:	6713      	str	r3, [r2, #112]	@ 0x70
 8006c12:	4b5c      	ldr	r3, [pc, #368]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c14:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c16:	4a5b      	ldr	r2, [pc, #364]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c18:	f043 0301 	orr.w	r3, r3, #1
 8006c1c:	6713      	str	r3, [r2, #112]	@ 0x70
 8006c1e:	e00b      	b.n	8006c38 <HAL_RCC_OscConfig+0x324>
 8006c20:	4b58      	ldr	r3, [pc, #352]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c22:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c24:	4a57      	ldr	r2, [pc, #348]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c26:	f023 0301 	bic.w	r3, r3, #1
 8006c2a:	6713      	str	r3, [r2, #112]	@ 0x70
 8006c2c:	4b55      	ldr	r3, [pc, #340]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c2e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c30:	4a54      	ldr	r2, [pc, #336]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c32:	f023 0304 	bic.w	r3, r3, #4
 8006c36:	6713      	str	r3, [r2, #112]	@ 0x70
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	689b      	ldr	r3, [r3, #8]
 8006c3c:	2b00      	cmp	r3, #0
 8006c3e:	d015      	beq.n	8006c6c <HAL_RCC_OscConfig+0x358>
 8006c40:	f7fd f8ca 	bl	8003dd8 <HAL_GetTick>
 8006c44:	6138      	str	r0, [r7, #16]
 8006c46:	e00a      	b.n	8006c5e <HAL_RCC_OscConfig+0x34a>
 8006c48:	f7fd f8c6 	bl	8003dd8 <HAL_GetTick>
 8006c4c:	4602      	mov	r2, r0
 8006c4e:	693b      	ldr	r3, [r7, #16]
 8006c50:	1ad3      	subs	r3, r2, r3
 8006c52:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006c56:	4293      	cmp	r3, r2
 8006c58:	d901      	bls.n	8006c5e <HAL_RCC_OscConfig+0x34a>
 8006c5a:	2303      	movs	r3, #3
 8006c5c:	e0cb      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006c5e:	4b49      	ldr	r3, [pc, #292]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c60:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c62:	f003 0302 	and.w	r3, r3, #2
 8006c66:	2b00      	cmp	r3, #0
 8006c68:	d0ee      	beq.n	8006c48 <HAL_RCC_OscConfig+0x334>
 8006c6a:	e014      	b.n	8006c96 <HAL_RCC_OscConfig+0x382>
 8006c6c:	f7fd f8b4 	bl	8003dd8 <HAL_GetTick>
 8006c70:	6138      	str	r0, [r7, #16]
 8006c72:	e00a      	b.n	8006c8a <HAL_RCC_OscConfig+0x376>
 8006c74:	f7fd f8b0 	bl	8003dd8 <HAL_GetTick>
 8006c78:	4602      	mov	r2, r0
 8006c7a:	693b      	ldr	r3, [r7, #16]
 8006c7c:	1ad3      	subs	r3, r2, r3
 8006c7e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006c82:	4293      	cmp	r3, r2
 8006c84:	d901      	bls.n	8006c8a <HAL_RCC_OscConfig+0x376>
 8006c86:	2303      	movs	r3, #3
 8006c88:	e0b5      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006c8a:	4b3e      	ldr	r3, [pc, #248]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006c8e:	f003 0302 	and.w	r3, r3, #2
 8006c92:	2b00      	cmp	r3, #0
 8006c94:	d1ee      	bne.n	8006c74 <HAL_RCC_OscConfig+0x360>
 8006c96:	7dfb      	ldrb	r3, [r7, #23]
 8006c98:	2b01      	cmp	r3, #1
 8006c9a:	d105      	bne.n	8006ca8 <HAL_RCC_OscConfig+0x394>
 8006c9c:	4b39      	ldr	r3, [pc, #228]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006c9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006ca0:	4a38      	ldr	r2, [pc, #224]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006ca2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006ca6:	6413      	str	r3, [r2, #64]	@ 0x40
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	699b      	ldr	r3, [r3, #24]
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	f000 80a1 	beq.w	8006df4 <HAL_RCC_OscConfig+0x4e0>
 8006cb2:	4b34      	ldr	r3, [pc, #208]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006cb4:	689b      	ldr	r3, [r3, #8]
 8006cb6:	f003 030c 	and.w	r3, r3, #12
 8006cba:	2b08      	cmp	r3, #8
 8006cbc:	d05c      	beq.n	8006d78 <HAL_RCC_OscConfig+0x464>
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	699b      	ldr	r3, [r3, #24]
 8006cc2:	2b02      	cmp	r3, #2
 8006cc4:	d141      	bne.n	8006d4a <HAL_RCC_OscConfig+0x436>
 8006cc6:	4b31      	ldr	r3, [pc, #196]	@ (8006d8c <HAL_RCC_OscConfig+0x478>)
 8006cc8:	2200      	movs	r2, #0
 8006cca:	601a      	str	r2, [r3, #0]
 8006ccc:	f7fd f884 	bl	8003dd8 <HAL_GetTick>
 8006cd0:	6138      	str	r0, [r7, #16]
 8006cd2:	e008      	b.n	8006ce6 <HAL_RCC_OscConfig+0x3d2>
 8006cd4:	f7fd f880 	bl	8003dd8 <HAL_GetTick>
 8006cd8:	4602      	mov	r2, r0
 8006cda:	693b      	ldr	r3, [r7, #16]
 8006cdc:	1ad3      	subs	r3, r2, r3
 8006cde:	2b02      	cmp	r3, #2
 8006ce0:	d901      	bls.n	8006ce6 <HAL_RCC_OscConfig+0x3d2>
 8006ce2:	2303      	movs	r3, #3
 8006ce4:	e087      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006ce6:	4b27      	ldr	r3, [pc, #156]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d1f0      	bne.n	8006cd4 <HAL_RCC_OscConfig+0x3c0>
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	69da      	ldr	r2, [r3, #28]
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	6a1b      	ldr	r3, [r3, #32]
 8006cfa:	431a      	orrs	r2, r3
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006d00:	019b      	lsls	r3, r3, #6
 8006d02:	431a      	orrs	r2, r3
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d08:	085b      	lsrs	r3, r3, #1
 8006d0a:	3b01      	subs	r3, #1
 8006d0c:	041b      	lsls	r3, r3, #16
 8006d0e:	431a      	orrs	r2, r3
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006d14:	061b      	lsls	r3, r3, #24
 8006d16:	491b      	ldr	r1, [pc, #108]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006d18:	4313      	orrs	r3, r2
 8006d1a:	604b      	str	r3, [r1, #4]
 8006d1c:	4b1b      	ldr	r3, [pc, #108]	@ (8006d8c <HAL_RCC_OscConfig+0x478>)
 8006d1e:	2201      	movs	r2, #1
 8006d20:	601a      	str	r2, [r3, #0]
 8006d22:	f7fd f859 	bl	8003dd8 <HAL_GetTick>
 8006d26:	6138      	str	r0, [r7, #16]
 8006d28:	e008      	b.n	8006d3c <HAL_RCC_OscConfig+0x428>
 8006d2a:	f7fd f855 	bl	8003dd8 <HAL_GetTick>
 8006d2e:	4602      	mov	r2, r0
 8006d30:	693b      	ldr	r3, [r7, #16]
 8006d32:	1ad3      	subs	r3, r2, r3
 8006d34:	2b02      	cmp	r3, #2
 8006d36:	d901      	bls.n	8006d3c <HAL_RCC_OscConfig+0x428>
 8006d38:	2303      	movs	r3, #3
 8006d3a:	e05c      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006d3c:	4b11      	ldr	r3, [pc, #68]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006d44:	2b00      	cmp	r3, #0
 8006d46:	d0f0      	beq.n	8006d2a <HAL_RCC_OscConfig+0x416>
 8006d48:	e054      	b.n	8006df4 <HAL_RCC_OscConfig+0x4e0>
 8006d4a:	4b10      	ldr	r3, [pc, #64]	@ (8006d8c <HAL_RCC_OscConfig+0x478>)
 8006d4c:	2200      	movs	r2, #0
 8006d4e:	601a      	str	r2, [r3, #0]
 8006d50:	f7fd f842 	bl	8003dd8 <HAL_GetTick>
 8006d54:	6138      	str	r0, [r7, #16]
 8006d56:	e008      	b.n	8006d6a <HAL_RCC_OscConfig+0x456>
 8006d58:	f7fd f83e 	bl	8003dd8 <HAL_GetTick>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	693b      	ldr	r3, [r7, #16]
 8006d60:	1ad3      	subs	r3, r2, r3
 8006d62:	2b02      	cmp	r3, #2
 8006d64:	d901      	bls.n	8006d6a <HAL_RCC_OscConfig+0x456>
 8006d66:	2303      	movs	r3, #3
 8006d68:	e045      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006d6a:	4b06      	ldr	r3, [pc, #24]	@ (8006d84 <HAL_RCC_OscConfig+0x470>)
 8006d6c:	681b      	ldr	r3, [r3, #0]
 8006d6e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006d72:	2b00      	cmp	r3, #0
 8006d74:	d1f0      	bne.n	8006d58 <HAL_RCC_OscConfig+0x444>
 8006d76:	e03d      	b.n	8006df4 <HAL_RCC_OscConfig+0x4e0>
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	699b      	ldr	r3, [r3, #24]
 8006d7c:	2b01      	cmp	r3, #1
 8006d7e:	d107      	bne.n	8006d90 <HAL_RCC_OscConfig+0x47c>
 8006d80:	2301      	movs	r3, #1
 8006d82:	e038      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006d84:	40023800 	.word	0x40023800
 8006d88:	40007000 	.word	0x40007000
 8006d8c:	42470060 	.word	0x42470060
 8006d90:	4b1b      	ldr	r3, [pc, #108]	@ (8006e00 <HAL_RCC_OscConfig+0x4ec>)
 8006d92:	685b      	ldr	r3, [r3, #4]
 8006d94:	60fb      	str	r3, [r7, #12]
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	699b      	ldr	r3, [r3, #24]
 8006d9a:	2b01      	cmp	r3, #1
 8006d9c:	d028      	beq.n	8006df0 <HAL_RCC_OscConfig+0x4dc>
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	69db      	ldr	r3, [r3, #28]
 8006da8:	429a      	cmp	r2, r3
 8006daa:	d121      	bne.n	8006df0 <HAL_RCC_OscConfig+0x4dc>
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	6a1b      	ldr	r3, [r3, #32]
 8006db6:	429a      	cmp	r2, r3
 8006db8:	d11a      	bne.n	8006df0 <HAL_RCC_OscConfig+0x4dc>
 8006dba:	68fa      	ldr	r2, [r7, #12]
 8006dbc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8006dc0:	4013      	ands	r3, r2
 8006dc2:	687a      	ldr	r2, [r7, #4]
 8006dc4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006dc6:	0192      	lsls	r2, r2, #6
 8006dc8:	4293      	cmp	r3, r2
 8006dca:	d111      	bne.n	8006df0 <HAL_RCC_OscConfig+0x4dc>
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006dd6:	085b      	lsrs	r3, r3, #1
 8006dd8:	3b01      	subs	r3, #1
 8006dda:	041b      	lsls	r3, r3, #16
 8006ddc:	429a      	cmp	r2, r3
 8006dde:	d107      	bne.n	8006df0 <HAL_RCC_OscConfig+0x4dc>
 8006de0:	68fb      	ldr	r3, [r7, #12]
 8006de2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006dea:	061b      	lsls	r3, r3, #24
 8006dec:	429a      	cmp	r2, r3
 8006dee:	d001      	beq.n	8006df4 <HAL_RCC_OscConfig+0x4e0>
 8006df0:	2301      	movs	r3, #1
 8006df2:	e000      	b.n	8006df6 <HAL_RCC_OscConfig+0x4e2>
 8006df4:	2300      	movs	r3, #0
 8006df6:	4618      	mov	r0, r3
 8006df8:	3718      	adds	r7, #24
 8006dfa:	46bd      	mov	sp, r7
 8006dfc:	bd80      	pop	{r7, pc}
 8006dfe:	bf00      	nop
 8006e00:	40023800 	.word	0x40023800

08006e04 <HAL_RCC_ClockConfig>:
 8006e04:	b580      	push	{r7, lr}
 8006e06:	b084      	sub	sp, #16
 8006e08:	af00      	add	r7, sp, #0
 8006e0a:	6078      	str	r0, [r7, #4]
 8006e0c:	6039      	str	r1, [r7, #0]
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d101      	bne.n	8006e18 <HAL_RCC_ClockConfig+0x14>
 8006e14:	2301      	movs	r3, #1
 8006e16:	e0cc      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006e18:	4b68      	ldr	r3, [pc, #416]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	f003 0307 	and.w	r3, r3, #7
 8006e20:	683a      	ldr	r2, [r7, #0]
 8006e22:	429a      	cmp	r2, r3
 8006e24:	d90c      	bls.n	8006e40 <HAL_RCC_ClockConfig+0x3c>
 8006e26:	4b65      	ldr	r3, [pc, #404]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006e28:	683a      	ldr	r2, [r7, #0]
 8006e2a:	b2d2      	uxtb	r2, r2
 8006e2c:	701a      	strb	r2, [r3, #0]
 8006e2e:	4b63      	ldr	r3, [pc, #396]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006e30:	681b      	ldr	r3, [r3, #0]
 8006e32:	f003 0307 	and.w	r3, r3, #7
 8006e36:	683a      	ldr	r2, [r7, #0]
 8006e38:	429a      	cmp	r2, r3
 8006e3a:	d001      	beq.n	8006e40 <HAL_RCC_ClockConfig+0x3c>
 8006e3c:	2301      	movs	r3, #1
 8006e3e:	e0b8      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	681b      	ldr	r3, [r3, #0]
 8006e44:	f003 0302 	and.w	r3, r3, #2
 8006e48:	2b00      	cmp	r3, #0
 8006e4a:	d020      	beq.n	8006e8e <HAL_RCC_ClockConfig+0x8a>
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	f003 0304 	and.w	r3, r3, #4
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	d005      	beq.n	8006e64 <HAL_RCC_ClockConfig+0x60>
 8006e58:	4b59      	ldr	r3, [pc, #356]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e5a:	689b      	ldr	r3, [r3, #8]
 8006e5c:	4a58      	ldr	r2, [pc, #352]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e5e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8006e62:	6093      	str	r3, [r2, #8]
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	f003 0308 	and.w	r3, r3, #8
 8006e6c:	2b00      	cmp	r3, #0
 8006e6e:	d005      	beq.n	8006e7c <HAL_RCC_ClockConfig+0x78>
 8006e70:	4b53      	ldr	r3, [pc, #332]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e72:	689b      	ldr	r3, [r3, #8]
 8006e74:	4a52      	ldr	r2, [pc, #328]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e76:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8006e7a:	6093      	str	r3, [r2, #8]
 8006e7c:	4b50      	ldr	r3, [pc, #320]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e7e:	689b      	ldr	r3, [r3, #8]
 8006e80:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	689b      	ldr	r3, [r3, #8]
 8006e88:	494d      	ldr	r1, [pc, #308]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006e8a:	4313      	orrs	r3, r2
 8006e8c:	608b      	str	r3, [r1, #8]
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	f003 0301 	and.w	r3, r3, #1
 8006e96:	2b00      	cmp	r3, #0
 8006e98:	d044      	beq.n	8006f24 <HAL_RCC_ClockConfig+0x120>
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	685b      	ldr	r3, [r3, #4]
 8006e9e:	2b01      	cmp	r3, #1
 8006ea0:	d107      	bne.n	8006eb2 <HAL_RCC_ClockConfig+0xae>
 8006ea2:	4b47      	ldr	r3, [pc, #284]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006ea4:	681b      	ldr	r3, [r3, #0]
 8006ea6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d119      	bne.n	8006ee2 <HAL_RCC_ClockConfig+0xde>
 8006eae:	2301      	movs	r3, #1
 8006eb0:	e07f      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	685b      	ldr	r3, [r3, #4]
 8006eb6:	2b02      	cmp	r3, #2
 8006eb8:	d003      	beq.n	8006ec2 <HAL_RCC_ClockConfig+0xbe>
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	685b      	ldr	r3, [r3, #4]
 8006ebe:	2b03      	cmp	r3, #3
 8006ec0:	d107      	bne.n	8006ed2 <HAL_RCC_ClockConfig+0xce>
 8006ec2:	4b3f      	ldr	r3, [pc, #252]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d109      	bne.n	8006ee2 <HAL_RCC_ClockConfig+0xde>
 8006ece:	2301      	movs	r3, #1
 8006ed0:	e06f      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006ed2:	4b3b      	ldr	r3, [pc, #236]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006ed4:	681b      	ldr	r3, [r3, #0]
 8006ed6:	f003 0302 	and.w	r3, r3, #2
 8006eda:	2b00      	cmp	r3, #0
 8006edc:	d101      	bne.n	8006ee2 <HAL_RCC_ClockConfig+0xde>
 8006ede:	2301      	movs	r3, #1
 8006ee0:	e067      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006ee2:	4b37      	ldr	r3, [pc, #220]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006ee4:	689b      	ldr	r3, [r3, #8]
 8006ee6:	f023 0203 	bic.w	r2, r3, #3
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	685b      	ldr	r3, [r3, #4]
 8006eee:	4934      	ldr	r1, [pc, #208]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006ef0:	4313      	orrs	r3, r2
 8006ef2:	608b      	str	r3, [r1, #8]
 8006ef4:	f7fc ff70 	bl	8003dd8 <HAL_GetTick>
 8006ef8:	60f8      	str	r0, [r7, #12]
 8006efa:	e00a      	b.n	8006f12 <HAL_RCC_ClockConfig+0x10e>
 8006efc:	f7fc ff6c 	bl	8003dd8 <HAL_GetTick>
 8006f00:	4602      	mov	r2, r0
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	1ad3      	subs	r3, r2, r3
 8006f06:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006f0a:	4293      	cmp	r3, r2
 8006f0c:	d901      	bls.n	8006f12 <HAL_RCC_ClockConfig+0x10e>
 8006f0e:	2303      	movs	r3, #3
 8006f10:	e04f      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006f12:	4b2b      	ldr	r3, [pc, #172]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f14:	689b      	ldr	r3, [r3, #8]
 8006f16:	f003 020c 	and.w	r2, r3, #12
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	685b      	ldr	r3, [r3, #4]
 8006f1e:	009b      	lsls	r3, r3, #2
 8006f20:	429a      	cmp	r2, r3
 8006f22:	d1eb      	bne.n	8006efc <HAL_RCC_ClockConfig+0xf8>
 8006f24:	4b25      	ldr	r3, [pc, #148]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	f003 0307 	and.w	r3, r3, #7
 8006f2c:	683a      	ldr	r2, [r7, #0]
 8006f2e:	429a      	cmp	r2, r3
 8006f30:	d20c      	bcs.n	8006f4c <HAL_RCC_ClockConfig+0x148>
 8006f32:	4b22      	ldr	r3, [pc, #136]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006f34:	683a      	ldr	r2, [r7, #0]
 8006f36:	b2d2      	uxtb	r2, r2
 8006f38:	701a      	strb	r2, [r3, #0]
 8006f3a:	4b20      	ldr	r3, [pc, #128]	@ (8006fbc <HAL_RCC_ClockConfig+0x1b8>)
 8006f3c:	681b      	ldr	r3, [r3, #0]
 8006f3e:	f003 0307 	and.w	r3, r3, #7
 8006f42:	683a      	ldr	r2, [r7, #0]
 8006f44:	429a      	cmp	r2, r3
 8006f46:	d001      	beq.n	8006f4c <HAL_RCC_ClockConfig+0x148>
 8006f48:	2301      	movs	r3, #1
 8006f4a:	e032      	b.n	8006fb2 <HAL_RCC_ClockConfig+0x1ae>
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	f003 0304 	and.w	r3, r3, #4
 8006f54:	2b00      	cmp	r3, #0
 8006f56:	d008      	beq.n	8006f6a <HAL_RCC_ClockConfig+0x166>
 8006f58:	4b19      	ldr	r3, [pc, #100]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f5a:	689b      	ldr	r3, [r3, #8]
 8006f5c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	68db      	ldr	r3, [r3, #12]
 8006f64:	4916      	ldr	r1, [pc, #88]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f66:	4313      	orrs	r3, r2
 8006f68:	608b      	str	r3, [r1, #8]
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	681b      	ldr	r3, [r3, #0]
 8006f6e:	f003 0308 	and.w	r3, r3, #8
 8006f72:	2b00      	cmp	r3, #0
 8006f74:	d009      	beq.n	8006f8a <HAL_RCC_ClockConfig+0x186>
 8006f76:	4b12      	ldr	r3, [pc, #72]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f78:	689b      	ldr	r3, [r3, #8]
 8006f7a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	691b      	ldr	r3, [r3, #16]
 8006f82:	00db      	lsls	r3, r3, #3
 8006f84:	490e      	ldr	r1, [pc, #56]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f86:	4313      	orrs	r3, r2
 8006f88:	608b      	str	r3, [r1, #8]
 8006f8a:	f000 f821 	bl	8006fd0 <HAL_RCC_GetSysClockFreq>
 8006f8e:	4602      	mov	r2, r0
 8006f90:	4b0b      	ldr	r3, [pc, #44]	@ (8006fc0 <HAL_RCC_ClockConfig+0x1bc>)
 8006f92:	689b      	ldr	r3, [r3, #8]
 8006f94:	091b      	lsrs	r3, r3, #4
 8006f96:	f003 030f 	and.w	r3, r3, #15
 8006f9a:	490a      	ldr	r1, [pc, #40]	@ (8006fc4 <HAL_RCC_ClockConfig+0x1c0>)
 8006f9c:	5ccb      	ldrb	r3, [r1, r3]
 8006f9e:	fa22 f303 	lsr.w	r3, r2, r3
 8006fa2:	4a09      	ldr	r2, [pc, #36]	@ (8006fc8 <HAL_RCC_ClockConfig+0x1c4>)
 8006fa4:	6013      	str	r3, [r2, #0]
 8006fa6:	4b09      	ldr	r3, [pc, #36]	@ (8006fcc <HAL_RCC_ClockConfig+0x1c8>)
 8006fa8:	681b      	ldr	r3, [r3, #0]
 8006faa:	4618      	mov	r0, r3
 8006fac:	f7fc fd06 	bl	80039bc <HAL_InitTick>
 8006fb0:	2300      	movs	r3, #0
 8006fb2:	4618      	mov	r0, r3
 8006fb4:	3710      	adds	r7, #16
 8006fb6:	46bd      	mov	sp, r7
 8006fb8:	bd80      	pop	{r7, pc}
 8006fba:	bf00      	nop
 8006fbc:	40023c00 	.word	0x40023c00
 8006fc0:	40023800 	.word	0x40023800
 8006fc4:	08015dd0 	.word	0x08015dd0
 8006fc8:	2000025c 	.word	0x2000025c
 8006fcc:	20000260 	.word	0x20000260

08006fd0 <HAL_RCC_GetSysClockFreq>:
 8006fd0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006fd4:	b094      	sub	sp, #80	@ 0x50
 8006fd6:	af00      	add	r7, sp, #0
 8006fd8:	2300      	movs	r3, #0
 8006fda:	647b      	str	r3, [r7, #68]	@ 0x44
 8006fdc:	2300      	movs	r3, #0
 8006fde:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006fe0:	2300      	movs	r3, #0
 8006fe2:	643b      	str	r3, [r7, #64]	@ 0x40
 8006fe4:	2300      	movs	r3, #0
 8006fe6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006fe8:	4b79      	ldr	r3, [pc, #484]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 8006fea:	689b      	ldr	r3, [r3, #8]
 8006fec:	f003 030c 	and.w	r3, r3, #12
 8006ff0:	2b08      	cmp	r3, #8
 8006ff2:	d00d      	beq.n	8007010 <HAL_RCC_GetSysClockFreq+0x40>
 8006ff4:	2b08      	cmp	r3, #8
 8006ff6:	f200 80e1 	bhi.w	80071bc <HAL_RCC_GetSysClockFreq+0x1ec>
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d002      	beq.n	8007004 <HAL_RCC_GetSysClockFreq+0x34>
 8006ffe:	2b04      	cmp	r3, #4
 8007000:	d003      	beq.n	800700a <HAL_RCC_GetSysClockFreq+0x3a>
 8007002:	e0db      	b.n	80071bc <HAL_RCC_GetSysClockFreq+0x1ec>
 8007004:	4b73      	ldr	r3, [pc, #460]	@ (80071d4 <HAL_RCC_GetSysClockFreq+0x204>)
 8007006:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007008:	e0db      	b.n	80071c2 <HAL_RCC_GetSysClockFreq+0x1f2>
 800700a:	4b73      	ldr	r3, [pc, #460]	@ (80071d8 <HAL_RCC_GetSysClockFreq+0x208>)
 800700c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800700e:	e0d8      	b.n	80071c2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8007010:	4b6f      	ldr	r3, [pc, #444]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 8007012:	685b      	ldr	r3, [r3, #4]
 8007014:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007018:	647b      	str	r3, [r7, #68]	@ 0x44
 800701a:	4b6d      	ldr	r3, [pc, #436]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 800701c:	685b      	ldr	r3, [r3, #4]
 800701e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007022:	2b00      	cmp	r3, #0
 8007024:	d063      	beq.n	80070ee <HAL_RCC_GetSysClockFreq+0x11e>
 8007026:	4b6a      	ldr	r3, [pc, #424]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 8007028:	685b      	ldr	r3, [r3, #4]
 800702a:	099b      	lsrs	r3, r3, #6
 800702c:	2200      	movs	r2, #0
 800702e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007030:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8007032:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007034:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007038:	633b      	str	r3, [r7, #48]	@ 0x30
 800703a:	2300      	movs	r3, #0
 800703c:	637b      	str	r3, [r7, #52]	@ 0x34
 800703e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8007042:	4622      	mov	r2, r4
 8007044:	462b      	mov	r3, r5
 8007046:	f04f 0000 	mov.w	r0, #0
 800704a:	f04f 0100 	mov.w	r1, #0
 800704e:	0159      	lsls	r1, r3, #5
 8007050:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007054:	0150      	lsls	r0, r2, #5
 8007056:	4602      	mov	r2, r0
 8007058:	460b      	mov	r3, r1
 800705a:	4621      	mov	r1, r4
 800705c:	1a51      	subs	r1, r2, r1
 800705e:	6139      	str	r1, [r7, #16]
 8007060:	4629      	mov	r1, r5
 8007062:	eb63 0301 	sbc.w	r3, r3, r1
 8007066:	617b      	str	r3, [r7, #20]
 8007068:	f04f 0200 	mov.w	r2, #0
 800706c:	f04f 0300 	mov.w	r3, #0
 8007070:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007074:	4659      	mov	r1, fp
 8007076:	018b      	lsls	r3, r1, #6
 8007078:	4651      	mov	r1, sl
 800707a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800707e:	4651      	mov	r1, sl
 8007080:	018a      	lsls	r2, r1, #6
 8007082:	4651      	mov	r1, sl
 8007084:	ebb2 0801 	subs.w	r8, r2, r1
 8007088:	4659      	mov	r1, fp
 800708a:	eb63 0901 	sbc.w	r9, r3, r1
 800708e:	f04f 0200 	mov.w	r2, #0
 8007092:	f04f 0300 	mov.w	r3, #0
 8007096:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800709a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800709e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80070a2:	4690      	mov	r8, r2
 80070a4:	4699      	mov	r9, r3
 80070a6:	4623      	mov	r3, r4
 80070a8:	eb18 0303 	adds.w	r3, r8, r3
 80070ac:	60bb      	str	r3, [r7, #8]
 80070ae:	462b      	mov	r3, r5
 80070b0:	eb49 0303 	adc.w	r3, r9, r3
 80070b4:	60fb      	str	r3, [r7, #12]
 80070b6:	f04f 0200 	mov.w	r2, #0
 80070ba:	f04f 0300 	mov.w	r3, #0
 80070be:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80070c2:	4629      	mov	r1, r5
 80070c4:	024b      	lsls	r3, r1, #9
 80070c6:	4621      	mov	r1, r4
 80070c8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80070cc:	4621      	mov	r1, r4
 80070ce:	024a      	lsls	r2, r1, #9
 80070d0:	4610      	mov	r0, r2
 80070d2:	4619      	mov	r1, r3
 80070d4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80070d6:	2200      	movs	r2, #0
 80070d8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80070da:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80070dc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80070e0:	f7f9 fdd2 	bl	8000c88 <__aeabi_uldivmod>
 80070e4:	4602      	mov	r2, r0
 80070e6:	460b      	mov	r3, r1
 80070e8:	4613      	mov	r3, r2
 80070ea:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80070ec:	e058      	b.n	80071a0 <HAL_RCC_GetSysClockFreq+0x1d0>
 80070ee:	4b38      	ldr	r3, [pc, #224]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 80070f0:	685b      	ldr	r3, [r3, #4]
 80070f2:	099b      	lsrs	r3, r3, #6
 80070f4:	2200      	movs	r2, #0
 80070f6:	4618      	mov	r0, r3
 80070f8:	4611      	mov	r1, r2
 80070fa:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80070fe:	623b      	str	r3, [r7, #32]
 8007100:	2300      	movs	r3, #0
 8007102:	627b      	str	r3, [r7, #36]	@ 0x24
 8007104:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8007108:	4642      	mov	r2, r8
 800710a:	464b      	mov	r3, r9
 800710c:	f04f 0000 	mov.w	r0, #0
 8007110:	f04f 0100 	mov.w	r1, #0
 8007114:	0159      	lsls	r1, r3, #5
 8007116:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800711a:	0150      	lsls	r0, r2, #5
 800711c:	4602      	mov	r2, r0
 800711e:	460b      	mov	r3, r1
 8007120:	4641      	mov	r1, r8
 8007122:	ebb2 0a01 	subs.w	sl, r2, r1
 8007126:	4649      	mov	r1, r9
 8007128:	eb63 0b01 	sbc.w	fp, r3, r1
 800712c:	f04f 0200 	mov.w	r2, #0
 8007130:	f04f 0300 	mov.w	r3, #0
 8007134:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8007138:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800713c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8007140:	ebb2 040a 	subs.w	r4, r2, sl
 8007144:	eb63 050b 	sbc.w	r5, r3, fp
 8007148:	f04f 0200 	mov.w	r2, #0
 800714c:	f04f 0300 	mov.w	r3, #0
 8007150:	00eb      	lsls	r3, r5, #3
 8007152:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007156:	00e2      	lsls	r2, r4, #3
 8007158:	4614      	mov	r4, r2
 800715a:	461d      	mov	r5, r3
 800715c:	4643      	mov	r3, r8
 800715e:	18e3      	adds	r3, r4, r3
 8007160:	603b      	str	r3, [r7, #0]
 8007162:	464b      	mov	r3, r9
 8007164:	eb45 0303 	adc.w	r3, r5, r3
 8007168:	607b      	str	r3, [r7, #4]
 800716a:	f04f 0200 	mov.w	r2, #0
 800716e:	f04f 0300 	mov.w	r3, #0
 8007172:	e9d7 4500 	ldrd	r4, r5, [r7]
 8007176:	4629      	mov	r1, r5
 8007178:	028b      	lsls	r3, r1, #10
 800717a:	4621      	mov	r1, r4
 800717c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007180:	4621      	mov	r1, r4
 8007182:	028a      	lsls	r2, r1, #10
 8007184:	4610      	mov	r0, r2
 8007186:	4619      	mov	r1, r3
 8007188:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800718a:	2200      	movs	r2, #0
 800718c:	61bb      	str	r3, [r7, #24]
 800718e:	61fa      	str	r2, [r7, #28]
 8007190:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007194:	f7f9 fd78 	bl	8000c88 <__aeabi_uldivmod>
 8007198:	4602      	mov	r2, r0
 800719a:	460b      	mov	r3, r1
 800719c:	4613      	mov	r3, r2
 800719e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80071a0:	4b0b      	ldr	r3, [pc, #44]	@ (80071d0 <HAL_RCC_GetSysClockFreq+0x200>)
 80071a2:	685b      	ldr	r3, [r3, #4]
 80071a4:	0c1b      	lsrs	r3, r3, #16
 80071a6:	f003 0303 	and.w	r3, r3, #3
 80071aa:	3301      	adds	r3, #1
 80071ac:	005b      	lsls	r3, r3, #1
 80071ae:	643b      	str	r3, [r7, #64]	@ 0x40
 80071b0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80071b2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80071b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80071b8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80071ba:	e002      	b.n	80071c2 <HAL_RCC_GetSysClockFreq+0x1f2>
 80071bc:	4b05      	ldr	r3, [pc, #20]	@ (80071d4 <HAL_RCC_GetSysClockFreq+0x204>)
 80071be:	64bb      	str	r3, [r7, #72]	@ 0x48
 80071c0:	bf00      	nop
 80071c2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80071c4:	4618      	mov	r0, r3
 80071c6:	3750      	adds	r7, #80	@ 0x50
 80071c8:	46bd      	mov	sp, r7
 80071ca:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80071ce:	bf00      	nop
 80071d0:	40023800 	.word	0x40023800
 80071d4:	00f42400 	.word	0x00f42400
 80071d8:	007a1200 	.word	0x007a1200

080071dc <HAL_RCC_GetHCLKFreq>:
 80071dc:	b480      	push	{r7}
 80071de:	af00      	add	r7, sp, #0
 80071e0:	4b03      	ldr	r3, [pc, #12]	@ (80071f0 <HAL_RCC_GetHCLKFreq+0x14>)
 80071e2:	681b      	ldr	r3, [r3, #0]
 80071e4:	4618      	mov	r0, r3
 80071e6:	46bd      	mov	sp, r7
 80071e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ec:	4770      	bx	lr
 80071ee:	bf00      	nop
 80071f0:	2000025c 	.word	0x2000025c

080071f4 <HAL_RCC_GetPCLK1Freq>:
 80071f4:	b580      	push	{r7, lr}
 80071f6:	af00      	add	r7, sp, #0
 80071f8:	f7ff fff0 	bl	80071dc <HAL_RCC_GetHCLKFreq>
 80071fc:	4602      	mov	r2, r0
 80071fe:	4b05      	ldr	r3, [pc, #20]	@ (8007214 <HAL_RCC_GetPCLK1Freq+0x20>)
 8007200:	689b      	ldr	r3, [r3, #8]
 8007202:	0a9b      	lsrs	r3, r3, #10
 8007204:	f003 0307 	and.w	r3, r3, #7
 8007208:	4903      	ldr	r1, [pc, #12]	@ (8007218 <HAL_RCC_GetPCLK1Freq+0x24>)
 800720a:	5ccb      	ldrb	r3, [r1, r3]
 800720c:	fa22 f303 	lsr.w	r3, r2, r3
 8007210:	4618      	mov	r0, r3
 8007212:	bd80      	pop	{r7, pc}
 8007214:	40023800 	.word	0x40023800
 8007218:	08015de0 	.word	0x08015de0

0800721c <HAL_RCC_GetPCLK2Freq>:
 800721c:	b580      	push	{r7, lr}
 800721e:	af00      	add	r7, sp, #0
 8007220:	f7ff ffdc 	bl	80071dc <HAL_RCC_GetHCLKFreq>
 8007224:	4602      	mov	r2, r0
 8007226:	4b05      	ldr	r3, [pc, #20]	@ (800723c <HAL_RCC_GetPCLK2Freq+0x20>)
 8007228:	689b      	ldr	r3, [r3, #8]
 800722a:	0b5b      	lsrs	r3, r3, #13
 800722c:	f003 0307 	and.w	r3, r3, #7
 8007230:	4903      	ldr	r1, [pc, #12]	@ (8007240 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007232:	5ccb      	ldrb	r3, [r1, r3]
 8007234:	fa22 f303 	lsr.w	r3, r2, r3
 8007238:	4618      	mov	r0, r3
 800723a:	bd80      	pop	{r7, pc}
 800723c:	40023800 	.word	0x40023800
 8007240:	08015de0 	.word	0x08015de0

08007244 <HAL_RCC_GetClockConfig>:
 8007244:	b480      	push	{r7}
 8007246:	b083      	sub	sp, #12
 8007248:	af00      	add	r7, sp, #0
 800724a:	6078      	str	r0, [r7, #4]
 800724c:	6039      	str	r1, [r7, #0]
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	220f      	movs	r2, #15
 8007252:	601a      	str	r2, [r3, #0]
 8007254:	4b12      	ldr	r3, [pc, #72]	@ (80072a0 <HAL_RCC_GetClockConfig+0x5c>)
 8007256:	689b      	ldr	r3, [r3, #8]
 8007258:	f003 0203 	and.w	r2, r3, #3
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	605a      	str	r2, [r3, #4]
 8007260:	4b0f      	ldr	r3, [pc, #60]	@ (80072a0 <HAL_RCC_GetClockConfig+0x5c>)
 8007262:	689b      	ldr	r3, [r3, #8]
 8007264:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	609a      	str	r2, [r3, #8]
 800726c:	4b0c      	ldr	r3, [pc, #48]	@ (80072a0 <HAL_RCC_GetClockConfig+0x5c>)
 800726e:	689b      	ldr	r3, [r3, #8]
 8007270:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	60da      	str	r2, [r3, #12]
 8007278:	4b09      	ldr	r3, [pc, #36]	@ (80072a0 <HAL_RCC_GetClockConfig+0x5c>)
 800727a:	689b      	ldr	r3, [r3, #8]
 800727c:	08db      	lsrs	r3, r3, #3
 800727e:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	611a      	str	r2, [r3, #16]
 8007286:	4b07      	ldr	r3, [pc, #28]	@ (80072a4 <HAL_RCC_GetClockConfig+0x60>)
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	f003 0207 	and.w	r2, r3, #7
 800728e:	683b      	ldr	r3, [r7, #0]
 8007290:	601a      	str	r2, [r3, #0]
 8007292:	bf00      	nop
 8007294:	370c      	adds	r7, #12
 8007296:	46bd      	mov	sp, r7
 8007298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800729c:	4770      	bx	lr
 800729e:	bf00      	nop
 80072a0:	40023800 	.word	0x40023800
 80072a4:	40023c00 	.word	0x40023c00

080072a8 <HAL_RCCEx_PeriphCLKConfig>:
 80072a8:	b580      	push	{r7, lr}
 80072aa:	b086      	sub	sp, #24
 80072ac:	af00      	add	r7, sp, #0
 80072ae:	6078      	str	r0, [r7, #4]
 80072b0:	2300      	movs	r3, #0
 80072b2:	617b      	str	r3, [r7, #20]
 80072b4:	2300      	movs	r3, #0
 80072b6:	613b      	str	r3, [r7, #16]
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	681b      	ldr	r3, [r3, #0]
 80072bc:	f003 0301 	and.w	r3, r3, #1
 80072c0:	2b00      	cmp	r3, #0
 80072c2:	d105      	bne.n	80072d0 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	f003 0304 	and.w	r3, r3, #4
 80072cc:	2b00      	cmp	r3, #0
 80072ce:	d035      	beq.n	800733c <HAL_RCCEx_PeriphCLKConfig+0x94>
 80072d0:	4b62      	ldr	r3, [pc, #392]	@ (800745c <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 80072d2:	2200      	movs	r2, #0
 80072d4:	601a      	str	r2, [r3, #0]
 80072d6:	f7fc fd7f 	bl	8003dd8 <HAL_GetTick>
 80072da:	6178      	str	r0, [r7, #20]
 80072dc:	e008      	b.n	80072f0 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80072de:	f7fc fd7b 	bl	8003dd8 <HAL_GetTick>
 80072e2:	4602      	mov	r2, r0
 80072e4:	697b      	ldr	r3, [r7, #20]
 80072e6:	1ad3      	subs	r3, r2, r3
 80072e8:	2b02      	cmp	r3, #2
 80072ea:	d901      	bls.n	80072f0 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80072ec:	2303      	movs	r3, #3
 80072ee:	e0b0      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80072f0:	4b5b      	ldr	r3, [pc, #364]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 80072f2:	681b      	ldr	r3, [r3, #0]
 80072f4:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80072f8:	2b00      	cmp	r3, #0
 80072fa:	d1f0      	bne.n	80072de <HAL_RCCEx_PeriphCLKConfig+0x36>
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	685b      	ldr	r3, [r3, #4]
 8007300:	019a      	lsls	r2, r3, #6
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	689b      	ldr	r3, [r3, #8]
 8007306:	071b      	lsls	r3, r3, #28
 8007308:	4955      	ldr	r1, [pc, #340]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 800730a:	4313      	orrs	r3, r2
 800730c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8007310:	4b52      	ldr	r3, [pc, #328]	@ (800745c <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8007312:	2201      	movs	r2, #1
 8007314:	601a      	str	r2, [r3, #0]
 8007316:	f7fc fd5f 	bl	8003dd8 <HAL_GetTick>
 800731a:	6178      	str	r0, [r7, #20]
 800731c:	e008      	b.n	8007330 <HAL_RCCEx_PeriphCLKConfig+0x88>
 800731e:	f7fc fd5b 	bl	8003dd8 <HAL_GetTick>
 8007322:	4602      	mov	r2, r0
 8007324:	697b      	ldr	r3, [r7, #20]
 8007326:	1ad3      	subs	r3, r2, r3
 8007328:	2b02      	cmp	r3, #2
 800732a:	d901      	bls.n	8007330 <HAL_RCCEx_PeriphCLKConfig+0x88>
 800732c:	2303      	movs	r3, #3
 800732e:	e090      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007330:	4b4b      	ldr	r3, [pc, #300]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007332:	681b      	ldr	r3, [r3, #0]
 8007334:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007338:	2b00      	cmp	r3, #0
 800733a:	d0f0      	beq.n	800731e <HAL_RCCEx_PeriphCLKConfig+0x76>
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	f003 0302 	and.w	r3, r3, #2
 8007344:	2b00      	cmp	r3, #0
 8007346:	f000 8083 	beq.w	8007450 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800734a:	2300      	movs	r3, #0
 800734c:	60fb      	str	r3, [r7, #12]
 800734e:	4b44      	ldr	r3, [pc, #272]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007350:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007352:	4a43      	ldr	r2, [pc, #268]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007354:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007358:	6413      	str	r3, [r2, #64]	@ 0x40
 800735a:	4b41      	ldr	r3, [pc, #260]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 800735c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800735e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007362:	60fb      	str	r3, [r7, #12]
 8007364:	68fb      	ldr	r3, [r7, #12]
 8007366:	4b3f      	ldr	r3, [pc, #252]	@ (8007464 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	4a3e      	ldr	r2, [pc, #248]	@ (8007464 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800736c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007370:	6013      	str	r3, [r2, #0]
 8007372:	f7fc fd31 	bl	8003dd8 <HAL_GetTick>
 8007376:	6178      	str	r0, [r7, #20]
 8007378:	e008      	b.n	800738c <HAL_RCCEx_PeriphCLKConfig+0xe4>
 800737a:	f7fc fd2d 	bl	8003dd8 <HAL_GetTick>
 800737e:	4602      	mov	r2, r0
 8007380:	697b      	ldr	r3, [r7, #20]
 8007382:	1ad3      	subs	r3, r2, r3
 8007384:	2b02      	cmp	r3, #2
 8007386:	d901      	bls.n	800738c <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8007388:	2303      	movs	r3, #3
 800738a:	e062      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 800738c:	4b35      	ldr	r3, [pc, #212]	@ (8007464 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800738e:	681b      	ldr	r3, [r3, #0]
 8007390:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007394:	2b00      	cmp	r3, #0
 8007396:	d0f0      	beq.n	800737a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8007398:	4b31      	ldr	r3, [pc, #196]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 800739a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800739c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80073a0:	613b      	str	r3, [r7, #16]
 80073a2:	693b      	ldr	r3, [r7, #16]
 80073a4:	2b00      	cmp	r3, #0
 80073a6:	d02f      	beq.n	8007408 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	68db      	ldr	r3, [r3, #12]
 80073ac:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80073b0:	693a      	ldr	r2, [r7, #16]
 80073b2:	429a      	cmp	r2, r3
 80073b4:	d028      	beq.n	8007408 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80073b6:	4b2a      	ldr	r3, [pc, #168]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 80073b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073ba:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80073be:	613b      	str	r3, [r7, #16]
 80073c0:	4b29      	ldr	r3, [pc, #164]	@ (8007468 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80073c2:	2201      	movs	r2, #1
 80073c4:	601a      	str	r2, [r3, #0]
 80073c6:	4b28      	ldr	r3, [pc, #160]	@ (8007468 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80073c8:	2200      	movs	r2, #0
 80073ca:	601a      	str	r2, [r3, #0]
 80073cc:	4a24      	ldr	r2, [pc, #144]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 80073ce:	693b      	ldr	r3, [r7, #16]
 80073d0:	6713      	str	r3, [r2, #112]	@ 0x70
 80073d2:	4b23      	ldr	r3, [pc, #140]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 80073d4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073d6:	f003 0301 	and.w	r3, r3, #1
 80073da:	2b01      	cmp	r3, #1
 80073dc:	d114      	bne.n	8007408 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80073de:	f7fc fcfb 	bl	8003dd8 <HAL_GetTick>
 80073e2:	6178      	str	r0, [r7, #20]
 80073e4:	e00a      	b.n	80073fc <HAL_RCCEx_PeriphCLKConfig+0x154>
 80073e6:	f7fc fcf7 	bl	8003dd8 <HAL_GetTick>
 80073ea:	4602      	mov	r2, r0
 80073ec:	697b      	ldr	r3, [r7, #20]
 80073ee:	1ad3      	subs	r3, r2, r3
 80073f0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80073f4:	4293      	cmp	r3, r2
 80073f6:	d901      	bls.n	80073fc <HAL_RCCEx_PeriphCLKConfig+0x154>
 80073f8:	2303      	movs	r3, #3
 80073fa:	e02a      	b.n	8007452 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80073fc:	4b18      	ldr	r3, [pc, #96]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 80073fe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007400:	f003 0302 	and.w	r3, r3, #2
 8007404:	2b00      	cmp	r3, #0
 8007406:	d0ee      	beq.n	80073e6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	68db      	ldr	r3, [r3, #12]
 800740c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007410:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007414:	d10d      	bne.n	8007432 <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8007416:	4b12      	ldr	r3, [pc, #72]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007418:	689b      	ldr	r3, [r3, #8]
 800741a:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	68db      	ldr	r3, [r3, #12]
 8007422:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8007426:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800742a:	490d      	ldr	r1, [pc, #52]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 800742c:	4313      	orrs	r3, r2
 800742e:	608b      	str	r3, [r1, #8]
 8007430:	e005      	b.n	800743e <HAL_RCCEx_PeriphCLKConfig+0x196>
 8007432:	4b0b      	ldr	r3, [pc, #44]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007434:	689b      	ldr	r3, [r3, #8]
 8007436:	4a0a      	ldr	r2, [pc, #40]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007438:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 800743c:	6093      	str	r3, [r2, #8]
 800743e:	4b08      	ldr	r3, [pc, #32]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8007440:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	68db      	ldr	r3, [r3, #12]
 8007446:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800744a:	4905      	ldr	r1, [pc, #20]	@ (8007460 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 800744c:	4313      	orrs	r3, r2
 800744e:	670b      	str	r3, [r1, #112]	@ 0x70
 8007450:	2300      	movs	r3, #0
 8007452:	4618      	mov	r0, r3
 8007454:	3718      	adds	r7, #24
 8007456:	46bd      	mov	sp, r7
 8007458:	bd80      	pop	{r7, pc}
 800745a:	bf00      	nop
 800745c:	42470068 	.word	0x42470068
 8007460:	40023800 	.word	0x40023800
 8007464:	40007000 	.word	0x40007000
 8007468:	42470e40 	.word	0x42470e40

0800746c <HAL_RCCEx_GetPeriphCLKFreq>:
 800746c:	b480      	push	{r7}
 800746e:	b087      	sub	sp, #28
 8007470:	af00      	add	r7, sp, #0
 8007472:	6078      	str	r0, [r7, #4]
 8007474:	2300      	movs	r3, #0
 8007476:	617b      	str	r3, [r7, #20]
 8007478:	2300      	movs	r3, #0
 800747a:	613b      	str	r3, [r7, #16]
 800747c:	2300      	movs	r3, #0
 800747e:	60fb      	str	r3, [r7, #12]
 8007480:	2300      	movs	r3, #0
 8007482:	60bb      	str	r3, [r7, #8]
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	2b01      	cmp	r3, #1
 8007488:	d13e      	bne.n	8007508 <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
 800748a:	4b23      	ldr	r3, [pc, #140]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 800748c:	689b      	ldr	r3, [r3, #8]
 800748e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007492:	60fb      	str	r3, [r7, #12]
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	2b00      	cmp	r3, #0
 8007498:	d005      	beq.n	80074a6 <HAL_RCCEx_GetPeriphCLKFreq+0x3a>
 800749a:	68fb      	ldr	r3, [r7, #12]
 800749c:	2b01      	cmp	r3, #1
 800749e:	d12f      	bne.n	8007500 <HAL_RCCEx_GetPeriphCLKFreq+0x94>
 80074a0:	4b1e      	ldr	r3, [pc, #120]	@ (800751c <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 80074a2:	617b      	str	r3, [r7, #20]
 80074a4:	e02f      	b.n	8007506 <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80074a6:	4b1c      	ldr	r3, [pc, #112]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80074a8:	685b      	ldr	r3, [r3, #4]
 80074aa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80074ae:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80074b2:	d108      	bne.n	80074c6 <HAL_RCCEx_GetPeriphCLKFreq+0x5a>
 80074b4:	4b18      	ldr	r3, [pc, #96]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80074b6:	685b      	ldr	r3, [r3, #4]
 80074b8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80074bc:	4a18      	ldr	r2, [pc, #96]	@ (8007520 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>)
 80074be:	fbb2 f3f3 	udiv	r3, r2, r3
 80074c2:	613b      	str	r3, [r7, #16]
 80074c4:	e007      	b.n	80074d6 <HAL_RCCEx_GetPeriphCLKFreq+0x6a>
 80074c6:	4b14      	ldr	r3, [pc, #80]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80074c8:	685b      	ldr	r3, [r3, #4]
 80074ca:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80074ce:	4a15      	ldr	r2, [pc, #84]	@ (8007524 <HAL_RCCEx_GetPeriphCLKFreq+0xb8>)
 80074d0:	fbb2 f3f3 	udiv	r3, r2, r3
 80074d4:	613b      	str	r3, [r7, #16]
 80074d6:	4b10      	ldr	r3, [pc, #64]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80074d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80074dc:	099b      	lsrs	r3, r3, #6
 80074de:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80074e2:	693b      	ldr	r3, [r7, #16]
 80074e4:	fb02 f303 	mul.w	r3, r2, r3
 80074e8:	60bb      	str	r3, [r7, #8]
 80074ea:	4b0b      	ldr	r3, [pc, #44]	@ (8007518 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 80074ec:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80074f0:	0f1b      	lsrs	r3, r3, #28
 80074f2:	f003 0307 	and.w	r3, r3, #7
 80074f6:	68ba      	ldr	r2, [r7, #8]
 80074f8:	fbb2 f3f3 	udiv	r3, r2, r3
 80074fc:	617b      	str	r3, [r7, #20]
 80074fe:	e002      	b.n	8007506 <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8007500:	2300      	movs	r3, #0
 8007502:	617b      	str	r3, [r7, #20]
 8007504:	bf00      	nop
 8007506:	bf00      	nop
 8007508:	697b      	ldr	r3, [r7, #20]
 800750a:	4618      	mov	r0, r3
 800750c:	371c      	adds	r7, #28
 800750e:	46bd      	mov	sp, r7
 8007510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007514:	4770      	bx	lr
 8007516:	bf00      	nop
 8007518:	40023800 	.word	0x40023800
 800751c:	00bb8000 	.word	0x00bb8000
 8007520:	007a1200 	.word	0x007a1200
 8007524:	00f42400 	.word	0x00f42400

08007528 <HAL_SPI_Init>:
 8007528:	b580      	push	{r7, lr}
 800752a:	b082      	sub	sp, #8
 800752c:	af00      	add	r7, sp, #0
 800752e:	6078      	str	r0, [r7, #4]
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	2b00      	cmp	r3, #0
 8007534:	d101      	bne.n	800753a <HAL_SPI_Init+0x12>
 8007536:	2301      	movs	r3, #1
 8007538:	e07b      	b.n	8007632 <HAL_SPI_Init+0x10a>
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800753e:	2b00      	cmp	r3, #0
 8007540:	d108      	bne.n	8007554 <HAL_SPI_Init+0x2c>
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	685b      	ldr	r3, [r3, #4]
 8007546:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800754a:	d009      	beq.n	8007560 <HAL_SPI_Init+0x38>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	2200      	movs	r2, #0
 8007550:	61da      	str	r2, [r3, #28]
 8007552:	e005      	b.n	8007560 <HAL_SPI_Init+0x38>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	2200      	movs	r2, #0
 8007558:	611a      	str	r2, [r3, #16]
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	2200      	movs	r2, #0
 800755e:	615a      	str	r2, [r3, #20]
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	2200      	movs	r2, #0
 8007564:	629a      	str	r2, [r3, #40]	@ 0x28
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800756c:	b2db      	uxtb	r3, r3
 800756e:	2b00      	cmp	r3, #0
 8007570:	d106      	bne.n	8007580 <HAL_SPI_Init+0x58>
 8007572:	687b      	ldr	r3, [r7, #4]
 8007574:	2200      	movs	r2, #0
 8007576:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800757a:	6878      	ldr	r0, [r7, #4]
 800757c:	f7fc f94a 	bl	8003814 <HAL_SPI_MspInit>
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	2202      	movs	r2, #2
 8007584:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	681b      	ldr	r3, [r3, #0]
 800758c:	681a      	ldr	r2, [r3, #0]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007596:	601a      	str	r2, [r3, #0]
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	685b      	ldr	r3, [r3, #4]
 800759c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	689b      	ldr	r3, [r3, #8]
 80075a4:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80075a8:	431a      	orrs	r2, r3
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	68db      	ldr	r3, [r3, #12]
 80075ae:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80075b2:	431a      	orrs	r2, r3
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	691b      	ldr	r3, [r3, #16]
 80075b8:	f003 0302 	and.w	r3, r3, #2
 80075bc:	431a      	orrs	r2, r3
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	695b      	ldr	r3, [r3, #20]
 80075c2:	f003 0301 	and.w	r3, r3, #1
 80075c6:	431a      	orrs	r2, r3
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	699b      	ldr	r3, [r3, #24]
 80075cc:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80075d0:	431a      	orrs	r2, r3
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	69db      	ldr	r3, [r3, #28]
 80075d6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80075da:	431a      	orrs	r2, r3
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	6a1b      	ldr	r3, [r3, #32]
 80075e0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80075e4:	ea42 0103 	orr.w	r1, r2, r3
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80075ec:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	430a      	orrs	r2, r1
 80075f6:	601a      	str	r2, [r3, #0]
 80075f8:	687b      	ldr	r3, [r7, #4]
 80075fa:	699b      	ldr	r3, [r3, #24]
 80075fc:	0c1b      	lsrs	r3, r3, #16
 80075fe:	f003 0104 	and.w	r1, r3, #4
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007606:	f003 0210 	and.w	r2, r3, #16
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	430a      	orrs	r2, r1
 8007610:	605a      	str	r2, [r3, #4]
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	69da      	ldr	r2, [r3, #28]
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007620:	61da      	str	r2, [r3, #28]
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	2200      	movs	r2, #0
 8007626:	655a      	str	r2, [r3, #84]	@ 0x54
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	2201      	movs	r2, #1
 800762c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007630:	2300      	movs	r3, #0
 8007632:	4618      	mov	r0, r3
 8007634:	3708      	adds	r7, #8
 8007636:	46bd      	mov	sp, r7
 8007638:	bd80      	pop	{r7, pc}

0800763a <HAL_TIM_Base_Init>:
 800763a:	b580      	push	{r7, lr}
 800763c:	b082      	sub	sp, #8
 800763e:	af00      	add	r7, sp, #0
 8007640:	6078      	str	r0, [r7, #4]
 8007642:	687b      	ldr	r3, [r7, #4]
 8007644:	2b00      	cmp	r3, #0
 8007646:	d101      	bne.n	800764c <HAL_TIM_Base_Init+0x12>
 8007648:	2301      	movs	r3, #1
 800764a:	e041      	b.n	80076d0 <HAL_TIM_Base_Init+0x96>
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007652:	b2db      	uxtb	r3, r3
 8007654:	2b00      	cmp	r3, #0
 8007656:	d106      	bne.n	8007666 <HAL_TIM_Base_Init+0x2c>
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	2200      	movs	r2, #0
 800765c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007660:	6878      	ldr	r0, [r7, #4]
 8007662:	f000 f839 	bl	80076d8 <HAL_TIM_Base_MspInit>
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	2202      	movs	r2, #2
 800766a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681a      	ldr	r2, [r3, #0]
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	3304      	adds	r3, #4
 8007676:	4619      	mov	r1, r3
 8007678:	4610      	mov	r0, r2
 800767a:	f000 f9d7 	bl	8007a2c <TIM_Base_SetConfig>
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	2201      	movs	r2, #1
 8007682:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	2201      	movs	r2, #1
 800768a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	2201      	movs	r2, #1
 8007692:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	2201      	movs	r2, #1
 800769a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	2201      	movs	r2, #1
 80076a2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	2201      	movs	r2, #1
 80076aa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	2201      	movs	r2, #1
 80076b2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	2201      	movs	r2, #1
 80076ba:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	2201      	movs	r2, #1
 80076c2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	2201      	movs	r2, #1
 80076ca:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80076ce:	2300      	movs	r3, #0
 80076d0:	4618      	mov	r0, r3
 80076d2:	3708      	adds	r7, #8
 80076d4:	46bd      	mov	sp, r7
 80076d6:	bd80      	pop	{r7, pc}

080076d8 <HAL_TIM_Base_MspInit>:
 80076d8:	b480      	push	{r7}
 80076da:	b083      	sub	sp, #12
 80076dc:	af00      	add	r7, sp, #0
 80076de:	6078      	str	r0, [r7, #4]
 80076e0:	bf00      	nop
 80076e2:	370c      	adds	r7, #12
 80076e4:	46bd      	mov	sp, r7
 80076e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076ea:	4770      	bx	lr

080076ec <HAL_TIM_Base_Start_IT>:
 80076ec:	b480      	push	{r7}
 80076ee:	b085      	sub	sp, #20
 80076f0:	af00      	add	r7, sp, #0
 80076f2:	6078      	str	r0, [r7, #4]
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80076fa:	b2db      	uxtb	r3, r3
 80076fc:	2b01      	cmp	r3, #1
 80076fe:	d001      	beq.n	8007704 <HAL_TIM_Base_Start_IT+0x18>
 8007700:	2301      	movs	r3, #1
 8007702:	e04e      	b.n	80077a2 <HAL_TIM_Base_Start_IT+0xb6>
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	2202      	movs	r2, #2
 8007708:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	68da      	ldr	r2, [r3, #12]
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	681b      	ldr	r3, [r3, #0]
 8007716:	f042 0201 	orr.w	r2, r2, #1
 800771a:	60da      	str	r2, [r3, #12]
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	681b      	ldr	r3, [r3, #0]
 8007720:	4a23      	ldr	r2, [pc, #140]	@ (80077b0 <HAL_TIM_Base_Start_IT+0xc4>)
 8007722:	4293      	cmp	r3, r2
 8007724:	d022      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	681b      	ldr	r3, [r3, #0]
 800772a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800772e:	d01d      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	4a1f      	ldr	r2, [pc, #124]	@ (80077b4 <HAL_TIM_Base_Start_IT+0xc8>)
 8007736:	4293      	cmp	r3, r2
 8007738:	d018      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	4a1e      	ldr	r2, [pc, #120]	@ (80077b8 <HAL_TIM_Base_Start_IT+0xcc>)
 8007740:	4293      	cmp	r3, r2
 8007742:	d013      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	681b      	ldr	r3, [r3, #0]
 8007748:	4a1c      	ldr	r2, [pc, #112]	@ (80077bc <HAL_TIM_Base_Start_IT+0xd0>)
 800774a:	4293      	cmp	r3, r2
 800774c:	d00e      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	681b      	ldr	r3, [r3, #0]
 8007752:	4a1b      	ldr	r2, [pc, #108]	@ (80077c0 <HAL_TIM_Base_Start_IT+0xd4>)
 8007754:	4293      	cmp	r3, r2
 8007756:	d009      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	4a19      	ldr	r2, [pc, #100]	@ (80077c4 <HAL_TIM_Base_Start_IT+0xd8>)
 800775e:	4293      	cmp	r3, r2
 8007760:	d004      	beq.n	800776c <HAL_TIM_Base_Start_IT+0x80>
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	681b      	ldr	r3, [r3, #0]
 8007766:	4a18      	ldr	r2, [pc, #96]	@ (80077c8 <HAL_TIM_Base_Start_IT+0xdc>)
 8007768:	4293      	cmp	r3, r2
 800776a:	d111      	bne.n	8007790 <HAL_TIM_Base_Start_IT+0xa4>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	681b      	ldr	r3, [r3, #0]
 8007770:	689b      	ldr	r3, [r3, #8]
 8007772:	f003 0307 	and.w	r3, r3, #7
 8007776:	60fb      	str	r3, [r7, #12]
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	2b06      	cmp	r3, #6
 800777c:	d010      	beq.n	80077a0 <HAL_TIM_Base_Start_IT+0xb4>
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	681a      	ldr	r2, [r3, #0]
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	681b      	ldr	r3, [r3, #0]
 8007788:	f042 0201 	orr.w	r2, r2, #1
 800778c:	601a      	str	r2, [r3, #0]
 800778e:	e007      	b.n	80077a0 <HAL_TIM_Base_Start_IT+0xb4>
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	681a      	ldr	r2, [r3, #0]
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	f042 0201 	orr.w	r2, r2, #1
 800779e:	601a      	str	r2, [r3, #0]
 80077a0:	2300      	movs	r3, #0
 80077a2:	4618      	mov	r0, r3
 80077a4:	3714      	adds	r7, #20
 80077a6:	46bd      	mov	sp, r7
 80077a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ac:	4770      	bx	lr
 80077ae:	bf00      	nop
 80077b0:	40010000 	.word	0x40010000
 80077b4:	40000400 	.word	0x40000400
 80077b8:	40000800 	.word	0x40000800
 80077bc:	40000c00 	.word	0x40000c00
 80077c0:	40010400 	.word	0x40010400
 80077c4:	40014000 	.word	0x40014000
 80077c8:	40001800 	.word	0x40001800

080077cc <HAL_TIM_IRQHandler>:
 80077cc:	b580      	push	{r7, lr}
 80077ce:	b082      	sub	sp, #8
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	6078      	str	r0, [r7, #4]
 80077d4:	687b      	ldr	r3, [r7, #4]
 80077d6:	681b      	ldr	r3, [r3, #0]
 80077d8:	691b      	ldr	r3, [r3, #16]
 80077da:	f003 0302 	and.w	r3, r3, #2
 80077de:	2b02      	cmp	r3, #2
 80077e0:	d122      	bne.n	8007828 <HAL_TIM_IRQHandler+0x5c>
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	68db      	ldr	r3, [r3, #12]
 80077e8:	f003 0302 	and.w	r3, r3, #2
 80077ec:	2b02      	cmp	r3, #2
 80077ee:	d11b      	bne.n	8007828 <HAL_TIM_IRQHandler+0x5c>
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	f06f 0202 	mvn.w	r2, #2
 80077f8:	611a      	str	r2, [r3, #16]
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	2201      	movs	r2, #1
 80077fe:	771a      	strb	r2, [r3, #28]
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	699b      	ldr	r3, [r3, #24]
 8007806:	f003 0303 	and.w	r3, r3, #3
 800780a:	2b00      	cmp	r3, #0
 800780c:	d003      	beq.n	8007816 <HAL_TIM_IRQHandler+0x4a>
 800780e:	6878      	ldr	r0, [r7, #4]
 8007810:	f000 f8ee 	bl	80079f0 <HAL_TIM_IC_CaptureCallback>
 8007814:	e005      	b.n	8007822 <HAL_TIM_IRQHandler+0x56>
 8007816:	6878      	ldr	r0, [r7, #4]
 8007818:	f000 f8e0 	bl	80079dc <HAL_TIM_OC_DelayElapsedCallback>
 800781c:	6878      	ldr	r0, [r7, #4]
 800781e:	f000 f8f1 	bl	8007a04 <HAL_TIM_PWM_PulseFinishedCallback>
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	2200      	movs	r2, #0
 8007826:	771a      	strb	r2, [r3, #28]
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	681b      	ldr	r3, [r3, #0]
 800782c:	691b      	ldr	r3, [r3, #16]
 800782e:	f003 0304 	and.w	r3, r3, #4
 8007832:	2b04      	cmp	r3, #4
 8007834:	d122      	bne.n	800787c <HAL_TIM_IRQHandler+0xb0>
 8007836:	687b      	ldr	r3, [r7, #4]
 8007838:	681b      	ldr	r3, [r3, #0]
 800783a:	68db      	ldr	r3, [r3, #12]
 800783c:	f003 0304 	and.w	r3, r3, #4
 8007840:	2b04      	cmp	r3, #4
 8007842:	d11b      	bne.n	800787c <HAL_TIM_IRQHandler+0xb0>
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	f06f 0204 	mvn.w	r2, #4
 800784c:	611a      	str	r2, [r3, #16]
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	2202      	movs	r2, #2
 8007852:	771a      	strb	r2, [r3, #28]
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	681b      	ldr	r3, [r3, #0]
 8007858:	699b      	ldr	r3, [r3, #24]
 800785a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800785e:	2b00      	cmp	r3, #0
 8007860:	d003      	beq.n	800786a <HAL_TIM_IRQHandler+0x9e>
 8007862:	6878      	ldr	r0, [r7, #4]
 8007864:	f000 f8c4 	bl	80079f0 <HAL_TIM_IC_CaptureCallback>
 8007868:	e005      	b.n	8007876 <HAL_TIM_IRQHandler+0xaa>
 800786a:	6878      	ldr	r0, [r7, #4]
 800786c:	f000 f8b6 	bl	80079dc <HAL_TIM_OC_DelayElapsedCallback>
 8007870:	6878      	ldr	r0, [r7, #4]
 8007872:	f000 f8c7 	bl	8007a04 <HAL_TIM_PWM_PulseFinishedCallback>
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	2200      	movs	r2, #0
 800787a:	771a      	strb	r2, [r3, #28]
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	691b      	ldr	r3, [r3, #16]
 8007882:	f003 0308 	and.w	r3, r3, #8
 8007886:	2b08      	cmp	r3, #8
 8007888:	d122      	bne.n	80078d0 <HAL_TIM_IRQHandler+0x104>
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	681b      	ldr	r3, [r3, #0]
 800788e:	68db      	ldr	r3, [r3, #12]
 8007890:	f003 0308 	and.w	r3, r3, #8
 8007894:	2b08      	cmp	r3, #8
 8007896:	d11b      	bne.n	80078d0 <HAL_TIM_IRQHandler+0x104>
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	f06f 0208 	mvn.w	r2, #8
 80078a0:	611a      	str	r2, [r3, #16]
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	2204      	movs	r2, #4
 80078a6:	771a      	strb	r2, [r3, #28]
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	69db      	ldr	r3, [r3, #28]
 80078ae:	f003 0303 	and.w	r3, r3, #3
 80078b2:	2b00      	cmp	r3, #0
 80078b4:	d003      	beq.n	80078be <HAL_TIM_IRQHandler+0xf2>
 80078b6:	6878      	ldr	r0, [r7, #4]
 80078b8:	f000 f89a 	bl	80079f0 <HAL_TIM_IC_CaptureCallback>
 80078bc:	e005      	b.n	80078ca <HAL_TIM_IRQHandler+0xfe>
 80078be:	6878      	ldr	r0, [r7, #4]
 80078c0:	f000 f88c 	bl	80079dc <HAL_TIM_OC_DelayElapsedCallback>
 80078c4:	6878      	ldr	r0, [r7, #4]
 80078c6:	f000 f89d 	bl	8007a04 <HAL_TIM_PWM_PulseFinishedCallback>
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	2200      	movs	r2, #0
 80078ce:	771a      	strb	r2, [r3, #28]
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	691b      	ldr	r3, [r3, #16]
 80078d6:	f003 0310 	and.w	r3, r3, #16
 80078da:	2b10      	cmp	r3, #16
 80078dc:	d122      	bne.n	8007924 <HAL_TIM_IRQHandler+0x158>
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	68db      	ldr	r3, [r3, #12]
 80078e4:	f003 0310 	and.w	r3, r3, #16
 80078e8:	2b10      	cmp	r3, #16
 80078ea:	d11b      	bne.n	8007924 <HAL_TIM_IRQHandler+0x158>
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	f06f 0210 	mvn.w	r2, #16
 80078f4:	611a      	str	r2, [r3, #16]
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	2208      	movs	r2, #8
 80078fa:	771a      	strb	r2, [r3, #28]
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	681b      	ldr	r3, [r3, #0]
 8007900:	69db      	ldr	r3, [r3, #28]
 8007902:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007906:	2b00      	cmp	r3, #0
 8007908:	d003      	beq.n	8007912 <HAL_TIM_IRQHandler+0x146>
 800790a:	6878      	ldr	r0, [r7, #4]
 800790c:	f000 f870 	bl	80079f0 <HAL_TIM_IC_CaptureCallback>
 8007910:	e005      	b.n	800791e <HAL_TIM_IRQHandler+0x152>
 8007912:	6878      	ldr	r0, [r7, #4]
 8007914:	f000 f862 	bl	80079dc <HAL_TIM_OC_DelayElapsedCallback>
 8007918:	6878      	ldr	r0, [r7, #4]
 800791a:	f000 f873 	bl	8007a04 <HAL_TIM_PWM_PulseFinishedCallback>
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	2200      	movs	r2, #0
 8007922:	771a      	strb	r2, [r3, #28]
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	681b      	ldr	r3, [r3, #0]
 8007928:	691b      	ldr	r3, [r3, #16]
 800792a:	f003 0301 	and.w	r3, r3, #1
 800792e:	2b01      	cmp	r3, #1
 8007930:	d10e      	bne.n	8007950 <HAL_TIM_IRQHandler+0x184>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	68db      	ldr	r3, [r3, #12]
 8007938:	f003 0301 	and.w	r3, r3, #1
 800793c:	2b01      	cmp	r3, #1
 800793e:	d107      	bne.n	8007950 <HAL_TIM_IRQHandler+0x184>
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	f06f 0201 	mvn.w	r2, #1
 8007948:	611a      	str	r2, [r3, #16]
 800794a:	6878      	ldr	r0, [r7, #4]
 800794c:	f7fb fe56 	bl	80035fc <HAL_TIM_PeriodElapsedCallback>
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	681b      	ldr	r3, [r3, #0]
 8007954:	691b      	ldr	r3, [r3, #16]
 8007956:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800795a:	2b80      	cmp	r3, #128	@ 0x80
 800795c:	d10e      	bne.n	800797c <HAL_TIM_IRQHandler+0x1b0>
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	68db      	ldr	r3, [r3, #12]
 8007964:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007968:	2b80      	cmp	r3, #128	@ 0x80
 800796a:	d107      	bne.n	800797c <HAL_TIM_IRQHandler+0x1b0>
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007974:	611a      	str	r2, [r3, #16]
 8007976:	6878      	ldr	r0, [r7, #4]
 8007978:	f000 f902 	bl	8007b80 <HAL_TIMEx_BreakCallback>
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	691b      	ldr	r3, [r3, #16]
 8007982:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007986:	2b40      	cmp	r3, #64	@ 0x40
 8007988:	d10e      	bne.n	80079a8 <HAL_TIM_IRQHandler+0x1dc>
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	68db      	ldr	r3, [r3, #12]
 8007990:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007994:	2b40      	cmp	r3, #64	@ 0x40
 8007996:	d107      	bne.n	80079a8 <HAL_TIM_IRQHandler+0x1dc>
 8007998:	687b      	ldr	r3, [r7, #4]
 800799a:	681b      	ldr	r3, [r3, #0]
 800799c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80079a0:	611a      	str	r2, [r3, #16]
 80079a2:	6878      	ldr	r0, [r7, #4]
 80079a4:	f000 f838 	bl	8007a18 <HAL_TIM_TriggerCallback>
 80079a8:	687b      	ldr	r3, [r7, #4]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	691b      	ldr	r3, [r3, #16]
 80079ae:	f003 0320 	and.w	r3, r3, #32
 80079b2:	2b20      	cmp	r3, #32
 80079b4:	d10e      	bne.n	80079d4 <HAL_TIM_IRQHandler+0x208>
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	68db      	ldr	r3, [r3, #12]
 80079bc:	f003 0320 	and.w	r3, r3, #32
 80079c0:	2b20      	cmp	r3, #32
 80079c2:	d107      	bne.n	80079d4 <HAL_TIM_IRQHandler+0x208>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	f06f 0220 	mvn.w	r2, #32
 80079cc:	611a      	str	r2, [r3, #16]
 80079ce:	6878      	ldr	r0, [r7, #4]
 80079d0:	f000 f8cc 	bl	8007b6c <HAL_TIMEx_CommutCallback>
 80079d4:	bf00      	nop
 80079d6:	3708      	adds	r7, #8
 80079d8:	46bd      	mov	sp, r7
 80079da:	bd80      	pop	{r7, pc}

080079dc <HAL_TIM_OC_DelayElapsedCallback>:
 80079dc:	b480      	push	{r7}
 80079de:	b083      	sub	sp, #12
 80079e0:	af00      	add	r7, sp, #0
 80079e2:	6078      	str	r0, [r7, #4]
 80079e4:	bf00      	nop
 80079e6:	370c      	adds	r7, #12
 80079e8:	46bd      	mov	sp, r7
 80079ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ee:	4770      	bx	lr

080079f0 <HAL_TIM_IC_CaptureCallback>:
 80079f0:	b480      	push	{r7}
 80079f2:	b083      	sub	sp, #12
 80079f4:	af00      	add	r7, sp, #0
 80079f6:	6078      	str	r0, [r7, #4]
 80079f8:	bf00      	nop
 80079fa:	370c      	adds	r7, #12
 80079fc:	46bd      	mov	sp, r7
 80079fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a02:	4770      	bx	lr

08007a04 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007a04:	b480      	push	{r7}
 8007a06:	b083      	sub	sp, #12
 8007a08:	af00      	add	r7, sp, #0
 8007a0a:	6078      	str	r0, [r7, #4]
 8007a0c:	bf00      	nop
 8007a0e:	370c      	adds	r7, #12
 8007a10:	46bd      	mov	sp, r7
 8007a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a16:	4770      	bx	lr

08007a18 <HAL_TIM_TriggerCallback>:
 8007a18:	b480      	push	{r7}
 8007a1a:	b083      	sub	sp, #12
 8007a1c:	af00      	add	r7, sp, #0
 8007a1e:	6078      	str	r0, [r7, #4]
 8007a20:	bf00      	nop
 8007a22:	370c      	adds	r7, #12
 8007a24:	46bd      	mov	sp, r7
 8007a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a2a:	4770      	bx	lr

08007a2c <TIM_Base_SetConfig>:
 8007a2c:	b480      	push	{r7}
 8007a2e:	b085      	sub	sp, #20
 8007a30:	af00      	add	r7, sp, #0
 8007a32:	6078      	str	r0, [r7, #4]
 8007a34:	6039      	str	r1, [r7, #0]
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	60fb      	str	r3, [r7, #12]
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	4a40      	ldr	r2, [pc, #256]	@ (8007b40 <TIM_Base_SetConfig+0x114>)
 8007a40:	4293      	cmp	r3, r2
 8007a42:	d013      	beq.n	8007a6c <TIM_Base_SetConfig+0x40>
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a4a:	d00f      	beq.n	8007a6c <TIM_Base_SetConfig+0x40>
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	4a3d      	ldr	r2, [pc, #244]	@ (8007b44 <TIM_Base_SetConfig+0x118>)
 8007a50:	4293      	cmp	r3, r2
 8007a52:	d00b      	beq.n	8007a6c <TIM_Base_SetConfig+0x40>
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	4a3c      	ldr	r2, [pc, #240]	@ (8007b48 <TIM_Base_SetConfig+0x11c>)
 8007a58:	4293      	cmp	r3, r2
 8007a5a:	d007      	beq.n	8007a6c <TIM_Base_SetConfig+0x40>
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	4a3b      	ldr	r2, [pc, #236]	@ (8007b4c <TIM_Base_SetConfig+0x120>)
 8007a60:	4293      	cmp	r3, r2
 8007a62:	d003      	beq.n	8007a6c <TIM_Base_SetConfig+0x40>
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	4a3a      	ldr	r2, [pc, #232]	@ (8007b50 <TIM_Base_SetConfig+0x124>)
 8007a68:	4293      	cmp	r3, r2
 8007a6a:	d108      	bne.n	8007a7e <TIM_Base_SetConfig+0x52>
 8007a6c:	68fb      	ldr	r3, [r7, #12]
 8007a6e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a72:	60fb      	str	r3, [r7, #12]
 8007a74:	683b      	ldr	r3, [r7, #0]
 8007a76:	685b      	ldr	r3, [r3, #4]
 8007a78:	68fa      	ldr	r2, [r7, #12]
 8007a7a:	4313      	orrs	r3, r2
 8007a7c:	60fb      	str	r3, [r7, #12]
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	4a2f      	ldr	r2, [pc, #188]	@ (8007b40 <TIM_Base_SetConfig+0x114>)
 8007a82:	4293      	cmp	r3, r2
 8007a84:	d02b      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a8c:	d027      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	4a2c      	ldr	r2, [pc, #176]	@ (8007b44 <TIM_Base_SetConfig+0x118>)
 8007a92:	4293      	cmp	r3, r2
 8007a94:	d023      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	4a2b      	ldr	r2, [pc, #172]	@ (8007b48 <TIM_Base_SetConfig+0x11c>)
 8007a9a:	4293      	cmp	r3, r2
 8007a9c:	d01f      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007a9e:	687b      	ldr	r3, [r7, #4]
 8007aa0:	4a2a      	ldr	r2, [pc, #168]	@ (8007b4c <TIM_Base_SetConfig+0x120>)
 8007aa2:	4293      	cmp	r3, r2
 8007aa4:	d01b      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	4a29      	ldr	r2, [pc, #164]	@ (8007b50 <TIM_Base_SetConfig+0x124>)
 8007aaa:	4293      	cmp	r3, r2
 8007aac:	d017      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	4a28      	ldr	r2, [pc, #160]	@ (8007b54 <TIM_Base_SetConfig+0x128>)
 8007ab2:	4293      	cmp	r3, r2
 8007ab4:	d013      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	4a27      	ldr	r2, [pc, #156]	@ (8007b58 <TIM_Base_SetConfig+0x12c>)
 8007aba:	4293      	cmp	r3, r2
 8007abc:	d00f      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007abe:	687b      	ldr	r3, [r7, #4]
 8007ac0:	4a26      	ldr	r2, [pc, #152]	@ (8007b5c <TIM_Base_SetConfig+0x130>)
 8007ac2:	4293      	cmp	r3, r2
 8007ac4:	d00b      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	4a25      	ldr	r2, [pc, #148]	@ (8007b60 <TIM_Base_SetConfig+0x134>)
 8007aca:	4293      	cmp	r3, r2
 8007acc:	d007      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	4a24      	ldr	r2, [pc, #144]	@ (8007b64 <TIM_Base_SetConfig+0x138>)
 8007ad2:	4293      	cmp	r3, r2
 8007ad4:	d003      	beq.n	8007ade <TIM_Base_SetConfig+0xb2>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	4a23      	ldr	r2, [pc, #140]	@ (8007b68 <TIM_Base_SetConfig+0x13c>)
 8007ada:	4293      	cmp	r3, r2
 8007adc:	d108      	bne.n	8007af0 <TIM_Base_SetConfig+0xc4>
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007ae4:	60fb      	str	r3, [r7, #12]
 8007ae6:	683b      	ldr	r3, [r7, #0]
 8007ae8:	68db      	ldr	r3, [r3, #12]
 8007aea:	68fa      	ldr	r2, [r7, #12]
 8007aec:	4313      	orrs	r3, r2
 8007aee:	60fb      	str	r3, [r7, #12]
 8007af0:	68fb      	ldr	r3, [r7, #12]
 8007af2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007af6:	683b      	ldr	r3, [r7, #0]
 8007af8:	695b      	ldr	r3, [r3, #20]
 8007afa:	4313      	orrs	r3, r2
 8007afc:	60fb      	str	r3, [r7, #12]
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	68fa      	ldr	r2, [r7, #12]
 8007b02:	601a      	str	r2, [r3, #0]
 8007b04:	683b      	ldr	r3, [r7, #0]
 8007b06:	689a      	ldr	r2, [r3, #8]
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007b0c:	683b      	ldr	r3, [r7, #0]
 8007b0e:	681a      	ldr	r2, [r3, #0]
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	629a      	str	r2, [r3, #40]	@ 0x28
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	4a0a      	ldr	r2, [pc, #40]	@ (8007b40 <TIM_Base_SetConfig+0x114>)
 8007b18:	4293      	cmp	r3, r2
 8007b1a:	d003      	beq.n	8007b24 <TIM_Base_SetConfig+0xf8>
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	4a0c      	ldr	r2, [pc, #48]	@ (8007b50 <TIM_Base_SetConfig+0x124>)
 8007b20:	4293      	cmp	r3, r2
 8007b22:	d103      	bne.n	8007b2c <TIM_Base_SetConfig+0x100>
 8007b24:	683b      	ldr	r3, [r7, #0]
 8007b26:	691a      	ldr	r2, [r3, #16]
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	631a      	str	r2, [r3, #48]	@ 0x30
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	2201      	movs	r2, #1
 8007b30:	615a      	str	r2, [r3, #20]
 8007b32:	bf00      	nop
 8007b34:	3714      	adds	r7, #20
 8007b36:	46bd      	mov	sp, r7
 8007b38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b3c:	4770      	bx	lr
 8007b3e:	bf00      	nop
 8007b40:	40010000 	.word	0x40010000
 8007b44:	40000400 	.word	0x40000400
 8007b48:	40000800 	.word	0x40000800
 8007b4c:	40000c00 	.word	0x40000c00
 8007b50:	40010400 	.word	0x40010400
 8007b54:	40014000 	.word	0x40014000
 8007b58:	40014400 	.word	0x40014400
 8007b5c:	40014800 	.word	0x40014800
 8007b60:	40001800 	.word	0x40001800
 8007b64:	40001c00 	.word	0x40001c00
 8007b68:	40002000 	.word	0x40002000

08007b6c <HAL_TIMEx_CommutCallback>:
 8007b6c:	b480      	push	{r7}
 8007b6e:	b083      	sub	sp, #12
 8007b70:	af00      	add	r7, sp, #0
 8007b72:	6078      	str	r0, [r7, #4]
 8007b74:	bf00      	nop
 8007b76:	370c      	adds	r7, #12
 8007b78:	46bd      	mov	sp, r7
 8007b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b7e:	4770      	bx	lr

08007b80 <HAL_TIMEx_BreakCallback>:
 8007b80:	b480      	push	{r7}
 8007b82:	b083      	sub	sp, #12
 8007b84:	af00      	add	r7, sp, #0
 8007b86:	6078      	str	r0, [r7, #4]
 8007b88:	bf00      	nop
 8007b8a:	370c      	adds	r7, #12
 8007b8c:	46bd      	mov	sp, r7
 8007b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b92:	4770      	bx	lr

08007b94 <HAL_UART_Init>:
 8007b94:	b580      	push	{r7, lr}
 8007b96:	b082      	sub	sp, #8
 8007b98:	af00      	add	r7, sp, #0
 8007b9a:	6078      	str	r0, [r7, #4]
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	2b00      	cmp	r3, #0
 8007ba0:	d101      	bne.n	8007ba6 <HAL_UART_Init+0x12>
 8007ba2:	2301      	movs	r3, #1
 8007ba4:	e03f      	b.n	8007c26 <HAL_UART_Init+0x92>
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007bac:	b2db      	uxtb	r3, r3
 8007bae:	2b00      	cmp	r3, #0
 8007bb0:	d106      	bne.n	8007bc0 <HAL_UART_Init+0x2c>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	2200      	movs	r2, #0
 8007bb6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007bba:	6878      	ldr	r0, [r7, #4]
 8007bbc:	f7fb fe72 	bl	80038a4 <HAL_UART_MspInit>
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	2224      	movs	r2, #36	@ 0x24
 8007bc4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	68da      	ldr	r2, [r3, #12]
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007bd6:	60da      	str	r2, [r3, #12]
 8007bd8:	6878      	ldr	r0, [r7, #4]
 8007bda:	f000 fddf 	bl	800879c <UART_SetConfig>
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	691a      	ldr	r2, [r3, #16]
 8007be4:	687b      	ldr	r3, [r7, #4]
 8007be6:	681b      	ldr	r3, [r3, #0]
 8007be8:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007bec:	611a      	str	r2, [r3, #16]
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	695a      	ldr	r2, [r3, #20]
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007bfc:	615a      	str	r2, [r3, #20]
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	68da      	ldr	r2, [r3, #12]
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007c0c:	60da      	str	r2, [r3, #12]
 8007c0e:	687b      	ldr	r3, [r7, #4]
 8007c10:	2200      	movs	r2, #0
 8007c12:	641a      	str	r2, [r3, #64]	@ 0x40
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	2220      	movs	r2, #32
 8007c18:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	2220      	movs	r2, #32
 8007c20:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007c24:	2300      	movs	r3, #0
 8007c26:	4618      	mov	r0, r3
 8007c28:	3708      	adds	r7, #8
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	bd80      	pop	{r7, pc}

08007c2e <HAL_UART_Transmit>:
 8007c2e:	b580      	push	{r7, lr}
 8007c30:	b08a      	sub	sp, #40	@ 0x28
 8007c32:	af02      	add	r7, sp, #8
 8007c34:	60f8      	str	r0, [r7, #12]
 8007c36:	60b9      	str	r1, [r7, #8]
 8007c38:	603b      	str	r3, [r7, #0]
 8007c3a:	4613      	mov	r3, r2
 8007c3c:	80fb      	strh	r3, [r7, #6]
 8007c3e:	2300      	movs	r3, #0
 8007c40:	617b      	str	r3, [r7, #20]
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007c48:	b2db      	uxtb	r3, r3
 8007c4a:	2b20      	cmp	r3, #32
 8007c4c:	d17c      	bne.n	8007d48 <HAL_UART_Transmit+0x11a>
 8007c4e:	68bb      	ldr	r3, [r7, #8]
 8007c50:	2b00      	cmp	r3, #0
 8007c52:	d002      	beq.n	8007c5a <HAL_UART_Transmit+0x2c>
 8007c54:	88fb      	ldrh	r3, [r7, #6]
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d101      	bne.n	8007c5e <HAL_UART_Transmit+0x30>
 8007c5a:	2301      	movs	r3, #1
 8007c5c:	e075      	b.n	8007d4a <HAL_UART_Transmit+0x11c>
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007c64:	2b01      	cmp	r3, #1
 8007c66:	d101      	bne.n	8007c6c <HAL_UART_Transmit+0x3e>
 8007c68:	2302      	movs	r3, #2
 8007c6a:	e06e      	b.n	8007d4a <HAL_UART_Transmit+0x11c>
 8007c6c:	68fb      	ldr	r3, [r7, #12]
 8007c6e:	2201      	movs	r2, #1
 8007c70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007c74:	68fb      	ldr	r3, [r7, #12]
 8007c76:	2200      	movs	r2, #0
 8007c78:	641a      	str	r2, [r3, #64]	@ 0x40
 8007c7a:	68fb      	ldr	r3, [r7, #12]
 8007c7c:	2221      	movs	r2, #33	@ 0x21
 8007c7e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007c82:	f7fc f8a9 	bl	8003dd8 <HAL_GetTick>
 8007c86:	6178      	str	r0, [r7, #20]
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	88fa      	ldrh	r2, [r7, #6]
 8007c8c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8007c8e:	68fb      	ldr	r3, [r7, #12]
 8007c90:	88fa      	ldrh	r2, [r7, #6]
 8007c92:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007c94:	68fb      	ldr	r3, [r7, #12]
 8007c96:	689b      	ldr	r3, [r3, #8]
 8007c98:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007c9c:	d108      	bne.n	8007cb0 <HAL_UART_Transmit+0x82>
 8007c9e:	68fb      	ldr	r3, [r7, #12]
 8007ca0:	691b      	ldr	r3, [r3, #16]
 8007ca2:	2b00      	cmp	r3, #0
 8007ca4:	d104      	bne.n	8007cb0 <HAL_UART_Transmit+0x82>
 8007ca6:	2300      	movs	r3, #0
 8007ca8:	61fb      	str	r3, [r7, #28]
 8007caa:	68bb      	ldr	r3, [r7, #8]
 8007cac:	61bb      	str	r3, [r7, #24]
 8007cae:	e003      	b.n	8007cb8 <HAL_UART_Transmit+0x8a>
 8007cb0:	68bb      	ldr	r3, [r7, #8]
 8007cb2:	61fb      	str	r3, [r7, #28]
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	61bb      	str	r3, [r7, #24]
 8007cb8:	68fb      	ldr	r3, [r7, #12]
 8007cba:	2200      	movs	r2, #0
 8007cbc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007cc0:	e02a      	b.n	8007d18 <HAL_UART_Transmit+0xea>
 8007cc2:	683b      	ldr	r3, [r7, #0]
 8007cc4:	9300      	str	r3, [sp, #0]
 8007cc6:	697b      	ldr	r3, [r7, #20]
 8007cc8:	2200      	movs	r2, #0
 8007cca:	2180      	movs	r1, #128	@ 0x80
 8007ccc:	68f8      	ldr	r0, [r7, #12]
 8007cce:	f000 fb1f 	bl	8008310 <UART_WaitOnFlagUntilTimeout>
 8007cd2:	4603      	mov	r3, r0
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d001      	beq.n	8007cdc <HAL_UART_Transmit+0xae>
 8007cd8:	2303      	movs	r3, #3
 8007cda:	e036      	b.n	8007d4a <HAL_UART_Transmit+0x11c>
 8007cdc:	69fb      	ldr	r3, [r7, #28]
 8007cde:	2b00      	cmp	r3, #0
 8007ce0:	d10b      	bne.n	8007cfa <HAL_UART_Transmit+0xcc>
 8007ce2:	69bb      	ldr	r3, [r7, #24]
 8007ce4:	881b      	ldrh	r3, [r3, #0]
 8007ce6:	461a      	mov	r2, r3
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007cf0:	605a      	str	r2, [r3, #4]
 8007cf2:	69bb      	ldr	r3, [r7, #24]
 8007cf4:	3302      	adds	r3, #2
 8007cf6:	61bb      	str	r3, [r7, #24]
 8007cf8:	e007      	b.n	8007d0a <HAL_UART_Transmit+0xdc>
 8007cfa:	69fb      	ldr	r3, [r7, #28]
 8007cfc:	781a      	ldrb	r2, [r3, #0]
 8007cfe:	68fb      	ldr	r3, [r7, #12]
 8007d00:	681b      	ldr	r3, [r3, #0]
 8007d02:	605a      	str	r2, [r3, #4]
 8007d04:	69fb      	ldr	r3, [r7, #28]
 8007d06:	3301      	adds	r3, #1
 8007d08:	61fb      	str	r3, [r7, #28]
 8007d0a:	68fb      	ldr	r3, [r7, #12]
 8007d0c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007d0e:	b29b      	uxth	r3, r3
 8007d10:	3b01      	subs	r3, #1
 8007d12:	b29a      	uxth	r2, r3
 8007d14:	68fb      	ldr	r3, [r7, #12]
 8007d16:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007d1c:	b29b      	uxth	r3, r3
 8007d1e:	2b00      	cmp	r3, #0
 8007d20:	d1cf      	bne.n	8007cc2 <HAL_UART_Transmit+0x94>
 8007d22:	683b      	ldr	r3, [r7, #0]
 8007d24:	9300      	str	r3, [sp, #0]
 8007d26:	697b      	ldr	r3, [r7, #20]
 8007d28:	2200      	movs	r2, #0
 8007d2a:	2140      	movs	r1, #64	@ 0x40
 8007d2c:	68f8      	ldr	r0, [r7, #12]
 8007d2e:	f000 faef 	bl	8008310 <UART_WaitOnFlagUntilTimeout>
 8007d32:	4603      	mov	r3, r0
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	d001      	beq.n	8007d3c <HAL_UART_Transmit+0x10e>
 8007d38:	2303      	movs	r3, #3
 8007d3a:	e006      	b.n	8007d4a <HAL_UART_Transmit+0x11c>
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	2220      	movs	r2, #32
 8007d40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007d44:	2300      	movs	r3, #0
 8007d46:	e000      	b.n	8007d4a <HAL_UART_Transmit+0x11c>
 8007d48:	2302      	movs	r3, #2
 8007d4a:	4618      	mov	r0, r3
 8007d4c:	3720      	adds	r7, #32
 8007d4e:	46bd      	mov	sp, r7
 8007d50:	bd80      	pop	{r7, pc}

08007d52 <HAL_UART_Receive_IT>:
 8007d52:	b580      	push	{r7, lr}
 8007d54:	b084      	sub	sp, #16
 8007d56:	af00      	add	r7, sp, #0
 8007d58:	60f8      	str	r0, [r7, #12]
 8007d5a:	60b9      	str	r1, [r7, #8]
 8007d5c:	4613      	mov	r3, r2
 8007d5e:	80fb      	strh	r3, [r7, #6]
 8007d60:	68fb      	ldr	r3, [r7, #12]
 8007d62:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007d66:	b2db      	uxtb	r3, r3
 8007d68:	2b20      	cmp	r3, #32
 8007d6a:	d11d      	bne.n	8007da8 <HAL_UART_Receive_IT+0x56>
 8007d6c:	68bb      	ldr	r3, [r7, #8]
 8007d6e:	2b00      	cmp	r3, #0
 8007d70:	d002      	beq.n	8007d78 <HAL_UART_Receive_IT+0x26>
 8007d72:	88fb      	ldrh	r3, [r7, #6]
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	d101      	bne.n	8007d7c <HAL_UART_Receive_IT+0x2a>
 8007d78:	2301      	movs	r3, #1
 8007d7a:	e016      	b.n	8007daa <HAL_UART_Receive_IT+0x58>
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007d82:	2b01      	cmp	r3, #1
 8007d84:	d101      	bne.n	8007d8a <HAL_UART_Receive_IT+0x38>
 8007d86:	2302      	movs	r3, #2
 8007d88:	e00f      	b.n	8007daa <HAL_UART_Receive_IT+0x58>
 8007d8a:	68fb      	ldr	r3, [r7, #12]
 8007d8c:	2201      	movs	r2, #1
 8007d8e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	2200      	movs	r2, #0
 8007d96:	631a      	str	r2, [r3, #48]	@ 0x30
 8007d98:	88fb      	ldrh	r3, [r7, #6]
 8007d9a:	461a      	mov	r2, r3
 8007d9c:	68b9      	ldr	r1, [r7, #8]
 8007d9e:	68f8      	ldr	r0, [r7, #12]
 8007da0:	f000 fb24 	bl	80083ec <UART_Start_Receive_IT>
 8007da4:	4603      	mov	r3, r0
 8007da6:	e000      	b.n	8007daa <HAL_UART_Receive_IT+0x58>
 8007da8:	2302      	movs	r3, #2
 8007daa:	4618      	mov	r0, r3
 8007dac:	3710      	adds	r7, #16
 8007dae:	46bd      	mov	sp, r7
 8007db0:	bd80      	pop	{r7, pc}
	...

08007db4 <HAL_UART_IRQHandler>:
 8007db4:	b580      	push	{r7, lr}
 8007db6:	b0ba      	sub	sp, #232	@ 0xe8
 8007db8:	af00      	add	r7, sp, #0
 8007dba:	6078      	str	r0, [r7, #4]
 8007dbc:	687b      	ldr	r3, [r7, #4]
 8007dbe:	681b      	ldr	r3, [r3, #0]
 8007dc0:	681b      	ldr	r3, [r3, #0]
 8007dc2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007dc6:	687b      	ldr	r3, [r7, #4]
 8007dc8:	681b      	ldr	r3, [r3, #0]
 8007dca:	68db      	ldr	r3, [r3, #12]
 8007dcc:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007dd0:	687b      	ldr	r3, [r7, #4]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	695b      	ldr	r3, [r3, #20]
 8007dd6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8007dda:	2300      	movs	r3, #0
 8007ddc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007de0:	2300      	movs	r3, #0
 8007de2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007de6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007dea:	f003 030f 	and.w	r3, r3, #15
 8007dee:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007df2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8007df6:	2b00      	cmp	r3, #0
 8007df8:	d10f      	bne.n	8007e1a <HAL_UART_IRQHandler+0x66>
 8007dfa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007dfe:	f003 0320 	and.w	r3, r3, #32
 8007e02:	2b00      	cmp	r3, #0
 8007e04:	d009      	beq.n	8007e1a <HAL_UART_IRQHandler+0x66>
 8007e06:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007e0a:	f003 0320 	and.w	r3, r3, #32
 8007e0e:	2b00      	cmp	r3, #0
 8007e10:	d003      	beq.n	8007e1a <HAL_UART_IRQHandler+0x66>
 8007e12:	6878      	ldr	r0, [r7, #4]
 8007e14:	f000 fc07 	bl	8008626 <UART_Receive_IT>
 8007e18:	e256      	b.n	80082c8 <HAL_UART_IRQHandler+0x514>
 8007e1a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8007e1e:	2b00      	cmp	r3, #0
 8007e20:	f000 80de 	beq.w	8007fe0 <HAL_UART_IRQHandler+0x22c>
 8007e24:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007e28:	f003 0301 	and.w	r3, r3, #1
 8007e2c:	2b00      	cmp	r3, #0
 8007e2e:	d106      	bne.n	8007e3e <HAL_UART_IRQHandler+0x8a>
 8007e30:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007e34:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8007e38:	2b00      	cmp	r3, #0
 8007e3a:	f000 80d1 	beq.w	8007fe0 <HAL_UART_IRQHandler+0x22c>
 8007e3e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007e42:	f003 0301 	and.w	r3, r3, #1
 8007e46:	2b00      	cmp	r3, #0
 8007e48:	d00b      	beq.n	8007e62 <HAL_UART_IRQHandler+0xae>
 8007e4a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007e4e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007e52:	2b00      	cmp	r3, #0
 8007e54:	d005      	beq.n	8007e62 <HAL_UART_IRQHandler+0xae>
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007e5a:	f043 0201 	orr.w	r2, r3, #1
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	641a      	str	r2, [r3, #64]	@ 0x40
 8007e62:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007e66:	f003 0304 	and.w	r3, r3, #4
 8007e6a:	2b00      	cmp	r3, #0
 8007e6c:	d00b      	beq.n	8007e86 <HAL_UART_IRQHandler+0xd2>
 8007e6e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007e72:	f003 0301 	and.w	r3, r3, #1
 8007e76:	2b00      	cmp	r3, #0
 8007e78:	d005      	beq.n	8007e86 <HAL_UART_IRQHandler+0xd2>
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007e7e:	f043 0202 	orr.w	r2, r3, #2
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	641a      	str	r2, [r3, #64]	@ 0x40
 8007e86:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007e8a:	f003 0302 	and.w	r3, r3, #2
 8007e8e:	2b00      	cmp	r3, #0
 8007e90:	d00b      	beq.n	8007eaa <HAL_UART_IRQHandler+0xf6>
 8007e92:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007e96:	f003 0301 	and.w	r3, r3, #1
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d005      	beq.n	8007eaa <HAL_UART_IRQHandler+0xf6>
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007ea2:	f043 0204 	orr.w	r2, r3, #4
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	641a      	str	r2, [r3, #64]	@ 0x40
 8007eaa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007eae:	f003 0308 	and.w	r3, r3, #8
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d011      	beq.n	8007eda <HAL_UART_IRQHandler+0x126>
 8007eb6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007eba:	f003 0320 	and.w	r3, r3, #32
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	d105      	bne.n	8007ece <HAL_UART_IRQHandler+0x11a>
 8007ec2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007ec6:	f003 0301 	and.w	r3, r3, #1
 8007eca:	2b00      	cmp	r3, #0
 8007ecc:	d005      	beq.n	8007eda <HAL_UART_IRQHandler+0x126>
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007ed2:	f043 0208 	orr.w	r2, r3, #8
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	641a      	str	r2, [r3, #64]	@ 0x40
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007ede:	2b00      	cmp	r3, #0
 8007ee0:	f000 81ed 	beq.w	80082be <HAL_UART_IRQHandler+0x50a>
 8007ee4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007ee8:	f003 0320 	and.w	r3, r3, #32
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	d008      	beq.n	8007f02 <HAL_UART_IRQHandler+0x14e>
 8007ef0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007ef4:	f003 0320 	and.w	r3, r3, #32
 8007ef8:	2b00      	cmp	r3, #0
 8007efa:	d002      	beq.n	8007f02 <HAL_UART_IRQHandler+0x14e>
 8007efc:	6878      	ldr	r0, [r7, #4]
 8007efe:	f000 fb92 	bl	8008626 <UART_Receive_IT>
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	681b      	ldr	r3, [r3, #0]
 8007f06:	695b      	ldr	r3, [r3, #20]
 8007f08:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007f0c:	2b40      	cmp	r3, #64	@ 0x40
 8007f0e:	bf0c      	ite	eq
 8007f10:	2301      	moveq	r3, #1
 8007f12:	2300      	movne	r3, #0
 8007f14:	b2db      	uxtb	r3, r3
 8007f16:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007f1e:	f003 0308 	and.w	r3, r3, #8
 8007f22:	2b00      	cmp	r3, #0
 8007f24:	d103      	bne.n	8007f2e <HAL_UART_IRQHandler+0x17a>
 8007f26:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d04f      	beq.n	8007fce <HAL_UART_IRQHandler+0x21a>
 8007f2e:	6878      	ldr	r0, [r7, #4]
 8007f30:	f000 fa9a 	bl	8008468 <UART_EndRxTransfer>
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	695b      	ldr	r3, [r3, #20]
 8007f3a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007f3e:	2b40      	cmp	r3, #64	@ 0x40
 8007f40:	d141      	bne.n	8007fc6 <HAL_UART_IRQHandler+0x212>
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	681b      	ldr	r3, [r3, #0]
 8007f46:	3314      	adds	r3, #20
 8007f48:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007f4c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8007f50:	e853 3f00 	ldrex	r3, [r3]
 8007f54:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007f58:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8007f5c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007f60:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	681b      	ldr	r3, [r3, #0]
 8007f68:	3314      	adds	r3, #20
 8007f6a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8007f6e:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8007f72:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8007f76:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8007f7a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8007f7e:	e841 2300 	strex	r3, r2, [r1]
 8007f82:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007f86:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8007f8a:	2b00      	cmp	r3, #0
 8007f8c:	d1d9      	bne.n	8007f42 <HAL_UART_IRQHandler+0x18e>
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007f92:	2b00      	cmp	r3, #0
 8007f94:	d013      	beq.n	8007fbe <HAL_UART_IRQHandler+0x20a>
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007f9a:	4a7d      	ldr	r2, [pc, #500]	@ (8008190 <HAL_UART_IRQHandler+0x3dc>)
 8007f9c:	651a      	str	r2, [r3, #80]	@ 0x50
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	f7fc f89a 	bl	80040dc <HAL_DMA_Abort_IT>
 8007fa8:	4603      	mov	r3, r0
 8007faa:	2b00      	cmp	r3, #0
 8007fac:	d016      	beq.n	8007fdc <HAL_UART_IRQHandler+0x228>
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007fb2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007fb4:	687a      	ldr	r2, [r7, #4]
 8007fb6:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8007fb8:	4610      	mov	r0, r2
 8007fba:	4798      	blx	r3
 8007fbc:	e00e      	b.n	8007fdc <HAL_UART_IRQHandler+0x228>
 8007fbe:	6878      	ldr	r0, [r7, #4]
 8007fc0:	f000 f990 	bl	80082e4 <HAL_UART_ErrorCallback>
 8007fc4:	e00a      	b.n	8007fdc <HAL_UART_IRQHandler+0x228>
 8007fc6:	6878      	ldr	r0, [r7, #4]
 8007fc8:	f000 f98c 	bl	80082e4 <HAL_UART_ErrorCallback>
 8007fcc:	e006      	b.n	8007fdc <HAL_UART_IRQHandler+0x228>
 8007fce:	6878      	ldr	r0, [r7, #4]
 8007fd0:	f000 f988 	bl	80082e4 <HAL_UART_ErrorCallback>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	2200      	movs	r2, #0
 8007fd8:	641a      	str	r2, [r3, #64]	@ 0x40
 8007fda:	e170      	b.n	80082be <HAL_UART_IRQHandler+0x50a>
 8007fdc:	bf00      	nop
 8007fde:	e16e      	b.n	80082be <HAL_UART_IRQHandler+0x50a>
 8007fe0:	687b      	ldr	r3, [r7, #4]
 8007fe2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007fe4:	2b01      	cmp	r3, #1
 8007fe6:	f040 814a 	bne.w	800827e <HAL_UART_IRQHandler+0x4ca>
 8007fea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007fee:	f003 0310 	and.w	r3, r3, #16
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	f000 8143 	beq.w	800827e <HAL_UART_IRQHandler+0x4ca>
 8007ff8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007ffc:	f003 0310 	and.w	r3, r3, #16
 8008000:	2b00      	cmp	r3, #0
 8008002:	f000 813c 	beq.w	800827e <HAL_UART_IRQHandler+0x4ca>
 8008006:	2300      	movs	r3, #0
 8008008:	60bb      	str	r3, [r7, #8]
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	681b      	ldr	r3, [r3, #0]
 800800e:	681b      	ldr	r3, [r3, #0]
 8008010:	60bb      	str	r3, [r7, #8]
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	685b      	ldr	r3, [r3, #4]
 8008018:	60bb      	str	r3, [r7, #8]
 800801a:	68bb      	ldr	r3, [r7, #8]
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	695b      	ldr	r3, [r3, #20]
 8008022:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008026:	2b40      	cmp	r3, #64	@ 0x40
 8008028:	f040 80b4 	bne.w	8008194 <HAL_UART_IRQHandler+0x3e0>
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008030:	681b      	ldr	r3, [r3, #0]
 8008032:	685b      	ldr	r3, [r3, #4]
 8008034:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8008038:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800803c:	2b00      	cmp	r3, #0
 800803e:	f000 8140 	beq.w	80082c2 <HAL_UART_IRQHandler+0x50e>
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8008046:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800804a:	429a      	cmp	r2, r3
 800804c:	f080 8139 	bcs.w	80082c2 <HAL_UART_IRQHandler+0x50e>
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8008056:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800805c:	69db      	ldr	r3, [r3, #28]
 800805e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008062:	f000 8088 	beq.w	8008176 <HAL_UART_IRQHandler+0x3c2>
 8008066:	687b      	ldr	r3, [r7, #4]
 8008068:	681b      	ldr	r3, [r3, #0]
 800806a:	330c      	adds	r3, #12
 800806c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8008070:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8008074:	e853 3f00 	ldrex	r3, [r3]
 8008078:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800807c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8008080:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008084:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	681b      	ldr	r3, [r3, #0]
 800808c:	330c      	adds	r3, #12
 800808e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8008092:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8008096:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800809a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800809e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80080a2:	e841 2300 	strex	r3, r2, [r1]
 80080a6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80080aa:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d1d9      	bne.n	8008066 <HAL_UART_IRQHandler+0x2b2>
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	681b      	ldr	r3, [r3, #0]
 80080b6:	3314      	adds	r3, #20
 80080b8:	677b      	str	r3, [r7, #116]	@ 0x74
 80080ba:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80080bc:	e853 3f00 	ldrex	r3, [r3]
 80080c0:	673b      	str	r3, [r7, #112]	@ 0x70
 80080c2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80080c4:	f023 0301 	bic.w	r3, r3, #1
 80080c8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	681b      	ldr	r3, [r3, #0]
 80080d0:	3314      	adds	r3, #20
 80080d2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80080d6:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80080da:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80080dc:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80080de:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80080e2:	e841 2300 	strex	r3, r2, [r1]
 80080e6:	67bb      	str	r3, [r7, #120]	@ 0x78
 80080e8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80080ea:	2b00      	cmp	r3, #0
 80080ec:	d1e1      	bne.n	80080b2 <HAL_UART_IRQHandler+0x2fe>
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	3314      	adds	r3, #20
 80080f4:	663b      	str	r3, [r7, #96]	@ 0x60
 80080f6:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80080f8:	e853 3f00 	ldrex	r3, [r3]
 80080fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80080fe:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008100:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008104:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	681b      	ldr	r3, [r3, #0]
 800810c:	3314      	adds	r3, #20
 800810e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8008112:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8008114:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008116:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8008118:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800811a:	e841 2300 	strex	r3, r2, [r1]
 800811e:	667b      	str	r3, [r7, #100]	@ 0x64
 8008120:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008122:	2b00      	cmp	r3, #0
 8008124:	d1e3      	bne.n	80080ee <HAL_UART_IRQHandler+0x33a>
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	2220      	movs	r2, #32
 800812a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	2200      	movs	r2, #0
 8008132:	631a      	str	r2, [r3, #48]	@ 0x30
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	681b      	ldr	r3, [r3, #0]
 8008138:	330c      	adds	r3, #12
 800813a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800813c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800813e:	e853 3f00 	ldrex	r3, [r3]
 8008142:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008144:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008146:	f023 0310 	bic.w	r3, r3, #16
 800814a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	681b      	ldr	r3, [r3, #0]
 8008152:	330c      	adds	r3, #12
 8008154:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8008158:	65ba      	str	r2, [r7, #88]	@ 0x58
 800815a:	657b      	str	r3, [r7, #84]	@ 0x54
 800815c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800815e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8008160:	e841 2300 	strex	r3, r2, [r1]
 8008164:	653b      	str	r3, [r7, #80]	@ 0x50
 8008166:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008168:	2b00      	cmp	r3, #0
 800816a:	d1e3      	bne.n	8008134 <HAL_UART_IRQHandler+0x380>
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008170:	4618      	mov	r0, r3
 8008172:	f7fb ff43 	bl	8003ffc <HAL_DMA_Abort>
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800817e:	b29b      	uxth	r3, r3
 8008180:	1ad3      	subs	r3, r2, r3
 8008182:	b29b      	uxth	r3, r3
 8008184:	4619      	mov	r1, r3
 8008186:	6878      	ldr	r0, [r7, #4]
 8008188:	f000 f8b6 	bl	80082f8 <HAL_UARTEx_RxEventCallback>
 800818c:	e099      	b.n	80082c2 <HAL_UART_IRQHandler+0x50e>
 800818e:	bf00      	nop
 8008190:	0800852f 	.word	0x0800852f
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8008198:	687b      	ldr	r3, [r7, #4]
 800819a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800819c:	b29b      	uxth	r3, r3
 800819e:	1ad3      	subs	r3, r2, r3
 80081a0:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80081a8:	b29b      	uxth	r3, r3
 80081aa:	2b00      	cmp	r3, #0
 80081ac:	f000 808b 	beq.w	80082c6 <HAL_UART_IRQHandler+0x512>
 80081b0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80081b4:	2b00      	cmp	r3, #0
 80081b6:	f000 8086 	beq.w	80082c6 <HAL_UART_IRQHandler+0x512>
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	330c      	adds	r3, #12
 80081c0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80081c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80081c4:	e853 3f00 	ldrex	r3, [r3]
 80081c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80081ca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80081cc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80081d0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	330c      	adds	r3, #12
 80081da:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80081de:	647a      	str	r2, [r7, #68]	@ 0x44
 80081e0:	643b      	str	r3, [r7, #64]	@ 0x40
 80081e2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80081e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80081e6:	e841 2300 	strex	r3, r2, [r1]
 80081ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80081ec:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	d1e3      	bne.n	80081ba <HAL_UART_IRQHandler+0x406>
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	3314      	adds	r3, #20
 80081f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80081fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081fc:	e853 3f00 	ldrex	r3, [r3]
 8008200:	623b      	str	r3, [r7, #32]
 8008202:	6a3b      	ldr	r3, [r7, #32]
 8008204:	f023 0301 	bic.w	r3, r3, #1
 8008208:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	3314      	adds	r3, #20
 8008212:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8008216:	633a      	str	r2, [r7, #48]	@ 0x30
 8008218:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800821a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800821c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800821e:	e841 2300 	strex	r3, r2, [r1]
 8008222:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008224:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008226:	2b00      	cmp	r3, #0
 8008228:	d1e3      	bne.n	80081f2 <HAL_UART_IRQHandler+0x43e>
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	2220      	movs	r2, #32
 800822e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	2200      	movs	r2, #0
 8008236:	631a      	str	r2, [r3, #48]	@ 0x30
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	681b      	ldr	r3, [r3, #0]
 800823c:	330c      	adds	r3, #12
 800823e:	613b      	str	r3, [r7, #16]
 8008240:	693b      	ldr	r3, [r7, #16]
 8008242:	e853 3f00 	ldrex	r3, [r3]
 8008246:	60fb      	str	r3, [r7, #12]
 8008248:	68fb      	ldr	r3, [r7, #12]
 800824a:	f023 0310 	bic.w	r3, r3, #16
 800824e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	330c      	adds	r3, #12
 8008258:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 800825c:	61fa      	str	r2, [r7, #28]
 800825e:	61bb      	str	r3, [r7, #24]
 8008260:	69b9      	ldr	r1, [r7, #24]
 8008262:	69fa      	ldr	r2, [r7, #28]
 8008264:	e841 2300 	strex	r3, r2, [r1]
 8008268:	617b      	str	r3, [r7, #20]
 800826a:	697b      	ldr	r3, [r7, #20]
 800826c:	2b00      	cmp	r3, #0
 800826e:	d1e3      	bne.n	8008238 <HAL_UART_IRQHandler+0x484>
 8008270:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8008274:	4619      	mov	r1, r3
 8008276:	6878      	ldr	r0, [r7, #4]
 8008278:	f000 f83e 	bl	80082f8 <HAL_UARTEx_RxEventCallback>
 800827c:	e023      	b.n	80082c6 <HAL_UART_IRQHandler+0x512>
 800827e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008282:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008286:	2b00      	cmp	r3, #0
 8008288:	d009      	beq.n	800829e <HAL_UART_IRQHandler+0x4ea>
 800828a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800828e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008292:	2b00      	cmp	r3, #0
 8008294:	d003      	beq.n	800829e <HAL_UART_IRQHandler+0x4ea>
 8008296:	6878      	ldr	r0, [r7, #4]
 8008298:	f000 f95d 	bl	8008556 <UART_Transmit_IT>
 800829c:	e014      	b.n	80082c8 <HAL_UART_IRQHandler+0x514>
 800829e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80082a2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80082a6:	2b00      	cmp	r3, #0
 80082a8:	d00e      	beq.n	80082c8 <HAL_UART_IRQHandler+0x514>
 80082aa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80082ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80082b2:	2b00      	cmp	r3, #0
 80082b4:	d008      	beq.n	80082c8 <HAL_UART_IRQHandler+0x514>
 80082b6:	6878      	ldr	r0, [r7, #4]
 80082b8:	f000 f99d 	bl	80085f6 <UART_EndTransmit_IT>
 80082bc:	e004      	b.n	80082c8 <HAL_UART_IRQHandler+0x514>
 80082be:	bf00      	nop
 80082c0:	e002      	b.n	80082c8 <HAL_UART_IRQHandler+0x514>
 80082c2:	bf00      	nop
 80082c4:	e000      	b.n	80082c8 <HAL_UART_IRQHandler+0x514>
 80082c6:	bf00      	nop
 80082c8:	37e8      	adds	r7, #232	@ 0xe8
 80082ca:	46bd      	mov	sp, r7
 80082cc:	bd80      	pop	{r7, pc}
 80082ce:	bf00      	nop

080082d0 <HAL_UART_TxCpltCallback>:
 80082d0:	b480      	push	{r7}
 80082d2:	b083      	sub	sp, #12
 80082d4:	af00      	add	r7, sp, #0
 80082d6:	6078      	str	r0, [r7, #4]
 80082d8:	bf00      	nop
 80082da:	370c      	adds	r7, #12
 80082dc:	46bd      	mov	sp, r7
 80082de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082e2:	4770      	bx	lr

080082e4 <HAL_UART_ErrorCallback>:
 80082e4:	b480      	push	{r7}
 80082e6:	b083      	sub	sp, #12
 80082e8:	af00      	add	r7, sp, #0
 80082ea:	6078      	str	r0, [r7, #4]
 80082ec:	bf00      	nop
 80082ee:	370c      	adds	r7, #12
 80082f0:	46bd      	mov	sp, r7
 80082f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082f6:	4770      	bx	lr

080082f8 <HAL_UARTEx_RxEventCallback>:
 80082f8:	b480      	push	{r7}
 80082fa:	b083      	sub	sp, #12
 80082fc:	af00      	add	r7, sp, #0
 80082fe:	6078      	str	r0, [r7, #4]
 8008300:	460b      	mov	r3, r1
 8008302:	807b      	strh	r3, [r7, #2]
 8008304:	bf00      	nop
 8008306:	370c      	adds	r7, #12
 8008308:	46bd      	mov	sp, r7
 800830a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800830e:	4770      	bx	lr

08008310 <UART_WaitOnFlagUntilTimeout>:
 8008310:	b580      	push	{r7, lr}
 8008312:	b090      	sub	sp, #64	@ 0x40
 8008314:	af00      	add	r7, sp, #0
 8008316:	60f8      	str	r0, [r7, #12]
 8008318:	60b9      	str	r1, [r7, #8]
 800831a:	603b      	str	r3, [r7, #0]
 800831c:	4613      	mov	r3, r2
 800831e:	71fb      	strb	r3, [r7, #7]
 8008320:	e050      	b.n	80083c4 <UART_WaitOnFlagUntilTimeout+0xb4>
 8008322:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008324:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008328:	d04c      	beq.n	80083c4 <UART_WaitOnFlagUntilTimeout+0xb4>
 800832a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800832c:	2b00      	cmp	r3, #0
 800832e:	d007      	beq.n	8008340 <UART_WaitOnFlagUntilTimeout+0x30>
 8008330:	f7fb fd52 	bl	8003dd8 <HAL_GetTick>
 8008334:	4602      	mov	r2, r0
 8008336:	683b      	ldr	r3, [r7, #0]
 8008338:	1ad3      	subs	r3, r2, r3
 800833a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800833c:	429a      	cmp	r2, r3
 800833e:	d241      	bcs.n	80083c4 <UART_WaitOnFlagUntilTimeout+0xb4>
 8008340:	68fb      	ldr	r3, [r7, #12]
 8008342:	681b      	ldr	r3, [r3, #0]
 8008344:	330c      	adds	r3, #12
 8008346:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008348:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800834a:	e853 3f00 	ldrex	r3, [r3]
 800834e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008350:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008352:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 8008356:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008358:	68fb      	ldr	r3, [r7, #12]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	330c      	adds	r3, #12
 800835e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8008360:	637a      	str	r2, [r7, #52]	@ 0x34
 8008362:	633b      	str	r3, [r7, #48]	@ 0x30
 8008364:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008366:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008368:	e841 2300 	strex	r3, r2, [r1]
 800836c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800836e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008370:	2b00      	cmp	r3, #0
 8008372:	d1e5      	bne.n	8008340 <UART_WaitOnFlagUntilTimeout+0x30>
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	681b      	ldr	r3, [r3, #0]
 8008378:	3314      	adds	r3, #20
 800837a:	617b      	str	r3, [r7, #20]
 800837c:	697b      	ldr	r3, [r7, #20]
 800837e:	e853 3f00 	ldrex	r3, [r3]
 8008382:	613b      	str	r3, [r7, #16]
 8008384:	693b      	ldr	r3, [r7, #16]
 8008386:	f023 0301 	bic.w	r3, r3, #1
 800838a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800838c:	68fb      	ldr	r3, [r7, #12]
 800838e:	681b      	ldr	r3, [r3, #0]
 8008390:	3314      	adds	r3, #20
 8008392:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8008394:	623a      	str	r2, [r7, #32]
 8008396:	61fb      	str	r3, [r7, #28]
 8008398:	69f9      	ldr	r1, [r7, #28]
 800839a:	6a3a      	ldr	r2, [r7, #32]
 800839c:	e841 2300 	strex	r3, r2, [r1]
 80083a0:	61bb      	str	r3, [r7, #24]
 80083a2:	69bb      	ldr	r3, [r7, #24]
 80083a4:	2b00      	cmp	r3, #0
 80083a6:	d1e5      	bne.n	8008374 <UART_WaitOnFlagUntilTimeout+0x64>
 80083a8:	68fb      	ldr	r3, [r7, #12]
 80083aa:	2220      	movs	r2, #32
 80083ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80083b0:	68fb      	ldr	r3, [r7, #12]
 80083b2:	2220      	movs	r2, #32
 80083b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80083b8:	68fb      	ldr	r3, [r7, #12]
 80083ba:	2200      	movs	r2, #0
 80083bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80083c0:	2303      	movs	r3, #3
 80083c2:	e00f      	b.n	80083e4 <UART_WaitOnFlagUntilTimeout+0xd4>
 80083c4:	68fb      	ldr	r3, [r7, #12]
 80083c6:	681b      	ldr	r3, [r3, #0]
 80083c8:	681a      	ldr	r2, [r3, #0]
 80083ca:	68bb      	ldr	r3, [r7, #8]
 80083cc:	4013      	ands	r3, r2
 80083ce:	68ba      	ldr	r2, [r7, #8]
 80083d0:	429a      	cmp	r2, r3
 80083d2:	bf0c      	ite	eq
 80083d4:	2301      	moveq	r3, #1
 80083d6:	2300      	movne	r3, #0
 80083d8:	b2db      	uxtb	r3, r3
 80083da:	461a      	mov	r2, r3
 80083dc:	79fb      	ldrb	r3, [r7, #7]
 80083de:	429a      	cmp	r2, r3
 80083e0:	d09f      	beq.n	8008322 <UART_WaitOnFlagUntilTimeout+0x12>
 80083e2:	2300      	movs	r3, #0
 80083e4:	4618      	mov	r0, r3
 80083e6:	3740      	adds	r7, #64	@ 0x40
 80083e8:	46bd      	mov	sp, r7
 80083ea:	bd80      	pop	{r7, pc}

080083ec <UART_Start_Receive_IT>:
 80083ec:	b480      	push	{r7}
 80083ee:	b085      	sub	sp, #20
 80083f0:	af00      	add	r7, sp, #0
 80083f2:	60f8      	str	r0, [r7, #12]
 80083f4:	60b9      	str	r1, [r7, #8]
 80083f6:	4613      	mov	r3, r2
 80083f8:	80fb      	strh	r3, [r7, #6]
 80083fa:	68fb      	ldr	r3, [r7, #12]
 80083fc:	68ba      	ldr	r2, [r7, #8]
 80083fe:	629a      	str	r2, [r3, #40]	@ 0x28
 8008400:	68fb      	ldr	r3, [r7, #12]
 8008402:	88fa      	ldrh	r2, [r7, #6]
 8008404:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8008406:	68fb      	ldr	r3, [r7, #12]
 8008408:	88fa      	ldrh	r2, [r7, #6]
 800840a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800840c:	68fb      	ldr	r3, [r7, #12]
 800840e:	2200      	movs	r2, #0
 8008410:	641a      	str	r2, [r3, #64]	@ 0x40
 8008412:	68fb      	ldr	r3, [r7, #12]
 8008414:	2222      	movs	r2, #34	@ 0x22
 8008416:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800841a:	68fb      	ldr	r3, [r7, #12]
 800841c:	2200      	movs	r2, #0
 800841e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	691b      	ldr	r3, [r3, #16]
 8008426:	2b00      	cmp	r3, #0
 8008428:	d007      	beq.n	800843a <UART_Start_Receive_IT+0x4e>
 800842a:	68fb      	ldr	r3, [r7, #12]
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	68da      	ldr	r2, [r3, #12]
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	681b      	ldr	r3, [r3, #0]
 8008434:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008438:	60da      	str	r2, [r3, #12]
 800843a:	68fb      	ldr	r3, [r7, #12]
 800843c:	681b      	ldr	r3, [r3, #0]
 800843e:	695a      	ldr	r2, [r3, #20]
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	f042 0201 	orr.w	r2, r2, #1
 8008448:	615a      	str	r2, [r3, #20]
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	68da      	ldr	r2, [r3, #12]
 8008450:	68fb      	ldr	r3, [r7, #12]
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	f042 0220 	orr.w	r2, r2, #32
 8008458:	60da      	str	r2, [r3, #12]
 800845a:	2300      	movs	r3, #0
 800845c:	4618      	mov	r0, r3
 800845e:	3714      	adds	r7, #20
 8008460:	46bd      	mov	sp, r7
 8008462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008466:	4770      	bx	lr

08008468 <UART_EndRxTransfer>:
 8008468:	b480      	push	{r7}
 800846a:	b095      	sub	sp, #84	@ 0x54
 800846c:	af00      	add	r7, sp, #0
 800846e:	6078      	str	r0, [r7, #4]
 8008470:	687b      	ldr	r3, [r7, #4]
 8008472:	681b      	ldr	r3, [r3, #0]
 8008474:	330c      	adds	r3, #12
 8008476:	637b      	str	r3, [r7, #52]	@ 0x34
 8008478:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800847a:	e853 3f00 	ldrex	r3, [r3]
 800847e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008480:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008482:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008486:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	681b      	ldr	r3, [r3, #0]
 800848c:	330c      	adds	r3, #12
 800848e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8008490:	643a      	str	r2, [r7, #64]	@ 0x40
 8008492:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008494:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8008496:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8008498:	e841 2300 	strex	r3, r2, [r1]
 800849c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800849e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80084a0:	2b00      	cmp	r3, #0
 80084a2:	d1e5      	bne.n	8008470 <UART_EndRxTransfer+0x8>
 80084a4:	687b      	ldr	r3, [r7, #4]
 80084a6:	681b      	ldr	r3, [r3, #0]
 80084a8:	3314      	adds	r3, #20
 80084aa:	623b      	str	r3, [r7, #32]
 80084ac:	6a3b      	ldr	r3, [r7, #32]
 80084ae:	e853 3f00 	ldrex	r3, [r3]
 80084b2:	61fb      	str	r3, [r7, #28]
 80084b4:	69fb      	ldr	r3, [r7, #28]
 80084b6:	f023 0301 	bic.w	r3, r3, #1
 80084ba:	64bb      	str	r3, [r7, #72]	@ 0x48
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	3314      	adds	r3, #20
 80084c2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80084c4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80084c6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80084c8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80084ca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80084cc:	e841 2300 	strex	r3, r2, [r1]
 80084d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80084d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80084d4:	2b00      	cmp	r3, #0
 80084d6:	d1e5      	bne.n	80084a4 <UART_EndRxTransfer+0x3c>
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80084dc:	2b01      	cmp	r3, #1
 80084de:	d119      	bne.n	8008514 <UART_EndRxTransfer+0xac>
 80084e0:	687b      	ldr	r3, [r7, #4]
 80084e2:	681b      	ldr	r3, [r3, #0]
 80084e4:	330c      	adds	r3, #12
 80084e6:	60fb      	str	r3, [r7, #12]
 80084e8:	68fb      	ldr	r3, [r7, #12]
 80084ea:	e853 3f00 	ldrex	r3, [r3]
 80084ee:	60bb      	str	r3, [r7, #8]
 80084f0:	68bb      	ldr	r3, [r7, #8]
 80084f2:	f023 0310 	bic.w	r3, r3, #16
 80084f6:	647b      	str	r3, [r7, #68]	@ 0x44
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	681b      	ldr	r3, [r3, #0]
 80084fc:	330c      	adds	r3, #12
 80084fe:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008500:	61ba      	str	r2, [r7, #24]
 8008502:	617b      	str	r3, [r7, #20]
 8008504:	6979      	ldr	r1, [r7, #20]
 8008506:	69ba      	ldr	r2, [r7, #24]
 8008508:	e841 2300 	strex	r3, r2, [r1]
 800850c:	613b      	str	r3, [r7, #16]
 800850e:	693b      	ldr	r3, [r7, #16]
 8008510:	2b00      	cmp	r3, #0
 8008512:	d1e5      	bne.n	80084e0 <UART_EndRxTransfer+0x78>
 8008514:	687b      	ldr	r3, [r7, #4]
 8008516:	2220      	movs	r2, #32
 8008518:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	2200      	movs	r2, #0
 8008520:	631a      	str	r2, [r3, #48]	@ 0x30
 8008522:	bf00      	nop
 8008524:	3754      	adds	r7, #84	@ 0x54
 8008526:	46bd      	mov	sp, r7
 8008528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800852c:	4770      	bx	lr

0800852e <UART_DMAAbortOnError>:
 800852e:	b580      	push	{r7, lr}
 8008530:	b084      	sub	sp, #16
 8008532:	af00      	add	r7, sp, #0
 8008534:	6078      	str	r0, [r7, #4]
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800853a:	60fb      	str	r3, [r7, #12]
 800853c:	68fb      	ldr	r3, [r7, #12]
 800853e:	2200      	movs	r2, #0
 8008540:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	2200      	movs	r2, #0
 8008546:	84da      	strh	r2, [r3, #38]	@ 0x26
 8008548:	68f8      	ldr	r0, [r7, #12]
 800854a:	f7ff fecb 	bl	80082e4 <HAL_UART_ErrorCallback>
 800854e:	bf00      	nop
 8008550:	3710      	adds	r7, #16
 8008552:	46bd      	mov	sp, r7
 8008554:	bd80      	pop	{r7, pc}

08008556 <UART_Transmit_IT>:
 8008556:	b480      	push	{r7}
 8008558:	b085      	sub	sp, #20
 800855a:	af00      	add	r7, sp, #0
 800855c:	6078      	str	r0, [r7, #4]
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008564:	b2db      	uxtb	r3, r3
 8008566:	2b21      	cmp	r3, #33	@ 0x21
 8008568:	d13e      	bne.n	80085e8 <UART_Transmit_IT+0x92>
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	689b      	ldr	r3, [r3, #8]
 800856e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008572:	d114      	bne.n	800859e <UART_Transmit_IT+0x48>
 8008574:	687b      	ldr	r3, [r7, #4]
 8008576:	691b      	ldr	r3, [r3, #16]
 8008578:	2b00      	cmp	r3, #0
 800857a:	d110      	bne.n	800859e <UART_Transmit_IT+0x48>
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	6a1b      	ldr	r3, [r3, #32]
 8008580:	60fb      	str	r3, [r7, #12]
 8008582:	68fb      	ldr	r3, [r7, #12]
 8008584:	881b      	ldrh	r3, [r3, #0]
 8008586:	461a      	mov	r2, r3
 8008588:	687b      	ldr	r3, [r7, #4]
 800858a:	681b      	ldr	r3, [r3, #0]
 800858c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008590:	605a      	str	r2, [r3, #4]
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	6a1b      	ldr	r3, [r3, #32]
 8008596:	1c9a      	adds	r2, r3, #2
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	621a      	str	r2, [r3, #32]
 800859c:	e008      	b.n	80085b0 <UART_Transmit_IT+0x5a>
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	6a1b      	ldr	r3, [r3, #32]
 80085a2:	1c59      	adds	r1, r3, #1
 80085a4:	687a      	ldr	r2, [r7, #4]
 80085a6:	6211      	str	r1, [r2, #32]
 80085a8:	781a      	ldrb	r2, [r3, #0]
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	605a      	str	r2, [r3, #4]
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80085b4:	b29b      	uxth	r3, r3
 80085b6:	3b01      	subs	r3, #1
 80085b8:	b29b      	uxth	r3, r3
 80085ba:	687a      	ldr	r2, [r7, #4]
 80085bc:	4619      	mov	r1, r3
 80085be:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80085c0:	2b00      	cmp	r3, #0
 80085c2:	d10f      	bne.n	80085e4 <UART_Transmit_IT+0x8e>
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	681b      	ldr	r3, [r3, #0]
 80085c8:	68da      	ldr	r2, [r3, #12]
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	681b      	ldr	r3, [r3, #0]
 80085ce:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80085d2:	60da      	str	r2, [r3, #12]
 80085d4:	687b      	ldr	r3, [r7, #4]
 80085d6:	681b      	ldr	r3, [r3, #0]
 80085d8:	68da      	ldr	r2, [r3, #12]
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	681b      	ldr	r3, [r3, #0]
 80085de:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80085e2:	60da      	str	r2, [r3, #12]
 80085e4:	2300      	movs	r3, #0
 80085e6:	e000      	b.n	80085ea <UART_Transmit_IT+0x94>
 80085e8:	2302      	movs	r3, #2
 80085ea:	4618      	mov	r0, r3
 80085ec:	3714      	adds	r7, #20
 80085ee:	46bd      	mov	sp, r7
 80085f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f4:	4770      	bx	lr

080085f6 <UART_EndTransmit_IT>:
 80085f6:	b580      	push	{r7, lr}
 80085f8:	b082      	sub	sp, #8
 80085fa:	af00      	add	r7, sp, #0
 80085fc:	6078      	str	r0, [r7, #4]
 80085fe:	687b      	ldr	r3, [r7, #4]
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	68da      	ldr	r2, [r3, #12]
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	681b      	ldr	r3, [r3, #0]
 8008608:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800860c:	60da      	str	r2, [r3, #12]
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	2220      	movs	r2, #32
 8008612:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008616:	6878      	ldr	r0, [r7, #4]
 8008618:	f7ff fe5a 	bl	80082d0 <HAL_UART_TxCpltCallback>
 800861c:	2300      	movs	r3, #0
 800861e:	4618      	mov	r0, r3
 8008620:	3708      	adds	r7, #8
 8008622:	46bd      	mov	sp, r7
 8008624:	bd80      	pop	{r7, pc}

08008626 <UART_Receive_IT>:
 8008626:	b580      	push	{r7, lr}
 8008628:	b08c      	sub	sp, #48	@ 0x30
 800862a:	af00      	add	r7, sp, #0
 800862c:	6078      	str	r0, [r7, #4]
 800862e:	687b      	ldr	r3, [r7, #4]
 8008630:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8008634:	b2db      	uxtb	r3, r3
 8008636:	2b22      	cmp	r3, #34	@ 0x22
 8008638:	f040 80ab 	bne.w	8008792 <UART_Receive_IT+0x16c>
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	689b      	ldr	r3, [r3, #8]
 8008640:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008644:	d117      	bne.n	8008676 <UART_Receive_IT+0x50>
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	691b      	ldr	r3, [r3, #16]
 800864a:	2b00      	cmp	r3, #0
 800864c:	d113      	bne.n	8008676 <UART_Receive_IT+0x50>
 800864e:	2300      	movs	r3, #0
 8008650:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008656:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	685b      	ldr	r3, [r3, #4]
 800865e:	b29b      	uxth	r3, r3
 8008660:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008664:	b29a      	uxth	r2, r3
 8008666:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008668:	801a      	strh	r2, [r3, #0]
 800866a:	687b      	ldr	r3, [r7, #4]
 800866c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800866e:	1c9a      	adds	r2, r3, #2
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	629a      	str	r2, [r3, #40]	@ 0x28
 8008674:	e026      	b.n	80086c4 <UART_Receive_IT+0x9e>
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800867a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800867c:	2300      	movs	r3, #0
 800867e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008680:	687b      	ldr	r3, [r7, #4]
 8008682:	689b      	ldr	r3, [r3, #8]
 8008684:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008688:	d007      	beq.n	800869a <UART_Receive_IT+0x74>
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	689b      	ldr	r3, [r3, #8]
 800868e:	2b00      	cmp	r3, #0
 8008690:	d10a      	bne.n	80086a8 <UART_Receive_IT+0x82>
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	691b      	ldr	r3, [r3, #16]
 8008696:	2b00      	cmp	r3, #0
 8008698:	d106      	bne.n	80086a8 <UART_Receive_IT+0x82>
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	681b      	ldr	r3, [r3, #0]
 800869e:	685b      	ldr	r3, [r3, #4]
 80086a0:	b2da      	uxtb	r2, r3
 80086a2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80086a4:	701a      	strb	r2, [r3, #0]
 80086a6:	e008      	b.n	80086ba <UART_Receive_IT+0x94>
 80086a8:	687b      	ldr	r3, [r7, #4]
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	685b      	ldr	r3, [r3, #4]
 80086ae:	b2db      	uxtb	r3, r3
 80086b0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80086b4:	b2da      	uxtb	r2, r3
 80086b6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80086b8:	701a      	strb	r2, [r3, #0]
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80086be:	1c5a      	adds	r2, r3, #1
 80086c0:	687b      	ldr	r3, [r7, #4]
 80086c2:	629a      	str	r2, [r3, #40]	@ 0x28
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80086c8:	b29b      	uxth	r3, r3
 80086ca:	3b01      	subs	r3, #1
 80086cc:	b29b      	uxth	r3, r3
 80086ce:	687a      	ldr	r2, [r7, #4]
 80086d0:	4619      	mov	r1, r3
 80086d2:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	d15a      	bne.n	800878e <UART_Receive_IT+0x168>
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	68da      	ldr	r2, [r3, #12]
 80086de:	687b      	ldr	r3, [r7, #4]
 80086e0:	681b      	ldr	r3, [r3, #0]
 80086e2:	f022 0220 	bic.w	r2, r2, #32
 80086e6:	60da      	str	r2, [r3, #12]
 80086e8:	687b      	ldr	r3, [r7, #4]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	68da      	ldr	r2, [r3, #12]
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80086f6:	60da      	str	r2, [r3, #12]
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	695a      	ldr	r2, [r3, #20]
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	f022 0201 	bic.w	r2, r2, #1
 8008706:	615a      	str	r2, [r3, #20]
 8008708:	687b      	ldr	r3, [r7, #4]
 800870a:	2220      	movs	r2, #32
 800870c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008710:	687b      	ldr	r3, [r7, #4]
 8008712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008714:	2b01      	cmp	r3, #1
 8008716:	d135      	bne.n	8008784 <UART_Receive_IT+0x15e>
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	2200      	movs	r2, #0
 800871c:	631a      	str	r2, [r3, #48]	@ 0x30
 800871e:	687b      	ldr	r3, [r7, #4]
 8008720:	681b      	ldr	r3, [r3, #0]
 8008722:	330c      	adds	r3, #12
 8008724:	617b      	str	r3, [r7, #20]
 8008726:	697b      	ldr	r3, [r7, #20]
 8008728:	e853 3f00 	ldrex	r3, [r3]
 800872c:	613b      	str	r3, [r7, #16]
 800872e:	693b      	ldr	r3, [r7, #16]
 8008730:	f023 0310 	bic.w	r3, r3, #16
 8008734:	627b      	str	r3, [r7, #36]	@ 0x24
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	330c      	adds	r3, #12
 800873c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800873e:	623a      	str	r2, [r7, #32]
 8008740:	61fb      	str	r3, [r7, #28]
 8008742:	69f9      	ldr	r1, [r7, #28]
 8008744:	6a3a      	ldr	r2, [r7, #32]
 8008746:	e841 2300 	strex	r3, r2, [r1]
 800874a:	61bb      	str	r3, [r7, #24]
 800874c:	69bb      	ldr	r3, [r7, #24]
 800874e:	2b00      	cmp	r3, #0
 8008750:	d1e5      	bne.n	800871e <UART_Receive_IT+0xf8>
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	681b      	ldr	r3, [r3, #0]
 8008758:	f003 0310 	and.w	r3, r3, #16
 800875c:	2b10      	cmp	r3, #16
 800875e:	d10a      	bne.n	8008776 <UART_Receive_IT+0x150>
 8008760:	2300      	movs	r3, #0
 8008762:	60fb      	str	r3, [r7, #12]
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	681b      	ldr	r3, [r3, #0]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	60fb      	str	r3, [r7, #12]
 800876c:	687b      	ldr	r3, [r7, #4]
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	685b      	ldr	r3, [r3, #4]
 8008772:	60fb      	str	r3, [r7, #12]
 8008774:	68fb      	ldr	r3, [r7, #12]
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800877a:	4619      	mov	r1, r3
 800877c:	6878      	ldr	r0, [r7, #4]
 800877e:	f7ff fdbb 	bl	80082f8 <HAL_UARTEx_RxEventCallback>
 8008782:	e002      	b.n	800878a <UART_Receive_IT+0x164>
 8008784:	6878      	ldr	r0, [r7, #4]
 8008786:	f7fa fed5 	bl	8003534 <HAL_UART_RxCpltCallback>
 800878a:	2300      	movs	r3, #0
 800878c:	e002      	b.n	8008794 <UART_Receive_IT+0x16e>
 800878e:	2300      	movs	r3, #0
 8008790:	e000      	b.n	8008794 <UART_Receive_IT+0x16e>
 8008792:	2302      	movs	r3, #2
 8008794:	4618      	mov	r0, r3
 8008796:	3730      	adds	r7, #48	@ 0x30
 8008798:	46bd      	mov	sp, r7
 800879a:	bd80      	pop	{r7, pc}

0800879c <UART_SetConfig>:
 800879c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80087a0:	b0c0      	sub	sp, #256	@ 0x100
 80087a2:	af00      	add	r7, sp, #0
 80087a4:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 80087a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	691b      	ldr	r3, [r3, #16]
 80087b0:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 80087b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087b8:	68d9      	ldr	r1, [r3, #12]
 80087ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087be:	681a      	ldr	r2, [r3, #0]
 80087c0:	ea40 0301 	orr.w	r3, r0, r1
 80087c4:	6113      	str	r3, [r2, #16]
 80087c6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087ca:	689a      	ldr	r2, [r3, #8]
 80087cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087d0:	691b      	ldr	r3, [r3, #16]
 80087d2:	431a      	orrs	r2, r3
 80087d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087d8:	695b      	ldr	r3, [r3, #20]
 80087da:	431a      	orrs	r2, r3
 80087dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087e0:	69db      	ldr	r3, [r3, #28]
 80087e2:	4313      	orrs	r3, r2
 80087e4:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80087e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087ec:	681b      	ldr	r3, [r3, #0]
 80087ee:	68db      	ldr	r3, [r3, #12]
 80087f0:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80087f4:	f021 010c 	bic.w	r1, r1, #12
 80087f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80087fc:	681a      	ldr	r2, [r3, #0]
 80087fe:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8008802:	430b      	orrs	r3, r1
 8008804:	60d3      	str	r3, [r2, #12]
 8008806:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	695b      	ldr	r3, [r3, #20]
 800880e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8008812:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008816:	6999      	ldr	r1, [r3, #24]
 8008818:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800881c:	681a      	ldr	r2, [r3, #0]
 800881e:	ea40 0301 	orr.w	r3, r0, r1
 8008822:	6153      	str	r3, [r2, #20]
 8008824:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008828:	681a      	ldr	r2, [r3, #0]
 800882a:	4b8f      	ldr	r3, [pc, #572]	@ (8008a68 <UART_SetConfig+0x2cc>)
 800882c:	429a      	cmp	r2, r3
 800882e:	d005      	beq.n	800883c <UART_SetConfig+0xa0>
 8008830:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008834:	681a      	ldr	r2, [r3, #0]
 8008836:	4b8d      	ldr	r3, [pc, #564]	@ (8008a6c <UART_SetConfig+0x2d0>)
 8008838:	429a      	cmp	r2, r3
 800883a:	d104      	bne.n	8008846 <UART_SetConfig+0xaa>
 800883c:	f7fe fcee 	bl	800721c <HAL_RCC_GetPCLK2Freq>
 8008840:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8008844:	e003      	b.n	800884e <UART_SetConfig+0xb2>
 8008846:	f7fe fcd5 	bl	80071f4 <HAL_RCC_GetPCLK1Freq>
 800884a:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800884e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008852:	69db      	ldr	r3, [r3, #28]
 8008854:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008858:	f040 810c 	bne.w	8008a74 <UART_SetConfig+0x2d8>
 800885c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008860:	2200      	movs	r2, #0
 8008862:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8008866:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 800886a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 800886e:	4622      	mov	r2, r4
 8008870:	462b      	mov	r3, r5
 8008872:	1891      	adds	r1, r2, r2
 8008874:	65b9      	str	r1, [r7, #88]	@ 0x58
 8008876:	415b      	adcs	r3, r3
 8008878:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800887a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800887e:	4621      	mov	r1, r4
 8008880:	eb12 0801 	adds.w	r8, r2, r1
 8008884:	4629      	mov	r1, r5
 8008886:	eb43 0901 	adc.w	r9, r3, r1
 800888a:	f04f 0200 	mov.w	r2, #0
 800888e:	f04f 0300 	mov.w	r3, #0
 8008892:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008896:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800889a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800889e:	4690      	mov	r8, r2
 80088a0:	4699      	mov	r9, r3
 80088a2:	4623      	mov	r3, r4
 80088a4:	eb18 0303 	adds.w	r3, r8, r3
 80088a8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80088ac:	462b      	mov	r3, r5
 80088ae:	eb49 0303 	adc.w	r3, r9, r3
 80088b2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80088b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80088ba:	685b      	ldr	r3, [r3, #4]
 80088bc:	2200      	movs	r2, #0
 80088be:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80088c2:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80088c6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80088ca:	460b      	mov	r3, r1
 80088cc:	18db      	adds	r3, r3, r3
 80088ce:	653b      	str	r3, [r7, #80]	@ 0x50
 80088d0:	4613      	mov	r3, r2
 80088d2:	eb42 0303 	adc.w	r3, r2, r3
 80088d6:	657b      	str	r3, [r7, #84]	@ 0x54
 80088d8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80088dc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80088e0:	f7f8 f9d2 	bl	8000c88 <__aeabi_uldivmod>
 80088e4:	4602      	mov	r2, r0
 80088e6:	460b      	mov	r3, r1
 80088e8:	4b61      	ldr	r3, [pc, #388]	@ (8008a70 <UART_SetConfig+0x2d4>)
 80088ea:	fba3 2302 	umull	r2, r3, r3, r2
 80088ee:	095b      	lsrs	r3, r3, #5
 80088f0:	011c      	lsls	r4, r3, #4
 80088f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80088f6:	2200      	movs	r2, #0
 80088f8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80088fc:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8008900:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8008904:	4642      	mov	r2, r8
 8008906:	464b      	mov	r3, r9
 8008908:	1891      	adds	r1, r2, r2
 800890a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800890c:	415b      	adcs	r3, r3
 800890e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008910:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008914:	4641      	mov	r1, r8
 8008916:	eb12 0a01 	adds.w	sl, r2, r1
 800891a:	4649      	mov	r1, r9
 800891c:	eb43 0b01 	adc.w	fp, r3, r1
 8008920:	f04f 0200 	mov.w	r2, #0
 8008924:	f04f 0300 	mov.w	r3, #0
 8008928:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800892c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8008930:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008934:	4692      	mov	sl, r2
 8008936:	469b      	mov	fp, r3
 8008938:	4643      	mov	r3, r8
 800893a:	eb1a 0303 	adds.w	r3, sl, r3
 800893e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8008942:	464b      	mov	r3, r9
 8008944:	eb4b 0303 	adc.w	r3, fp, r3
 8008948:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800894c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008950:	685b      	ldr	r3, [r3, #4]
 8008952:	2200      	movs	r2, #0
 8008954:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8008958:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 800895c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8008960:	460b      	mov	r3, r1
 8008962:	18db      	adds	r3, r3, r3
 8008964:	643b      	str	r3, [r7, #64]	@ 0x40
 8008966:	4613      	mov	r3, r2
 8008968:	eb42 0303 	adc.w	r3, r2, r3
 800896c:	647b      	str	r3, [r7, #68]	@ 0x44
 800896e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008972:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8008976:	f7f8 f987 	bl	8000c88 <__aeabi_uldivmod>
 800897a:	4602      	mov	r2, r0
 800897c:	460b      	mov	r3, r1
 800897e:	4611      	mov	r1, r2
 8008980:	4b3b      	ldr	r3, [pc, #236]	@ (8008a70 <UART_SetConfig+0x2d4>)
 8008982:	fba3 2301 	umull	r2, r3, r3, r1
 8008986:	095b      	lsrs	r3, r3, #5
 8008988:	2264      	movs	r2, #100	@ 0x64
 800898a:	fb02 f303 	mul.w	r3, r2, r3
 800898e:	1acb      	subs	r3, r1, r3
 8008990:	00db      	lsls	r3, r3, #3
 8008992:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8008996:	4b36      	ldr	r3, [pc, #216]	@ (8008a70 <UART_SetConfig+0x2d4>)
 8008998:	fba3 2302 	umull	r2, r3, r3, r2
 800899c:	095b      	lsrs	r3, r3, #5
 800899e:	005b      	lsls	r3, r3, #1
 80089a0:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80089a4:	441c      	add	r4, r3
 80089a6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80089aa:	2200      	movs	r2, #0
 80089ac:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80089b0:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80089b4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80089b8:	4642      	mov	r2, r8
 80089ba:	464b      	mov	r3, r9
 80089bc:	1891      	adds	r1, r2, r2
 80089be:	63b9      	str	r1, [r7, #56]	@ 0x38
 80089c0:	415b      	adcs	r3, r3
 80089c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80089c4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80089c8:	4641      	mov	r1, r8
 80089ca:	1851      	adds	r1, r2, r1
 80089cc:	6339      	str	r1, [r7, #48]	@ 0x30
 80089ce:	4649      	mov	r1, r9
 80089d0:	414b      	adcs	r3, r1
 80089d2:	637b      	str	r3, [r7, #52]	@ 0x34
 80089d4:	f04f 0200 	mov.w	r2, #0
 80089d8:	f04f 0300 	mov.w	r3, #0
 80089dc:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80089e0:	4659      	mov	r1, fp
 80089e2:	00cb      	lsls	r3, r1, #3
 80089e4:	4651      	mov	r1, sl
 80089e6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80089ea:	4651      	mov	r1, sl
 80089ec:	00ca      	lsls	r2, r1, #3
 80089ee:	4610      	mov	r0, r2
 80089f0:	4619      	mov	r1, r3
 80089f2:	4603      	mov	r3, r0
 80089f4:	4642      	mov	r2, r8
 80089f6:	189b      	adds	r3, r3, r2
 80089f8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80089fc:	464b      	mov	r3, r9
 80089fe:	460a      	mov	r2, r1
 8008a00:	eb42 0303 	adc.w	r3, r2, r3
 8008a04:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8008a08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008a0c:	685b      	ldr	r3, [r3, #4]
 8008a0e:	2200      	movs	r2, #0
 8008a10:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8008a14:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8008a18:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8008a1c:	460b      	mov	r3, r1
 8008a1e:	18db      	adds	r3, r3, r3
 8008a20:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008a22:	4613      	mov	r3, r2
 8008a24:	eb42 0303 	adc.w	r3, r2, r3
 8008a28:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a2a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008a2e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8008a32:	f7f8 f929 	bl	8000c88 <__aeabi_uldivmod>
 8008a36:	4602      	mov	r2, r0
 8008a38:	460b      	mov	r3, r1
 8008a3a:	4b0d      	ldr	r3, [pc, #52]	@ (8008a70 <UART_SetConfig+0x2d4>)
 8008a3c:	fba3 1302 	umull	r1, r3, r3, r2
 8008a40:	095b      	lsrs	r3, r3, #5
 8008a42:	2164      	movs	r1, #100	@ 0x64
 8008a44:	fb01 f303 	mul.w	r3, r1, r3
 8008a48:	1ad3      	subs	r3, r2, r3
 8008a4a:	00db      	lsls	r3, r3, #3
 8008a4c:	3332      	adds	r3, #50	@ 0x32
 8008a4e:	4a08      	ldr	r2, [pc, #32]	@ (8008a70 <UART_SetConfig+0x2d4>)
 8008a50:	fba2 2303 	umull	r2, r3, r2, r3
 8008a54:	095b      	lsrs	r3, r3, #5
 8008a56:	f003 0207 	and.w	r2, r3, #7
 8008a5a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008a5e:	681b      	ldr	r3, [r3, #0]
 8008a60:	4422      	add	r2, r4
 8008a62:	609a      	str	r2, [r3, #8]
 8008a64:	e106      	b.n	8008c74 <UART_SetConfig+0x4d8>
 8008a66:	bf00      	nop
 8008a68:	40011000 	.word	0x40011000
 8008a6c:	40011400 	.word	0x40011400
 8008a70:	51eb851f 	.word	0x51eb851f
 8008a74:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008a78:	2200      	movs	r2, #0
 8008a7a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8008a7e:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8008a82:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8008a86:	4642      	mov	r2, r8
 8008a88:	464b      	mov	r3, r9
 8008a8a:	1891      	adds	r1, r2, r2
 8008a8c:	6239      	str	r1, [r7, #32]
 8008a8e:	415b      	adcs	r3, r3
 8008a90:	627b      	str	r3, [r7, #36]	@ 0x24
 8008a92:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8008a96:	4641      	mov	r1, r8
 8008a98:	1854      	adds	r4, r2, r1
 8008a9a:	4649      	mov	r1, r9
 8008a9c:	eb43 0501 	adc.w	r5, r3, r1
 8008aa0:	f04f 0200 	mov.w	r2, #0
 8008aa4:	f04f 0300 	mov.w	r3, #0
 8008aa8:	00eb      	lsls	r3, r5, #3
 8008aaa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008aae:	00e2      	lsls	r2, r4, #3
 8008ab0:	4614      	mov	r4, r2
 8008ab2:	461d      	mov	r5, r3
 8008ab4:	4643      	mov	r3, r8
 8008ab6:	18e3      	adds	r3, r4, r3
 8008ab8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008abc:	464b      	mov	r3, r9
 8008abe:	eb45 0303 	adc.w	r3, r5, r3
 8008ac2:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8008ac6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008aca:	685b      	ldr	r3, [r3, #4]
 8008acc:	2200      	movs	r2, #0
 8008ace:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8008ad2:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8008ad6:	f04f 0200 	mov.w	r2, #0
 8008ada:	f04f 0300 	mov.w	r3, #0
 8008ade:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8008ae2:	4629      	mov	r1, r5
 8008ae4:	008b      	lsls	r3, r1, #2
 8008ae6:	4621      	mov	r1, r4
 8008ae8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008aec:	4621      	mov	r1, r4
 8008aee:	008a      	lsls	r2, r1, #2
 8008af0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8008af4:	f7f8 f8c8 	bl	8000c88 <__aeabi_uldivmod>
 8008af8:	4602      	mov	r2, r0
 8008afa:	460b      	mov	r3, r1
 8008afc:	4b60      	ldr	r3, [pc, #384]	@ (8008c80 <UART_SetConfig+0x4e4>)
 8008afe:	fba3 2302 	umull	r2, r3, r3, r2
 8008b02:	095b      	lsrs	r3, r3, #5
 8008b04:	011c      	lsls	r4, r3, #4
 8008b06:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8008b10:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8008b14:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8008b18:	4642      	mov	r2, r8
 8008b1a:	464b      	mov	r3, r9
 8008b1c:	1891      	adds	r1, r2, r2
 8008b1e:	61b9      	str	r1, [r7, #24]
 8008b20:	415b      	adcs	r3, r3
 8008b22:	61fb      	str	r3, [r7, #28]
 8008b24:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008b28:	4641      	mov	r1, r8
 8008b2a:	1851      	adds	r1, r2, r1
 8008b2c:	6139      	str	r1, [r7, #16]
 8008b2e:	4649      	mov	r1, r9
 8008b30:	414b      	adcs	r3, r1
 8008b32:	617b      	str	r3, [r7, #20]
 8008b34:	f04f 0200 	mov.w	r2, #0
 8008b38:	f04f 0300 	mov.w	r3, #0
 8008b3c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8008b40:	4659      	mov	r1, fp
 8008b42:	00cb      	lsls	r3, r1, #3
 8008b44:	4651      	mov	r1, sl
 8008b46:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008b4a:	4651      	mov	r1, sl
 8008b4c:	00ca      	lsls	r2, r1, #3
 8008b4e:	4610      	mov	r0, r2
 8008b50:	4619      	mov	r1, r3
 8008b52:	4603      	mov	r3, r0
 8008b54:	4642      	mov	r2, r8
 8008b56:	189b      	adds	r3, r3, r2
 8008b58:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8008b5c:	464b      	mov	r3, r9
 8008b5e:	460a      	mov	r2, r1
 8008b60:	eb42 0303 	adc.w	r3, r2, r3
 8008b64:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8008b68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008b6c:	685b      	ldr	r3, [r3, #4]
 8008b6e:	2200      	movs	r2, #0
 8008b70:	67bb      	str	r3, [r7, #120]	@ 0x78
 8008b72:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8008b74:	f04f 0200 	mov.w	r2, #0
 8008b78:	f04f 0300 	mov.w	r3, #0
 8008b7c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8008b80:	4649      	mov	r1, r9
 8008b82:	008b      	lsls	r3, r1, #2
 8008b84:	4641      	mov	r1, r8
 8008b86:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008b8a:	4641      	mov	r1, r8
 8008b8c:	008a      	lsls	r2, r1, #2
 8008b8e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8008b92:	f7f8 f879 	bl	8000c88 <__aeabi_uldivmod>
 8008b96:	4602      	mov	r2, r0
 8008b98:	460b      	mov	r3, r1
 8008b9a:	4611      	mov	r1, r2
 8008b9c:	4b38      	ldr	r3, [pc, #224]	@ (8008c80 <UART_SetConfig+0x4e4>)
 8008b9e:	fba3 2301 	umull	r2, r3, r3, r1
 8008ba2:	095b      	lsrs	r3, r3, #5
 8008ba4:	2264      	movs	r2, #100	@ 0x64
 8008ba6:	fb02 f303 	mul.w	r3, r2, r3
 8008baa:	1acb      	subs	r3, r1, r3
 8008bac:	011b      	lsls	r3, r3, #4
 8008bae:	3332      	adds	r3, #50	@ 0x32
 8008bb0:	4a33      	ldr	r2, [pc, #204]	@ (8008c80 <UART_SetConfig+0x4e4>)
 8008bb2:	fba2 2303 	umull	r2, r3, r2, r3
 8008bb6:	095b      	lsrs	r3, r3, #5
 8008bb8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008bbc:	441c      	add	r4, r3
 8008bbe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008bc2:	2200      	movs	r2, #0
 8008bc4:	673b      	str	r3, [r7, #112]	@ 0x70
 8008bc6:	677a      	str	r2, [r7, #116]	@ 0x74
 8008bc8:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8008bcc:	4642      	mov	r2, r8
 8008bce:	464b      	mov	r3, r9
 8008bd0:	1891      	adds	r1, r2, r2
 8008bd2:	60b9      	str	r1, [r7, #8]
 8008bd4:	415b      	adcs	r3, r3
 8008bd6:	60fb      	str	r3, [r7, #12]
 8008bd8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008bdc:	4641      	mov	r1, r8
 8008bde:	1851      	adds	r1, r2, r1
 8008be0:	6039      	str	r1, [r7, #0]
 8008be2:	4649      	mov	r1, r9
 8008be4:	414b      	adcs	r3, r1
 8008be6:	607b      	str	r3, [r7, #4]
 8008be8:	f04f 0200 	mov.w	r2, #0
 8008bec:	f04f 0300 	mov.w	r3, #0
 8008bf0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8008bf4:	4659      	mov	r1, fp
 8008bf6:	00cb      	lsls	r3, r1, #3
 8008bf8:	4651      	mov	r1, sl
 8008bfa:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008bfe:	4651      	mov	r1, sl
 8008c00:	00ca      	lsls	r2, r1, #3
 8008c02:	4610      	mov	r0, r2
 8008c04:	4619      	mov	r1, r3
 8008c06:	4603      	mov	r3, r0
 8008c08:	4642      	mov	r2, r8
 8008c0a:	189b      	adds	r3, r3, r2
 8008c0c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008c0e:	464b      	mov	r3, r9
 8008c10:	460a      	mov	r2, r1
 8008c12:	eb42 0303 	adc.w	r3, r2, r3
 8008c16:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8008c18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008c1c:	685b      	ldr	r3, [r3, #4]
 8008c1e:	2200      	movs	r2, #0
 8008c20:	663b      	str	r3, [r7, #96]	@ 0x60
 8008c22:	667a      	str	r2, [r7, #100]	@ 0x64
 8008c24:	f04f 0200 	mov.w	r2, #0
 8008c28:	f04f 0300 	mov.w	r3, #0
 8008c2c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8008c30:	4649      	mov	r1, r9
 8008c32:	008b      	lsls	r3, r1, #2
 8008c34:	4641      	mov	r1, r8
 8008c36:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008c3a:	4641      	mov	r1, r8
 8008c3c:	008a      	lsls	r2, r1, #2
 8008c3e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008c42:	f7f8 f821 	bl	8000c88 <__aeabi_uldivmod>
 8008c46:	4602      	mov	r2, r0
 8008c48:	460b      	mov	r3, r1
 8008c4a:	4b0d      	ldr	r3, [pc, #52]	@ (8008c80 <UART_SetConfig+0x4e4>)
 8008c4c:	fba3 1302 	umull	r1, r3, r3, r2
 8008c50:	095b      	lsrs	r3, r3, #5
 8008c52:	2164      	movs	r1, #100	@ 0x64
 8008c54:	fb01 f303 	mul.w	r3, r1, r3
 8008c58:	1ad3      	subs	r3, r2, r3
 8008c5a:	011b      	lsls	r3, r3, #4
 8008c5c:	3332      	adds	r3, #50	@ 0x32
 8008c5e:	4a08      	ldr	r2, [pc, #32]	@ (8008c80 <UART_SetConfig+0x4e4>)
 8008c60:	fba2 2303 	umull	r2, r3, r2, r3
 8008c64:	095b      	lsrs	r3, r3, #5
 8008c66:	f003 020f 	and.w	r2, r3, #15
 8008c6a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008c6e:	681b      	ldr	r3, [r3, #0]
 8008c70:	4422      	add	r2, r4
 8008c72:	609a      	str	r2, [r3, #8]
 8008c74:	bf00      	nop
 8008c76:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8008c7a:	46bd      	mov	sp, r7
 8008c7c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008c80:	51eb851f 	.word	0x51eb851f

08008c84 <USB_CoreInit>:
 8008c84:	b084      	sub	sp, #16
 8008c86:	b580      	push	{r7, lr}
 8008c88:	b084      	sub	sp, #16
 8008c8a:	af00      	add	r7, sp, #0
 8008c8c:	6078      	str	r0, [r7, #4]
 8008c8e:	f107 001c 	add.w	r0, r7, #28
 8008c92:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8008c96:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c98:	2b01      	cmp	r3, #1
 8008c9a:	d122      	bne.n	8008ce2 <USB_CoreInit+0x5e>
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008ca0:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	639a      	str	r2, [r3, #56]	@ 0x38
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	68db      	ldr	r3, [r3, #12]
 8008cac:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8008cb0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008cb4:	687a      	ldr	r2, [r7, #4]
 8008cb6:	60d3      	str	r3, [r2, #12]
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	68db      	ldr	r3, [r3, #12]
 8008cbc:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	60da      	str	r2, [r3, #12]
 8008cc4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008cc6:	2b01      	cmp	r3, #1
 8008cc8:	d105      	bne.n	8008cd6 <USB_CoreInit+0x52>
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	68db      	ldr	r3, [r3, #12]
 8008cce:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	60da      	str	r2, [r3, #12]
 8008cd6:	6878      	ldr	r0, [r7, #4]
 8008cd8:	f000 f9c0 	bl	800905c <USB_CoreReset>
 8008cdc:	4603      	mov	r3, r0
 8008cde:	73fb      	strb	r3, [r7, #15]
 8008ce0:	e01a      	b.n	8008d18 <USB_CoreInit+0x94>
 8008ce2:	687b      	ldr	r3, [r7, #4]
 8008ce4:	68db      	ldr	r3, [r3, #12]
 8008ce6:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	60da      	str	r2, [r3, #12]
 8008cee:	6878      	ldr	r0, [r7, #4]
 8008cf0:	f000 f9b4 	bl	800905c <USB_CoreReset>
 8008cf4:	4603      	mov	r3, r0
 8008cf6:	73fb      	strb	r3, [r7, #15]
 8008cf8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8008cfa:	2b00      	cmp	r3, #0
 8008cfc:	d106      	bne.n	8008d0c <USB_CoreInit+0x88>
 8008cfe:	687b      	ldr	r3, [r7, #4]
 8008d00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008d02:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	639a      	str	r2, [r3, #56]	@ 0x38
 8008d0a:	e005      	b.n	8008d18 <USB_CoreInit+0x94>
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008d10:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	639a      	str	r2, [r3, #56]	@ 0x38
 8008d18:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d1a:	2b01      	cmp	r3, #1
 8008d1c:	d10b      	bne.n	8008d36 <USB_CoreInit+0xb2>
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	689b      	ldr	r3, [r3, #8]
 8008d22:	f043 0206 	orr.w	r2, r3, #6
 8008d26:	687b      	ldr	r3, [r7, #4]
 8008d28:	609a      	str	r2, [r3, #8]
 8008d2a:	687b      	ldr	r3, [r7, #4]
 8008d2c:	689b      	ldr	r3, [r3, #8]
 8008d2e:	f043 0220 	orr.w	r2, r3, #32
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	609a      	str	r2, [r3, #8]
 8008d36:	7bfb      	ldrb	r3, [r7, #15]
 8008d38:	4618      	mov	r0, r3
 8008d3a:	3710      	adds	r7, #16
 8008d3c:	46bd      	mov	sp, r7
 8008d3e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8008d42:	b004      	add	sp, #16
 8008d44:	4770      	bx	lr

08008d46 <USB_EnableGlobalInt>:
 8008d46:	b480      	push	{r7}
 8008d48:	b083      	sub	sp, #12
 8008d4a:	af00      	add	r7, sp, #0
 8008d4c:	6078      	str	r0, [r7, #4]
 8008d4e:	687b      	ldr	r3, [r7, #4]
 8008d50:	689b      	ldr	r3, [r3, #8]
 8008d52:	f043 0201 	orr.w	r2, r3, #1
 8008d56:	687b      	ldr	r3, [r7, #4]
 8008d58:	609a      	str	r2, [r3, #8]
 8008d5a:	2300      	movs	r3, #0
 8008d5c:	4618      	mov	r0, r3
 8008d5e:	370c      	adds	r7, #12
 8008d60:	46bd      	mov	sp, r7
 8008d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d66:	4770      	bx	lr

08008d68 <USB_DisableGlobalInt>:
 8008d68:	b480      	push	{r7}
 8008d6a:	b083      	sub	sp, #12
 8008d6c:	af00      	add	r7, sp, #0
 8008d6e:	6078      	str	r0, [r7, #4]
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	689b      	ldr	r3, [r3, #8]
 8008d74:	f023 0201 	bic.w	r2, r3, #1
 8008d78:	687b      	ldr	r3, [r7, #4]
 8008d7a:	609a      	str	r2, [r3, #8]
 8008d7c:	2300      	movs	r3, #0
 8008d7e:	4618      	mov	r0, r3
 8008d80:	370c      	adds	r7, #12
 8008d82:	46bd      	mov	sp, r7
 8008d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d88:	4770      	bx	lr

08008d8a <USB_SetCurrentMode>:
 8008d8a:	b580      	push	{r7, lr}
 8008d8c:	b084      	sub	sp, #16
 8008d8e:	af00      	add	r7, sp, #0
 8008d90:	6078      	str	r0, [r7, #4]
 8008d92:	460b      	mov	r3, r1
 8008d94:	70fb      	strb	r3, [r7, #3]
 8008d96:	2300      	movs	r3, #0
 8008d98:	60fb      	str	r3, [r7, #12]
 8008d9a:	687b      	ldr	r3, [r7, #4]
 8008d9c:	68db      	ldr	r3, [r3, #12]
 8008d9e:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	60da      	str	r2, [r3, #12]
 8008da6:	78fb      	ldrb	r3, [r7, #3]
 8008da8:	2b01      	cmp	r3, #1
 8008daa:	d115      	bne.n	8008dd8 <USB_SetCurrentMode+0x4e>
 8008dac:	687b      	ldr	r3, [r7, #4]
 8008dae:	68db      	ldr	r3, [r3, #12]
 8008db0:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	60da      	str	r2, [r3, #12]
 8008db8:	2001      	movs	r0, #1
 8008dba:	f7fb f819 	bl	8003df0 <HAL_Delay>
 8008dbe:	68fb      	ldr	r3, [r7, #12]
 8008dc0:	3301      	adds	r3, #1
 8008dc2:	60fb      	str	r3, [r7, #12]
 8008dc4:	6878      	ldr	r0, [r7, #4]
 8008dc6:	f000 f93a 	bl	800903e <USB_GetMode>
 8008dca:	4603      	mov	r3, r0
 8008dcc:	2b01      	cmp	r3, #1
 8008dce:	d01e      	beq.n	8008e0e <USB_SetCurrentMode+0x84>
 8008dd0:	68fb      	ldr	r3, [r7, #12]
 8008dd2:	2b31      	cmp	r3, #49	@ 0x31
 8008dd4:	d9f0      	bls.n	8008db8 <USB_SetCurrentMode+0x2e>
 8008dd6:	e01a      	b.n	8008e0e <USB_SetCurrentMode+0x84>
 8008dd8:	78fb      	ldrb	r3, [r7, #3]
 8008dda:	2b00      	cmp	r3, #0
 8008ddc:	d115      	bne.n	8008e0a <USB_SetCurrentMode+0x80>
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	68db      	ldr	r3, [r3, #12]
 8008de2:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	60da      	str	r2, [r3, #12]
 8008dea:	2001      	movs	r0, #1
 8008dec:	f7fb f800 	bl	8003df0 <HAL_Delay>
 8008df0:	68fb      	ldr	r3, [r7, #12]
 8008df2:	3301      	adds	r3, #1
 8008df4:	60fb      	str	r3, [r7, #12]
 8008df6:	6878      	ldr	r0, [r7, #4]
 8008df8:	f000 f921 	bl	800903e <USB_GetMode>
 8008dfc:	4603      	mov	r3, r0
 8008dfe:	2b00      	cmp	r3, #0
 8008e00:	d005      	beq.n	8008e0e <USB_SetCurrentMode+0x84>
 8008e02:	68fb      	ldr	r3, [r7, #12]
 8008e04:	2b31      	cmp	r3, #49	@ 0x31
 8008e06:	d9f0      	bls.n	8008dea <USB_SetCurrentMode+0x60>
 8008e08:	e001      	b.n	8008e0e <USB_SetCurrentMode+0x84>
 8008e0a:	2301      	movs	r3, #1
 8008e0c:	e005      	b.n	8008e1a <USB_SetCurrentMode+0x90>
 8008e0e:	68fb      	ldr	r3, [r7, #12]
 8008e10:	2b32      	cmp	r3, #50	@ 0x32
 8008e12:	d101      	bne.n	8008e18 <USB_SetCurrentMode+0x8e>
 8008e14:	2301      	movs	r3, #1
 8008e16:	e000      	b.n	8008e1a <USB_SetCurrentMode+0x90>
 8008e18:	2300      	movs	r3, #0
 8008e1a:	4618      	mov	r0, r3
 8008e1c:	3710      	adds	r7, #16
 8008e1e:	46bd      	mov	sp, r7
 8008e20:	bd80      	pop	{r7, pc}
	...

08008e24 <USB_FlushTxFifo>:
 8008e24:	b480      	push	{r7}
 8008e26:	b085      	sub	sp, #20
 8008e28:	af00      	add	r7, sp, #0
 8008e2a:	6078      	str	r0, [r7, #4]
 8008e2c:	6039      	str	r1, [r7, #0]
 8008e2e:	2300      	movs	r3, #0
 8008e30:	60fb      	str	r3, [r7, #12]
 8008e32:	68fb      	ldr	r3, [r7, #12]
 8008e34:	3301      	adds	r3, #1
 8008e36:	60fb      	str	r3, [r7, #12]
 8008e38:	68fb      	ldr	r3, [r7, #12]
 8008e3a:	4a13      	ldr	r2, [pc, #76]	@ (8008e88 <USB_FlushTxFifo+0x64>)
 8008e3c:	4293      	cmp	r3, r2
 8008e3e:	d901      	bls.n	8008e44 <USB_FlushTxFifo+0x20>
 8008e40:	2303      	movs	r3, #3
 8008e42:	e01b      	b.n	8008e7c <USB_FlushTxFifo+0x58>
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	691b      	ldr	r3, [r3, #16]
 8008e48:	2b00      	cmp	r3, #0
 8008e4a:	daf2      	bge.n	8008e32 <USB_FlushTxFifo+0xe>
 8008e4c:	2300      	movs	r3, #0
 8008e4e:	60fb      	str	r3, [r7, #12]
 8008e50:	683b      	ldr	r3, [r7, #0]
 8008e52:	019b      	lsls	r3, r3, #6
 8008e54:	f043 0220 	orr.w	r2, r3, #32
 8008e58:	687b      	ldr	r3, [r7, #4]
 8008e5a:	611a      	str	r2, [r3, #16]
 8008e5c:	68fb      	ldr	r3, [r7, #12]
 8008e5e:	3301      	adds	r3, #1
 8008e60:	60fb      	str	r3, [r7, #12]
 8008e62:	68fb      	ldr	r3, [r7, #12]
 8008e64:	4a08      	ldr	r2, [pc, #32]	@ (8008e88 <USB_FlushTxFifo+0x64>)
 8008e66:	4293      	cmp	r3, r2
 8008e68:	d901      	bls.n	8008e6e <USB_FlushTxFifo+0x4a>
 8008e6a:	2303      	movs	r3, #3
 8008e6c:	e006      	b.n	8008e7c <USB_FlushTxFifo+0x58>
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	691b      	ldr	r3, [r3, #16]
 8008e72:	f003 0320 	and.w	r3, r3, #32
 8008e76:	2b20      	cmp	r3, #32
 8008e78:	d0f0      	beq.n	8008e5c <USB_FlushTxFifo+0x38>
 8008e7a:	2300      	movs	r3, #0
 8008e7c:	4618      	mov	r0, r3
 8008e7e:	3714      	adds	r7, #20
 8008e80:	46bd      	mov	sp, r7
 8008e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e86:	4770      	bx	lr
 8008e88:	00030d40 	.word	0x00030d40

08008e8c <USB_FlushRxFifo>:
 8008e8c:	b480      	push	{r7}
 8008e8e:	b085      	sub	sp, #20
 8008e90:	af00      	add	r7, sp, #0
 8008e92:	6078      	str	r0, [r7, #4]
 8008e94:	2300      	movs	r3, #0
 8008e96:	60fb      	str	r3, [r7, #12]
 8008e98:	68fb      	ldr	r3, [r7, #12]
 8008e9a:	3301      	adds	r3, #1
 8008e9c:	60fb      	str	r3, [r7, #12]
 8008e9e:	68fb      	ldr	r3, [r7, #12]
 8008ea0:	4a11      	ldr	r2, [pc, #68]	@ (8008ee8 <USB_FlushRxFifo+0x5c>)
 8008ea2:	4293      	cmp	r3, r2
 8008ea4:	d901      	bls.n	8008eaa <USB_FlushRxFifo+0x1e>
 8008ea6:	2303      	movs	r3, #3
 8008ea8:	e018      	b.n	8008edc <USB_FlushRxFifo+0x50>
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	691b      	ldr	r3, [r3, #16]
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	daf2      	bge.n	8008e98 <USB_FlushRxFifo+0xc>
 8008eb2:	2300      	movs	r3, #0
 8008eb4:	60fb      	str	r3, [r7, #12]
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	2210      	movs	r2, #16
 8008eba:	611a      	str	r2, [r3, #16]
 8008ebc:	68fb      	ldr	r3, [r7, #12]
 8008ebe:	3301      	adds	r3, #1
 8008ec0:	60fb      	str	r3, [r7, #12]
 8008ec2:	68fb      	ldr	r3, [r7, #12]
 8008ec4:	4a08      	ldr	r2, [pc, #32]	@ (8008ee8 <USB_FlushRxFifo+0x5c>)
 8008ec6:	4293      	cmp	r3, r2
 8008ec8:	d901      	bls.n	8008ece <USB_FlushRxFifo+0x42>
 8008eca:	2303      	movs	r3, #3
 8008ecc:	e006      	b.n	8008edc <USB_FlushRxFifo+0x50>
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	691b      	ldr	r3, [r3, #16]
 8008ed2:	f003 0310 	and.w	r3, r3, #16
 8008ed6:	2b10      	cmp	r3, #16
 8008ed8:	d0f0      	beq.n	8008ebc <USB_FlushRxFifo+0x30>
 8008eda:	2300      	movs	r3, #0
 8008edc:	4618      	mov	r0, r3
 8008ede:	3714      	adds	r7, #20
 8008ee0:	46bd      	mov	sp, r7
 8008ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ee6:	4770      	bx	lr
 8008ee8:	00030d40 	.word	0x00030d40

08008eec <USB_WritePacket>:
 8008eec:	b480      	push	{r7}
 8008eee:	b089      	sub	sp, #36	@ 0x24
 8008ef0:	af00      	add	r7, sp, #0
 8008ef2:	60f8      	str	r0, [r7, #12]
 8008ef4:	60b9      	str	r1, [r7, #8]
 8008ef6:	4611      	mov	r1, r2
 8008ef8:	461a      	mov	r2, r3
 8008efa:	460b      	mov	r3, r1
 8008efc:	71fb      	strb	r3, [r7, #7]
 8008efe:	4613      	mov	r3, r2
 8008f00:	80bb      	strh	r3, [r7, #4]
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	617b      	str	r3, [r7, #20]
 8008f06:	68bb      	ldr	r3, [r7, #8]
 8008f08:	61fb      	str	r3, [r7, #28]
 8008f0a:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008f0e:	2b00      	cmp	r3, #0
 8008f10:	d123      	bne.n	8008f5a <USB_WritePacket+0x6e>
 8008f12:	88bb      	ldrh	r3, [r7, #4]
 8008f14:	3303      	adds	r3, #3
 8008f16:	089b      	lsrs	r3, r3, #2
 8008f18:	613b      	str	r3, [r7, #16]
 8008f1a:	2300      	movs	r3, #0
 8008f1c:	61bb      	str	r3, [r7, #24]
 8008f1e:	e018      	b.n	8008f52 <USB_WritePacket+0x66>
 8008f20:	79fb      	ldrb	r3, [r7, #7]
 8008f22:	031a      	lsls	r2, r3, #12
 8008f24:	697b      	ldr	r3, [r7, #20]
 8008f26:	4413      	add	r3, r2
 8008f28:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008f2c:	461a      	mov	r2, r3
 8008f2e:	69fb      	ldr	r3, [r7, #28]
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	6013      	str	r3, [r2, #0]
 8008f34:	69fb      	ldr	r3, [r7, #28]
 8008f36:	3301      	adds	r3, #1
 8008f38:	61fb      	str	r3, [r7, #28]
 8008f3a:	69fb      	ldr	r3, [r7, #28]
 8008f3c:	3301      	adds	r3, #1
 8008f3e:	61fb      	str	r3, [r7, #28]
 8008f40:	69fb      	ldr	r3, [r7, #28]
 8008f42:	3301      	adds	r3, #1
 8008f44:	61fb      	str	r3, [r7, #28]
 8008f46:	69fb      	ldr	r3, [r7, #28]
 8008f48:	3301      	adds	r3, #1
 8008f4a:	61fb      	str	r3, [r7, #28]
 8008f4c:	69bb      	ldr	r3, [r7, #24]
 8008f4e:	3301      	adds	r3, #1
 8008f50:	61bb      	str	r3, [r7, #24]
 8008f52:	69ba      	ldr	r2, [r7, #24]
 8008f54:	693b      	ldr	r3, [r7, #16]
 8008f56:	429a      	cmp	r2, r3
 8008f58:	d3e2      	bcc.n	8008f20 <USB_WritePacket+0x34>
 8008f5a:	2300      	movs	r3, #0
 8008f5c:	4618      	mov	r0, r3
 8008f5e:	3724      	adds	r7, #36	@ 0x24
 8008f60:	46bd      	mov	sp, r7
 8008f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f66:	4770      	bx	lr

08008f68 <USB_ReadPacket>:
 8008f68:	b480      	push	{r7}
 8008f6a:	b08b      	sub	sp, #44	@ 0x2c
 8008f6c:	af00      	add	r7, sp, #0
 8008f6e:	60f8      	str	r0, [r7, #12]
 8008f70:	60b9      	str	r1, [r7, #8]
 8008f72:	4613      	mov	r3, r2
 8008f74:	80fb      	strh	r3, [r7, #6]
 8008f76:	68fb      	ldr	r3, [r7, #12]
 8008f78:	61bb      	str	r3, [r7, #24]
 8008f7a:	68bb      	ldr	r3, [r7, #8]
 8008f7c:	627b      	str	r3, [r7, #36]	@ 0x24
 8008f7e:	88fb      	ldrh	r3, [r7, #6]
 8008f80:	089b      	lsrs	r3, r3, #2
 8008f82:	b29b      	uxth	r3, r3
 8008f84:	617b      	str	r3, [r7, #20]
 8008f86:	88fb      	ldrh	r3, [r7, #6]
 8008f88:	f003 0303 	and.w	r3, r3, #3
 8008f8c:	83fb      	strh	r3, [r7, #30]
 8008f8e:	2300      	movs	r3, #0
 8008f90:	623b      	str	r3, [r7, #32]
 8008f92:	e014      	b.n	8008fbe <USB_ReadPacket+0x56>
 8008f94:	69bb      	ldr	r3, [r7, #24]
 8008f96:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008f9a:	681a      	ldr	r2, [r3, #0]
 8008f9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f9e:	601a      	str	r2, [r3, #0]
 8008fa0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fa2:	3301      	adds	r3, #1
 8008fa4:	627b      	str	r3, [r7, #36]	@ 0x24
 8008fa6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fa8:	3301      	adds	r3, #1
 8008faa:	627b      	str	r3, [r7, #36]	@ 0x24
 8008fac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fae:	3301      	adds	r3, #1
 8008fb0:	627b      	str	r3, [r7, #36]	@ 0x24
 8008fb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fb4:	3301      	adds	r3, #1
 8008fb6:	627b      	str	r3, [r7, #36]	@ 0x24
 8008fb8:	6a3b      	ldr	r3, [r7, #32]
 8008fba:	3301      	adds	r3, #1
 8008fbc:	623b      	str	r3, [r7, #32]
 8008fbe:	6a3a      	ldr	r2, [r7, #32]
 8008fc0:	697b      	ldr	r3, [r7, #20]
 8008fc2:	429a      	cmp	r2, r3
 8008fc4:	d3e6      	bcc.n	8008f94 <USB_ReadPacket+0x2c>
 8008fc6:	8bfb      	ldrh	r3, [r7, #30]
 8008fc8:	2b00      	cmp	r3, #0
 8008fca:	d01e      	beq.n	800900a <USB_ReadPacket+0xa2>
 8008fcc:	2300      	movs	r3, #0
 8008fce:	623b      	str	r3, [r7, #32]
 8008fd0:	69bb      	ldr	r3, [r7, #24]
 8008fd2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008fd6:	461a      	mov	r2, r3
 8008fd8:	f107 0310 	add.w	r3, r7, #16
 8008fdc:	6812      	ldr	r2, [r2, #0]
 8008fde:	601a      	str	r2, [r3, #0]
 8008fe0:	693a      	ldr	r2, [r7, #16]
 8008fe2:	6a3b      	ldr	r3, [r7, #32]
 8008fe4:	b2db      	uxtb	r3, r3
 8008fe6:	00db      	lsls	r3, r3, #3
 8008fe8:	fa22 f303 	lsr.w	r3, r2, r3
 8008fec:	b2da      	uxtb	r2, r3
 8008fee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ff0:	701a      	strb	r2, [r3, #0]
 8008ff2:	6a3b      	ldr	r3, [r7, #32]
 8008ff4:	3301      	adds	r3, #1
 8008ff6:	623b      	str	r3, [r7, #32]
 8008ff8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ffa:	3301      	adds	r3, #1
 8008ffc:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ffe:	8bfb      	ldrh	r3, [r7, #30]
 8009000:	3b01      	subs	r3, #1
 8009002:	83fb      	strh	r3, [r7, #30]
 8009004:	8bfb      	ldrh	r3, [r7, #30]
 8009006:	2b00      	cmp	r3, #0
 8009008:	d1ea      	bne.n	8008fe0 <USB_ReadPacket+0x78>
 800900a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800900c:	4618      	mov	r0, r3
 800900e:	372c      	adds	r7, #44	@ 0x2c
 8009010:	46bd      	mov	sp, r7
 8009012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009016:	4770      	bx	lr

08009018 <USB_ReadInterrupts>:
 8009018:	b480      	push	{r7}
 800901a:	b085      	sub	sp, #20
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
 8009020:	687b      	ldr	r3, [r7, #4]
 8009022:	695b      	ldr	r3, [r3, #20]
 8009024:	60fb      	str	r3, [r7, #12]
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	699b      	ldr	r3, [r3, #24]
 800902a:	68fa      	ldr	r2, [r7, #12]
 800902c:	4013      	ands	r3, r2
 800902e:	60fb      	str	r3, [r7, #12]
 8009030:	68fb      	ldr	r3, [r7, #12]
 8009032:	4618      	mov	r0, r3
 8009034:	3714      	adds	r7, #20
 8009036:	46bd      	mov	sp, r7
 8009038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903c:	4770      	bx	lr

0800903e <USB_GetMode>:
 800903e:	b480      	push	{r7}
 8009040:	b083      	sub	sp, #12
 8009042:	af00      	add	r7, sp, #0
 8009044:	6078      	str	r0, [r7, #4]
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	695b      	ldr	r3, [r3, #20]
 800904a:	f003 0301 	and.w	r3, r3, #1
 800904e:	4618      	mov	r0, r3
 8009050:	370c      	adds	r7, #12
 8009052:	46bd      	mov	sp, r7
 8009054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009058:	4770      	bx	lr
	...

0800905c <USB_CoreReset>:
 800905c:	b480      	push	{r7}
 800905e:	b085      	sub	sp, #20
 8009060:	af00      	add	r7, sp, #0
 8009062:	6078      	str	r0, [r7, #4]
 8009064:	2300      	movs	r3, #0
 8009066:	60fb      	str	r3, [r7, #12]
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	3301      	adds	r3, #1
 800906c:	60fb      	str	r3, [r7, #12]
 800906e:	68fb      	ldr	r3, [r7, #12]
 8009070:	4a13      	ldr	r2, [pc, #76]	@ (80090c0 <USB_CoreReset+0x64>)
 8009072:	4293      	cmp	r3, r2
 8009074:	d901      	bls.n	800907a <USB_CoreReset+0x1e>
 8009076:	2303      	movs	r3, #3
 8009078:	e01b      	b.n	80090b2 <USB_CoreReset+0x56>
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	691b      	ldr	r3, [r3, #16]
 800907e:	2b00      	cmp	r3, #0
 8009080:	daf2      	bge.n	8009068 <USB_CoreReset+0xc>
 8009082:	2300      	movs	r3, #0
 8009084:	60fb      	str	r3, [r7, #12]
 8009086:	687b      	ldr	r3, [r7, #4]
 8009088:	691b      	ldr	r3, [r3, #16]
 800908a:	f043 0201 	orr.w	r2, r3, #1
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	611a      	str	r2, [r3, #16]
 8009092:	68fb      	ldr	r3, [r7, #12]
 8009094:	3301      	adds	r3, #1
 8009096:	60fb      	str	r3, [r7, #12]
 8009098:	68fb      	ldr	r3, [r7, #12]
 800909a:	4a09      	ldr	r2, [pc, #36]	@ (80090c0 <USB_CoreReset+0x64>)
 800909c:	4293      	cmp	r3, r2
 800909e:	d901      	bls.n	80090a4 <USB_CoreReset+0x48>
 80090a0:	2303      	movs	r3, #3
 80090a2:	e006      	b.n	80090b2 <USB_CoreReset+0x56>
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	691b      	ldr	r3, [r3, #16]
 80090a8:	f003 0301 	and.w	r3, r3, #1
 80090ac:	2b01      	cmp	r3, #1
 80090ae:	d0f0      	beq.n	8009092 <USB_CoreReset+0x36>
 80090b0:	2300      	movs	r3, #0
 80090b2:	4618      	mov	r0, r3
 80090b4:	3714      	adds	r7, #20
 80090b6:	46bd      	mov	sp, r7
 80090b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090bc:	4770      	bx	lr
 80090be:	bf00      	nop
 80090c0:	00030d40 	.word	0x00030d40

080090c4 <USB_HostInit>:
 80090c4:	b084      	sub	sp, #16
 80090c6:	b580      	push	{r7, lr}
 80090c8:	b086      	sub	sp, #24
 80090ca:	af00      	add	r7, sp, #0
 80090cc:	6078      	str	r0, [r7, #4]
 80090ce:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 80090d2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80090d6:	2300      	movs	r3, #0
 80090d8:	75fb      	strb	r3, [r7, #23]
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	60fb      	str	r3, [r7, #12]
 80090de:	68fb      	ldr	r3, [r7, #12]
 80090e0:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 80090e4:	461a      	mov	r2, r3
 80090e6:	2300      	movs	r3, #0
 80090e8:	6013      	str	r3, [r2, #0]
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80090ee:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	639a      	str	r2, [r3, #56]	@ 0x38
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80090fa:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 80090fe:	687b      	ldr	r3, [r7, #4]
 8009100:	639a      	str	r2, [r3, #56]	@ 0x38
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009106:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	639a      	str	r2, [r3, #56]	@ 0x38
 800910e:	687b      	ldr	r3, [r7, #4]
 8009110:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009112:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009116:	2b00      	cmp	r3, #0
 8009118:	d018      	beq.n	800914c <USB_HostInit+0x88>
 800911a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800911c:	2b01      	cmp	r3, #1
 800911e:	d10a      	bne.n	8009136 <USB_HostInit+0x72>
 8009120:	68fb      	ldr	r3, [r7, #12]
 8009122:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009126:	681b      	ldr	r3, [r3, #0]
 8009128:	68fa      	ldr	r2, [r7, #12]
 800912a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800912e:	f043 0304 	orr.w	r3, r3, #4
 8009132:	6013      	str	r3, [r2, #0]
 8009134:	e014      	b.n	8009160 <USB_HostInit+0x9c>
 8009136:	68fb      	ldr	r3, [r7, #12]
 8009138:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800913c:	681b      	ldr	r3, [r3, #0]
 800913e:	68fa      	ldr	r2, [r7, #12]
 8009140:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009144:	f023 0304 	bic.w	r3, r3, #4
 8009148:	6013      	str	r3, [r2, #0]
 800914a:	e009      	b.n	8009160 <USB_HostInit+0x9c>
 800914c:	68fb      	ldr	r3, [r7, #12]
 800914e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009152:	681b      	ldr	r3, [r3, #0]
 8009154:	68fa      	ldr	r2, [r7, #12]
 8009156:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800915a:	f023 0304 	bic.w	r3, r3, #4
 800915e:	6013      	str	r3, [r2, #0]
 8009160:	2110      	movs	r1, #16
 8009162:	6878      	ldr	r0, [r7, #4]
 8009164:	f7ff fe5e 	bl	8008e24 <USB_FlushTxFifo>
 8009168:	4603      	mov	r3, r0
 800916a:	2b00      	cmp	r3, #0
 800916c:	d001      	beq.n	8009172 <USB_HostInit+0xae>
 800916e:	2301      	movs	r3, #1
 8009170:	75fb      	strb	r3, [r7, #23]
 8009172:	6878      	ldr	r0, [r7, #4]
 8009174:	f7ff fe8a 	bl	8008e8c <USB_FlushRxFifo>
 8009178:	4603      	mov	r3, r0
 800917a:	2b00      	cmp	r3, #0
 800917c:	d001      	beq.n	8009182 <USB_HostInit+0xbe>
 800917e:	2301      	movs	r3, #1
 8009180:	75fb      	strb	r3, [r7, #23]
 8009182:	2300      	movs	r3, #0
 8009184:	613b      	str	r3, [r7, #16]
 8009186:	e015      	b.n	80091b4 <USB_HostInit+0xf0>
 8009188:	693b      	ldr	r3, [r7, #16]
 800918a:	015a      	lsls	r2, r3, #5
 800918c:	68fb      	ldr	r3, [r7, #12]
 800918e:	4413      	add	r3, r2
 8009190:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009194:	461a      	mov	r2, r3
 8009196:	f04f 33ff 	mov.w	r3, #4294967295
 800919a:	6093      	str	r3, [r2, #8]
 800919c:	693b      	ldr	r3, [r7, #16]
 800919e:	015a      	lsls	r2, r3, #5
 80091a0:	68fb      	ldr	r3, [r7, #12]
 80091a2:	4413      	add	r3, r2
 80091a4:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80091a8:	461a      	mov	r2, r3
 80091aa:	2300      	movs	r3, #0
 80091ac:	60d3      	str	r3, [r2, #12]
 80091ae:	693b      	ldr	r3, [r7, #16]
 80091b0:	3301      	adds	r3, #1
 80091b2:	613b      	str	r3, [r7, #16]
 80091b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091b6:	693a      	ldr	r2, [r7, #16]
 80091b8:	429a      	cmp	r2, r3
 80091ba:	d3e5      	bcc.n	8009188 <USB_HostInit+0xc4>
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	2200      	movs	r2, #0
 80091c0:	619a      	str	r2, [r3, #24]
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	f04f 32ff 	mov.w	r2, #4294967295
 80091c8:	615a      	str	r2, [r3, #20]
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80091ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	d00b      	beq.n	80091ee <USB_HostInit+0x12a>
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80091dc:	625a      	str	r2, [r3, #36]	@ 0x24
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	4a13      	ldr	r2, [pc, #76]	@ (8009230 <USB_HostInit+0x16c>)
 80091e2:	629a      	str	r2, [r3, #40]	@ 0x28
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	4a13      	ldr	r2, [pc, #76]	@ (8009234 <USB_HostInit+0x170>)
 80091e8:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
 80091ec:	e009      	b.n	8009202 <USB_HostInit+0x13e>
 80091ee:	687b      	ldr	r3, [r7, #4]
 80091f0:	2280      	movs	r2, #128	@ 0x80
 80091f2:	625a      	str	r2, [r3, #36]	@ 0x24
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	4a10      	ldr	r2, [pc, #64]	@ (8009238 <USB_HostInit+0x174>)
 80091f8:	629a      	str	r2, [r3, #40]	@ 0x28
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	4a0f      	ldr	r2, [pc, #60]	@ (800923c <USB_HostInit+0x178>)
 80091fe:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
 8009202:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009204:	2b00      	cmp	r3, #0
 8009206:	d105      	bne.n	8009214 <USB_HostInit+0x150>
 8009208:	687b      	ldr	r3, [r7, #4]
 800920a:	699b      	ldr	r3, [r3, #24]
 800920c:	f043 0210 	orr.w	r2, r3, #16
 8009210:	687b      	ldr	r3, [r7, #4]
 8009212:	619a      	str	r2, [r3, #24]
 8009214:	687b      	ldr	r3, [r7, #4]
 8009216:	699a      	ldr	r2, [r3, #24]
 8009218:	4b09      	ldr	r3, [pc, #36]	@ (8009240 <USB_HostInit+0x17c>)
 800921a:	4313      	orrs	r3, r2
 800921c:	687a      	ldr	r2, [r7, #4]
 800921e:	6193      	str	r3, [r2, #24]
 8009220:	7dfb      	ldrb	r3, [r7, #23]
 8009222:	4618      	mov	r0, r3
 8009224:	3718      	adds	r7, #24
 8009226:	46bd      	mov	sp, r7
 8009228:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800922c:	b004      	add	sp, #16
 800922e:	4770      	bx	lr
 8009230:	01000200 	.word	0x01000200
 8009234:	00e00300 	.word	0x00e00300
 8009238:	00600080 	.word	0x00600080
 800923c:	004000e0 	.word	0x004000e0
 8009240:	a3200008 	.word	0xa3200008

08009244 <USB_InitFSLSPClkSel>:
 8009244:	b480      	push	{r7}
 8009246:	b085      	sub	sp, #20
 8009248:	af00      	add	r7, sp, #0
 800924a:	6078      	str	r0, [r7, #4]
 800924c:	460b      	mov	r3, r1
 800924e:	70fb      	strb	r3, [r7, #3]
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	60fb      	str	r3, [r7, #12]
 8009254:	68fb      	ldr	r3, [r7, #12]
 8009256:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	68fa      	ldr	r2, [r7, #12]
 800925e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009262:	f023 0303 	bic.w	r3, r3, #3
 8009266:	6013      	str	r3, [r2, #0]
 8009268:	68fb      	ldr	r3, [r7, #12]
 800926a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800926e:	681a      	ldr	r2, [r3, #0]
 8009270:	78fb      	ldrb	r3, [r7, #3]
 8009272:	f003 0303 	and.w	r3, r3, #3
 8009276:	68f9      	ldr	r1, [r7, #12]
 8009278:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800927c:	4313      	orrs	r3, r2
 800927e:	600b      	str	r3, [r1, #0]
 8009280:	78fb      	ldrb	r3, [r7, #3]
 8009282:	2b01      	cmp	r3, #1
 8009284:	d107      	bne.n	8009296 <USB_InitFSLSPClkSel+0x52>
 8009286:	68fb      	ldr	r3, [r7, #12]
 8009288:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800928c:	461a      	mov	r2, r3
 800928e:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 8009292:	6053      	str	r3, [r2, #4]
 8009294:	e009      	b.n	80092aa <USB_InitFSLSPClkSel+0x66>
 8009296:	78fb      	ldrb	r3, [r7, #3]
 8009298:	2b02      	cmp	r3, #2
 800929a:	d106      	bne.n	80092aa <USB_InitFSLSPClkSel+0x66>
 800929c:	68fb      	ldr	r3, [r7, #12]
 800929e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80092a2:	461a      	mov	r2, r3
 80092a4:	f241 7370 	movw	r3, #6000	@ 0x1770
 80092a8:	6053      	str	r3, [r2, #4]
 80092aa:	2300      	movs	r3, #0
 80092ac:	4618      	mov	r0, r3
 80092ae:	3714      	adds	r7, #20
 80092b0:	46bd      	mov	sp, r7
 80092b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092b6:	4770      	bx	lr

080092b8 <USB_ResetPort>:
 80092b8:	b580      	push	{r7, lr}
 80092ba:	b084      	sub	sp, #16
 80092bc:	af00      	add	r7, sp, #0
 80092be:	6078      	str	r0, [r7, #4]
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	60fb      	str	r3, [r7, #12]
 80092c4:	2300      	movs	r3, #0
 80092c6:	60bb      	str	r3, [r7, #8]
 80092c8:	68fb      	ldr	r3, [r7, #12]
 80092ca:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	60bb      	str	r3, [r7, #8]
 80092d2:	68bb      	ldr	r3, [r7, #8]
 80092d4:	f023 032e 	bic.w	r3, r3, #46	@ 0x2e
 80092d8:	60bb      	str	r3, [r7, #8]
 80092da:	68bb      	ldr	r3, [r7, #8]
 80092dc:	68fa      	ldr	r2, [r7, #12]
 80092de:	f502 6288 	add.w	r2, r2, #1088	@ 0x440
 80092e2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80092e6:	6013      	str	r3, [r2, #0]
 80092e8:	2064      	movs	r0, #100	@ 0x64
 80092ea:	f7fa fd81 	bl	8003df0 <HAL_Delay>
 80092ee:	68bb      	ldr	r3, [r7, #8]
 80092f0:	68fa      	ldr	r2, [r7, #12]
 80092f2:	f502 6288 	add.w	r2, r2, #1088	@ 0x440
 80092f6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80092fa:	6013      	str	r3, [r2, #0]
 80092fc:	200a      	movs	r0, #10
 80092fe:	f7fa fd77 	bl	8003df0 <HAL_Delay>
 8009302:	2300      	movs	r3, #0
 8009304:	4618      	mov	r0, r3
 8009306:	3710      	adds	r7, #16
 8009308:	46bd      	mov	sp, r7
 800930a:	bd80      	pop	{r7, pc}

0800930c <USB_DriveVbus>:
 800930c:	b480      	push	{r7}
 800930e:	b085      	sub	sp, #20
 8009310:	af00      	add	r7, sp, #0
 8009312:	6078      	str	r0, [r7, #4]
 8009314:	460b      	mov	r3, r1
 8009316:	70fb      	strb	r3, [r7, #3]
 8009318:	687b      	ldr	r3, [r7, #4]
 800931a:	60fb      	str	r3, [r7, #12]
 800931c:	2300      	movs	r3, #0
 800931e:	60bb      	str	r3, [r7, #8]
 8009320:	68fb      	ldr	r3, [r7, #12]
 8009322:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8009326:	681b      	ldr	r3, [r3, #0]
 8009328:	60bb      	str	r3, [r7, #8]
 800932a:	68bb      	ldr	r3, [r7, #8]
 800932c:	f023 032e 	bic.w	r3, r3, #46	@ 0x2e
 8009330:	60bb      	str	r3, [r7, #8]
 8009332:	68bb      	ldr	r3, [r7, #8]
 8009334:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8009338:	2b00      	cmp	r3, #0
 800933a:	d109      	bne.n	8009350 <USB_DriveVbus+0x44>
 800933c:	78fb      	ldrb	r3, [r7, #3]
 800933e:	2b01      	cmp	r3, #1
 8009340:	d106      	bne.n	8009350 <USB_DriveVbus+0x44>
 8009342:	68bb      	ldr	r3, [r7, #8]
 8009344:	68fa      	ldr	r2, [r7, #12]
 8009346:	f502 6288 	add.w	r2, r2, #1088	@ 0x440
 800934a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800934e:	6013      	str	r3, [r2, #0]
 8009350:	68bb      	ldr	r3, [r7, #8]
 8009352:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8009356:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800935a:	d109      	bne.n	8009370 <USB_DriveVbus+0x64>
 800935c:	78fb      	ldrb	r3, [r7, #3]
 800935e:	2b00      	cmp	r3, #0
 8009360:	d106      	bne.n	8009370 <USB_DriveVbus+0x64>
 8009362:	68bb      	ldr	r3, [r7, #8]
 8009364:	68fa      	ldr	r2, [r7, #12]
 8009366:	f502 6288 	add.w	r2, r2, #1088	@ 0x440
 800936a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800936e:	6013      	str	r3, [r2, #0]
 8009370:	2300      	movs	r3, #0
 8009372:	4618      	mov	r0, r3
 8009374:	3714      	adds	r7, #20
 8009376:	46bd      	mov	sp, r7
 8009378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800937c:	4770      	bx	lr

0800937e <USB_GetHostSpeed>:
 800937e:	b480      	push	{r7}
 8009380:	b085      	sub	sp, #20
 8009382:	af00      	add	r7, sp, #0
 8009384:	6078      	str	r0, [r7, #4]
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	60fb      	str	r3, [r7, #12]
 800938a:	2300      	movs	r3, #0
 800938c:	60bb      	str	r3, [r7, #8]
 800938e:	68fb      	ldr	r3, [r7, #12]
 8009390:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8009394:	681b      	ldr	r3, [r3, #0]
 8009396:	60bb      	str	r3, [r7, #8]
 8009398:	68bb      	ldr	r3, [r7, #8]
 800939a:	0c5b      	lsrs	r3, r3, #17
 800939c:	f003 0303 	and.w	r3, r3, #3
 80093a0:	4618      	mov	r0, r3
 80093a2:	3714      	adds	r7, #20
 80093a4:	46bd      	mov	sp, r7
 80093a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093aa:	4770      	bx	lr

080093ac <USB_GetCurrentFrame>:
 80093ac:	b480      	push	{r7}
 80093ae:	b085      	sub	sp, #20
 80093b0:	af00      	add	r7, sp, #0
 80093b2:	6078      	str	r0, [r7, #4]
 80093b4:	687b      	ldr	r3, [r7, #4]
 80093b6:	60fb      	str	r3, [r7, #12]
 80093b8:	68fb      	ldr	r3, [r7, #12]
 80093ba:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80093be:	689b      	ldr	r3, [r3, #8]
 80093c0:	b29b      	uxth	r3, r3
 80093c2:	4618      	mov	r0, r3
 80093c4:	3714      	adds	r7, #20
 80093c6:	46bd      	mov	sp, r7
 80093c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093cc:	4770      	bx	lr
	...

080093d0 <USB_HC_Init>:
 80093d0:	b580      	push	{r7, lr}
 80093d2:	b088      	sub	sp, #32
 80093d4:	af00      	add	r7, sp, #0
 80093d6:	6078      	str	r0, [r7, #4]
 80093d8:	4608      	mov	r0, r1
 80093da:	4611      	mov	r1, r2
 80093dc:	461a      	mov	r2, r3
 80093de:	4603      	mov	r3, r0
 80093e0:	70fb      	strb	r3, [r7, #3]
 80093e2:	460b      	mov	r3, r1
 80093e4:	70bb      	strb	r3, [r7, #2]
 80093e6:	4613      	mov	r3, r2
 80093e8:	707b      	strb	r3, [r7, #1]
 80093ea:	2300      	movs	r3, #0
 80093ec:	77fb      	strb	r3, [r7, #31]
 80093ee:	687b      	ldr	r3, [r7, #4]
 80093f0:	613b      	str	r3, [r7, #16]
 80093f2:	78fb      	ldrb	r3, [r7, #3]
 80093f4:	015a      	lsls	r2, r3, #5
 80093f6:	693b      	ldr	r3, [r7, #16]
 80093f8:	4413      	add	r3, r2
 80093fa:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80093fe:	461a      	mov	r2, r3
 8009400:	f04f 33ff 	mov.w	r3, #4294967295
 8009404:	6093      	str	r3, [r2, #8]
 8009406:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800940a:	2b03      	cmp	r3, #3
 800940c:	d87e      	bhi.n	800950c <USB_HC_Init+0x13c>
 800940e:	a201      	add	r2, pc, #4	@ (adr r2, 8009414 <USB_HC_Init+0x44>)
 8009410:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009414:	08009425 	.word	0x08009425
 8009418:	080094cf 	.word	0x080094cf
 800941c:	08009425 	.word	0x08009425
 8009420:	08009491 	.word	0x08009491
 8009424:	78fb      	ldrb	r3, [r7, #3]
 8009426:	015a      	lsls	r2, r3, #5
 8009428:	693b      	ldr	r3, [r7, #16]
 800942a:	4413      	add	r3, r2
 800942c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009430:	461a      	mov	r2, r3
 8009432:	f240 439d 	movw	r3, #1181	@ 0x49d
 8009436:	60d3      	str	r3, [r2, #12]
 8009438:	f997 3002 	ldrsb.w	r3, [r7, #2]
 800943c:	2b00      	cmp	r3, #0
 800943e:	da10      	bge.n	8009462 <USB_HC_Init+0x92>
 8009440:	78fb      	ldrb	r3, [r7, #3]
 8009442:	015a      	lsls	r2, r3, #5
 8009444:	693b      	ldr	r3, [r7, #16]
 8009446:	4413      	add	r3, r2
 8009448:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800944c:	68db      	ldr	r3, [r3, #12]
 800944e:	78fa      	ldrb	r2, [r7, #3]
 8009450:	0151      	lsls	r1, r2, #5
 8009452:	693a      	ldr	r2, [r7, #16]
 8009454:	440a      	add	r2, r1
 8009456:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800945a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800945e:	60d3      	str	r3, [r2, #12]
 8009460:	e057      	b.n	8009512 <USB_HC_Init+0x142>
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009466:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800946a:	2b00      	cmp	r3, #0
 800946c:	d051      	beq.n	8009512 <USB_HC_Init+0x142>
 800946e:	78fb      	ldrb	r3, [r7, #3]
 8009470:	015a      	lsls	r2, r3, #5
 8009472:	693b      	ldr	r3, [r7, #16]
 8009474:	4413      	add	r3, r2
 8009476:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800947a:	68db      	ldr	r3, [r3, #12]
 800947c:	78fa      	ldrb	r2, [r7, #3]
 800947e:	0151      	lsls	r1, r2, #5
 8009480:	693a      	ldr	r2, [r7, #16]
 8009482:	440a      	add	r2, r1
 8009484:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009488:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 800948c:	60d3      	str	r3, [r2, #12]
 800948e:	e040      	b.n	8009512 <USB_HC_Init+0x142>
 8009490:	78fb      	ldrb	r3, [r7, #3]
 8009492:	015a      	lsls	r2, r3, #5
 8009494:	693b      	ldr	r3, [r7, #16]
 8009496:	4413      	add	r3, r2
 8009498:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800949c:	461a      	mov	r2, r3
 800949e:	f240 639d 	movw	r3, #1693	@ 0x69d
 80094a2:	60d3      	str	r3, [r2, #12]
 80094a4:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80094a8:	2b00      	cmp	r3, #0
 80094aa:	da34      	bge.n	8009516 <USB_HC_Init+0x146>
 80094ac:	78fb      	ldrb	r3, [r7, #3]
 80094ae:	015a      	lsls	r2, r3, #5
 80094b0:	693b      	ldr	r3, [r7, #16]
 80094b2:	4413      	add	r3, r2
 80094b4:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80094b8:	68db      	ldr	r3, [r3, #12]
 80094ba:	78fa      	ldrb	r2, [r7, #3]
 80094bc:	0151      	lsls	r1, r2, #5
 80094be:	693a      	ldr	r2, [r7, #16]
 80094c0:	440a      	add	r2, r1
 80094c2:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 80094c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80094ca:	60d3      	str	r3, [r2, #12]
 80094cc:	e023      	b.n	8009516 <USB_HC_Init+0x146>
 80094ce:	78fb      	ldrb	r3, [r7, #3]
 80094d0:	015a      	lsls	r2, r3, #5
 80094d2:	693b      	ldr	r3, [r7, #16]
 80094d4:	4413      	add	r3, r2
 80094d6:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80094da:	461a      	mov	r2, r3
 80094dc:	f240 2325 	movw	r3, #549	@ 0x225
 80094e0:	60d3      	str	r3, [r2, #12]
 80094e2:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80094e6:	2b00      	cmp	r3, #0
 80094e8:	da17      	bge.n	800951a <USB_HC_Init+0x14a>
 80094ea:	78fb      	ldrb	r3, [r7, #3]
 80094ec:	015a      	lsls	r2, r3, #5
 80094ee:	693b      	ldr	r3, [r7, #16]
 80094f0:	4413      	add	r3, r2
 80094f2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80094f6:	68db      	ldr	r3, [r3, #12]
 80094f8:	78fa      	ldrb	r2, [r7, #3]
 80094fa:	0151      	lsls	r1, r2, #5
 80094fc:	693a      	ldr	r2, [r7, #16]
 80094fe:	440a      	add	r2, r1
 8009500:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009504:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
 8009508:	60d3      	str	r3, [r2, #12]
 800950a:	e006      	b.n	800951a <USB_HC_Init+0x14a>
 800950c:	2301      	movs	r3, #1
 800950e:	77fb      	strb	r3, [r7, #31]
 8009510:	e004      	b.n	800951c <USB_HC_Init+0x14c>
 8009512:	bf00      	nop
 8009514:	e002      	b.n	800951c <USB_HC_Init+0x14c>
 8009516:	bf00      	nop
 8009518:	e000      	b.n	800951c <USB_HC_Init+0x14c>
 800951a:	bf00      	nop
 800951c:	78fb      	ldrb	r3, [r7, #3]
 800951e:	015a      	lsls	r2, r3, #5
 8009520:	693b      	ldr	r3, [r7, #16]
 8009522:	4413      	add	r3, r2
 8009524:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009528:	68db      	ldr	r3, [r3, #12]
 800952a:	78fa      	ldrb	r2, [r7, #3]
 800952c:	0151      	lsls	r1, r2, #5
 800952e:	693a      	ldr	r2, [r7, #16]
 8009530:	440a      	add	r2, r1
 8009532:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009536:	f043 0302 	orr.w	r3, r3, #2
 800953a:	60d3      	str	r3, [r2, #12]
 800953c:	693b      	ldr	r3, [r7, #16]
 800953e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009542:	699a      	ldr	r2, [r3, #24]
 8009544:	78fb      	ldrb	r3, [r7, #3]
 8009546:	f003 030f 	and.w	r3, r3, #15
 800954a:	2101      	movs	r1, #1
 800954c:	fa01 f303 	lsl.w	r3, r1, r3
 8009550:	6939      	ldr	r1, [r7, #16]
 8009552:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 8009556:	4313      	orrs	r3, r2
 8009558:	618b      	str	r3, [r1, #24]
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	699b      	ldr	r3, [r3, #24]
 800955e:	f043 7200 	orr.w	r2, r3, #33554432	@ 0x2000000
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	619a      	str	r2, [r3, #24]
 8009566:	f997 3002 	ldrsb.w	r3, [r7, #2]
 800956a:	2b00      	cmp	r3, #0
 800956c:	da03      	bge.n	8009576 <USB_HC_Init+0x1a6>
 800956e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8009572:	61bb      	str	r3, [r7, #24]
 8009574:	e001      	b.n	800957a <USB_HC_Init+0x1aa>
 8009576:	2300      	movs	r3, #0
 8009578:	61bb      	str	r3, [r7, #24]
 800957a:	6878      	ldr	r0, [r7, #4]
 800957c:	f7ff feff 	bl	800937e <USB_GetHostSpeed>
 8009580:	60f8      	str	r0, [r7, #12]
 8009582:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009586:	2b02      	cmp	r3, #2
 8009588:	d106      	bne.n	8009598 <USB_HC_Init+0x1c8>
 800958a:	68fb      	ldr	r3, [r7, #12]
 800958c:	2b02      	cmp	r3, #2
 800958e:	d003      	beq.n	8009598 <USB_HC_Init+0x1c8>
 8009590:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8009594:	617b      	str	r3, [r7, #20]
 8009596:	e001      	b.n	800959c <USB_HC_Init+0x1cc>
 8009598:	2300      	movs	r3, #0
 800959a:	617b      	str	r3, [r7, #20]
 800959c:	787b      	ldrb	r3, [r7, #1]
 800959e:	059b      	lsls	r3, r3, #22
 80095a0:	f003 52fe 	and.w	r2, r3, #532676608	@ 0x1fc00000
 80095a4:	78bb      	ldrb	r3, [r7, #2]
 80095a6:	02db      	lsls	r3, r3, #11
 80095a8:	f403 43f0 	and.w	r3, r3, #30720	@ 0x7800
 80095ac:	431a      	orrs	r2, r3
 80095ae:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80095b2:	049b      	lsls	r3, r3, #18
 80095b4:	f403 2340 	and.w	r3, r3, #786432	@ 0xc0000
 80095b8:	431a      	orrs	r2, r3
 80095ba:	8e3b      	ldrh	r3, [r7, #48]	@ 0x30
 80095bc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80095c0:	431a      	orrs	r2, r3
 80095c2:	69bb      	ldr	r3, [r7, #24]
 80095c4:	431a      	orrs	r2, r3
 80095c6:	78fb      	ldrb	r3, [r7, #3]
 80095c8:	0159      	lsls	r1, r3, #5
 80095ca:	693b      	ldr	r3, [r7, #16]
 80095cc:	440b      	add	r3, r1
 80095ce:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80095d2:	4619      	mov	r1, r3
 80095d4:	697b      	ldr	r3, [r7, #20]
 80095d6:	4313      	orrs	r3, r2
 80095d8:	600b      	str	r3, [r1, #0]
 80095da:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80095de:	2b03      	cmp	r3, #3
 80095e0:	d003      	beq.n	80095ea <USB_HC_Init+0x21a>
 80095e2:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80095e6:	2b01      	cmp	r3, #1
 80095e8:	d10f      	bne.n	800960a <USB_HC_Init+0x23a>
 80095ea:	78fb      	ldrb	r3, [r7, #3]
 80095ec:	015a      	lsls	r2, r3, #5
 80095ee:	693b      	ldr	r3, [r7, #16]
 80095f0:	4413      	add	r3, r2
 80095f2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80095f6:	681b      	ldr	r3, [r3, #0]
 80095f8:	78fa      	ldrb	r2, [r7, #3]
 80095fa:	0151      	lsls	r1, r2, #5
 80095fc:	693a      	ldr	r2, [r7, #16]
 80095fe:	440a      	add	r2, r1
 8009600:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009604:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8009608:	6013      	str	r3, [r2, #0]
 800960a:	7ffb      	ldrb	r3, [r7, #31]
 800960c:	4618      	mov	r0, r3
 800960e:	3720      	adds	r7, #32
 8009610:	46bd      	mov	sp, r7
 8009612:	bd80      	pop	{r7, pc}

08009614 <USB_HC_StartXfer>:
 8009614:	b580      	push	{r7, lr}
 8009616:	b08c      	sub	sp, #48	@ 0x30
 8009618:	af02      	add	r7, sp, #8
 800961a:	60f8      	str	r0, [r7, #12]
 800961c:	60b9      	str	r1, [r7, #8]
 800961e:	4613      	mov	r3, r2
 8009620:	71fb      	strb	r3, [r7, #7]
 8009622:	68fb      	ldr	r3, [r7, #12]
 8009624:	623b      	str	r3, [r7, #32]
 8009626:	68bb      	ldr	r3, [r7, #8]
 8009628:	785b      	ldrb	r3, [r3, #1]
 800962a:	61fb      	str	r3, [r7, #28]
 800962c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8009630:	837b      	strh	r3, [r7, #26]
 8009632:	68fb      	ldr	r3, [r7, #12]
 8009634:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009636:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800963a:	2b00      	cmp	r3, #0
 800963c:	d02d      	beq.n	800969a <USB_HC_StartXfer+0x86>
 800963e:	68bb      	ldr	r3, [r7, #8]
 8009640:	791b      	ldrb	r3, [r3, #4]
 8009642:	2b00      	cmp	r3, #0
 8009644:	d129      	bne.n	800969a <USB_HC_StartXfer+0x86>
 8009646:	79fb      	ldrb	r3, [r7, #7]
 8009648:	2b01      	cmp	r3, #1
 800964a:	d117      	bne.n	800967c <USB_HC_StartXfer+0x68>
 800964c:	68bb      	ldr	r3, [r7, #8]
 800964e:	79db      	ldrb	r3, [r3, #7]
 8009650:	2b00      	cmp	r3, #0
 8009652:	d003      	beq.n	800965c <USB_HC_StartXfer+0x48>
 8009654:	68bb      	ldr	r3, [r7, #8]
 8009656:	79db      	ldrb	r3, [r3, #7]
 8009658:	2b02      	cmp	r3, #2
 800965a:	d10f      	bne.n	800967c <USB_HC_StartXfer+0x68>
 800965c:	69fb      	ldr	r3, [r7, #28]
 800965e:	015a      	lsls	r2, r3, #5
 8009660:	6a3b      	ldr	r3, [r7, #32]
 8009662:	4413      	add	r3, r2
 8009664:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009668:	68db      	ldr	r3, [r3, #12]
 800966a:	69fa      	ldr	r2, [r7, #28]
 800966c:	0151      	lsls	r1, r2, #5
 800966e:	6a3a      	ldr	r2, [r7, #32]
 8009670:	440a      	add	r2, r1
 8009672:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009676:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800967a:	60d3      	str	r3, [r2, #12]
 800967c:	79fb      	ldrb	r3, [r7, #7]
 800967e:	2b00      	cmp	r3, #0
 8009680:	d10b      	bne.n	800969a <USB_HC_StartXfer+0x86>
 8009682:	68bb      	ldr	r3, [r7, #8]
 8009684:	795b      	ldrb	r3, [r3, #5]
 8009686:	2b01      	cmp	r3, #1
 8009688:	d107      	bne.n	800969a <USB_HC_StartXfer+0x86>
 800968a:	68bb      	ldr	r3, [r7, #8]
 800968c:	785b      	ldrb	r3, [r3, #1]
 800968e:	4619      	mov	r1, r3
 8009690:	68f8      	ldr	r0, [r7, #12]
 8009692:	f000 fa0f 	bl	8009ab4 <USB_DoPing>
 8009696:	2300      	movs	r3, #0
 8009698:	e0f8      	b.n	800988c <USB_HC_StartXfer+0x278>
 800969a:	68bb      	ldr	r3, [r7, #8]
 800969c:	695b      	ldr	r3, [r3, #20]
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d018      	beq.n	80096d4 <USB_HC_StartXfer+0xc0>
 80096a2:	68bb      	ldr	r3, [r7, #8]
 80096a4:	695b      	ldr	r3, [r3, #20]
 80096a6:	68ba      	ldr	r2, [r7, #8]
 80096a8:	8912      	ldrh	r2, [r2, #8]
 80096aa:	4413      	add	r3, r2
 80096ac:	3b01      	subs	r3, #1
 80096ae:	68ba      	ldr	r2, [r7, #8]
 80096b0:	8912      	ldrh	r2, [r2, #8]
 80096b2:	fbb3 f3f2 	udiv	r3, r3, r2
 80096b6:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80096b8:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 80096ba:	8b7b      	ldrh	r3, [r7, #26]
 80096bc:	429a      	cmp	r2, r3
 80096be:	d90b      	bls.n	80096d8 <USB_HC_StartXfer+0xc4>
 80096c0:	8b7b      	ldrh	r3, [r7, #26]
 80096c2:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80096c4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80096c6:	68ba      	ldr	r2, [r7, #8]
 80096c8:	8912      	ldrh	r2, [r2, #8]
 80096ca:	fb03 f202 	mul.w	r2, r3, r2
 80096ce:	68bb      	ldr	r3, [r7, #8]
 80096d0:	611a      	str	r2, [r3, #16]
 80096d2:	e001      	b.n	80096d8 <USB_HC_StartXfer+0xc4>
 80096d4:	2301      	movs	r3, #1
 80096d6:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80096d8:	68bb      	ldr	r3, [r7, #8]
 80096da:	78db      	ldrb	r3, [r3, #3]
 80096dc:	2b00      	cmp	r3, #0
 80096de:	d007      	beq.n	80096f0 <USB_HC_StartXfer+0xdc>
 80096e0:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80096e2:	68ba      	ldr	r2, [r7, #8]
 80096e4:	8912      	ldrh	r2, [r2, #8]
 80096e6:	fb03 f202 	mul.w	r2, r3, r2
 80096ea:	68bb      	ldr	r3, [r7, #8]
 80096ec:	611a      	str	r2, [r3, #16]
 80096ee:	e003      	b.n	80096f8 <USB_HC_StartXfer+0xe4>
 80096f0:	68bb      	ldr	r3, [r7, #8]
 80096f2:	695a      	ldr	r2, [r3, #20]
 80096f4:	68bb      	ldr	r3, [r7, #8]
 80096f6:	611a      	str	r2, [r3, #16]
 80096f8:	68bb      	ldr	r3, [r7, #8]
 80096fa:	691b      	ldr	r3, [r3, #16]
 80096fc:	f3c3 0212 	ubfx	r2, r3, #0, #19
 8009700:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8009702:	04d9      	lsls	r1, r3, #19
 8009704:	4b63      	ldr	r3, [pc, #396]	@ (8009894 <USB_HC_StartXfer+0x280>)
 8009706:	400b      	ands	r3, r1
 8009708:	431a      	orrs	r2, r3
 800970a:	68bb      	ldr	r3, [r7, #8]
 800970c:	7a9b      	ldrb	r3, [r3, #10]
 800970e:	075b      	lsls	r3, r3, #29
 8009710:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 8009714:	69f9      	ldr	r1, [r7, #28]
 8009716:	0148      	lsls	r0, r1, #5
 8009718:	6a39      	ldr	r1, [r7, #32]
 800971a:	4401      	add	r1, r0
 800971c:	f501 61a0 	add.w	r1, r1, #1280	@ 0x500
 8009720:	4313      	orrs	r3, r2
 8009722:	610b      	str	r3, [r1, #16]
 8009724:	79fb      	ldrb	r3, [r7, #7]
 8009726:	2b00      	cmp	r3, #0
 8009728:	d009      	beq.n	800973e <USB_HC_StartXfer+0x12a>
 800972a:	68bb      	ldr	r3, [r7, #8]
 800972c:	68d9      	ldr	r1, [r3, #12]
 800972e:	69fb      	ldr	r3, [r7, #28]
 8009730:	015a      	lsls	r2, r3, #5
 8009732:	6a3b      	ldr	r3, [r7, #32]
 8009734:	4413      	add	r3, r2
 8009736:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800973a:	460a      	mov	r2, r1
 800973c:	615a      	str	r2, [r3, #20]
 800973e:	6a3b      	ldr	r3, [r7, #32]
 8009740:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009744:	689b      	ldr	r3, [r3, #8]
 8009746:	f003 0301 	and.w	r3, r3, #1
 800974a:	2b00      	cmp	r3, #0
 800974c:	bf0c      	ite	eq
 800974e:	2301      	moveq	r3, #1
 8009750:	2300      	movne	r3, #0
 8009752:	b2db      	uxtb	r3, r3
 8009754:	767b      	strb	r3, [r7, #25]
 8009756:	69fb      	ldr	r3, [r7, #28]
 8009758:	015a      	lsls	r2, r3, #5
 800975a:	6a3b      	ldr	r3, [r7, #32]
 800975c:	4413      	add	r3, r2
 800975e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009762:	681b      	ldr	r3, [r3, #0]
 8009764:	69fa      	ldr	r2, [r7, #28]
 8009766:	0151      	lsls	r1, r2, #5
 8009768:	6a3a      	ldr	r2, [r7, #32]
 800976a:	440a      	add	r2, r1
 800976c:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009770:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 8009774:	6013      	str	r3, [r2, #0]
 8009776:	69fb      	ldr	r3, [r7, #28]
 8009778:	015a      	lsls	r2, r3, #5
 800977a:	6a3b      	ldr	r3, [r7, #32]
 800977c:	4413      	add	r3, r2
 800977e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009782:	681a      	ldr	r2, [r3, #0]
 8009784:	7e7b      	ldrb	r3, [r7, #25]
 8009786:	075b      	lsls	r3, r3, #29
 8009788:	69f9      	ldr	r1, [r7, #28]
 800978a:	0148      	lsls	r0, r1, #5
 800978c:	6a39      	ldr	r1, [r7, #32]
 800978e:	4401      	add	r1, r0
 8009790:	f501 61a0 	add.w	r1, r1, #1280	@ 0x500
 8009794:	4313      	orrs	r3, r2
 8009796:	600b      	str	r3, [r1, #0]
 8009798:	69fb      	ldr	r3, [r7, #28]
 800979a:	015a      	lsls	r2, r3, #5
 800979c:	6a3b      	ldr	r3, [r7, #32]
 800979e:	4413      	add	r3, r2
 80097a0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80097a4:	681b      	ldr	r3, [r3, #0]
 80097a6:	613b      	str	r3, [r7, #16]
 80097a8:	693b      	ldr	r3, [r7, #16]
 80097aa:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80097ae:	613b      	str	r3, [r7, #16]
 80097b0:	68bb      	ldr	r3, [r7, #8]
 80097b2:	78db      	ldrb	r3, [r3, #3]
 80097b4:	2b00      	cmp	r3, #0
 80097b6:	d004      	beq.n	80097c2 <USB_HC_StartXfer+0x1ae>
 80097b8:	693b      	ldr	r3, [r7, #16]
 80097ba:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80097be:	613b      	str	r3, [r7, #16]
 80097c0:	e003      	b.n	80097ca <USB_HC_StartXfer+0x1b6>
 80097c2:	693b      	ldr	r3, [r7, #16]
 80097c4:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80097c8:	613b      	str	r3, [r7, #16]
 80097ca:	693b      	ldr	r3, [r7, #16]
 80097cc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80097d0:	613b      	str	r3, [r7, #16]
 80097d2:	69fb      	ldr	r3, [r7, #28]
 80097d4:	015a      	lsls	r2, r3, #5
 80097d6:	6a3b      	ldr	r3, [r7, #32]
 80097d8:	4413      	add	r3, r2
 80097da:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80097de:	461a      	mov	r2, r3
 80097e0:	693b      	ldr	r3, [r7, #16]
 80097e2:	6013      	str	r3, [r2, #0]
 80097e4:	79fb      	ldrb	r3, [r7, #7]
 80097e6:	2b00      	cmp	r3, #0
 80097e8:	d001      	beq.n	80097ee <USB_HC_StartXfer+0x1da>
 80097ea:	2300      	movs	r3, #0
 80097ec:	e04e      	b.n	800988c <USB_HC_StartXfer+0x278>
 80097ee:	68bb      	ldr	r3, [r7, #8]
 80097f0:	78db      	ldrb	r3, [r3, #3]
 80097f2:	2b00      	cmp	r3, #0
 80097f4:	d149      	bne.n	800988a <USB_HC_StartXfer+0x276>
 80097f6:	68bb      	ldr	r3, [r7, #8]
 80097f8:	695b      	ldr	r3, [r3, #20]
 80097fa:	2b00      	cmp	r3, #0
 80097fc:	d045      	beq.n	800988a <USB_HC_StartXfer+0x276>
 80097fe:	68bb      	ldr	r3, [r7, #8]
 8009800:	79db      	ldrb	r3, [r3, #7]
 8009802:	2b03      	cmp	r3, #3
 8009804:	d830      	bhi.n	8009868 <USB_HC_StartXfer+0x254>
 8009806:	a201      	add	r2, pc, #4	@ (adr r2, 800980c <USB_HC_StartXfer+0x1f8>)
 8009808:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800980c:	0800981d 	.word	0x0800981d
 8009810:	08009841 	.word	0x08009841
 8009814:	0800981d 	.word	0x0800981d
 8009818:	08009841 	.word	0x08009841
 800981c:	68bb      	ldr	r3, [r7, #8]
 800981e:	695b      	ldr	r3, [r3, #20]
 8009820:	3303      	adds	r3, #3
 8009822:	089b      	lsrs	r3, r3, #2
 8009824:	82fb      	strh	r3, [r7, #22]
 8009826:	8afa      	ldrh	r2, [r7, #22]
 8009828:	68fb      	ldr	r3, [r7, #12]
 800982a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800982c:	b29b      	uxth	r3, r3
 800982e:	429a      	cmp	r2, r3
 8009830:	d91c      	bls.n	800986c <USB_HC_StartXfer+0x258>
 8009832:	68fb      	ldr	r3, [r7, #12]
 8009834:	699b      	ldr	r3, [r3, #24]
 8009836:	f043 0220 	orr.w	r2, r3, #32
 800983a:	68fb      	ldr	r3, [r7, #12]
 800983c:	619a      	str	r2, [r3, #24]
 800983e:	e015      	b.n	800986c <USB_HC_StartXfer+0x258>
 8009840:	68bb      	ldr	r3, [r7, #8]
 8009842:	695b      	ldr	r3, [r3, #20]
 8009844:	3303      	adds	r3, #3
 8009846:	089b      	lsrs	r3, r3, #2
 8009848:	82fb      	strh	r3, [r7, #22]
 800984a:	8afa      	ldrh	r2, [r7, #22]
 800984c:	6a3b      	ldr	r3, [r7, #32]
 800984e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009852:	691b      	ldr	r3, [r3, #16]
 8009854:	b29b      	uxth	r3, r3
 8009856:	429a      	cmp	r2, r3
 8009858:	d90a      	bls.n	8009870 <USB_HC_StartXfer+0x25c>
 800985a:	68fb      	ldr	r3, [r7, #12]
 800985c:	699b      	ldr	r3, [r3, #24]
 800985e:	f043 6280 	orr.w	r2, r3, #67108864	@ 0x4000000
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	619a      	str	r2, [r3, #24]
 8009866:	e003      	b.n	8009870 <USB_HC_StartXfer+0x25c>
 8009868:	bf00      	nop
 800986a:	e002      	b.n	8009872 <USB_HC_StartXfer+0x25e>
 800986c:	bf00      	nop
 800986e:	e000      	b.n	8009872 <USB_HC_StartXfer+0x25e>
 8009870:	bf00      	nop
 8009872:	68bb      	ldr	r3, [r7, #8]
 8009874:	68d9      	ldr	r1, [r3, #12]
 8009876:	68bb      	ldr	r3, [r7, #8]
 8009878:	785a      	ldrb	r2, [r3, #1]
 800987a:	68bb      	ldr	r3, [r7, #8]
 800987c:	695b      	ldr	r3, [r3, #20]
 800987e:	b29b      	uxth	r3, r3
 8009880:	2000      	movs	r0, #0
 8009882:	9000      	str	r0, [sp, #0]
 8009884:	68f8      	ldr	r0, [r7, #12]
 8009886:	f7ff fb31 	bl	8008eec <USB_WritePacket>
 800988a:	2300      	movs	r3, #0
 800988c:	4618      	mov	r0, r3
 800988e:	3728      	adds	r7, #40	@ 0x28
 8009890:	46bd      	mov	sp, r7
 8009892:	bd80      	pop	{r7, pc}
 8009894:	1ff80000 	.word	0x1ff80000

08009898 <USB_HC_ReadInterrupt>:
 8009898:	b480      	push	{r7}
 800989a:	b085      	sub	sp, #20
 800989c:	af00      	add	r7, sp, #0
 800989e:	6078      	str	r0, [r7, #4]
 80098a0:	687b      	ldr	r3, [r7, #4]
 80098a2:	60fb      	str	r3, [r7, #12]
 80098a4:	68fb      	ldr	r3, [r7, #12]
 80098a6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80098aa:	695b      	ldr	r3, [r3, #20]
 80098ac:	b29b      	uxth	r3, r3
 80098ae:	4618      	mov	r0, r3
 80098b0:	3714      	adds	r7, #20
 80098b2:	46bd      	mov	sp, r7
 80098b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098b8:	4770      	bx	lr

080098ba <USB_HC_Halt>:
 80098ba:	b480      	push	{r7}
 80098bc:	b089      	sub	sp, #36	@ 0x24
 80098be:	af00      	add	r7, sp, #0
 80098c0:	6078      	str	r0, [r7, #4]
 80098c2:	460b      	mov	r3, r1
 80098c4:	70fb      	strb	r3, [r7, #3]
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	61fb      	str	r3, [r7, #28]
 80098ca:	78fb      	ldrb	r3, [r7, #3]
 80098cc:	61bb      	str	r3, [r7, #24]
 80098ce:	2300      	movs	r3, #0
 80098d0:	60fb      	str	r3, [r7, #12]
 80098d2:	69bb      	ldr	r3, [r7, #24]
 80098d4:	015a      	lsls	r2, r3, #5
 80098d6:	69fb      	ldr	r3, [r7, #28]
 80098d8:	4413      	add	r3, r2
 80098da:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	0c9b      	lsrs	r3, r3, #18
 80098e2:	f003 0303 	and.w	r3, r3, #3
 80098e6:	617b      	str	r3, [r7, #20]
 80098e8:	69bb      	ldr	r3, [r7, #24]
 80098ea:	015a      	lsls	r2, r3, #5
 80098ec:	69fb      	ldr	r3, [r7, #28]
 80098ee:	4413      	add	r3, r2
 80098f0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80098f4:	681b      	ldr	r3, [r3, #0]
 80098f6:	0fdb      	lsrs	r3, r3, #31
 80098f8:	f003 0301 	and.w	r3, r3, #1
 80098fc:	613b      	str	r3, [r7, #16]
 80098fe:	687b      	ldr	r3, [r7, #4]
 8009900:	689b      	ldr	r3, [r3, #8]
 8009902:	f003 0320 	and.w	r3, r3, #32
 8009906:	2b20      	cmp	r3, #32
 8009908:	d104      	bne.n	8009914 <USB_HC_Halt+0x5a>
 800990a:	693b      	ldr	r3, [r7, #16]
 800990c:	2b00      	cmp	r3, #0
 800990e:	d101      	bne.n	8009914 <USB_HC_Halt+0x5a>
 8009910:	2300      	movs	r3, #0
 8009912:	e0c8      	b.n	8009aa6 <USB_HC_Halt+0x1ec>
 8009914:	697b      	ldr	r3, [r7, #20]
 8009916:	2b00      	cmp	r3, #0
 8009918:	d002      	beq.n	8009920 <USB_HC_Halt+0x66>
 800991a:	697b      	ldr	r3, [r7, #20]
 800991c:	2b02      	cmp	r3, #2
 800991e:	d163      	bne.n	80099e8 <USB_HC_Halt+0x12e>
 8009920:	69bb      	ldr	r3, [r7, #24]
 8009922:	015a      	lsls	r2, r3, #5
 8009924:	69fb      	ldr	r3, [r7, #28]
 8009926:	4413      	add	r3, r2
 8009928:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	69ba      	ldr	r2, [r7, #24]
 8009930:	0151      	lsls	r1, r2, #5
 8009932:	69fa      	ldr	r2, [r7, #28]
 8009934:	440a      	add	r2, r1
 8009936:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800993a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800993e:	6013      	str	r3, [r2, #0]
 8009940:	687b      	ldr	r3, [r7, #4]
 8009942:	689b      	ldr	r3, [r3, #8]
 8009944:	f003 0320 	and.w	r3, r3, #32
 8009948:	2b00      	cmp	r3, #0
 800994a:	f040 80ab 	bne.w	8009aa4 <USB_HC_Halt+0x1ea>
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009952:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8009956:	2b00      	cmp	r3, #0
 8009958:	d133      	bne.n	80099c2 <USB_HC_Halt+0x108>
 800995a:	69bb      	ldr	r3, [r7, #24]
 800995c:	015a      	lsls	r2, r3, #5
 800995e:	69fb      	ldr	r3, [r7, #28]
 8009960:	4413      	add	r3, r2
 8009962:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009966:	681b      	ldr	r3, [r3, #0]
 8009968:	69ba      	ldr	r2, [r7, #24]
 800996a:	0151      	lsls	r1, r2, #5
 800996c:	69fa      	ldr	r2, [r7, #28]
 800996e:	440a      	add	r2, r1
 8009970:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009974:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009978:	6013      	str	r3, [r2, #0]
 800997a:	69bb      	ldr	r3, [r7, #24]
 800997c:	015a      	lsls	r2, r3, #5
 800997e:	69fb      	ldr	r3, [r7, #28]
 8009980:	4413      	add	r3, r2
 8009982:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	69ba      	ldr	r2, [r7, #24]
 800998a:	0151      	lsls	r1, r2, #5
 800998c:	69fa      	ldr	r2, [r7, #28]
 800998e:	440a      	add	r2, r1
 8009990:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009994:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009998:	6013      	str	r3, [r2, #0]
 800999a:	68fb      	ldr	r3, [r7, #12]
 800999c:	3301      	adds	r3, #1
 800999e:	60fb      	str	r3, [r7, #12]
 80099a0:	68fb      	ldr	r3, [r7, #12]
 80099a2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80099a6:	d81d      	bhi.n	80099e4 <USB_HC_Halt+0x12a>
 80099a8:	69bb      	ldr	r3, [r7, #24]
 80099aa:	015a      	lsls	r2, r3, #5
 80099ac:	69fb      	ldr	r3, [r7, #28]
 80099ae:	4413      	add	r3, r2
 80099b0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80099b4:	681b      	ldr	r3, [r3, #0]
 80099b6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80099ba:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80099be:	d0ec      	beq.n	800999a <USB_HC_Halt+0xe0>
 80099c0:	e070      	b.n	8009aa4 <USB_HC_Halt+0x1ea>
 80099c2:	69bb      	ldr	r3, [r7, #24]
 80099c4:	015a      	lsls	r2, r3, #5
 80099c6:	69fb      	ldr	r3, [r7, #28]
 80099c8:	4413      	add	r3, r2
 80099ca:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	69ba      	ldr	r2, [r7, #24]
 80099d2:	0151      	lsls	r1, r2, #5
 80099d4:	69fa      	ldr	r2, [r7, #28]
 80099d6:	440a      	add	r2, r1
 80099d8:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 80099dc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80099e0:	6013      	str	r3, [r2, #0]
 80099e2:	e05f      	b.n	8009aa4 <USB_HC_Halt+0x1ea>
 80099e4:	bf00      	nop
 80099e6:	e05d      	b.n	8009aa4 <USB_HC_Halt+0x1ea>
 80099e8:	69bb      	ldr	r3, [r7, #24]
 80099ea:	015a      	lsls	r2, r3, #5
 80099ec:	69fb      	ldr	r3, [r7, #28]
 80099ee:	4413      	add	r3, r2
 80099f0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80099f4:	681b      	ldr	r3, [r3, #0]
 80099f6:	69ba      	ldr	r2, [r7, #24]
 80099f8:	0151      	lsls	r1, r2, #5
 80099fa:	69fa      	ldr	r2, [r7, #28]
 80099fc:	440a      	add	r2, r1
 80099fe:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009a02:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8009a06:	6013      	str	r3, [r2, #0]
 8009a08:	69fb      	ldr	r3, [r7, #28]
 8009a0a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009a0e:	691b      	ldr	r3, [r3, #16]
 8009a10:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8009a14:	2b00      	cmp	r3, #0
 8009a16:	d133      	bne.n	8009a80 <USB_HC_Halt+0x1c6>
 8009a18:	69bb      	ldr	r3, [r7, #24]
 8009a1a:	015a      	lsls	r2, r3, #5
 8009a1c:	69fb      	ldr	r3, [r7, #28]
 8009a1e:	4413      	add	r3, r2
 8009a20:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009a24:	681b      	ldr	r3, [r3, #0]
 8009a26:	69ba      	ldr	r2, [r7, #24]
 8009a28:	0151      	lsls	r1, r2, #5
 8009a2a:	69fa      	ldr	r2, [r7, #28]
 8009a2c:	440a      	add	r2, r1
 8009a2e:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009a32:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009a36:	6013      	str	r3, [r2, #0]
 8009a38:	69bb      	ldr	r3, [r7, #24]
 8009a3a:	015a      	lsls	r2, r3, #5
 8009a3c:	69fb      	ldr	r3, [r7, #28]
 8009a3e:	4413      	add	r3, r2
 8009a40:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009a44:	681b      	ldr	r3, [r3, #0]
 8009a46:	69ba      	ldr	r2, [r7, #24]
 8009a48:	0151      	lsls	r1, r2, #5
 8009a4a:	69fa      	ldr	r2, [r7, #28]
 8009a4c:	440a      	add	r2, r1
 8009a4e:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009a56:	6013      	str	r3, [r2, #0]
 8009a58:	68fb      	ldr	r3, [r7, #12]
 8009a5a:	3301      	adds	r3, #1
 8009a5c:	60fb      	str	r3, [r7, #12]
 8009a5e:	68fb      	ldr	r3, [r7, #12]
 8009a60:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8009a64:	d81d      	bhi.n	8009aa2 <USB_HC_Halt+0x1e8>
 8009a66:	69bb      	ldr	r3, [r7, #24]
 8009a68:	015a      	lsls	r2, r3, #5
 8009a6a:	69fb      	ldr	r3, [r7, #28]
 8009a6c:	4413      	add	r3, r2
 8009a6e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009a72:	681b      	ldr	r3, [r3, #0]
 8009a74:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8009a78:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8009a7c:	d0ec      	beq.n	8009a58 <USB_HC_Halt+0x19e>
 8009a7e:	e011      	b.n	8009aa4 <USB_HC_Halt+0x1ea>
 8009a80:	69bb      	ldr	r3, [r7, #24]
 8009a82:	015a      	lsls	r2, r3, #5
 8009a84:	69fb      	ldr	r3, [r7, #28]
 8009a86:	4413      	add	r3, r2
 8009a88:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	69ba      	ldr	r2, [r7, #24]
 8009a90:	0151      	lsls	r1, r2, #5
 8009a92:	69fa      	ldr	r2, [r7, #28]
 8009a94:	440a      	add	r2, r1
 8009a96:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009a9a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009a9e:	6013      	str	r3, [r2, #0]
 8009aa0:	e000      	b.n	8009aa4 <USB_HC_Halt+0x1ea>
 8009aa2:	bf00      	nop
 8009aa4:	2300      	movs	r3, #0
 8009aa6:	4618      	mov	r0, r3
 8009aa8:	3724      	adds	r7, #36	@ 0x24
 8009aaa:	46bd      	mov	sp, r7
 8009aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab0:	4770      	bx	lr
	...

08009ab4 <USB_DoPing>:
 8009ab4:	b480      	push	{r7}
 8009ab6:	b087      	sub	sp, #28
 8009ab8:	af00      	add	r7, sp, #0
 8009aba:	6078      	str	r0, [r7, #4]
 8009abc:	460b      	mov	r3, r1
 8009abe:	70fb      	strb	r3, [r7, #3]
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	617b      	str	r3, [r7, #20]
 8009ac4:	78fb      	ldrb	r3, [r7, #3]
 8009ac6:	613b      	str	r3, [r7, #16]
 8009ac8:	2301      	movs	r3, #1
 8009aca:	60fb      	str	r3, [r7, #12]
 8009acc:	68fb      	ldr	r3, [r7, #12]
 8009ace:	04da      	lsls	r2, r3, #19
 8009ad0:	4b15      	ldr	r3, [pc, #84]	@ (8009b28 <USB_DoPing+0x74>)
 8009ad2:	4013      	ands	r3, r2
 8009ad4:	693a      	ldr	r2, [r7, #16]
 8009ad6:	0151      	lsls	r1, r2, #5
 8009ad8:	697a      	ldr	r2, [r7, #20]
 8009ada:	440a      	add	r2, r1
 8009adc:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009ae0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009ae4:	6113      	str	r3, [r2, #16]
 8009ae6:	693b      	ldr	r3, [r7, #16]
 8009ae8:	015a      	lsls	r2, r3, #5
 8009aea:	697b      	ldr	r3, [r7, #20]
 8009aec:	4413      	add	r3, r2
 8009aee:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	60bb      	str	r3, [r7, #8]
 8009af6:	68bb      	ldr	r3, [r7, #8]
 8009af8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8009afc:	60bb      	str	r3, [r7, #8]
 8009afe:	68bb      	ldr	r3, [r7, #8]
 8009b00:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009b04:	60bb      	str	r3, [r7, #8]
 8009b06:	693b      	ldr	r3, [r7, #16]
 8009b08:	015a      	lsls	r2, r3, #5
 8009b0a:	697b      	ldr	r3, [r7, #20]
 8009b0c:	4413      	add	r3, r2
 8009b0e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009b12:	461a      	mov	r2, r3
 8009b14:	68bb      	ldr	r3, [r7, #8]
 8009b16:	6013      	str	r3, [r2, #0]
 8009b18:	2300      	movs	r3, #0
 8009b1a:	4618      	mov	r0, r3
 8009b1c:	371c      	adds	r7, #28
 8009b1e:	46bd      	mov	sp, r7
 8009b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b24:	4770      	bx	lr
 8009b26:	bf00      	nop
 8009b28:	1ff80000 	.word	0x1ff80000

08009b2c <USB_StopHost>:
 8009b2c:	b580      	push	{r7, lr}
 8009b2e:	b088      	sub	sp, #32
 8009b30:	af00      	add	r7, sp, #0
 8009b32:	6078      	str	r0, [r7, #4]
 8009b34:	2300      	movs	r3, #0
 8009b36:	77fb      	strb	r3, [r7, #31]
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	617b      	str	r3, [r7, #20]
 8009b3c:	2300      	movs	r3, #0
 8009b3e:	60fb      	str	r3, [r7, #12]
 8009b40:	6878      	ldr	r0, [r7, #4]
 8009b42:	f7ff f911 	bl	8008d68 <USB_DisableGlobalInt>
 8009b46:	2110      	movs	r1, #16
 8009b48:	6878      	ldr	r0, [r7, #4]
 8009b4a:	f7ff f96b 	bl	8008e24 <USB_FlushTxFifo>
 8009b4e:	4603      	mov	r3, r0
 8009b50:	2b00      	cmp	r3, #0
 8009b52:	d001      	beq.n	8009b58 <USB_StopHost+0x2c>
 8009b54:	2301      	movs	r3, #1
 8009b56:	77fb      	strb	r3, [r7, #31]
 8009b58:	6878      	ldr	r0, [r7, #4]
 8009b5a:	f7ff f997 	bl	8008e8c <USB_FlushRxFifo>
 8009b5e:	4603      	mov	r3, r0
 8009b60:	2b00      	cmp	r3, #0
 8009b62:	d001      	beq.n	8009b68 <USB_StopHost+0x3c>
 8009b64:	2301      	movs	r3, #1
 8009b66:	77fb      	strb	r3, [r7, #31]
 8009b68:	2300      	movs	r3, #0
 8009b6a:	61bb      	str	r3, [r7, #24]
 8009b6c:	e01f      	b.n	8009bae <USB_StopHost+0x82>
 8009b6e:	69bb      	ldr	r3, [r7, #24]
 8009b70:	015a      	lsls	r2, r3, #5
 8009b72:	697b      	ldr	r3, [r7, #20]
 8009b74:	4413      	add	r3, r2
 8009b76:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009b7a:	681b      	ldr	r3, [r3, #0]
 8009b7c:	613b      	str	r3, [r7, #16]
 8009b7e:	693b      	ldr	r3, [r7, #16]
 8009b80:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8009b84:	613b      	str	r3, [r7, #16]
 8009b86:	693b      	ldr	r3, [r7, #16]
 8009b88:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009b8c:	613b      	str	r3, [r7, #16]
 8009b8e:	693b      	ldr	r3, [r7, #16]
 8009b90:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009b94:	613b      	str	r3, [r7, #16]
 8009b96:	69bb      	ldr	r3, [r7, #24]
 8009b98:	015a      	lsls	r2, r3, #5
 8009b9a:	697b      	ldr	r3, [r7, #20]
 8009b9c:	4413      	add	r3, r2
 8009b9e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009ba2:	461a      	mov	r2, r3
 8009ba4:	693b      	ldr	r3, [r7, #16]
 8009ba6:	6013      	str	r3, [r2, #0]
 8009ba8:	69bb      	ldr	r3, [r7, #24]
 8009baa:	3301      	adds	r3, #1
 8009bac:	61bb      	str	r3, [r7, #24]
 8009bae:	69bb      	ldr	r3, [r7, #24]
 8009bb0:	2b0f      	cmp	r3, #15
 8009bb2:	d9dc      	bls.n	8009b6e <USB_StopHost+0x42>
 8009bb4:	2300      	movs	r3, #0
 8009bb6:	61bb      	str	r3, [r7, #24]
 8009bb8:	e034      	b.n	8009c24 <USB_StopHost+0xf8>
 8009bba:	69bb      	ldr	r3, [r7, #24]
 8009bbc:	015a      	lsls	r2, r3, #5
 8009bbe:	697b      	ldr	r3, [r7, #20]
 8009bc0:	4413      	add	r3, r2
 8009bc2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	613b      	str	r3, [r7, #16]
 8009bca:	693b      	ldr	r3, [r7, #16]
 8009bcc:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8009bd0:	613b      	str	r3, [r7, #16]
 8009bd2:	693b      	ldr	r3, [r7, #16]
 8009bd4:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009bd8:	613b      	str	r3, [r7, #16]
 8009bda:	693b      	ldr	r3, [r7, #16]
 8009bdc:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009be0:	613b      	str	r3, [r7, #16]
 8009be2:	69bb      	ldr	r3, [r7, #24]
 8009be4:	015a      	lsls	r2, r3, #5
 8009be6:	697b      	ldr	r3, [r7, #20]
 8009be8:	4413      	add	r3, r2
 8009bea:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009bee:	461a      	mov	r2, r3
 8009bf0:	693b      	ldr	r3, [r7, #16]
 8009bf2:	6013      	str	r3, [r2, #0]
 8009bf4:	68fb      	ldr	r3, [r7, #12]
 8009bf6:	3301      	adds	r3, #1
 8009bf8:	60fb      	str	r3, [r7, #12]
 8009bfa:	68fb      	ldr	r3, [r7, #12]
 8009bfc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8009c00:	d80c      	bhi.n	8009c1c <USB_StopHost+0xf0>
 8009c02:	69bb      	ldr	r3, [r7, #24]
 8009c04:	015a      	lsls	r2, r3, #5
 8009c06:	697b      	ldr	r3, [r7, #20]
 8009c08:	4413      	add	r3, r2
 8009c0a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009c0e:	681b      	ldr	r3, [r3, #0]
 8009c10:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8009c14:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8009c18:	d0ec      	beq.n	8009bf4 <USB_StopHost+0xc8>
 8009c1a:	e000      	b.n	8009c1e <USB_StopHost+0xf2>
 8009c1c:	bf00      	nop
 8009c1e:	69bb      	ldr	r3, [r7, #24]
 8009c20:	3301      	adds	r3, #1
 8009c22:	61bb      	str	r3, [r7, #24]
 8009c24:	69bb      	ldr	r3, [r7, #24]
 8009c26:	2b0f      	cmp	r3, #15
 8009c28:	d9c7      	bls.n	8009bba <USB_StopHost+0x8e>
 8009c2a:	697b      	ldr	r3, [r7, #20]
 8009c2c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009c30:	461a      	mov	r2, r3
 8009c32:	f04f 33ff 	mov.w	r3, #4294967295
 8009c36:	6153      	str	r3, [r2, #20]
 8009c38:	687b      	ldr	r3, [r7, #4]
 8009c3a:	f04f 32ff 	mov.w	r2, #4294967295
 8009c3e:	615a      	str	r2, [r3, #20]
 8009c40:	6878      	ldr	r0, [r7, #4]
 8009c42:	f7ff f880 	bl	8008d46 <USB_EnableGlobalInt>
 8009c46:	7ffb      	ldrb	r3, [r7, #31]
 8009c48:	4618      	mov	r0, r3
 8009c4a:	3720      	adds	r7, #32
 8009c4c:	46bd      	mov	sp, r7
 8009c4e:	bd80      	pop	{r7, pc}

08009c50 <USBH_CDC_InterfaceInit>:
 8009c50:	b590      	push	{r4, r7, lr}
 8009c52:	b089      	sub	sp, #36	@ 0x24
 8009c54:	af04      	add	r7, sp, #16
 8009c56:	6078      	str	r0, [r7, #4]
 8009c58:	2301      	movs	r3, #1
 8009c5a:	2202      	movs	r2, #2
 8009c5c:	2102      	movs	r1, #2
 8009c5e:	6878      	ldr	r0, [r7, #4]
 8009c60:	f000 fcb2 	bl	800a5c8 <USBH_FindInterface>
 8009c64:	4603      	mov	r3, r0
 8009c66:	73fb      	strb	r3, [r7, #15]
 8009c68:	7bfb      	ldrb	r3, [r7, #15]
 8009c6a:	2bff      	cmp	r3, #255	@ 0xff
 8009c6c:	d002      	beq.n	8009c74 <USBH_CDC_InterfaceInit+0x24>
 8009c6e:	7bfb      	ldrb	r3, [r7, #15]
 8009c70:	2b01      	cmp	r3, #1
 8009c72:	d901      	bls.n	8009c78 <USBH_CDC_InterfaceInit+0x28>
 8009c74:	2302      	movs	r3, #2
 8009c76:	e13d      	b.n	8009ef4 <USBH_CDC_InterfaceInit+0x2a4>
 8009c78:	7bfb      	ldrb	r3, [r7, #15]
 8009c7a:	4619      	mov	r1, r3
 8009c7c:	6878      	ldr	r0, [r7, #4]
 8009c7e:	f000 fc87 	bl	800a590 <USBH_SelectInterface>
 8009c82:	4603      	mov	r3, r0
 8009c84:	73bb      	strb	r3, [r7, #14]
 8009c86:	7bbb      	ldrb	r3, [r7, #14]
 8009c88:	2b00      	cmp	r3, #0
 8009c8a:	d001      	beq.n	8009c90 <USBH_CDC_InterfaceInit+0x40>
 8009c8c:	2302      	movs	r3, #2
 8009c8e:	e131      	b.n	8009ef4 <USBH_CDC_InterfaceInit+0x2a4>
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	f8d3 437c 	ldr.w	r4, [r3, #892]	@ 0x37c
 8009c96:	2050      	movs	r0, #80	@ 0x50
 8009c98:	f006 ffe8 	bl	8010c6c <malloc>
 8009c9c:	4603      	mov	r3, r0
 8009c9e:	61e3      	str	r3, [r4, #28]
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009ca6:	69db      	ldr	r3, [r3, #28]
 8009ca8:	60bb      	str	r3, [r7, #8]
 8009caa:	68bb      	ldr	r3, [r7, #8]
 8009cac:	2b00      	cmp	r3, #0
 8009cae:	d101      	bne.n	8009cb4 <USBH_CDC_InterfaceInit+0x64>
 8009cb0:	2302      	movs	r3, #2
 8009cb2:	e11f      	b.n	8009ef4 <USBH_CDC_InterfaceInit+0x2a4>
 8009cb4:	2250      	movs	r2, #80	@ 0x50
 8009cb6:	2100      	movs	r1, #0
 8009cb8:	68b8      	ldr	r0, [r7, #8]
 8009cba:	f008 fce3 	bl	8012684 <memset>
 8009cbe:	7bfb      	ldrb	r3, [r7, #15]
 8009cc0:	687a      	ldr	r2, [r7, #4]
 8009cc2:	211a      	movs	r1, #26
 8009cc4:	fb01 f303 	mul.w	r3, r1, r3
 8009cc8:	4413      	add	r3, r2
 8009cca:	f203 334e 	addw	r3, r3, #846	@ 0x34e
 8009cce:	781b      	ldrb	r3, [r3, #0]
 8009cd0:	b25b      	sxtb	r3, r3
 8009cd2:	2b00      	cmp	r3, #0
 8009cd4:	da15      	bge.n	8009d02 <USBH_CDC_InterfaceInit+0xb2>
 8009cd6:	7bfb      	ldrb	r3, [r7, #15]
 8009cd8:	687a      	ldr	r2, [r7, #4]
 8009cda:	211a      	movs	r1, #26
 8009cdc:	fb01 f303 	mul.w	r3, r1, r3
 8009ce0:	4413      	add	r3, r2
 8009ce2:	f203 334e 	addw	r3, r3, #846	@ 0x34e
 8009ce6:	781a      	ldrb	r2, [r3, #0]
 8009ce8:	68bb      	ldr	r3, [r7, #8]
 8009cea:	705a      	strb	r2, [r3, #1]
 8009cec:	7bfb      	ldrb	r3, [r7, #15]
 8009cee:	687a      	ldr	r2, [r7, #4]
 8009cf0:	211a      	movs	r1, #26
 8009cf2:	fb01 f303 	mul.w	r3, r1, r3
 8009cf6:	4413      	add	r3, r2
 8009cf8:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8009cfc:	881a      	ldrh	r2, [r3, #0]
 8009cfe:	68bb      	ldr	r3, [r7, #8]
 8009d00:	815a      	strh	r2, [r3, #10]
 8009d02:	68bb      	ldr	r3, [r7, #8]
 8009d04:	785b      	ldrb	r3, [r3, #1]
 8009d06:	4619      	mov	r1, r3
 8009d08:	6878      	ldr	r0, [r7, #4]
 8009d0a:	f002 f976 	bl	800bffa <USBH_AllocPipe>
 8009d0e:	4603      	mov	r3, r0
 8009d10:	461a      	mov	r2, r3
 8009d12:	68bb      	ldr	r3, [r7, #8]
 8009d14:	701a      	strb	r2, [r3, #0]
 8009d16:	68bb      	ldr	r3, [r7, #8]
 8009d18:	7819      	ldrb	r1, [r3, #0]
 8009d1a:	68bb      	ldr	r3, [r7, #8]
 8009d1c:	7858      	ldrb	r0, [r3, #1]
 8009d1e:	687b      	ldr	r3, [r7, #4]
 8009d20:	f893 431c 	ldrb.w	r4, [r3, #796]	@ 0x31c
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 8009d2a:	68ba      	ldr	r2, [r7, #8]
 8009d2c:	8952      	ldrh	r2, [r2, #10]
 8009d2e:	9202      	str	r2, [sp, #8]
 8009d30:	2203      	movs	r2, #3
 8009d32:	9201      	str	r2, [sp, #4]
 8009d34:	9300      	str	r3, [sp, #0]
 8009d36:	4623      	mov	r3, r4
 8009d38:	4602      	mov	r2, r0
 8009d3a:	6878      	ldr	r0, [r7, #4]
 8009d3c:	f002 f92e 	bl	800bf9c <USBH_OpenPipe>
 8009d40:	68bb      	ldr	r3, [r7, #8]
 8009d42:	781b      	ldrb	r3, [r3, #0]
 8009d44:	2200      	movs	r2, #0
 8009d46:	4619      	mov	r1, r3
 8009d48:	6878      	ldr	r0, [r7, #4]
 8009d4a:	f006 ff03 	bl	8010b54 <USBH_LL_SetToggle>
 8009d4e:	2300      	movs	r3, #0
 8009d50:	2200      	movs	r2, #0
 8009d52:	210a      	movs	r1, #10
 8009d54:	6878      	ldr	r0, [r7, #4]
 8009d56:	f000 fc37 	bl	800a5c8 <USBH_FindInterface>
 8009d5a:	4603      	mov	r3, r0
 8009d5c:	73fb      	strb	r3, [r7, #15]
 8009d5e:	7bfb      	ldrb	r3, [r7, #15]
 8009d60:	2bff      	cmp	r3, #255	@ 0xff
 8009d62:	d002      	beq.n	8009d6a <USBH_CDC_InterfaceInit+0x11a>
 8009d64:	7bfb      	ldrb	r3, [r7, #15]
 8009d66:	2b01      	cmp	r3, #1
 8009d68:	d901      	bls.n	8009d6e <USBH_CDC_InterfaceInit+0x11e>
 8009d6a:	2302      	movs	r3, #2
 8009d6c:	e0c2      	b.n	8009ef4 <USBH_CDC_InterfaceInit+0x2a4>
 8009d6e:	7bfb      	ldrb	r3, [r7, #15]
 8009d70:	687a      	ldr	r2, [r7, #4]
 8009d72:	211a      	movs	r1, #26
 8009d74:	fb01 f303 	mul.w	r3, r1, r3
 8009d78:	4413      	add	r3, r2
 8009d7a:	f203 334e 	addw	r3, r3, #846	@ 0x34e
 8009d7e:	781b      	ldrb	r3, [r3, #0]
 8009d80:	b25b      	sxtb	r3, r3
 8009d82:	2b00      	cmp	r3, #0
 8009d84:	da16      	bge.n	8009db4 <USBH_CDC_InterfaceInit+0x164>
 8009d86:	7bfb      	ldrb	r3, [r7, #15]
 8009d88:	687a      	ldr	r2, [r7, #4]
 8009d8a:	211a      	movs	r1, #26
 8009d8c:	fb01 f303 	mul.w	r3, r1, r3
 8009d90:	4413      	add	r3, r2
 8009d92:	f203 334e 	addw	r3, r3, #846	@ 0x34e
 8009d96:	781a      	ldrb	r2, [r3, #0]
 8009d98:	68bb      	ldr	r3, [r7, #8]
 8009d9a:	73da      	strb	r2, [r3, #15]
 8009d9c:	7bfb      	ldrb	r3, [r7, #15]
 8009d9e:	687a      	ldr	r2, [r7, #4]
 8009da0:	211a      	movs	r1, #26
 8009da2:	fb01 f303 	mul.w	r3, r1, r3
 8009da6:	4413      	add	r3, r2
 8009da8:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8009dac:	881a      	ldrh	r2, [r3, #0]
 8009dae:	68bb      	ldr	r3, [r7, #8]
 8009db0:	835a      	strh	r2, [r3, #26]
 8009db2:	e015      	b.n	8009de0 <USBH_CDC_InterfaceInit+0x190>
 8009db4:	7bfb      	ldrb	r3, [r7, #15]
 8009db6:	687a      	ldr	r2, [r7, #4]
 8009db8:	211a      	movs	r1, #26
 8009dba:	fb01 f303 	mul.w	r3, r1, r3
 8009dbe:	4413      	add	r3, r2
 8009dc0:	f203 334e 	addw	r3, r3, #846	@ 0x34e
 8009dc4:	781a      	ldrb	r2, [r3, #0]
 8009dc6:	68bb      	ldr	r3, [r7, #8]
 8009dc8:	739a      	strb	r2, [r3, #14]
 8009dca:	7bfb      	ldrb	r3, [r7, #15]
 8009dcc:	687a      	ldr	r2, [r7, #4]
 8009dce:	211a      	movs	r1, #26
 8009dd0:	fb01 f303 	mul.w	r3, r1, r3
 8009dd4:	4413      	add	r3, r2
 8009dd6:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8009dda:	881a      	ldrh	r2, [r3, #0]
 8009ddc:	68bb      	ldr	r3, [r7, #8]
 8009dde:	831a      	strh	r2, [r3, #24]
 8009de0:	7bfb      	ldrb	r3, [r7, #15]
 8009de2:	687a      	ldr	r2, [r7, #4]
 8009de4:	211a      	movs	r1, #26
 8009de6:	fb01 f303 	mul.w	r3, r1, r3
 8009dea:	4413      	add	r3, r2
 8009dec:	f203 3356 	addw	r3, r3, #854	@ 0x356
 8009df0:	781b      	ldrb	r3, [r3, #0]
 8009df2:	b25b      	sxtb	r3, r3
 8009df4:	2b00      	cmp	r3, #0
 8009df6:	da16      	bge.n	8009e26 <USBH_CDC_InterfaceInit+0x1d6>
 8009df8:	7bfb      	ldrb	r3, [r7, #15]
 8009dfa:	687a      	ldr	r2, [r7, #4]
 8009dfc:	211a      	movs	r1, #26
 8009dfe:	fb01 f303 	mul.w	r3, r1, r3
 8009e02:	4413      	add	r3, r2
 8009e04:	f203 3356 	addw	r3, r3, #854	@ 0x356
 8009e08:	781a      	ldrb	r2, [r3, #0]
 8009e0a:	68bb      	ldr	r3, [r7, #8]
 8009e0c:	73da      	strb	r2, [r3, #15]
 8009e0e:	7bfb      	ldrb	r3, [r7, #15]
 8009e10:	687a      	ldr	r2, [r7, #4]
 8009e12:	211a      	movs	r1, #26
 8009e14:	fb01 f303 	mul.w	r3, r1, r3
 8009e18:	4413      	add	r3, r2
 8009e1a:	f503 7356 	add.w	r3, r3, #856	@ 0x358
 8009e1e:	881a      	ldrh	r2, [r3, #0]
 8009e20:	68bb      	ldr	r3, [r7, #8]
 8009e22:	835a      	strh	r2, [r3, #26]
 8009e24:	e015      	b.n	8009e52 <USBH_CDC_InterfaceInit+0x202>
 8009e26:	7bfb      	ldrb	r3, [r7, #15]
 8009e28:	687a      	ldr	r2, [r7, #4]
 8009e2a:	211a      	movs	r1, #26
 8009e2c:	fb01 f303 	mul.w	r3, r1, r3
 8009e30:	4413      	add	r3, r2
 8009e32:	f203 3356 	addw	r3, r3, #854	@ 0x356
 8009e36:	781a      	ldrb	r2, [r3, #0]
 8009e38:	68bb      	ldr	r3, [r7, #8]
 8009e3a:	739a      	strb	r2, [r3, #14]
 8009e3c:	7bfb      	ldrb	r3, [r7, #15]
 8009e3e:	687a      	ldr	r2, [r7, #4]
 8009e40:	211a      	movs	r1, #26
 8009e42:	fb01 f303 	mul.w	r3, r1, r3
 8009e46:	4413      	add	r3, r2
 8009e48:	f503 7356 	add.w	r3, r3, #856	@ 0x358
 8009e4c:	881a      	ldrh	r2, [r3, #0]
 8009e4e:	68bb      	ldr	r3, [r7, #8]
 8009e50:	831a      	strh	r2, [r3, #24]
 8009e52:	68bb      	ldr	r3, [r7, #8]
 8009e54:	7b9b      	ldrb	r3, [r3, #14]
 8009e56:	4619      	mov	r1, r3
 8009e58:	6878      	ldr	r0, [r7, #4]
 8009e5a:	f002 f8ce 	bl	800bffa <USBH_AllocPipe>
 8009e5e:	4603      	mov	r3, r0
 8009e60:	461a      	mov	r2, r3
 8009e62:	68bb      	ldr	r3, [r7, #8]
 8009e64:	735a      	strb	r2, [r3, #13]
 8009e66:	68bb      	ldr	r3, [r7, #8]
 8009e68:	7bdb      	ldrb	r3, [r3, #15]
 8009e6a:	4619      	mov	r1, r3
 8009e6c:	6878      	ldr	r0, [r7, #4]
 8009e6e:	f002 f8c4 	bl	800bffa <USBH_AllocPipe>
 8009e72:	4603      	mov	r3, r0
 8009e74:	461a      	mov	r2, r3
 8009e76:	68bb      	ldr	r3, [r7, #8]
 8009e78:	731a      	strb	r2, [r3, #12]
 8009e7a:	68bb      	ldr	r3, [r7, #8]
 8009e7c:	7b59      	ldrb	r1, [r3, #13]
 8009e7e:	68bb      	ldr	r3, [r7, #8]
 8009e80:	7b98      	ldrb	r0, [r3, #14]
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	f893 431c 	ldrb.w	r4, [r3, #796]	@ 0x31c
 8009e88:	687b      	ldr	r3, [r7, #4]
 8009e8a:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 8009e8e:	68ba      	ldr	r2, [r7, #8]
 8009e90:	8b12      	ldrh	r2, [r2, #24]
 8009e92:	9202      	str	r2, [sp, #8]
 8009e94:	2202      	movs	r2, #2
 8009e96:	9201      	str	r2, [sp, #4]
 8009e98:	9300      	str	r3, [sp, #0]
 8009e9a:	4623      	mov	r3, r4
 8009e9c:	4602      	mov	r2, r0
 8009e9e:	6878      	ldr	r0, [r7, #4]
 8009ea0:	f002 f87c 	bl	800bf9c <USBH_OpenPipe>
 8009ea4:	68bb      	ldr	r3, [r7, #8]
 8009ea6:	7b19      	ldrb	r1, [r3, #12]
 8009ea8:	68bb      	ldr	r3, [r7, #8]
 8009eaa:	7bd8      	ldrb	r0, [r3, #15]
 8009eac:	687b      	ldr	r3, [r7, #4]
 8009eae:	f893 431c 	ldrb.w	r4, [r3, #796]	@ 0x31c
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 8009eb8:	68ba      	ldr	r2, [r7, #8]
 8009eba:	8b52      	ldrh	r2, [r2, #26]
 8009ebc:	9202      	str	r2, [sp, #8]
 8009ebe:	2202      	movs	r2, #2
 8009ec0:	9201      	str	r2, [sp, #4]
 8009ec2:	9300      	str	r3, [sp, #0]
 8009ec4:	4623      	mov	r3, r4
 8009ec6:	4602      	mov	r2, r0
 8009ec8:	6878      	ldr	r0, [r7, #4]
 8009eca:	f002 f867 	bl	800bf9c <USBH_OpenPipe>
 8009ece:	68bb      	ldr	r3, [r7, #8]
 8009ed0:	2200      	movs	r2, #0
 8009ed2:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8009ed6:	68bb      	ldr	r3, [r7, #8]
 8009ed8:	7b5b      	ldrb	r3, [r3, #13]
 8009eda:	2200      	movs	r2, #0
 8009edc:	4619      	mov	r1, r3
 8009ede:	6878      	ldr	r0, [r7, #4]
 8009ee0:	f006 fe38 	bl	8010b54 <USBH_LL_SetToggle>
 8009ee4:	68bb      	ldr	r3, [r7, #8]
 8009ee6:	7b1b      	ldrb	r3, [r3, #12]
 8009ee8:	2200      	movs	r2, #0
 8009eea:	4619      	mov	r1, r3
 8009eec:	6878      	ldr	r0, [r7, #4]
 8009eee:	f006 fe31 	bl	8010b54 <USBH_LL_SetToggle>
 8009ef2:	2300      	movs	r3, #0
 8009ef4:	4618      	mov	r0, r3
 8009ef6:	3714      	adds	r7, #20
 8009ef8:	46bd      	mov	sp, r7
 8009efa:	bd90      	pop	{r4, r7, pc}

08009efc <USBH_CDC_InterfaceDeInit>:
 8009efc:	b580      	push	{r7, lr}
 8009efe:	b084      	sub	sp, #16
 8009f00:	af00      	add	r7, sp, #0
 8009f02:	6078      	str	r0, [r7, #4]
 8009f04:	687b      	ldr	r3, [r7, #4]
 8009f06:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009f0a:	69db      	ldr	r3, [r3, #28]
 8009f0c:	60fb      	str	r3, [r7, #12]
 8009f0e:	68fb      	ldr	r3, [r7, #12]
 8009f10:	781b      	ldrb	r3, [r3, #0]
 8009f12:	2b00      	cmp	r3, #0
 8009f14:	d00e      	beq.n	8009f34 <USBH_CDC_InterfaceDeInit+0x38>
 8009f16:	68fb      	ldr	r3, [r7, #12]
 8009f18:	781b      	ldrb	r3, [r3, #0]
 8009f1a:	4619      	mov	r1, r3
 8009f1c:	6878      	ldr	r0, [r7, #4]
 8009f1e:	f002 f85c 	bl	800bfda <USBH_ClosePipe>
 8009f22:	68fb      	ldr	r3, [r7, #12]
 8009f24:	781b      	ldrb	r3, [r3, #0]
 8009f26:	4619      	mov	r1, r3
 8009f28:	6878      	ldr	r0, [r7, #4]
 8009f2a:	f002 f887 	bl	800c03c <USBH_FreePipe>
 8009f2e:	68fb      	ldr	r3, [r7, #12]
 8009f30:	2200      	movs	r2, #0
 8009f32:	701a      	strb	r2, [r3, #0]
 8009f34:	68fb      	ldr	r3, [r7, #12]
 8009f36:	7b1b      	ldrb	r3, [r3, #12]
 8009f38:	2b00      	cmp	r3, #0
 8009f3a:	d00e      	beq.n	8009f5a <USBH_CDC_InterfaceDeInit+0x5e>
 8009f3c:	68fb      	ldr	r3, [r7, #12]
 8009f3e:	7b1b      	ldrb	r3, [r3, #12]
 8009f40:	4619      	mov	r1, r3
 8009f42:	6878      	ldr	r0, [r7, #4]
 8009f44:	f002 f849 	bl	800bfda <USBH_ClosePipe>
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	7b1b      	ldrb	r3, [r3, #12]
 8009f4c:	4619      	mov	r1, r3
 8009f4e:	6878      	ldr	r0, [r7, #4]
 8009f50:	f002 f874 	bl	800c03c <USBH_FreePipe>
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	2200      	movs	r2, #0
 8009f58:	731a      	strb	r2, [r3, #12]
 8009f5a:	68fb      	ldr	r3, [r7, #12]
 8009f5c:	7b5b      	ldrb	r3, [r3, #13]
 8009f5e:	2b00      	cmp	r3, #0
 8009f60:	d00e      	beq.n	8009f80 <USBH_CDC_InterfaceDeInit+0x84>
 8009f62:	68fb      	ldr	r3, [r7, #12]
 8009f64:	7b5b      	ldrb	r3, [r3, #13]
 8009f66:	4619      	mov	r1, r3
 8009f68:	6878      	ldr	r0, [r7, #4]
 8009f6a:	f002 f836 	bl	800bfda <USBH_ClosePipe>
 8009f6e:	68fb      	ldr	r3, [r7, #12]
 8009f70:	7b5b      	ldrb	r3, [r3, #13]
 8009f72:	4619      	mov	r1, r3
 8009f74:	6878      	ldr	r0, [r7, #4]
 8009f76:	f002 f861 	bl	800c03c <USBH_FreePipe>
 8009f7a:	68fb      	ldr	r3, [r7, #12]
 8009f7c:	2200      	movs	r2, #0
 8009f7e:	735a      	strb	r2, [r3, #13]
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009f86:	69db      	ldr	r3, [r3, #28]
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	d00b      	beq.n	8009fa4 <USBH_CDC_InterfaceDeInit+0xa8>
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009f92:	69db      	ldr	r3, [r3, #28]
 8009f94:	4618      	mov	r0, r3
 8009f96:	f006 fe71 	bl	8010c7c <free>
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009fa0:	2200      	movs	r2, #0
 8009fa2:	61da      	str	r2, [r3, #28]
 8009fa4:	2300      	movs	r3, #0
 8009fa6:	4618      	mov	r0, r3
 8009fa8:	3710      	adds	r7, #16
 8009faa:	46bd      	mov	sp, r7
 8009fac:	bd80      	pop	{r7, pc}

08009fae <USBH_CDC_ClassRequest>:
 8009fae:	b580      	push	{r7, lr}
 8009fb0:	b084      	sub	sp, #16
 8009fb2:	af00      	add	r7, sp, #0
 8009fb4:	6078      	str	r0, [r7, #4]
 8009fb6:	687b      	ldr	r3, [r7, #4]
 8009fb8:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 8009fbc:	69db      	ldr	r3, [r3, #28]
 8009fbe:	60fb      	str	r3, [r7, #12]
 8009fc0:	68fb      	ldr	r3, [r7, #12]
 8009fc2:	3340      	adds	r3, #64	@ 0x40
 8009fc4:	4619      	mov	r1, r3
 8009fc6:	6878      	ldr	r0, [r7, #4]
 8009fc8:	f000 f8b1 	bl	800a12e <GetLineCoding>
 8009fcc:	4603      	mov	r3, r0
 8009fce:	72fb      	strb	r3, [r7, #11]
 8009fd0:	7afb      	ldrb	r3, [r7, #11]
 8009fd2:	2b00      	cmp	r3, #0
 8009fd4:	d105      	bne.n	8009fe2 <USBH_CDC_ClassRequest+0x34>
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 8009fdc:	2102      	movs	r1, #2
 8009fde:	6878      	ldr	r0, [r7, #4]
 8009fe0:	4798      	blx	r3
 8009fe2:	7afb      	ldrb	r3, [r7, #11]
 8009fe4:	4618      	mov	r0, r3
 8009fe6:	3710      	adds	r7, #16
 8009fe8:	46bd      	mov	sp, r7
 8009fea:	bd80      	pop	{r7, pc}

08009fec <USBH_CDC_Process>:
 8009fec:	b580      	push	{r7, lr}
 8009fee:	b084      	sub	sp, #16
 8009ff0:	af00      	add	r7, sp, #0
 8009ff2:	6078      	str	r0, [r7, #4]
 8009ff4:	2301      	movs	r3, #1
 8009ff6:	73fb      	strb	r3, [r7, #15]
 8009ff8:	2300      	movs	r3, #0
 8009ffa:	73bb      	strb	r3, [r7, #14]
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a002:	69db      	ldr	r3, [r3, #28]
 800a004:	60bb      	str	r3, [r7, #8]
 800a006:	68bb      	ldr	r3, [r7, #8]
 800a008:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800a00c:	2b04      	cmp	r3, #4
 800a00e:	d877      	bhi.n	800a100 <USBH_CDC_Process+0x114>
 800a010:	a201      	add	r2, pc, #4	@ (adr r2, 800a018 <USBH_CDC_Process+0x2c>)
 800a012:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a016:	bf00      	nop
 800a018:	0800a02d 	.word	0x0800a02d
 800a01c:	0800a033 	.word	0x0800a033
 800a020:	0800a063 	.word	0x0800a063
 800a024:	0800a0d7 	.word	0x0800a0d7
 800a028:	0800a0e5 	.word	0x0800a0e5
 800a02c:	2300      	movs	r3, #0
 800a02e:	73fb      	strb	r3, [r7, #15]
 800a030:	e06d      	b.n	800a10e <USBH_CDC_Process+0x122>
 800a032:	68bb      	ldr	r3, [r7, #8]
 800a034:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a036:	4619      	mov	r1, r3
 800a038:	6878      	ldr	r0, [r7, #4]
 800a03a:	f000 f897 	bl	800a16c <SetLineCoding>
 800a03e:	4603      	mov	r3, r0
 800a040:	73bb      	strb	r3, [r7, #14]
 800a042:	7bbb      	ldrb	r3, [r7, #14]
 800a044:	2b00      	cmp	r3, #0
 800a046:	d104      	bne.n	800a052 <USBH_CDC_Process+0x66>
 800a048:	68bb      	ldr	r3, [r7, #8]
 800a04a:	2202      	movs	r2, #2
 800a04c:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800a050:	e058      	b.n	800a104 <USBH_CDC_Process+0x118>
 800a052:	7bbb      	ldrb	r3, [r7, #14]
 800a054:	2b01      	cmp	r3, #1
 800a056:	d055      	beq.n	800a104 <USBH_CDC_Process+0x118>
 800a058:	68bb      	ldr	r3, [r7, #8]
 800a05a:	2204      	movs	r2, #4
 800a05c:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800a060:	e050      	b.n	800a104 <USBH_CDC_Process+0x118>
 800a062:	68bb      	ldr	r3, [r7, #8]
 800a064:	3340      	adds	r3, #64	@ 0x40
 800a066:	4619      	mov	r1, r3
 800a068:	6878      	ldr	r0, [r7, #4]
 800a06a:	f000 f860 	bl	800a12e <GetLineCoding>
 800a06e:	4603      	mov	r3, r0
 800a070:	73bb      	strb	r3, [r7, #14]
 800a072:	7bbb      	ldrb	r3, [r7, #14]
 800a074:	2b00      	cmp	r3, #0
 800a076:	d126      	bne.n	800a0c6 <USBH_CDC_Process+0xda>
 800a078:	68bb      	ldr	r3, [r7, #8]
 800a07a:	2200      	movs	r2, #0
 800a07c:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800a080:	68bb      	ldr	r3, [r7, #8]
 800a082:	f893 2044 	ldrb.w	r2, [r3, #68]	@ 0x44
 800a086:	68bb      	ldr	r3, [r7, #8]
 800a088:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a08a:	791b      	ldrb	r3, [r3, #4]
 800a08c:	429a      	cmp	r2, r3
 800a08e:	d13b      	bne.n	800a108 <USBH_CDC_Process+0x11c>
 800a090:	68bb      	ldr	r3, [r7, #8]
 800a092:	f893 2046 	ldrb.w	r2, [r3, #70]	@ 0x46
 800a096:	68bb      	ldr	r3, [r7, #8]
 800a098:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a09a:	799b      	ldrb	r3, [r3, #6]
 800a09c:	429a      	cmp	r2, r3
 800a09e:	d133      	bne.n	800a108 <USBH_CDC_Process+0x11c>
 800a0a0:	68bb      	ldr	r3, [r7, #8]
 800a0a2:	f893 2045 	ldrb.w	r2, [r3, #69]	@ 0x45
 800a0a6:	68bb      	ldr	r3, [r7, #8]
 800a0a8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a0aa:	795b      	ldrb	r3, [r3, #5]
 800a0ac:	429a      	cmp	r2, r3
 800a0ae:	d12b      	bne.n	800a108 <USBH_CDC_Process+0x11c>
 800a0b0:	68bb      	ldr	r3, [r7, #8]
 800a0b2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a0b4:	68bb      	ldr	r3, [r7, #8]
 800a0b6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a0b8:	681b      	ldr	r3, [r3, #0]
 800a0ba:	429a      	cmp	r2, r3
 800a0bc:	d124      	bne.n	800a108 <USBH_CDC_Process+0x11c>
 800a0be:	6878      	ldr	r0, [r7, #4]
 800a0c0:	f000 f982 	bl	800a3c8 <USBH_CDC_LineCodingChanged>
 800a0c4:	e020      	b.n	800a108 <USBH_CDC_Process+0x11c>
 800a0c6:	7bbb      	ldrb	r3, [r7, #14]
 800a0c8:	2b01      	cmp	r3, #1
 800a0ca:	d01d      	beq.n	800a108 <USBH_CDC_Process+0x11c>
 800a0cc:	68bb      	ldr	r3, [r7, #8]
 800a0ce:	2204      	movs	r2, #4
 800a0d0:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800a0d4:	e018      	b.n	800a108 <USBH_CDC_Process+0x11c>
 800a0d6:	6878      	ldr	r0, [r7, #4]
 800a0d8:	f000 f867 	bl	800a1aa <CDC_ProcessTransmission>
 800a0dc:	6878      	ldr	r0, [r7, #4]
 800a0de:	f000 f8f6 	bl	800a2ce <CDC_ProcessReception>
 800a0e2:	e014      	b.n	800a10e <USBH_CDC_Process+0x122>
 800a0e4:	2100      	movs	r1, #0
 800a0e6:	6878      	ldr	r0, [r7, #4]
 800a0e8:	f001 f951 	bl	800b38e <USBH_ClrFeature>
 800a0ec:	4603      	mov	r3, r0
 800a0ee:	73bb      	strb	r3, [r7, #14]
 800a0f0:	7bbb      	ldrb	r3, [r7, #14]
 800a0f2:	2b00      	cmp	r3, #0
 800a0f4:	d10a      	bne.n	800a10c <USBH_CDC_Process+0x120>
 800a0f6:	68bb      	ldr	r3, [r7, #8]
 800a0f8:	2200      	movs	r2, #0
 800a0fa:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800a0fe:	e005      	b.n	800a10c <USBH_CDC_Process+0x120>
 800a100:	bf00      	nop
 800a102:	e004      	b.n	800a10e <USBH_CDC_Process+0x122>
 800a104:	bf00      	nop
 800a106:	e002      	b.n	800a10e <USBH_CDC_Process+0x122>
 800a108:	bf00      	nop
 800a10a:	e000      	b.n	800a10e <USBH_CDC_Process+0x122>
 800a10c:	bf00      	nop
 800a10e:	7bfb      	ldrb	r3, [r7, #15]
 800a110:	4618      	mov	r0, r3
 800a112:	3710      	adds	r7, #16
 800a114:	46bd      	mov	sp, r7
 800a116:	bd80      	pop	{r7, pc}

0800a118 <USBH_CDC_SOFProcess>:
 800a118:	b480      	push	{r7}
 800a11a:	b083      	sub	sp, #12
 800a11c:	af00      	add	r7, sp, #0
 800a11e:	6078      	str	r0, [r7, #4]
 800a120:	2300      	movs	r3, #0
 800a122:	4618      	mov	r0, r3
 800a124:	370c      	adds	r7, #12
 800a126:	46bd      	mov	sp, r7
 800a128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a12c:	4770      	bx	lr

0800a12e <GetLineCoding>:
 800a12e:	b580      	push	{r7, lr}
 800a130:	b082      	sub	sp, #8
 800a132:	af00      	add	r7, sp, #0
 800a134:	6078      	str	r0, [r7, #4]
 800a136:	6039      	str	r1, [r7, #0]
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	22a1      	movs	r2, #161	@ 0xa1
 800a13c:	741a      	strb	r2, [r3, #16]
 800a13e:	687b      	ldr	r3, [r7, #4]
 800a140:	2221      	movs	r2, #33	@ 0x21
 800a142:	745a      	strb	r2, [r3, #17]
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	2200      	movs	r2, #0
 800a148:	825a      	strh	r2, [r3, #18]
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	2200      	movs	r2, #0
 800a14e:	829a      	strh	r2, [r3, #20]
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	2207      	movs	r2, #7
 800a154:	82da      	strh	r2, [r3, #22]
 800a156:	683b      	ldr	r3, [r7, #0]
 800a158:	2207      	movs	r2, #7
 800a15a:	4619      	mov	r1, r3
 800a15c:	6878      	ldr	r0, [r7, #4]
 800a15e:	f001 fbdc 	bl	800b91a <USBH_CtlReq>
 800a162:	4603      	mov	r3, r0
 800a164:	4618      	mov	r0, r3
 800a166:	3708      	adds	r7, #8
 800a168:	46bd      	mov	sp, r7
 800a16a:	bd80      	pop	{r7, pc}

0800a16c <SetLineCoding>:
 800a16c:	b580      	push	{r7, lr}
 800a16e:	b082      	sub	sp, #8
 800a170:	af00      	add	r7, sp, #0
 800a172:	6078      	str	r0, [r7, #4]
 800a174:	6039      	str	r1, [r7, #0]
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	2221      	movs	r2, #33	@ 0x21
 800a17a:	741a      	strb	r2, [r3, #16]
 800a17c:	687b      	ldr	r3, [r7, #4]
 800a17e:	2220      	movs	r2, #32
 800a180:	745a      	strb	r2, [r3, #17]
 800a182:	687b      	ldr	r3, [r7, #4]
 800a184:	2200      	movs	r2, #0
 800a186:	825a      	strh	r2, [r3, #18]
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	2200      	movs	r2, #0
 800a18c:	829a      	strh	r2, [r3, #20]
 800a18e:	687b      	ldr	r3, [r7, #4]
 800a190:	2207      	movs	r2, #7
 800a192:	82da      	strh	r2, [r3, #22]
 800a194:	683b      	ldr	r3, [r7, #0]
 800a196:	2207      	movs	r2, #7
 800a198:	4619      	mov	r1, r3
 800a19a:	6878      	ldr	r0, [r7, #4]
 800a19c:	f001 fbbd 	bl	800b91a <USBH_CtlReq>
 800a1a0:	4603      	mov	r3, r0
 800a1a2:	4618      	mov	r0, r3
 800a1a4:	3708      	adds	r7, #8
 800a1a6:	46bd      	mov	sp, r7
 800a1a8:	bd80      	pop	{r7, pc}

0800a1aa <CDC_ProcessTransmission>:
 800a1aa:	b580      	push	{r7, lr}
 800a1ac:	b086      	sub	sp, #24
 800a1ae:	af02      	add	r7, sp, #8
 800a1b0:	6078      	str	r0, [r7, #4]
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a1b8:	69db      	ldr	r3, [r3, #28]
 800a1ba:	60fb      	str	r3, [r7, #12]
 800a1bc:	2300      	movs	r3, #0
 800a1be:	72fb      	strb	r3, [r7, #11]
 800a1c0:	68fb      	ldr	r3, [r7, #12]
 800a1c2:	f893 304d 	ldrb.w	r3, [r3, #77]	@ 0x4d
 800a1c6:	2b01      	cmp	r3, #1
 800a1c8:	d002      	beq.n	800a1d0 <CDC_ProcessTransmission+0x26>
 800a1ca:	2b02      	cmp	r3, #2
 800a1cc:	d023      	beq.n	800a216 <CDC_ProcessTransmission+0x6c>
 800a1ce:	e07a      	b.n	800a2c6 <CDC_ProcessTransmission+0x11c>
 800a1d0:	68fb      	ldr	r3, [r7, #12]
 800a1d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a1d4:	68fa      	ldr	r2, [r7, #12]
 800a1d6:	8b12      	ldrh	r2, [r2, #24]
 800a1d8:	4293      	cmp	r3, r2
 800a1da:	d90b      	bls.n	800a1f4 <CDC_ProcessTransmission+0x4a>
 800a1dc:	68fb      	ldr	r3, [r7, #12]
 800a1de:	69d9      	ldr	r1, [r3, #28]
 800a1e0:	68fb      	ldr	r3, [r7, #12]
 800a1e2:	8b1a      	ldrh	r2, [r3, #24]
 800a1e4:	68fb      	ldr	r3, [r7, #12]
 800a1e6:	7b5b      	ldrb	r3, [r3, #13]
 800a1e8:	2001      	movs	r0, #1
 800a1ea:	9000      	str	r0, [sp, #0]
 800a1ec:	6878      	ldr	r0, [r7, #4]
 800a1ee:	f001 fe92 	bl	800bf16 <USBH_BulkSendData>
 800a1f2:	e00b      	b.n	800a20c <CDC_ProcessTransmission+0x62>
 800a1f4:	68fb      	ldr	r3, [r7, #12]
 800a1f6:	69d9      	ldr	r1, [r3, #28]
 800a1f8:	68fb      	ldr	r3, [r7, #12]
 800a1fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a1fc:	b29a      	uxth	r2, r3
 800a1fe:	68fb      	ldr	r3, [r7, #12]
 800a200:	7b5b      	ldrb	r3, [r3, #13]
 800a202:	2001      	movs	r0, #1
 800a204:	9000      	str	r0, [sp, #0]
 800a206:	6878      	ldr	r0, [r7, #4]
 800a208:	f001 fe85 	bl	800bf16 <USBH_BulkSendData>
 800a20c:	68fb      	ldr	r3, [r7, #12]
 800a20e:	2202      	movs	r2, #2
 800a210:	f883 204d 	strb.w	r2, [r3, #77]	@ 0x4d
 800a214:	e057      	b.n	800a2c6 <CDC_ProcessTransmission+0x11c>
 800a216:	68fb      	ldr	r3, [r7, #12]
 800a218:	7b5b      	ldrb	r3, [r3, #13]
 800a21a:	4619      	mov	r1, r3
 800a21c:	6878      	ldr	r0, [r7, #4]
 800a21e:	f006 fc6f 	bl	8010b00 <USBH_LL_GetURBState>
 800a222:	4603      	mov	r3, r0
 800a224:	72fb      	strb	r3, [r7, #11]
 800a226:	7afb      	ldrb	r3, [r7, #11]
 800a228:	2b01      	cmp	r3, #1
 800a22a:	d136      	bne.n	800a29a <CDC_ProcessTransmission+0xf0>
 800a22c:	68fb      	ldr	r3, [r7, #12]
 800a22e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a230:	68fa      	ldr	r2, [r7, #12]
 800a232:	8b12      	ldrh	r2, [r2, #24]
 800a234:	4293      	cmp	r3, r2
 800a236:	d90e      	bls.n	800a256 <CDC_ProcessTransmission+0xac>
 800a238:	68fb      	ldr	r3, [r7, #12]
 800a23a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a23c:	68fa      	ldr	r2, [r7, #12]
 800a23e:	8b12      	ldrh	r2, [r2, #24]
 800a240:	1a9a      	subs	r2, r3, r2
 800a242:	68fb      	ldr	r3, [r7, #12]
 800a244:	625a      	str	r2, [r3, #36]	@ 0x24
 800a246:	68fb      	ldr	r3, [r7, #12]
 800a248:	69db      	ldr	r3, [r3, #28]
 800a24a:	68fa      	ldr	r2, [r7, #12]
 800a24c:	8b12      	ldrh	r2, [r2, #24]
 800a24e:	441a      	add	r2, r3
 800a250:	68fb      	ldr	r3, [r7, #12]
 800a252:	61da      	str	r2, [r3, #28]
 800a254:	e002      	b.n	800a25c <CDC_ProcessTransmission+0xb2>
 800a256:	68fb      	ldr	r3, [r7, #12]
 800a258:	2200      	movs	r2, #0
 800a25a:	625a      	str	r2, [r3, #36]	@ 0x24
 800a25c:	68fb      	ldr	r3, [r7, #12]
 800a25e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a260:	2b00      	cmp	r3, #0
 800a262:	d004      	beq.n	800a26e <CDC_ProcessTransmission+0xc4>
 800a264:	68fb      	ldr	r3, [r7, #12]
 800a266:	2201      	movs	r2, #1
 800a268:	f883 204d 	strb.w	r2, [r3, #77]	@ 0x4d
 800a26c:	e006      	b.n	800a27c <CDC_ProcessTransmission+0xd2>
 800a26e:	68fb      	ldr	r3, [r7, #12]
 800a270:	2200      	movs	r2, #0
 800a272:	f883 204d 	strb.w	r2, [r3, #77]	@ 0x4d
 800a276:	6878      	ldr	r0, [r7, #4]
 800a278:	f000 f892 	bl	800a3a0 <USBH_CDC_TransmitCallback>
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	2204      	movs	r2, #4
 800a280:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a290:	2300      	movs	r3, #0
 800a292:	2200      	movs	r2, #0
 800a294:	f002 f900 	bl	800c498 <osMessageQueuePut>
 800a298:	e014      	b.n	800a2c4 <CDC_ProcessTransmission+0x11a>
 800a29a:	7afb      	ldrb	r3, [r7, #11]
 800a29c:	2b02      	cmp	r3, #2
 800a29e:	d111      	bne.n	800a2c4 <CDC_ProcessTransmission+0x11a>
 800a2a0:	68fb      	ldr	r3, [r7, #12]
 800a2a2:	2201      	movs	r2, #1
 800a2a4:	f883 204d 	strb.w	r2, [r3, #77]	@ 0x4d
 800a2a8:	687b      	ldr	r3, [r7, #4]
 800a2aa:	2204      	movs	r2, #4
 800a2ac:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a2bc:	2300      	movs	r3, #0
 800a2be:	2200      	movs	r2, #0
 800a2c0:	f002 f8ea 	bl	800c498 <osMessageQueuePut>
 800a2c4:	bf00      	nop
 800a2c6:	bf00      	nop
 800a2c8:	3710      	adds	r7, #16
 800a2ca:	46bd      	mov	sp, r7
 800a2cc:	bd80      	pop	{r7, pc}

0800a2ce <CDC_ProcessReception>:
 800a2ce:	b580      	push	{r7, lr}
 800a2d0:	b086      	sub	sp, #24
 800a2d2:	af00      	add	r7, sp, #0
 800a2d4:	6078      	str	r0, [r7, #4]
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a2dc:	69db      	ldr	r3, [r3, #28]
 800a2de:	617b      	str	r3, [r7, #20]
 800a2e0:	2300      	movs	r3, #0
 800a2e2:	74fb      	strb	r3, [r7, #19]
 800a2e4:	697b      	ldr	r3, [r7, #20]
 800a2e6:	f893 304e 	ldrb.w	r3, [r3, #78]	@ 0x4e
 800a2ea:	2b03      	cmp	r3, #3
 800a2ec:	d002      	beq.n	800a2f4 <CDC_ProcessReception+0x26>
 800a2ee:	2b04      	cmp	r3, #4
 800a2f0:	d00e      	beq.n	800a310 <CDC_ProcessReception+0x42>
 800a2f2:	e051      	b.n	800a398 <CDC_ProcessReception+0xca>
 800a2f4:	697b      	ldr	r3, [r7, #20]
 800a2f6:	6a19      	ldr	r1, [r3, #32]
 800a2f8:	697b      	ldr	r3, [r7, #20]
 800a2fa:	8b5a      	ldrh	r2, [r3, #26]
 800a2fc:	697b      	ldr	r3, [r7, #20]
 800a2fe:	7b1b      	ldrb	r3, [r3, #12]
 800a300:	6878      	ldr	r0, [r7, #4]
 800a302:	f001 fe2d 	bl	800bf60 <USBH_BulkReceiveData>
 800a306:	697b      	ldr	r3, [r7, #20]
 800a308:	2204      	movs	r2, #4
 800a30a:	f883 204e 	strb.w	r2, [r3, #78]	@ 0x4e
 800a30e:	e043      	b.n	800a398 <CDC_ProcessReception+0xca>
 800a310:	697b      	ldr	r3, [r7, #20]
 800a312:	7b1b      	ldrb	r3, [r3, #12]
 800a314:	4619      	mov	r1, r3
 800a316:	6878      	ldr	r0, [r7, #4]
 800a318:	f006 fbf2 	bl	8010b00 <USBH_LL_GetURBState>
 800a31c:	4603      	mov	r3, r0
 800a31e:	74fb      	strb	r3, [r7, #19]
 800a320:	7cfb      	ldrb	r3, [r7, #19]
 800a322:	2b01      	cmp	r3, #1
 800a324:	d137      	bne.n	800a396 <CDC_ProcessReception+0xc8>
 800a326:	697b      	ldr	r3, [r7, #20]
 800a328:	7b1b      	ldrb	r3, [r3, #12]
 800a32a:	4619      	mov	r1, r3
 800a32c:	6878      	ldr	r0, [r7, #4]
 800a32e:	f006 fb55 	bl	80109dc <USBH_LL_GetLastXferSize>
 800a332:	60f8      	str	r0, [r7, #12]
 800a334:	697b      	ldr	r3, [r7, #20]
 800a336:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a338:	68fa      	ldr	r2, [r7, #12]
 800a33a:	429a      	cmp	r2, r3
 800a33c:	d016      	beq.n	800a36c <CDC_ProcessReception+0x9e>
 800a33e:	697b      	ldr	r3, [r7, #20]
 800a340:	8b5b      	ldrh	r3, [r3, #26]
 800a342:	461a      	mov	r2, r3
 800a344:	68fb      	ldr	r3, [r7, #12]
 800a346:	4293      	cmp	r3, r2
 800a348:	d910      	bls.n	800a36c <CDC_ProcessReception+0x9e>
 800a34a:	697b      	ldr	r3, [r7, #20]
 800a34c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a34e:	68fb      	ldr	r3, [r7, #12]
 800a350:	1ad2      	subs	r2, r2, r3
 800a352:	697b      	ldr	r3, [r7, #20]
 800a354:	629a      	str	r2, [r3, #40]	@ 0x28
 800a356:	697b      	ldr	r3, [r7, #20]
 800a358:	6a1a      	ldr	r2, [r3, #32]
 800a35a:	68fb      	ldr	r3, [r7, #12]
 800a35c:	441a      	add	r2, r3
 800a35e:	697b      	ldr	r3, [r7, #20]
 800a360:	621a      	str	r2, [r3, #32]
 800a362:	697b      	ldr	r3, [r7, #20]
 800a364:	2203      	movs	r2, #3
 800a366:	f883 204e 	strb.w	r2, [r3, #78]	@ 0x4e
 800a36a:	e006      	b.n	800a37a <CDC_ProcessReception+0xac>
 800a36c:	697b      	ldr	r3, [r7, #20]
 800a36e:	2200      	movs	r2, #0
 800a370:	f883 204e 	strb.w	r2, [r3, #78]	@ 0x4e
 800a374:	6878      	ldr	r0, [r7, #4]
 800a376:	f000 f81d 	bl	800a3b4 <USBH_CDC_ReceiveCallback>
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	2204      	movs	r2, #4
 800a37e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a382:	687b      	ldr	r3, [r7, #4]
 800a384:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a388:	687b      	ldr	r3, [r7, #4]
 800a38a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a38e:	2300      	movs	r3, #0
 800a390:	2200      	movs	r2, #0
 800a392:	f002 f881 	bl	800c498 <osMessageQueuePut>
 800a396:	bf00      	nop
 800a398:	bf00      	nop
 800a39a:	3718      	adds	r7, #24
 800a39c:	46bd      	mov	sp, r7
 800a39e:	bd80      	pop	{r7, pc}

0800a3a0 <USBH_CDC_TransmitCallback>:
 800a3a0:	b480      	push	{r7}
 800a3a2:	b083      	sub	sp, #12
 800a3a4:	af00      	add	r7, sp, #0
 800a3a6:	6078      	str	r0, [r7, #4]
 800a3a8:	bf00      	nop
 800a3aa:	370c      	adds	r7, #12
 800a3ac:	46bd      	mov	sp, r7
 800a3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b2:	4770      	bx	lr

0800a3b4 <USBH_CDC_ReceiveCallback>:
 800a3b4:	b480      	push	{r7}
 800a3b6:	b083      	sub	sp, #12
 800a3b8:	af00      	add	r7, sp, #0
 800a3ba:	6078      	str	r0, [r7, #4]
 800a3bc:	bf00      	nop
 800a3be:	370c      	adds	r7, #12
 800a3c0:	46bd      	mov	sp, r7
 800a3c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3c6:	4770      	bx	lr

0800a3c8 <USBH_CDC_LineCodingChanged>:
 800a3c8:	b480      	push	{r7}
 800a3ca:	b083      	sub	sp, #12
 800a3cc:	af00      	add	r7, sp, #0
 800a3ce:	6078      	str	r0, [r7, #4]
 800a3d0:	bf00      	nop
 800a3d2:	370c      	adds	r7, #12
 800a3d4:	46bd      	mov	sp, r7
 800a3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3da:	4770      	bx	lr

0800a3dc <USBH_Init>:
 800a3dc:	b580      	push	{r7, lr}
 800a3de:	b084      	sub	sp, #16
 800a3e0:	af00      	add	r7, sp, #0
 800a3e2:	60f8      	str	r0, [r7, #12]
 800a3e4:	60b9      	str	r1, [r7, #8]
 800a3e6:	4613      	mov	r3, r2
 800a3e8:	71fb      	strb	r3, [r7, #7]
 800a3ea:	68fb      	ldr	r3, [r7, #12]
 800a3ec:	2b00      	cmp	r3, #0
 800a3ee:	d101      	bne.n	800a3f4 <USBH_Init+0x18>
 800a3f0:	2302      	movs	r3, #2
 800a3f2:	e044      	b.n	800a47e <USBH_Init+0xa2>
 800a3f4:	68fb      	ldr	r3, [r7, #12]
 800a3f6:	79fa      	ldrb	r2, [r7, #7]
 800a3f8:	f883 23cc 	strb.w	r2, [r3, #972]	@ 0x3cc
 800a3fc:	68fb      	ldr	r3, [r7, #12]
 800a3fe:	2200      	movs	r2, #0
 800a400:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
 800a404:	68fb      	ldr	r3, [r7, #12]
 800a406:	2200      	movs	r2, #0
 800a408:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
 800a40c:	68f8      	ldr	r0, [r7, #12]
 800a40e:	f000 f841 	bl	800a494 <DeInitStateMachine>
 800a412:	68fb      	ldr	r3, [r7, #12]
 800a414:	2200      	movs	r2, #0
 800a416:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323
 800a41a:	68fb      	ldr	r3, [r7, #12]
 800a41c:	2200      	movs	r2, #0
 800a41e:	f883 2320 	strb.w	r2, [r3, #800]	@ 0x320
 800a422:	68fb      	ldr	r3, [r7, #12]
 800a424:	2200      	movs	r2, #0
 800a426:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
 800a42a:	68fb      	ldr	r3, [r7, #12]
 800a42c:	2200      	movs	r2, #0
 800a42e:	f883 2322 	strb.w	r2, [r3, #802]	@ 0x322
 800a432:	68bb      	ldr	r3, [r7, #8]
 800a434:	2b00      	cmp	r3, #0
 800a436:	d003      	beq.n	800a440 <USBH_Init+0x64>
 800a438:	68fb      	ldr	r3, [r7, #12]
 800a43a:	68ba      	ldr	r2, [r7, #8]
 800a43c:	f8c3 23d4 	str.w	r2, [r3, #980]	@ 0x3d4
 800a440:	2200      	movs	r2, #0
 800a442:	2104      	movs	r1, #4
 800a444:	2010      	movs	r0, #16
 800a446:	f001 ffb4 	bl	800c3b2 <osMessageQueueNew>
 800a44a:	4602      	mov	r2, r0
 800a44c:	68fb      	ldr	r3, [r7, #12]
 800a44e:	f8c3 23d8 	str.w	r2, [r3, #984]	@ 0x3d8
 800a452:	4b0d      	ldr	r3, [pc, #52]	@ (800a488 <USBH_Init+0xac>)
 800a454:	4a0d      	ldr	r2, [pc, #52]	@ (800a48c <USBH_Init+0xb0>)
 800a456:	601a      	str	r2, [r3, #0]
 800a458:	4b0b      	ldr	r3, [pc, #44]	@ (800a488 <USBH_Init+0xac>)
 800a45a:	2280      	movs	r2, #128	@ 0x80
 800a45c:	615a      	str	r2, [r3, #20]
 800a45e:	4b0a      	ldr	r3, [pc, #40]	@ (800a488 <USBH_Init+0xac>)
 800a460:	2218      	movs	r2, #24
 800a462:	619a      	str	r2, [r3, #24]
 800a464:	4a08      	ldr	r2, [pc, #32]	@ (800a488 <USBH_Init+0xac>)
 800a466:	68f9      	ldr	r1, [r7, #12]
 800a468:	4809      	ldr	r0, [pc, #36]	@ (800a490 <USBH_Init+0xb4>)
 800a46a:	f001 fef5 	bl	800c258 <osThreadNew>
 800a46e:	4602      	mov	r2, r0
 800a470:	68fb      	ldr	r3, [r7, #12]
 800a472:	f8c3 23dc 	str.w	r2, [r3, #988]	@ 0x3dc
 800a476:	68f8      	ldr	r0, [r7, #12]
 800a478:	f006 f9fc 	bl	8010874 <USBH_LL_Init>
 800a47c:	2300      	movs	r3, #0
 800a47e:	4618      	mov	r0, r3
 800a480:	3710      	adds	r7, #16
 800a482:	46bd      	mov	sp, r7
 800a484:	bd80      	pop	{r7, pc}
 800a486:	bf00      	nop
 800a488:	200007bc 	.word	0x200007bc
 800a48c:	08015cfc 	.word	0x08015cfc
 800a490:	0800b105 	.word	0x0800b105

0800a494 <DeInitStateMachine>:
 800a494:	b480      	push	{r7}
 800a496:	b085      	sub	sp, #20
 800a498:	af00      	add	r7, sp, #0
 800a49a:	6078      	str	r0, [r7, #4]
 800a49c:	2300      	movs	r3, #0
 800a49e:	60fb      	str	r3, [r7, #12]
 800a4a0:	2300      	movs	r3, #0
 800a4a2:	60fb      	str	r3, [r7, #12]
 800a4a4:	e009      	b.n	800a4ba <DeInitStateMachine+0x26>
 800a4a6:	687a      	ldr	r2, [r7, #4]
 800a4a8:	68fb      	ldr	r3, [r7, #12]
 800a4aa:	33e0      	adds	r3, #224	@ 0xe0
 800a4ac:	009b      	lsls	r3, r3, #2
 800a4ae:	4413      	add	r3, r2
 800a4b0:	2200      	movs	r2, #0
 800a4b2:	605a      	str	r2, [r3, #4]
 800a4b4:	68fb      	ldr	r3, [r7, #12]
 800a4b6:	3301      	adds	r3, #1
 800a4b8:	60fb      	str	r3, [r7, #12]
 800a4ba:	68fb      	ldr	r3, [r7, #12]
 800a4bc:	2b0f      	cmp	r3, #15
 800a4be:	d9f2      	bls.n	800a4a6 <DeInitStateMachine+0x12>
 800a4c0:	2300      	movs	r3, #0
 800a4c2:	60fb      	str	r3, [r7, #12]
 800a4c4:	e009      	b.n	800a4da <DeInitStateMachine+0x46>
 800a4c6:	687a      	ldr	r2, [r7, #4]
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	4413      	add	r3, r2
 800a4cc:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	701a      	strb	r2, [r3, #0]
 800a4d4:	68fb      	ldr	r3, [r7, #12]
 800a4d6:	3301      	adds	r3, #1
 800a4d8:	60fb      	str	r3, [r7, #12]
 800a4da:	68fb      	ldr	r3, [r7, #12]
 800a4dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a4e0:	d3f1      	bcc.n	800a4c6 <DeInitStateMachine+0x32>
 800a4e2:	687b      	ldr	r3, [r7, #4]
 800a4e4:	2200      	movs	r2, #0
 800a4e6:	701a      	strb	r2, [r3, #0]
 800a4e8:	687b      	ldr	r3, [r7, #4]
 800a4ea:	2200      	movs	r2, #0
 800a4ec:	705a      	strb	r2, [r3, #1]
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	2201      	movs	r2, #1
 800a4f2:	709a      	strb	r2, [r3, #2]
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	2200      	movs	r2, #0
 800a4f8:	f8c3 23c4 	str.w	r2, [r3, #964]	@ 0x3c4
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	2201      	movs	r2, #1
 800a500:	761a      	strb	r2, [r3, #24]
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	2240      	movs	r2, #64	@ 0x40
 800a506:	719a      	strb	r2, [r3, #6]
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	2200      	movs	r2, #0
 800a50c:	765a      	strb	r2, [r3, #25]
 800a50e:	687b      	ldr	r3, [r7, #4]
 800a510:	2200      	movs	r2, #0
 800a512:	f883 231c 	strb.w	r2, [r3, #796]	@ 0x31c
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	2201      	movs	r2, #1
 800a51a:	f883 231d 	strb.w	r2, [r3, #797]	@ 0x31d
 800a51e:	687b      	ldr	r3, [r7, #4]
 800a520:	2200      	movs	r2, #0
 800a522:	f883 231f 	strb.w	r2, [r3, #799]	@ 0x31f
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	2200      	movs	r2, #0
 800a52a:	f883 231e 	strb.w	r2, [r3, #798]	@ 0x31e
 800a52e:	2300      	movs	r3, #0
 800a530:	4618      	mov	r0, r3
 800a532:	3714      	adds	r7, #20
 800a534:	46bd      	mov	sp, r7
 800a536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a53a:	4770      	bx	lr

0800a53c <USBH_RegisterClass>:
 800a53c:	b480      	push	{r7}
 800a53e:	b085      	sub	sp, #20
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	6039      	str	r1, [r7, #0]
 800a546:	2300      	movs	r3, #0
 800a548:	73fb      	strb	r3, [r7, #15]
 800a54a:	683b      	ldr	r3, [r7, #0]
 800a54c:	2b00      	cmp	r3, #0
 800a54e:	d016      	beq.n	800a57e <USBH_RegisterClass+0x42>
 800a550:	687b      	ldr	r3, [r7, #4]
 800a552:	f8d3 3380 	ldr.w	r3, [r3, #896]	@ 0x380
 800a556:	2b00      	cmp	r3, #0
 800a558:	d10e      	bne.n	800a578 <USBH_RegisterClass+0x3c>
 800a55a:	687b      	ldr	r3, [r7, #4]
 800a55c:	f8d3 3380 	ldr.w	r3, [r3, #896]	@ 0x380
 800a560:	1c59      	adds	r1, r3, #1
 800a562:	687a      	ldr	r2, [r7, #4]
 800a564:	f8c2 1380 	str.w	r1, [r2, #896]	@ 0x380
 800a568:	687a      	ldr	r2, [r7, #4]
 800a56a:	33de      	adds	r3, #222	@ 0xde
 800a56c:	6839      	ldr	r1, [r7, #0]
 800a56e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 800a572:	2300      	movs	r3, #0
 800a574:	73fb      	strb	r3, [r7, #15]
 800a576:	e004      	b.n	800a582 <USBH_RegisterClass+0x46>
 800a578:	2302      	movs	r3, #2
 800a57a:	73fb      	strb	r3, [r7, #15]
 800a57c:	e001      	b.n	800a582 <USBH_RegisterClass+0x46>
 800a57e:	2302      	movs	r3, #2
 800a580:	73fb      	strb	r3, [r7, #15]
 800a582:	7bfb      	ldrb	r3, [r7, #15]
 800a584:	4618      	mov	r0, r3
 800a586:	3714      	adds	r7, #20
 800a588:	46bd      	mov	sp, r7
 800a58a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a58e:	4770      	bx	lr

0800a590 <USBH_SelectInterface>:
 800a590:	b480      	push	{r7}
 800a592:	b085      	sub	sp, #20
 800a594:	af00      	add	r7, sp, #0
 800a596:	6078      	str	r0, [r7, #4]
 800a598:	460b      	mov	r3, r1
 800a59a:	70fb      	strb	r3, [r7, #3]
 800a59c:	2300      	movs	r3, #0
 800a59e:	73fb      	strb	r3, [r7, #15]
 800a5a0:	687b      	ldr	r3, [r7, #4]
 800a5a2:	f893 333c 	ldrb.w	r3, [r3, #828]	@ 0x33c
 800a5a6:	78fa      	ldrb	r2, [r7, #3]
 800a5a8:	429a      	cmp	r2, r3
 800a5aa:	d204      	bcs.n	800a5b6 <USBH_SelectInterface+0x26>
 800a5ac:	687b      	ldr	r3, [r7, #4]
 800a5ae:	78fa      	ldrb	r2, [r7, #3]
 800a5b0:	f883 2324 	strb.w	r2, [r3, #804]	@ 0x324
 800a5b4:	e001      	b.n	800a5ba <USBH_SelectInterface+0x2a>
 800a5b6:	2302      	movs	r3, #2
 800a5b8:	73fb      	strb	r3, [r7, #15]
 800a5ba:	7bfb      	ldrb	r3, [r7, #15]
 800a5bc:	4618      	mov	r0, r3
 800a5be:	3714      	adds	r7, #20
 800a5c0:	46bd      	mov	sp, r7
 800a5c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5c6:	4770      	bx	lr

0800a5c8 <USBH_FindInterface>:
 800a5c8:	b480      	push	{r7}
 800a5ca:	b087      	sub	sp, #28
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
 800a5d0:	4608      	mov	r0, r1
 800a5d2:	4611      	mov	r1, r2
 800a5d4:	461a      	mov	r2, r3
 800a5d6:	4603      	mov	r3, r0
 800a5d8:	70fb      	strb	r3, [r7, #3]
 800a5da:	460b      	mov	r3, r1
 800a5dc:	70bb      	strb	r3, [r7, #2]
 800a5de:	4613      	mov	r3, r2
 800a5e0:	707b      	strb	r3, [r7, #1]
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	75fb      	strb	r3, [r7, #23]
 800a5e6:	2300      	movs	r3, #0
 800a5e8:	613b      	str	r3, [r7, #16]
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	f503 734e 	add.w	r3, r3, #824	@ 0x338
 800a5f0:	60fb      	str	r3, [r7, #12]
 800a5f2:	e025      	b.n	800a640 <USBH_FindInterface+0x78>
 800a5f4:	7dfb      	ldrb	r3, [r7, #23]
 800a5f6:	221a      	movs	r2, #26
 800a5f8:	fb02 f303 	mul.w	r3, r2, r3
 800a5fc:	3308      	adds	r3, #8
 800a5fe:	68fa      	ldr	r2, [r7, #12]
 800a600:	4413      	add	r3, r2
 800a602:	3302      	adds	r3, #2
 800a604:	613b      	str	r3, [r7, #16]
 800a606:	693b      	ldr	r3, [r7, #16]
 800a608:	795b      	ldrb	r3, [r3, #5]
 800a60a:	78fa      	ldrb	r2, [r7, #3]
 800a60c:	429a      	cmp	r2, r3
 800a60e:	d002      	beq.n	800a616 <USBH_FindInterface+0x4e>
 800a610:	78fb      	ldrb	r3, [r7, #3]
 800a612:	2bff      	cmp	r3, #255	@ 0xff
 800a614:	d111      	bne.n	800a63a <USBH_FindInterface+0x72>
 800a616:	693b      	ldr	r3, [r7, #16]
 800a618:	799b      	ldrb	r3, [r3, #6]
 800a61a:	78ba      	ldrb	r2, [r7, #2]
 800a61c:	429a      	cmp	r2, r3
 800a61e:	d002      	beq.n	800a626 <USBH_FindInterface+0x5e>
 800a620:	78bb      	ldrb	r3, [r7, #2]
 800a622:	2bff      	cmp	r3, #255	@ 0xff
 800a624:	d109      	bne.n	800a63a <USBH_FindInterface+0x72>
 800a626:	693b      	ldr	r3, [r7, #16]
 800a628:	79db      	ldrb	r3, [r3, #7]
 800a62a:	787a      	ldrb	r2, [r7, #1]
 800a62c:	429a      	cmp	r2, r3
 800a62e:	d002      	beq.n	800a636 <USBH_FindInterface+0x6e>
 800a630:	787b      	ldrb	r3, [r7, #1]
 800a632:	2bff      	cmp	r3, #255	@ 0xff
 800a634:	d101      	bne.n	800a63a <USBH_FindInterface+0x72>
 800a636:	7dfb      	ldrb	r3, [r7, #23]
 800a638:	e006      	b.n	800a648 <USBH_FindInterface+0x80>
 800a63a:	7dfb      	ldrb	r3, [r7, #23]
 800a63c:	3301      	adds	r3, #1
 800a63e:	75fb      	strb	r3, [r7, #23]
 800a640:	7dfb      	ldrb	r3, [r7, #23]
 800a642:	2b01      	cmp	r3, #1
 800a644:	d9d6      	bls.n	800a5f4 <USBH_FindInterface+0x2c>
 800a646:	23ff      	movs	r3, #255	@ 0xff
 800a648:	4618      	mov	r0, r3
 800a64a:	371c      	adds	r7, #28
 800a64c:	46bd      	mov	sp, r7
 800a64e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a652:	4770      	bx	lr

0800a654 <USBH_Start>:
 800a654:	b580      	push	{r7, lr}
 800a656:	b082      	sub	sp, #8
 800a658:	af00      	add	r7, sp, #0
 800a65a:	6078      	str	r0, [r7, #4]
 800a65c:	6878      	ldr	r0, [r7, #4]
 800a65e:	f006 f945 	bl	80108ec <USBH_LL_Start>
 800a662:	2101      	movs	r1, #1
 800a664:	6878      	ldr	r0, [r7, #4]
 800a666:	f006 fa5e 	bl	8010b26 <USBH_LL_DriverVBUS>
 800a66a:	2300      	movs	r3, #0
 800a66c:	4618      	mov	r0, r3
 800a66e:	3708      	adds	r7, #8
 800a670:	46bd      	mov	sp, r7
 800a672:	bd80      	pop	{r7, pc}

0800a674 <USBH_Process>:
 800a674:	b580      	push	{r7, lr}
 800a676:	b088      	sub	sp, #32
 800a678:	af04      	add	r7, sp, #16
 800a67a:	6078      	str	r0, [r7, #4]
 800a67c:	2302      	movs	r3, #2
 800a67e:	73bb      	strb	r3, [r7, #14]
 800a680:	2300      	movs	r3, #0
 800a682:	73fb      	strb	r3, [r7, #15]
 800a684:	687b      	ldr	r3, [r7, #4]
 800a686:	f893 3321 	ldrb.w	r3, [r3, #801]	@ 0x321
 800a68a:	b2db      	uxtb	r3, r3
 800a68c:	2b01      	cmp	r3, #1
 800a68e:	d102      	bne.n	800a696 <USBH_Process+0x22>
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	2203      	movs	r2, #3
 800a694:	701a      	strb	r2, [r3, #0]
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	781b      	ldrb	r3, [r3, #0]
 800a69a:	b2db      	uxtb	r3, r3
 800a69c:	2b0b      	cmp	r3, #11
 800a69e:	f200 8244 	bhi.w	800ab2a <USBH_Process+0x4b6>
 800a6a2:	a201      	add	r2, pc, #4	@ (adr r2, 800a6a8 <USBH_Process+0x34>)
 800a6a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a6a8:	0800a6d9 	.word	0x0800a6d9
 800a6ac:	0800a727 	.word	0x0800a727
 800a6b0:	0800a7ab 	.word	0x0800a7ab
 800a6b4:	0800aaa9 	.word	0x0800aaa9
 800a6b8:	0800ab2b 	.word	0x0800ab2b
 800a6bc:	0800a867 	.word	0x0800a867
 800a6c0:	0800aa33 	.word	0x0800aa33
 800a6c4:	0800a8b9 	.word	0x0800a8b9
 800a6c8:	0800a8f5 	.word	0x0800a8f5
 800a6cc:	0800a92d 	.word	0x0800a92d
 800a6d0:	0800a98b 	.word	0x0800a98b
 800a6d4:	0800aa91 	.word	0x0800aa91
 800a6d8:	687b      	ldr	r3, [r7, #4]
 800a6da:	f893 3320 	ldrb.w	r3, [r3, #800]	@ 0x320
 800a6de:	b2db      	uxtb	r3, r3
 800a6e0:	2b00      	cmp	r3, #0
 800a6e2:	f000 8224 	beq.w	800ab2e <USBH_Process+0x4ba>
 800a6e6:	687b      	ldr	r3, [r7, #4]
 800a6e8:	2201      	movs	r2, #1
 800a6ea:	701a      	strb	r2, [r3, #0]
 800a6ec:	20c8      	movs	r0, #200	@ 0xc8
 800a6ee:	f006 fa61 	bl	8010bb4 <USBH_Delay>
 800a6f2:	6878      	ldr	r0, [r7, #4]
 800a6f4:	f006 f957 	bl	80109a6 <USBH_LL_ResetPort>
 800a6f8:	687b      	ldr	r3, [r7, #4]
 800a6fa:	2200      	movs	r2, #0
 800a6fc:	f883 231c 	strb.w	r2, [r3, #796]	@ 0x31c
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	2200      	movs	r2, #0
 800a704:	f8c3 23c8 	str.w	r2, [r3, #968]	@ 0x3c8
 800a708:	687b      	ldr	r3, [r7, #4]
 800a70a:	2201      	movs	r2, #1
 800a70c:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a710:	687b      	ldr	r3, [r7, #4]
 800a712:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a716:	687b      	ldr	r3, [r7, #4]
 800a718:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a71c:	2300      	movs	r3, #0
 800a71e:	2200      	movs	r2, #0
 800a720:	f001 feba 	bl	800c498 <osMessageQueuePut>
 800a724:	e203      	b.n	800ab2e <USBH_Process+0x4ba>
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	f893 3323 	ldrb.w	r3, [r3, #803]	@ 0x323
 800a72c:	2b01      	cmp	r3, #1
 800a72e:	d107      	bne.n	800a740 <USBH_Process+0xcc>
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	2200      	movs	r2, #0
 800a734:	f883 231f 	strb.w	r2, [r3, #799]	@ 0x31f
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	2202      	movs	r2, #2
 800a73c:	701a      	strb	r2, [r3, #0]
 800a73e:	e025      	b.n	800a78c <USBH_Process+0x118>
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	f8d3 33c8 	ldr.w	r3, [r3, #968]	@ 0x3c8
 800a746:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800a74a:	d914      	bls.n	800a776 <USBH_Process+0x102>
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	f893 331f 	ldrb.w	r3, [r3, #799]	@ 0x31f
 800a752:	3301      	adds	r3, #1
 800a754:	b2da      	uxtb	r2, r3
 800a756:	687b      	ldr	r3, [r7, #4]
 800a758:	f883 231f 	strb.w	r2, [r3, #799]	@ 0x31f
 800a75c:	687b      	ldr	r3, [r7, #4]
 800a75e:	f893 331f 	ldrb.w	r3, [r3, #799]	@ 0x31f
 800a762:	2b03      	cmp	r3, #3
 800a764:	d903      	bls.n	800a76e <USBH_Process+0xfa>
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	220d      	movs	r2, #13
 800a76a:	701a      	strb	r2, [r3, #0]
 800a76c:	e00e      	b.n	800a78c <USBH_Process+0x118>
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	2200      	movs	r2, #0
 800a772:	701a      	strb	r2, [r3, #0]
 800a774:	e00a      	b.n	800a78c <USBH_Process+0x118>
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	f8d3 33c8 	ldr.w	r3, [r3, #968]	@ 0x3c8
 800a77c:	f103 020a 	add.w	r2, r3, #10
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	f8c3 23c8 	str.w	r2, [r3, #968]	@ 0x3c8
 800a786:	200a      	movs	r0, #10
 800a788:	f006 fa14 	bl	8010bb4 <USBH_Delay>
 800a78c:	687b      	ldr	r3, [r7, #4]
 800a78e:	2201      	movs	r2, #1
 800a790:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a79a:	687b      	ldr	r3, [r7, #4]
 800a79c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a7a0:	2300      	movs	r3, #0
 800a7a2:	2200      	movs	r2, #0
 800a7a4:	f001 fe78 	bl	800c498 <osMessageQueuePut>
 800a7a8:	e1c8      	b.n	800ab3c <USBH_Process+0x4c8>
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800a7b0:	2b00      	cmp	r3, #0
 800a7b2:	d005      	beq.n	800a7c0 <USBH_Process+0x14c>
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800a7ba:	2104      	movs	r1, #4
 800a7bc:	6878      	ldr	r0, [r7, #4]
 800a7be:	4798      	blx	r3
 800a7c0:	2064      	movs	r0, #100	@ 0x64
 800a7c2:	f006 f9f7 	bl	8010bb4 <USBH_Delay>
 800a7c6:	6878      	ldr	r0, [r7, #4]
 800a7c8:	f006 f8c6 	bl	8010958 <USBH_LL_GetSpeed>
 800a7cc:	4603      	mov	r3, r0
 800a7ce:	461a      	mov	r2, r3
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	f883 231d 	strb.w	r2, [r3, #797]	@ 0x31d
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	2205      	movs	r2, #5
 800a7da:	701a      	strb	r2, [r3, #0]
 800a7dc:	2100      	movs	r1, #0
 800a7de:	6878      	ldr	r0, [r7, #4]
 800a7e0:	f001 fc0b 	bl	800bffa <USBH_AllocPipe>
 800a7e4:	4603      	mov	r3, r0
 800a7e6:	461a      	mov	r2, r3
 800a7e8:	687b      	ldr	r3, [r7, #4]
 800a7ea:	715a      	strb	r2, [r3, #5]
 800a7ec:	2180      	movs	r1, #128	@ 0x80
 800a7ee:	6878      	ldr	r0, [r7, #4]
 800a7f0:	f001 fc03 	bl	800bffa <USBH_AllocPipe>
 800a7f4:	4603      	mov	r3, r0
 800a7f6:	461a      	mov	r2, r3
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	711a      	strb	r2, [r3, #4]
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	7919      	ldrb	r1, [r3, #4]
 800a800:	687b      	ldr	r3, [r7, #4]
 800a802:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800a80c:	687a      	ldr	r2, [r7, #4]
 800a80e:	7992      	ldrb	r2, [r2, #6]
 800a810:	9202      	str	r2, [sp, #8]
 800a812:	2200      	movs	r2, #0
 800a814:	9201      	str	r2, [sp, #4]
 800a816:	9300      	str	r3, [sp, #0]
 800a818:	4603      	mov	r3, r0
 800a81a:	2280      	movs	r2, #128	@ 0x80
 800a81c:	6878      	ldr	r0, [r7, #4]
 800a81e:	f001 fbbd 	bl	800bf9c <USBH_OpenPipe>
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	7959      	ldrb	r1, [r3, #5]
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800a82c:	687b      	ldr	r3, [r7, #4]
 800a82e:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800a832:	687a      	ldr	r2, [r7, #4]
 800a834:	7992      	ldrb	r2, [r2, #6]
 800a836:	9202      	str	r2, [sp, #8]
 800a838:	2200      	movs	r2, #0
 800a83a:	9201      	str	r2, [sp, #4]
 800a83c:	9300      	str	r3, [sp, #0]
 800a83e:	4603      	mov	r3, r0
 800a840:	2200      	movs	r2, #0
 800a842:	6878      	ldr	r0, [r7, #4]
 800a844:	f001 fbaa 	bl	800bf9c <USBH_OpenPipe>
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	2201      	movs	r2, #1
 800a84c:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a850:	687b      	ldr	r3, [r7, #4]
 800a852:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a85c:	2300      	movs	r3, #0
 800a85e:	2200      	movs	r2, #0
 800a860:	f001 fe1a 	bl	800c498 <osMessageQueuePut>
 800a864:	e16a      	b.n	800ab3c <USBH_Process+0x4c8>
 800a866:	6878      	ldr	r0, [r7, #4]
 800a868:	f000 f96e 	bl	800ab48 <USBH_HandleEnum>
 800a86c:	4603      	mov	r3, r0
 800a86e:	73bb      	strb	r3, [r7, #14]
 800a870:	7bbb      	ldrb	r3, [r7, #14]
 800a872:	b2db      	uxtb	r3, r3
 800a874:	2b00      	cmp	r3, #0
 800a876:	f040 815c 	bne.w	800ab32 <USBH_Process+0x4be>
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	2200      	movs	r2, #0
 800a87e:	f883 2324 	strb.w	r2, [r3, #804]	@ 0x324
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	f893 3337 	ldrb.w	r3, [r3, #823]	@ 0x337
 800a888:	2b01      	cmp	r3, #1
 800a88a:	d103      	bne.n	800a894 <USBH_Process+0x220>
 800a88c:	687b      	ldr	r3, [r7, #4]
 800a88e:	2208      	movs	r2, #8
 800a890:	701a      	strb	r2, [r3, #0]
 800a892:	e002      	b.n	800a89a <USBH_Process+0x226>
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	2207      	movs	r2, #7
 800a898:	701a      	strb	r2, [r3, #0]
 800a89a:	687b      	ldr	r3, [r7, #4]
 800a89c:	2205      	movs	r2, #5
 800a89e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a8ae:	2300      	movs	r3, #0
 800a8b0:	2200      	movs	r2, #0
 800a8b2:	f001 fdf1 	bl	800c498 <osMessageQueuePut>
 800a8b6:	e13c      	b.n	800ab32 <USBH_Process+0x4be>
 800a8b8:	687b      	ldr	r3, [r7, #4]
 800a8ba:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	f000 8139 	beq.w	800ab36 <USBH_Process+0x4c2>
 800a8c4:	687b      	ldr	r3, [r7, #4]
 800a8c6:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800a8ca:	2101      	movs	r1, #1
 800a8cc:	6878      	ldr	r0, [r7, #4]
 800a8ce:	4798      	blx	r3
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	2208      	movs	r2, #8
 800a8d4:	701a      	strb	r2, [r3, #0]
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	2205      	movs	r2, #5
 800a8da:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a8de:	687b      	ldr	r3, [r7, #4]
 800a8e0:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a8e4:	687b      	ldr	r3, [r7, #4]
 800a8e6:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a8ea:	2300      	movs	r3, #0
 800a8ec:	2200      	movs	r2, #0
 800a8ee:	f001 fdd3 	bl	800c498 <osMessageQueuePut>
 800a8f2:	e120      	b.n	800ab36 <USBH_Process+0x4c2>
 800a8f4:	687b      	ldr	r3, [r7, #4]
 800a8f6:	f893 333d 	ldrb.w	r3, [r3, #829]	@ 0x33d
 800a8fa:	4619      	mov	r1, r3
 800a8fc:	6878      	ldr	r0, [r7, #4]
 800a8fe:	f000 fcff 	bl	800b300 <USBH_SetCfg>
 800a902:	4603      	mov	r3, r0
 800a904:	2b00      	cmp	r3, #0
 800a906:	d102      	bne.n	800a90e <USBH_Process+0x29a>
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	2209      	movs	r2, #9
 800a90c:	701a      	strb	r2, [r3, #0]
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	2201      	movs	r2, #1
 800a912:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a91c:	687b      	ldr	r3, [r7, #4]
 800a91e:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a922:	2300      	movs	r3, #0
 800a924:	2200      	movs	r2, #0
 800a926:	f001 fdb7 	bl	800c498 <osMessageQueuePut>
 800a92a:	e107      	b.n	800ab3c <USBH_Process+0x4c8>
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	f893 333f 	ldrb.w	r3, [r3, #831]	@ 0x33f
 800a932:	f003 0320 	and.w	r3, r3, #32
 800a936:	2b00      	cmp	r3, #0
 800a938:	d015      	beq.n	800a966 <USBH_Process+0x2f2>
 800a93a:	2101      	movs	r1, #1
 800a93c:	6878      	ldr	r0, [r7, #4]
 800a93e:	f000 fd02 	bl	800b346 <USBH_SetFeature>
 800a942:	4603      	mov	r3, r0
 800a944:	73bb      	strb	r3, [r7, #14]
 800a946:	7bbb      	ldrb	r3, [r7, #14]
 800a948:	b2db      	uxtb	r3, r3
 800a94a:	2b00      	cmp	r3, #0
 800a94c:	d103      	bne.n	800a956 <USBH_Process+0x2e2>
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	220a      	movs	r2, #10
 800a952:	701a      	strb	r2, [r3, #0]
 800a954:	e00a      	b.n	800a96c <USBH_Process+0x2f8>
 800a956:	7bbb      	ldrb	r3, [r7, #14]
 800a958:	b2db      	uxtb	r3, r3
 800a95a:	2b03      	cmp	r3, #3
 800a95c:	d106      	bne.n	800a96c <USBH_Process+0x2f8>
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	220a      	movs	r2, #10
 800a962:	701a      	strb	r2, [r3, #0]
 800a964:	e002      	b.n	800a96c <USBH_Process+0x2f8>
 800a966:	687b      	ldr	r3, [r7, #4]
 800a968:	220a      	movs	r2, #10
 800a96a:	701a      	strb	r2, [r3, #0]
 800a96c:	687b      	ldr	r3, [r7, #4]
 800a96e:	2201      	movs	r2, #1
 800a970:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800a974:	687b      	ldr	r3, [r7, #4]
 800a976:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800a980:	2300      	movs	r3, #0
 800a982:	2200      	movs	r2, #0
 800a984:	f001 fd88 	bl	800c498 <osMessageQueuePut>
 800a988:	e0d8      	b.n	800ab3c <USBH_Process+0x4c8>
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	f8d3 3380 	ldr.w	r3, [r3, #896]	@ 0x380
 800a990:	2b00      	cmp	r3, #0
 800a992:	d03f      	beq.n	800aa14 <USBH_Process+0x3a0>
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	2200      	movs	r2, #0
 800a998:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
 800a99c:	2300      	movs	r3, #0
 800a99e:	73fb      	strb	r3, [r7, #15]
 800a9a0:	e016      	b.n	800a9d0 <USBH_Process+0x35c>
 800a9a2:	7bfa      	ldrb	r2, [r7, #15]
 800a9a4:	687b      	ldr	r3, [r7, #4]
 800a9a6:	32de      	adds	r2, #222	@ 0xde
 800a9a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a9ac:	791a      	ldrb	r2, [r3, #4]
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	f893 3347 	ldrb.w	r3, [r3, #839]	@ 0x347
 800a9b4:	429a      	cmp	r2, r3
 800a9b6:	d108      	bne.n	800a9ca <USBH_Process+0x356>
 800a9b8:	7bfa      	ldrb	r2, [r7, #15]
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	32de      	adds	r2, #222	@ 0xde
 800a9be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
 800a9c8:	e005      	b.n	800a9d6 <USBH_Process+0x362>
 800a9ca:	7bfb      	ldrb	r3, [r7, #15]
 800a9cc:	3301      	adds	r3, #1
 800a9ce:	73fb      	strb	r3, [r7, #15]
 800a9d0:	7bfb      	ldrb	r3, [r7, #15]
 800a9d2:	2b00      	cmp	r3, #0
 800a9d4:	d0e5      	beq.n	800a9a2 <USBH_Process+0x32e>
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a9dc:	2b00      	cmp	r3, #0
 800a9de:	d016      	beq.n	800aa0e <USBH_Process+0x39a>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a9e6:	689b      	ldr	r3, [r3, #8]
 800a9e8:	6878      	ldr	r0, [r7, #4]
 800a9ea:	4798      	blx	r3
 800a9ec:	4603      	mov	r3, r0
 800a9ee:	2b00      	cmp	r3, #0
 800a9f0:	d109      	bne.n	800aa06 <USBH_Process+0x392>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2206      	movs	r2, #6
 800a9f6:	701a      	strb	r2, [r3, #0]
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800a9fe:	2103      	movs	r1, #3
 800aa00:	6878      	ldr	r0, [r7, #4]
 800aa02:	4798      	blx	r3
 800aa04:	e006      	b.n	800aa14 <USBH_Process+0x3a0>
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	220d      	movs	r2, #13
 800aa0a:	701a      	strb	r2, [r3, #0]
 800aa0c:	e002      	b.n	800aa14 <USBH_Process+0x3a0>
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	220d      	movs	r2, #13
 800aa12:	701a      	strb	r2, [r3, #0]
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	2205      	movs	r2, #5
 800aa18:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800aa1c:	687b      	ldr	r3, [r7, #4]
 800aa1e:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800aa28:	2300      	movs	r3, #0
 800aa2a:	2200      	movs	r2, #0
 800aa2c:	f001 fd34 	bl	800c498 <osMessageQueuePut>
 800aa30:	e084      	b.n	800ab3c <USBH_Process+0x4c8>
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aa38:	2b00      	cmp	r3, #0
 800aa3a:	d017      	beq.n	800aa6c <USBH_Process+0x3f8>
 800aa3c:	687b      	ldr	r3, [r7, #4]
 800aa3e:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aa42:	691b      	ldr	r3, [r3, #16]
 800aa44:	6878      	ldr	r0, [r7, #4]
 800aa46:	4798      	blx	r3
 800aa48:	4603      	mov	r3, r0
 800aa4a:	73bb      	strb	r3, [r7, #14]
 800aa4c:	7bbb      	ldrb	r3, [r7, #14]
 800aa4e:	b2db      	uxtb	r3, r3
 800aa50:	2b00      	cmp	r3, #0
 800aa52:	d103      	bne.n	800aa5c <USBH_Process+0x3e8>
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	220b      	movs	r2, #11
 800aa58:	701a      	strb	r2, [r3, #0]
 800aa5a:	e00a      	b.n	800aa72 <USBH_Process+0x3fe>
 800aa5c:	7bbb      	ldrb	r3, [r7, #14]
 800aa5e:	b2db      	uxtb	r3, r3
 800aa60:	2b02      	cmp	r3, #2
 800aa62:	d106      	bne.n	800aa72 <USBH_Process+0x3fe>
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	220d      	movs	r2, #13
 800aa68:	701a      	strb	r2, [r3, #0]
 800aa6a:	e002      	b.n	800aa72 <USBH_Process+0x3fe>
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	220d      	movs	r2, #13
 800aa70:	701a      	strb	r2, [r3, #0]
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	2205      	movs	r2, #5
 800aa76:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800aa80:	687b      	ldr	r3, [r7, #4]
 800aa82:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800aa86:	2300      	movs	r3, #0
 800aa88:	2200      	movs	r2, #0
 800aa8a:	f001 fd05 	bl	800c498 <osMessageQueuePut>
 800aa8e:	e055      	b.n	800ab3c <USBH_Process+0x4c8>
 800aa90:	687b      	ldr	r3, [r7, #4]
 800aa92:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	d04f      	beq.n	800ab3a <USBH_Process+0x4c6>
 800aa9a:	687b      	ldr	r3, [r7, #4]
 800aa9c:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aaa0:	695b      	ldr	r3, [r3, #20]
 800aaa2:	6878      	ldr	r0, [r7, #4]
 800aaa4:	4798      	blx	r3
 800aaa6:	e048      	b.n	800ab3a <USBH_Process+0x4c6>
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	2200      	movs	r2, #0
 800aaac:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
 800aab0:	6878      	ldr	r0, [r7, #4]
 800aab2:	f7ff fcef 	bl	800a494 <DeInitStateMachine>
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aabc:	2b00      	cmp	r3, #0
 800aabe:	d009      	beq.n	800aad4 <USBH_Process+0x460>
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aac6:	68db      	ldr	r3, [r3, #12]
 800aac8:	6878      	ldr	r0, [r7, #4]
 800aaca:	4798      	blx	r3
 800aacc:	687b      	ldr	r3, [r7, #4]
 800aace:	2200      	movs	r2, #0
 800aad0:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
 800aad4:	687b      	ldr	r3, [r7, #4]
 800aad6:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800aada:	2b00      	cmp	r3, #0
 800aadc:	d005      	beq.n	800aaea <USBH_Process+0x476>
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800aae4:	2105      	movs	r1, #5
 800aae6:	6878      	ldr	r0, [r7, #4]
 800aae8:	4798      	blx	r3
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	f893 3322 	ldrb.w	r3, [r3, #802]	@ 0x322
 800aaf0:	b2db      	uxtb	r3, r3
 800aaf2:	2b01      	cmp	r3, #1
 800aaf4:	d107      	bne.n	800ab06 <USBH_Process+0x492>
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	2200      	movs	r2, #0
 800aafa:	f883 2322 	strb.w	r2, [r3, #802]	@ 0x322
 800aafe:	6878      	ldr	r0, [r7, #4]
 800ab00:	f7ff fda8 	bl	800a654 <USBH_Start>
 800ab04:	e002      	b.n	800ab0c <USBH_Process+0x498>
 800ab06:	6878      	ldr	r0, [r7, #4]
 800ab08:	f005 fef0 	bl	80108ec <USBH_LL_Start>
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	2201      	movs	r2, #1
 800ab10:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800ab14:	687b      	ldr	r3, [r7, #4]
 800ab16:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800ab20:	2300      	movs	r3, #0
 800ab22:	2200      	movs	r2, #0
 800ab24:	f001 fcb8 	bl	800c498 <osMessageQueuePut>
 800ab28:	e008      	b.n	800ab3c <USBH_Process+0x4c8>
 800ab2a:	bf00      	nop
 800ab2c:	e006      	b.n	800ab3c <USBH_Process+0x4c8>
 800ab2e:	bf00      	nop
 800ab30:	e004      	b.n	800ab3c <USBH_Process+0x4c8>
 800ab32:	bf00      	nop
 800ab34:	e002      	b.n	800ab3c <USBH_Process+0x4c8>
 800ab36:	bf00      	nop
 800ab38:	e000      	b.n	800ab3c <USBH_Process+0x4c8>
 800ab3a:	bf00      	nop
 800ab3c:	2300      	movs	r3, #0
 800ab3e:	4618      	mov	r0, r3
 800ab40:	3710      	adds	r7, #16
 800ab42:	46bd      	mov	sp, r7
 800ab44:	bd80      	pop	{r7, pc}
 800ab46:	bf00      	nop

0800ab48 <USBH_HandleEnum>:
 800ab48:	b580      	push	{r7, lr}
 800ab4a:	b088      	sub	sp, #32
 800ab4c:	af04      	add	r7, sp, #16
 800ab4e:	6078      	str	r0, [r7, #4]
 800ab50:	2301      	movs	r3, #1
 800ab52:	73fb      	strb	r3, [r7, #15]
 800ab54:	2301      	movs	r3, #1
 800ab56:	73bb      	strb	r3, [r7, #14]
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	785b      	ldrb	r3, [r3, #1]
 800ab5c:	2b07      	cmp	r3, #7
 800ab5e:	f200 8204 	bhi.w	800af6a <USBH_HandleEnum+0x422>
 800ab62:	a201      	add	r2, pc, #4	@ (adr r2, 800ab68 <USBH_HandleEnum+0x20>)
 800ab64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ab68:	0800ab89 	.word	0x0800ab89
 800ab6c:	0800ac43 	.word	0x0800ac43
 800ab70:	0800acad 	.word	0x0800acad
 800ab74:	0800ad37 	.word	0x0800ad37
 800ab78:	0800ada1 	.word	0x0800ada1
 800ab7c:	0800ae11 	.word	0x0800ae11
 800ab80:	0800aead 	.word	0x0800aead
 800ab84:	0800af2b 	.word	0x0800af2b
 800ab88:	2108      	movs	r1, #8
 800ab8a:	6878      	ldr	r0, [r7, #4]
 800ab8c:	f000 fae8 	bl	800b160 <USBH_Get_DevDesc>
 800ab90:	4603      	mov	r3, r0
 800ab92:	73bb      	strb	r3, [r7, #14]
 800ab94:	7bbb      	ldrb	r3, [r7, #14]
 800ab96:	2b00      	cmp	r3, #0
 800ab98:	d12e      	bne.n	800abf8 <USBH_HandleEnum+0xb0>
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	f893 232d 	ldrb.w	r2, [r3, #813]	@ 0x32d
 800aba0:	687b      	ldr	r3, [r7, #4]
 800aba2:	719a      	strb	r2, [r3, #6]
 800aba4:	687b      	ldr	r3, [r7, #4]
 800aba6:	2201      	movs	r2, #1
 800aba8:	705a      	strb	r2, [r3, #1]
 800abaa:	687b      	ldr	r3, [r7, #4]
 800abac:	7919      	ldrb	r1, [r3, #4]
 800abae:	687b      	ldr	r3, [r7, #4]
 800abb0:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800abb4:	687b      	ldr	r3, [r7, #4]
 800abb6:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800abba:	687a      	ldr	r2, [r7, #4]
 800abbc:	7992      	ldrb	r2, [r2, #6]
 800abbe:	9202      	str	r2, [sp, #8]
 800abc0:	2200      	movs	r2, #0
 800abc2:	9201      	str	r2, [sp, #4]
 800abc4:	9300      	str	r3, [sp, #0]
 800abc6:	4603      	mov	r3, r0
 800abc8:	2280      	movs	r2, #128	@ 0x80
 800abca:	6878      	ldr	r0, [r7, #4]
 800abcc:	f001 f9e6 	bl	800bf9c <USBH_OpenPipe>
 800abd0:	687b      	ldr	r3, [r7, #4]
 800abd2:	7959      	ldrb	r1, [r3, #5]
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800abda:	687b      	ldr	r3, [r7, #4]
 800abdc:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800abe0:	687a      	ldr	r2, [r7, #4]
 800abe2:	7992      	ldrb	r2, [r2, #6]
 800abe4:	9202      	str	r2, [sp, #8]
 800abe6:	2200      	movs	r2, #0
 800abe8:	9201      	str	r2, [sp, #4]
 800abea:	9300      	str	r3, [sp, #0]
 800abec:	4603      	mov	r3, r0
 800abee:	2200      	movs	r2, #0
 800abf0:	6878      	ldr	r0, [r7, #4]
 800abf2:	f001 f9d3 	bl	800bf9c <USBH_OpenPipe>
 800abf6:	e1ba      	b.n	800af6e <USBH_HandleEnum+0x426>
 800abf8:	7bbb      	ldrb	r3, [r7, #14]
 800abfa:	2b03      	cmp	r3, #3
 800abfc:	f040 81b7 	bne.w	800af6e <USBH_HandleEnum+0x426>
 800ac00:	687b      	ldr	r3, [r7, #4]
 800ac02:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ac06:	3301      	adds	r3, #1
 800ac08:	b2da      	uxtb	r2, r3
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	f883 231e 	strb.w	r2, [r3, #798]	@ 0x31e
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ac16:	2b03      	cmp	r3, #3
 800ac18:	d903      	bls.n	800ac22 <USBH_HandleEnum+0xda>
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	220d      	movs	r2, #13
 800ac1e:	701a      	strb	r2, [r3, #0]
 800ac20:	e1a5      	b.n	800af6e <USBH_HandleEnum+0x426>
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	795b      	ldrb	r3, [r3, #5]
 800ac26:	4619      	mov	r1, r3
 800ac28:	6878      	ldr	r0, [r7, #4]
 800ac2a:	f001 fa07 	bl	800c03c <USBH_FreePipe>
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	791b      	ldrb	r3, [r3, #4]
 800ac32:	4619      	mov	r1, r3
 800ac34:	6878      	ldr	r0, [r7, #4]
 800ac36:	f001 fa01 	bl	800c03c <USBH_FreePipe>
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	2200      	movs	r2, #0
 800ac3e:	701a      	strb	r2, [r3, #0]
 800ac40:	e195      	b.n	800af6e <USBH_HandleEnum+0x426>
 800ac42:	2112      	movs	r1, #18
 800ac44:	6878      	ldr	r0, [r7, #4]
 800ac46:	f000 fa8b 	bl	800b160 <USBH_Get_DevDesc>
 800ac4a:	4603      	mov	r3, r0
 800ac4c:	73bb      	strb	r3, [r7, #14]
 800ac4e:	7bbb      	ldrb	r3, [r7, #14]
 800ac50:	2b00      	cmp	r3, #0
 800ac52:	d103      	bne.n	800ac5c <USBH_HandleEnum+0x114>
 800ac54:	687b      	ldr	r3, [r7, #4]
 800ac56:	2202      	movs	r2, #2
 800ac58:	705a      	strb	r2, [r3, #1]
 800ac5a:	e18a      	b.n	800af72 <USBH_HandleEnum+0x42a>
 800ac5c:	7bbb      	ldrb	r3, [r7, #14]
 800ac5e:	2b03      	cmp	r3, #3
 800ac60:	f040 8187 	bne.w	800af72 <USBH_HandleEnum+0x42a>
 800ac64:	687b      	ldr	r3, [r7, #4]
 800ac66:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ac6a:	3301      	adds	r3, #1
 800ac6c:	b2da      	uxtb	r2, r3
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	f883 231e 	strb.w	r2, [r3, #798]	@ 0x31e
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ac7a:	2b03      	cmp	r3, #3
 800ac7c:	d903      	bls.n	800ac86 <USBH_HandleEnum+0x13e>
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	220d      	movs	r2, #13
 800ac82:	701a      	strb	r2, [r3, #0]
 800ac84:	e175      	b.n	800af72 <USBH_HandleEnum+0x42a>
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	795b      	ldrb	r3, [r3, #5]
 800ac8a:	4619      	mov	r1, r3
 800ac8c:	6878      	ldr	r0, [r7, #4]
 800ac8e:	f001 f9d5 	bl	800c03c <USBH_FreePipe>
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	791b      	ldrb	r3, [r3, #4]
 800ac96:	4619      	mov	r1, r3
 800ac98:	6878      	ldr	r0, [r7, #4]
 800ac9a:	f001 f9cf 	bl	800c03c <USBH_FreePipe>
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	2200      	movs	r2, #0
 800aca2:	705a      	strb	r2, [r3, #1]
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	2200      	movs	r2, #0
 800aca8:	701a      	strb	r2, [r3, #0]
 800acaa:	e162      	b.n	800af72 <USBH_HandleEnum+0x42a>
 800acac:	2101      	movs	r1, #1
 800acae:	6878      	ldr	r0, [r7, #4]
 800acb0:	f000 fb02 	bl	800b2b8 <USBH_SetAddress>
 800acb4:	4603      	mov	r3, r0
 800acb6:	73bb      	strb	r3, [r7, #14]
 800acb8:	7bbb      	ldrb	r3, [r7, #14]
 800acba:	2b00      	cmp	r3, #0
 800acbc:	d130      	bne.n	800ad20 <USBH_HandleEnum+0x1d8>
 800acbe:	2002      	movs	r0, #2
 800acc0:	f005 ff78 	bl	8010bb4 <USBH_Delay>
 800acc4:	687b      	ldr	r3, [r7, #4]
 800acc6:	2201      	movs	r2, #1
 800acc8:	f883 231c 	strb.w	r2, [r3, #796]	@ 0x31c
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	2203      	movs	r2, #3
 800acd0:	705a      	strb	r2, [r3, #1]
 800acd2:	687b      	ldr	r3, [r7, #4]
 800acd4:	7919      	ldrb	r1, [r3, #4]
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800ace2:	687a      	ldr	r2, [r7, #4]
 800ace4:	7992      	ldrb	r2, [r2, #6]
 800ace6:	9202      	str	r2, [sp, #8]
 800ace8:	2200      	movs	r2, #0
 800acea:	9201      	str	r2, [sp, #4]
 800acec:	9300      	str	r3, [sp, #0]
 800acee:	4603      	mov	r3, r0
 800acf0:	2280      	movs	r2, #128	@ 0x80
 800acf2:	6878      	ldr	r0, [r7, #4]
 800acf4:	f001 f952 	bl	800bf9c <USBH_OpenPipe>
 800acf8:	687b      	ldr	r3, [r7, #4]
 800acfa:	7959      	ldrb	r1, [r3, #5]
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	f893 031c 	ldrb.w	r0, [r3, #796]	@ 0x31c
 800ad02:	687b      	ldr	r3, [r7, #4]
 800ad04:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800ad08:	687a      	ldr	r2, [r7, #4]
 800ad0a:	7992      	ldrb	r2, [r2, #6]
 800ad0c:	9202      	str	r2, [sp, #8]
 800ad0e:	2200      	movs	r2, #0
 800ad10:	9201      	str	r2, [sp, #4]
 800ad12:	9300      	str	r3, [sp, #0]
 800ad14:	4603      	mov	r3, r0
 800ad16:	2200      	movs	r2, #0
 800ad18:	6878      	ldr	r0, [r7, #4]
 800ad1a:	f001 f93f 	bl	800bf9c <USBH_OpenPipe>
 800ad1e:	e12a      	b.n	800af76 <USBH_HandleEnum+0x42e>
 800ad20:	7bbb      	ldrb	r3, [r7, #14]
 800ad22:	2b03      	cmp	r3, #3
 800ad24:	f040 8127 	bne.w	800af76 <USBH_HandleEnum+0x42e>
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	220d      	movs	r2, #13
 800ad2c:	701a      	strb	r2, [r3, #0]
 800ad2e:	687b      	ldr	r3, [r7, #4]
 800ad30:	2200      	movs	r2, #0
 800ad32:	705a      	strb	r2, [r3, #1]
 800ad34:	e11f      	b.n	800af76 <USBH_HandleEnum+0x42e>
 800ad36:	2109      	movs	r1, #9
 800ad38:	6878      	ldr	r0, [r7, #4]
 800ad3a:	f000 fa39 	bl	800b1b0 <USBH_Get_CfgDesc>
 800ad3e:	4603      	mov	r3, r0
 800ad40:	73bb      	strb	r3, [r7, #14]
 800ad42:	7bbb      	ldrb	r3, [r7, #14]
 800ad44:	2b00      	cmp	r3, #0
 800ad46:	d103      	bne.n	800ad50 <USBH_HandleEnum+0x208>
 800ad48:	687b      	ldr	r3, [r7, #4]
 800ad4a:	2204      	movs	r2, #4
 800ad4c:	705a      	strb	r2, [r3, #1]
 800ad4e:	e114      	b.n	800af7a <USBH_HandleEnum+0x432>
 800ad50:	7bbb      	ldrb	r3, [r7, #14]
 800ad52:	2b03      	cmp	r3, #3
 800ad54:	f040 8111 	bne.w	800af7a <USBH_HandleEnum+0x432>
 800ad58:	687b      	ldr	r3, [r7, #4]
 800ad5a:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ad5e:	3301      	adds	r3, #1
 800ad60:	b2da      	uxtb	r2, r3
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	f883 231e 	strb.w	r2, [r3, #798]	@ 0x31e
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800ad6e:	2b03      	cmp	r3, #3
 800ad70:	d903      	bls.n	800ad7a <USBH_HandleEnum+0x232>
 800ad72:	687b      	ldr	r3, [r7, #4]
 800ad74:	220d      	movs	r2, #13
 800ad76:	701a      	strb	r2, [r3, #0]
 800ad78:	e0ff      	b.n	800af7a <USBH_HandleEnum+0x432>
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	795b      	ldrb	r3, [r3, #5]
 800ad7e:	4619      	mov	r1, r3
 800ad80:	6878      	ldr	r0, [r7, #4]
 800ad82:	f001 f95b 	bl	800c03c <USBH_FreePipe>
 800ad86:	687b      	ldr	r3, [r7, #4]
 800ad88:	791b      	ldrb	r3, [r3, #4]
 800ad8a:	4619      	mov	r1, r3
 800ad8c:	6878      	ldr	r0, [r7, #4]
 800ad8e:	f001 f955 	bl	800c03c <USBH_FreePipe>
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	2200      	movs	r2, #0
 800ad96:	705a      	strb	r2, [r3, #1]
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	2200      	movs	r2, #0
 800ad9c:	701a      	strb	r2, [r3, #0]
 800ad9e:	e0ec      	b.n	800af7a <USBH_HandleEnum+0x432>
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	f8b3 333a 	ldrh.w	r3, [r3, #826]	@ 0x33a
 800ada6:	4619      	mov	r1, r3
 800ada8:	6878      	ldr	r0, [r7, #4]
 800adaa:	f000 fa01 	bl	800b1b0 <USBH_Get_CfgDesc>
 800adae:	4603      	mov	r3, r0
 800adb0:	73bb      	strb	r3, [r7, #14]
 800adb2:	7bbb      	ldrb	r3, [r7, #14]
 800adb4:	2b00      	cmp	r3, #0
 800adb6:	d103      	bne.n	800adc0 <USBH_HandleEnum+0x278>
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	2205      	movs	r2, #5
 800adbc:	705a      	strb	r2, [r3, #1]
 800adbe:	e0de      	b.n	800af7e <USBH_HandleEnum+0x436>
 800adc0:	7bbb      	ldrb	r3, [r7, #14]
 800adc2:	2b03      	cmp	r3, #3
 800adc4:	f040 80db 	bne.w	800af7e <USBH_HandleEnum+0x436>
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800adce:	3301      	adds	r3, #1
 800add0:	b2da      	uxtb	r2, r3
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	f883 231e 	strb.w	r2, [r3, #798]	@ 0x31e
 800add8:	687b      	ldr	r3, [r7, #4]
 800adda:	f893 331e 	ldrb.w	r3, [r3, #798]	@ 0x31e
 800adde:	2b03      	cmp	r3, #3
 800ade0:	d903      	bls.n	800adea <USBH_HandleEnum+0x2a2>
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	220d      	movs	r2, #13
 800ade6:	701a      	strb	r2, [r3, #0]
 800ade8:	e0c9      	b.n	800af7e <USBH_HandleEnum+0x436>
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	795b      	ldrb	r3, [r3, #5]
 800adee:	4619      	mov	r1, r3
 800adf0:	6878      	ldr	r0, [r7, #4]
 800adf2:	f001 f923 	bl	800c03c <USBH_FreePipe>
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	791b      	ldrb	r3, [r3, #4]
 800adfa:	4619      	mov	r1, r3
 800adfc:	6878      	ldr	r0, [r7, #4]
 800adfe:	f001 f91d 	bl	800c03c <USBH_FreePipe>
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	2200      	movs	r2, #0
 800ae06:	705a      	strb	r2, [r3, #1]
 800ae08:	687b      	ldr	r3, [r7, #4]
 800ae0a:	2200      	movs	r2, #0
 800ae0c:	701a      	strb	r2, [r3, #0]
 800ae0e:	e0b6      	b.n	800af7e <USBH_HandleEnum+0x436>
 800ae10:	687b      	ldr	r3, [r7, #4]
 800ae12:	f893 3334 	ldrb.w	r3, [r3, #820]	@ 0x334
 800ae16:	2b00      	cmp	r3, #0
 800ae18:	d036      	beq.n	800ae88 <USBH_HandleEnum+0x340>
 800ae1a:	687b      	ldr	r3, [r7, #4]
 800ae1c:	f893 1334 	ldrb.w	r1, [r3, #820]	@ 0x334
 800ae20:	687b      	ldr	r3, [r7, #4]
 800ae22:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800ae26:	23ff      	movs	r3, #255	@ 0xff
 800ae28:	6878      	ldr	r0, [r7, #4]
 800ae2a:	f000 f9e5 	bl	800b1f8 <USBH_Get_StringDesc>
 800ae2e:	4603      	mov	r3, r0
 800ae30:	73bb      	strb	r3, [r7, #14]
 800ae32:	7bbb      	ldrb	r3, [r7, #14]
 800ae34:	2b00      	cmp	r3, #0
 800ae36:	d111      	bne.n	800ae5c <USBH_HandleEnum+0x314>
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	2206      	movs	r2, #6
 800ae3c:	705a      	strb	r2, [r3, #1]
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	2205      	movs	r2, #5
 800ae42:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800ae46:	687b      	ldr	r3, [r7, #4]
 800ae48:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800ae4c:	687b      	ldr	r3, [r7, #4]
 800ae4e:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800ae52:	2300      	movs	r3, #0
 800ae54:	2200      	movs	r2, #0
 800ae56:	f001 fb1f 	bl	800c498 <osMessageQueuePut>
 800ae5a:	e092      	b.n	800af82 <USBH_HandleEnum+0x43a>
 800ae5c:	7bbb      	ldrb	r3, [r7, #14]
 800ae5e:	2b03      	cmp	r3, #3
 800ae60:	f040 808f 	bne.w	800af82 <USBH_HandleEnum+0x43a>
 800ae64:	687b      	ldr	r3, [r7, #4]
 800ae66:	2206      	movs	r2, #6
 800ae68:	705a      	strb	r2, [r3, #1]
 800ae6a:	687b      	ldr	r3, [r7, #4]
 800ae6c:	2205      	movs	r2, #5
 800ae6e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800ae7e:	2300      	movs	r3, #0
 800ae80:	2200      	movs	r2, #0
 800ae82:	f001 fb09 	bl	800c498 <osMessageQueuePut>
 800ae86:	e07c      	b.n	800af82 <USBH_HandleEnum+0x43a>
 800ae88:	687b      	ldr	r3, [r7, #4]
 800ae8a:	2206      	movs	r2, #6
 800ae8c:	705a      	strb	r2, [r3, #1]
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	2205      	movs	r2, #5
 800ae92:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800ae96:	687b      	ldr	r3, [r7, #4]
 800ae98:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800aea2:	2300      	movs	r3, #0
 800aea4:	2200      	movs	r2, #0
 800aea6:	f001 faf7 	bl	800c498 <osMessageQueuePut>
 800aeaa:	e06a      	b.n	800af82 <USBH_HandleEnum+0x43a>
 800aeac:	687b      	ldr	r3, [r7, #4]
 800aeae:	f893 3335 	ldrb.w	r3, [r3, #821]	@ 0x335
 800aeb2:	2b00      	cmp	r3, #0
 800aeb4:	d027      	beq.n	800af06 <USBH_HandleEnum+0x3be>
 800aeb6:	687b      	ldr	r3, [r7, #4]
 800aeb8:	f893 1335 	ldrb.w	r1, [r3, #821]	@ 0x335
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800aec2:	23ff      	movs	r3, #255	@ 0xff
 800aec4:	6878      	ldr	r0, [r7, #4]
 800aec6:	f000 f997 	bl	800b1f8 <USBH_Get_StringDesc>
 800aeca:	4603      	mov	r3, r0
 800aecc:	73bb      	strb	r3, [r7, #14]
 800aece:	7bbb      	ldrb	r3, [r7, #14]
 800aed0:	2b00      	cmp	r3, #0
 800aed2:	d103      	bne.n	800aedc <USBH_HandleEnum+0x394>
 800aed4:	687b      	ldr	r3, [r7, #4]
 800aed6:	2207      	movs	r2, #7
 800aed8:	705a      	strb	r2, [r3, #1]
 800aeda:	e054      	b.n	800af86 <USBH_HandleEnum+0x43e>
 800aedc:	7bbb      	ldrb	r3, [r7, #14]
 800aede:	2b03      	cmp	r3, #3
 800aee0:	d151      	bne.n	800af86 <USBH_HandleEnum+0x43e>
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	2207      	movs	r2, #7
 800aee6:	705a      	strb	r2, [r3, #1]
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	2205      	movs	r2, #5
 800aeec:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800aef0:	687b      	ldr	r3, [r7, #4]
 800aef2:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800aefc:	2300      	movs	r3, #0
 800aefe:	2200      	movs	r2, #0
 800af00:	f001 faca 	bl	800c498 <osMessageQueuePut>
 800af04:	e03f      	b.n	800af86 <USBH_HandleEnum+0x43e>
 800af06:	687b      	ldr	r3, [r7, #4]
 800af08:	2207      	movs	r2, #7
 800af0a:	705a      	strb	r2, [r3, #1]
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	2205      	movs	r2, #5
 800af10:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800af14:	687b      	ldr	r3, [r7, #4]
 800af16:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800af1a:	687b      	ldr	r3, [r7, #4]
 800af1c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800af20:	2300      	movs	r3, #0
 800af22:	2200      	movs	r2, #0
 800af24:	f001 fab8 	bl	800c498 <osMessageQueuePut>
 800af28:	e02d      	b.n	800af86 <USBH_HandleEnum+0x43e>
 800af2a:	687b      	ldr	r3, [r7, #4]
 800af2c:	f893 3336 	ldrb.w	r3, [r3, #822]	@ 0x336
 800af30:	2b00      	cmp	r3, #0
 800af32:	d017      	beq.n	800af64 <USBH_HandleEnum+0x41c>
 800af34:	687b      	ldr	r3, [r7, #4]
 800af36:	f893 1336 	ldrb.w	r1, [r3, #822]	@ 0x336
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800af40:	23ff      	movs	r3, #255	@ 0xff
 800af42:	6878      	ldr	r0, [r7, #4]
 800af44:	f000 f958 	bl	800b1f8 <USBH_Get_StringDesc>
 800af48:	4603      	mov	r3, r0
 800af4a:	73bb      	strb	r3, [r7, #14]
 800af4c:	7bbb      	ldrb	r3, [r7, #14]
 800af4e:	2b00      	cmp	r3, #0
 800af50:	d102      	bne.n	800af58 <USBH_HandleEnum+0x410>
 800af52:	2300      	movs	r3, #0
 800af54:	73fb      	strb	r3, [r7, #15]
 800af56:	e018      	b.n	800af8a <USBH_HandleEnum+0x442>
 800af58:	7bbb      	ldrb	r3, [r7, #14]
 800af5a:	2b03      	cmp	r3, #3
 800af5c:	d115      	bne.n	800af8a <USBH_HandleEnum+0x442>
 800af5e:	2300      	movs	r3, #0
 800af60:	73fb      	strb	r3, [r7, #15]
 800af62:	e012      	b.n	800af8a <USBH_HandleEnum+0x442>
 800af64:	2300      	movs	r3, #0
 800af66:	73fb      	strb	r3, [r7, #15]
 800af68:	e00f      	b.n	800af8a <USBH_HandleEnum+0x442>
 800af6a:	bf00      	nop
 800af6c:	e00e      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af6e:	bf00      	nop
 800af70:	e00c      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af72:	bf00      	nop
 800af74:	e00a      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af76:	bf00      	nop
 800af78:	e008      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af7a:	bf00      	nop
 800af7c:	e006      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af7e:	bf00      	nop
 800af80:	e004      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af82:	bf00      	nop
 800af84:	e002      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af86:	bf00      	nop
 800af88:	e000      	b.n	800af8c <USBH_HandleEnum+0x444>
 800af8a:	bf00      	nop
 800af8c:	7bfb      	ldrb	r3, [r7, #15]
 800af8e:	4618      	mov	r0, r3
 800af90:	3710      	adds	r7, #16
 800af92:	46bd      	mov	sp, r7
 800af94:	bd80      	pop	{r7, pc}
 800af96:	bf00      	nop

0800af98 <USBH_LL_SetTimer>:
 800af98:	b480      	push	{r7}
 800af9a:	b083      	sub	sp, #12
 800af9c:	af00      	add	r7, sp, #0
 800af9e:	6078      	str	r0, [r7, #4]
 800afa0:	6039      	str	r1, [r7, #0]
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	683a      	ldr	r2, [r7, #0]
 800afa6:	f8c3 23c4 	str.w	r2, [r3, #964]	@ 0x3c4
 800afaa:	bf00      	nop
 800afac:	370c      	adds	r7, #12
 800afae:	46bd      	mov	sp, r7
 800afb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afb4:	4770      	bx	lr

0800afb6 <USBH_LL_IncTimer>:
 800afb6:	b580      	push	{r7, lr}
 800afb8:	b082      	sub	sp, #8
 800afba:	af00      	add	r7, sp, #0
 800afbc:	6078      	str	r0, [r7, #4]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800afc4:	1c5a      	adds	r2, r3, #1
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	f8c3 23c4 	str.w	r2, [r3, #964]	@ 0x3c4
 800afcc:	6878      	ldr	r0, [r7, #4]
 800afce:	f000 f804 	bl	800afda <USBH_HandleSof>
 800afd2:	bf00      	nop
 800afd4:	3708      	adds	r7, #8
 800afd6:	46bd      	mov	sp, r7
 800afd8:	bd80      	pop	{r7, pc}

0800afda <USBH_HandleSof>:
 800afda:	b580      	push	{r7, lr}
 800afdc:	b082      	sub	sp, #8
 800afde:	af00      	add	r7, sp, #0
 800afe0:	6078      	str	r0, [r7, #4]
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	781b      	ldrb	r3, [r3, #0]
 800afe6:	b2db      	uxtb	r3, r3
 800afe8:	2b0b      	cmp	r3, #11
 800afea:	d10a      	bne.n	800b002 <USBH_HandleSof+0x28>
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800aff2:	2b00      	cmp	r3, #0
 800aff4:	d005      	beq.n	800b002 <USBH_HandleSof+0x28>
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800affc:	699b      	ldr	r3, [r3, #24]
 800affe:	6878      	ldr	r0, [r7, #4]
 800b000:	4798      	blx	r3
 800b002:	bf00      	nop
 800b004:	3708      	adds	r7, #8
 800b006:	46bd      	mov	sp, r7
 800b008:	bd80      	pop	{r7, pc}

0800b00a <USBH_LL_PortEnabled>:
 800b00a:	b580      	push	{r7, lr}
 800b00c:	b082      	sub	sp, #8
 800b00e:	af00      	add	r7, sp, #0
 800b010:	6078      	str	r0, [r7, #4]
 800b012:	687b      	ldr	r3, [r7, #4]
 800b014:	2201      	movs	r2, #1
 800b016:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323
 800b01a:	687b      	ldr	r3, [r7, #4]
 800b01c:	2201      	movs	r2, #1
 800b01e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b022:	687b      	ldr	r3, [r7, #4]
 800b024:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b028:	687b      	ldr	r3, [r7, #4]
 800b02a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b02e:	2300      	movs	r3, #0
 800b030:	2200      	movs	r2, #0
 800b032:	f001 fa31 	bl	800c498 <osMessageQueuePut>
 800b036:	bf00      	nop
 800b038:	3708      	adds	r7, #8
 800b03a:	46bd      	mov	sp, r7
 800b03c:	bd80      	pop	{r7, pc}

0800b03e <USBH_LL_PortDisabled>:
 800b03e:	b480      	push	{r7}
 800b040:	b083      	sub	sp, #12
 800b042:	af00      	add	r7, sp, #0
 800b044:	6078      	str	r0, [r7, #4]
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	2200      	movs	r2, #0
 800b04a:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323
 800b04e:	bf00      	nop
 800b050:	370c      	adds	r7, #12
 800b052:	46bd      	mov	sp, r7
 800b054:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b058:	4770      	bx	lr

0800b05a <USBH_LL_Connect>:
 800b05a:	b580      	push	{r7, lr}
 800b05c:	b082      	sub	sp, #8
 800b05e:	af00      	add	r7, sp, #0
 800b060:	6078      	str	r0, [r7, #4]
 800b062:	687b      	ldr	r3, [r7, #4]
 800b064:	2201      	movs	r2, #1
 800b066:	f883 2320 	strb.w	r2, [r3, #800]	@ 0x320
 800b06a:	687b      	ldr	r3, [r7, #4]
 800b06c:	2200      	movs	r2, #0
 800b06e:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	2200      	movs	r2, #0
 800b076:	f883 2322 	strb.w	r2, [r3, #802]	@ 0x322
 800b07a:	687b      	ldr	r3, [r7, #4]
 800b07c:	2201      	movs	r2, #1
 800b07e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b08e:	2300      	movs	r3, #0
 800b090:	2200      	movs	r2, #0
 800b092:	f001 fa01 	bl	800c498 <osMessageQueuePut>
 800b096:	2300      	movs	r3, #0
 800b098:	4618      	mov	r0, r3
 800b09a:	3708      	adds	r7, #8
 800b09c:	46bd      	mov	sp, r7
 800b09e:	bd80      	pop	{r7, pc}

0800b0a0 <USBH_LL_Disconnect>:
 800b0a0:	b580      	push	{r7, lr}
 800b0a2:	b082      	sub	sp, #8
 800b0a4:	af00      	add	r7, sp, #0
 800b0a6:	6078      	str	r0, [r7, #4]
 800b0a8:	687b      	ldr	r3, [r7, #4]
 800b0aa:	2201      	movs	r2, #1
 800b0ac:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	2200      	movs	r2, #0
 800b0b4:	f883 2320 	strb.w	r2, [r3, #800]	@ 0x320
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	2200      	movs	r2, #0
 800b0bc:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323
 800b0c0:	6878      	ldr	r0, [r7, #4]
 800b0c2:	f005 fc2e 	bl	8010922 <USBH_LL_Stop>
 800b0c6:	687b      	ldr	r3, [r7, #4]
 800b0c8:	791b      	ldrb	r3, [r3, #4]
 800b0ca:	4619      	mov	r1, r3
 800b0cc:	6878      	ldr	r0, [r7, #4]
 800b0ce:	f000 ffb5 	bl	800c03c <USBH_FreePipe>
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	795b      	ldrb	r3, [r3, #5]
 800b0d6:	4619      	mov	r1, r3
 800b0d8:	6878      	ldr	r0, [r7, #4]
 800b0da:	f000 ffaf 	bl	800c03c <USBH_FreePipe>
 800b0de:	687b      	ldr	r3, [r7, #4]
 800b0e0:	2201      	movs	r2, #1
 800b0e2:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b0e6:	687b      	ldr	r3, [r7, #4]
 800b0e8:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b0ec:	687b      	ldr	r3, [r7, #4]
 800b0ee:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b0f2:	2300      	movs	r3, #0
 800b0f4:	2200      	movs	r2, #0
 800b0f6:	f001 f9cf 	bl	800c498 <osMessageQueuePut>
 800b0fa:	2300      	movs	r3, #0
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	3708      	adds	r7, #8
 800b100:	46bd      	mov	sp, r7
 800b102:	bd80      	pop	{r7, pc}

0800b104 <USBH_Process_OS>:
 800b104:	b580      	push	{r7, lr}
 800b106:	b084      	sub	sp, #16
 800b108:	af00      	add	r7, sp, #0
 800b10a:	6078      	str	r0, [r7, #4]
 800b10c:	687b      	ldr	r3, [r7, #4]
 800b10e:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b118:	f04f 33ff 	mov.w	r3, #4294967295
 800b11c:	2200      	movs	r2, #0
 800b11e:	f001 fa1b 	bl	800c558 <osMessageQueueGet>
 800b122:	60f8      	str	r0, [r7, #12]
 800b124:	68fb      	ldr	r3, [r7, #12]
 800b126:	2b00      	cmp	r3, #0
 800b128:	d1f0      	bne.n	800b10c <USBH_Process_OS+0x8>
 800b12a:	6878      	ldr	r0, [r7, #4]
 800b12c:	f7ff faa2 	bl	800a674 <USBH_Process>
 800b130:	e7ec      	b.n	800b10c <USBH_Process_OS+0x8>

0800b132 <USBH_LL_NotifyURBChange>:
 800b132:	b580      	push	{r7, lr}
 800b134:	b082      	sub	sp, #8
 800b136:	af00      	add	r7, sp, #0
 800b138:	6078      	str	r0, [r7, #4]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	2201      	movs	r2, #1
 800b13e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b148:	687b      	ldr	r3, [r7, #4]
 800b14a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b14e:	2300      	movs	r3, #0
 800b150:	2200      	movs	r2, #0
 800b152:	f001 f9a1 	bl	800c498 <osMessageQueuePut>
 800b156:	2300      	movs	r3, #0
 800b158:	4618      	mov	r0, r3
 800b15a:	3708      	adds	r7, #8
 800b15c:	46bd      	mov	sp, r7
 800b15e:	bd80      	pop	{r7, pc}

0800b160 <USBH_Get_DevDesc>:
 800b160:	b580      	push	{r7, lr}
 800b162:	b086      	sub	sp, #24
 800b164:	af02      	add	r7, sp, #8
 800b166:	6078      	str	r0, [r7, #4]
 800b168:	460b      	mov	r3, r1
 800b16a:	70fb      	strb	r3, [r7, #3]
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800b172:	78fb      	ldrb	r3, [r7, #3]
 800b174:	b29b      	uxth	r3, r3
 800b176:	9300      	str	r3, [sp, #0]
 800b178:	4613      	mov	r3, r2
 800b17a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b17e:	2100      	movs	r1, #0
 800b180:	6878      	ldr	r0, [r7, #4]
 800b182:	f000 f864 	bl	800b24e <USBH_GetDescriptor>
 800b186:	4603      	mov	r3, r0
 800b188:	73fb      	strb	r3, [r7, #15]
 800b18a:	7bfb      	ldrb	r3, [r7, #15]
 800b18c:	2b00      	cmp	r3, #0
 800b18e:	d10a      	bne.n	800b1a6 <USBH_Get_DevDesc+0x46>
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	f203 3026 	addw	r0, r3, #806	@ 0x326
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800b19c:	78fa      	ldrb	r2, [r7, #3]
 800b19e:	b292      	uxth	r2, r2
 800b1a0:	4619      	mov	r1, r3
 800b1a2:	f000 f919 	bl	800b3d8 <USBH_ParseDevDesc>
 800b1a6:	7bfb      	ldrb	r3, [r7, #15]
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	3710      	adds	r7, #16
 800b1ac:	46bd      	mov	sp, r7
 800b1ae:	bd80      	pop	{r7, pc}

0800b1b0 <USBH_Get_CfgDesc>:
 800b1b0:	b580      	push	{r7, lr}
 800b1b2:	b086      	sub	sp, #24
 800b1b4:	af02      	add	r7, sp, #8
 800b1b6:	6078      	str	r0, [r7, #4]
 800b1b8:	460b      	mov	r3, r1
 800b1ba:	807b      	strh	r3, [r7, #2]
 800b1bc:	687b      	ldr	r3, [r7, #4]
 800b1be:	331c      	adds	r3, #28
 800b1c0:	60bb      	str	r3, [r7, #8]
 800b1c2:	887b      	ldrh	r3, [r7, #2]
 800b1c4:	9300      	str	r3, [sp, #0]
 800b1c6:	68bb      	ldr	r3, [r7, #8]
 800b1c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800b1cc:	2100      	movs	r1, #0
 800b1ce:	6878      	ldr	r0, [r7, #4]
 800b1d0:	f000 f83d 	bl	800b24e <USBH_GetDescriptor>
 800b1d4:	4603      	mov	r3, r0
 800b1d6:	73fb      	strb	r3, [r7, #15]
 800b1d8:	7bfb      	ldrb	r3, [r7, #15]
 800b1da:	2b00      	cmp	r3, #0
 800b1dc:	d107      	bne.n	800b1ee <USBH_Get_CfgDesc+0x3e>
 800b1de:	887b      	ldrh	r3, [r7, #2]
 800b1e0:	461a      	mov	r2, r3
 800b1e2:	68b9      	ldr	r1, [r7, #8]
 800b1e4:	6878      	ldr	r0, [r7, #4]
 800b1e6:	f000 f985 	bl	800b4f4 <USBH_ParseCfgDesc>
 800b1ea:	4603      	mov	r3, r0
 800b1ec:	73fb      	strb	r3, [r7, #15]
 800b1ee:	7bfb      	ldrb	r3, [r7, #15]
 800b1f0:	4618      	mov	r0, r3
 800b1f2:	3710      	adds	r7, #16
 800b1f4:	46bd      	mov	sp, r7
 800b1f6:	bd80      	pop	{r7, pc}

0800b1f8 <USBH_Get_StringDesc>:
 800b1f8:	b580      	push	{r7, lr}
 800b1fa:	b088      	sub	sp, #32
 800b1fc:	af02      	add	r7, sp, #8
 800b1fe:	60f8      	str	r0, [r7, #12]
 800b200:	607a      	str	r2, [r7, #4]
 800b202:	461a      	mov	r2, r3
 800b204:	460b      	mov	r3, r1
 800b206:	72fb      	strb	r3, [r7, #11]
 800b208:	4613      	mov	r3, r2
 800b20a:	813b      	strh	r3, [r7, #8]
 800b20c:	7afb      	ldrb	r3, [r7, #11]
 800b20e:	b29b      	uxth	r3, r3
 800b210:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 800b214:	b29a      	uxth	r2, r3
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	f503 718e 	add.w	r1, r3, #284	@ 0x11c
 800b21c:	893b      	ldrh	r3, [r7, #8]
 800b21e:	9300      	str	r3, [sp, #0]
 800b220:	460b      	mov	r3, r1
 800b222:	2100      	movs	r1, #0
 800b224:	68f8      	ldr	r0, [r7, #12]
 800b226:	f000 f812 	bl	800b24e <USBH_GetDescriptor>
 800b22a:	4603      	mov	r3, r0
 800b22c:	75fb      	strb	r3, [r7, #23]
 800b22e:	7dfb      	ldrb	r3, [r7, #23]
 800b230:	2b00      	cmp	r3, #0
 800b232:	d107      	bne.n	800b244 <USBH_Get_StringDesc+0x4c>
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800b23a:	893a      	ldrh	r2, [r7, #8]
 800b23c:	6879      	ldr	r1, [r7, #4]
 800b23e:	4618      	mov	r0, r3
 800b240:	f000 fb1e 	bl	800b880 <USBH_ParseStringDesc>
 800b244:	7dfb      	ldrb	r3, [r7, #23]
 800b246:	4618      	mov	r0, r3
 800b248:	3718      	adds	r7, #24
 800b24a:	46bd      	mov	sp, r7
 800b24c:	bd80      	pop	{r7, pc}

0800b24e <USBH_GetDescriptor>:
 800b24e:	b580      	push	{r7, lr}
 800b250:	b084      	sub	sp, #16
 800b252:	af00      	add	r7, sp, #0
 800b254:	60f8      	str	r0, [r7, #12]
 800b256:	607b      	str	r3, [r7, #4]
 800b258:	460b      	mov	r3, r1
 800b25a:	72fb      	strb	r3, [r7, #11]
 800b25c:	4613      	mov	r3, r2
 800b25e:	813b      	strh	r3, [r7, #8]
 800b260:	68fb      	ldr	r3, [r7, #12]
 800b262:	789b      	ldrb	r3, [r3, #2]
 800b264:	2b01      	cmp	r3, #1
 800b266:	d11c      	bne.n	800b2a2 <USBH_GetDescriptor+0x54>
 800b268:	7afb      	ldrb	r3, [r7, #11]
 800b26a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800b26e:	b2da      	uxtb	r2, r3
 800b270:	68fb      	ldr	r3, [r7, #12]
 800b272:	741a      	strb	r2, [r3, #16]
 800b274:	68fb      	ldr	r3, [r7, #12]
 800b276:	2206      	movs	r2, #6
 800b278:	745a      	strb	r2, [r3, #17]
 800b27a:	68fb      	ldr	r3, [r7, #12]
 800b27c:	893a      	ldrh	r2, [r7, #8]
 800b27e:	825a      	strh	r2, [r3, #18]
 800b280:	893b      	ldrh	r3, [r7, #8]
 800b282:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 800b286:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b28a:	d104      	bne.n	800b296 <USBH_GetDescriptor+0x48>
 800b28c:	68fb      	ldr	r3, [r7, #12]
 800b28e:	f240 4209 	movw	r2, #1033	@ 0x409
 800b292:	829a      	strh	r2, [r3, #20]
 800b294:	e002      	b.n	800b29c <USBH_GetDescriptor+0x4e>
 800b296:	68fb      	ldr	r3, [r7, #12]
 800b298:	2200      	movs	r2, #0
 800b29a:	829a      	strh	r2, [r3, #20]
 800b29c:	68fb      	ldr	r3, [r7, #12]
 800b29e:	8b3a      	ldrh	r2, [r7, #24]
 800b2a0:	82da      	strh	r2, [r3, #22]
 800b2a2:	8b3b      	ldrh	r3, [r7, #24]
 800b2a4:	461a      	mov	r2, r3
 800b2a6:	6879      	ldr	r1, [r7, #4]
 800b2a8:	68f8      	ldr	r0, [r7, #12]
 800b2aa:	f000 fb36 	bl	800b91a <USBH_CtlReq>
 800b2ae:	4603      	mov	r3, r0
 800b2b0:	4618      	mov	r0, r3
 800b2b2:	3710      	adds	r7, #16
 800b2b4:	46bd      	mov	sp, r7
 800b2b6:	bd80      	pop	{r7, pc}

0800b2b8 <USBH_SetAddress>:
 800b2b8:	b580      	push	{r7, lr}
 800b2ba:	b082      	sub	sp, #8
 800b2bc:	af00      	add	r7, sp, #0
 800b2be:	6078      	str	r0, [r7, #4]
 800b2c0:	460b      	mov	r3, r1
 800b2c2:	70fb      	strb	r3, [r7, #3]
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	789b      	ldrb	r3, [r3, #2]
 800b2c8:	2b01      	cmp	r3, #1
 800b2ca:	d10f      	bne.n	800b2ec <USBH_SetAddress+0x34>
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	2200      	movs	r2, #0
 800b2d0:	741a      	strb	r2, [r3, #16]
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	2205      	movs	r2, #5
 800b2d6:	745a      	strb	r2, [r3, #17]
 800b2d8:	78fb      	ldrb	r3, [r7, #3]
 800b2da:	b29a      	uxth	r2, r3
 800b2dc:	687b      	ldr	r3, [r7, #4]
 800b2de:	825a      	strh	r2, [r3, #18]
 800b2e0:	687b      	ldr	r3, [r7, #4]
 800b2e2:	2200      	movs	r2, #0
 800b2e4:	829a      	strh	r2, [r3, #20]
 800b2e6:	687b      	ldr	r3, [r7, #4]
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	82da      	strh	r2, [r3, #22]
 800b2ec:	2200      	movs	r2, #0
 800b2ee:	2100      	movs	r1, #0
 800b2f0:	6878      	ldr	r0, [r7, #4]
 800b2f2:	f000 fb12 	bl	800b91a <USBH_CtlReq>
 800b2f6:	4603      	mov	r3, r0
 800b2f8:	4618      	mov	r0, r3
 800b2fa:	3708      	adds	r7, #8
 800b2fc:	46bd      	mov	sp, r7
 800b2fe:	bd80      	pop	{r7, pc}

0800b300 <USBH_SetCfg>:
 800b300:	b580      	push	{r7, lr}
 800b302:	b082      	sub	sp, #8
 800b304:	af00      	add	r7, sp, #0
 800b306:	6078      	str	r0, [r7, #4]
 800b308:	460b      	mov	r3, r1
 800b30a:	807b      	strh	r3, [r7, #2]
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	789b      	ldrb	r3, [r3, #2]
 800b310:	2b01      	cmp	r3, #1
 800b312:	d10e      	bne.n	800b332 <USBH_SetCfg+0x32>
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	2200      	movs	r2, #0
 800b318:	741a      	strb	r2, [r3, #16]
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	2209      	movs	r2, #9
 800b31e:	745a      	strb	r2, [r3, #17]
 800b320:	687b      	ldr	r3, [r7, #4]
 800b322:	887a      	ldrh	r2, [r7, #2]
 800b324:	825a      	strh	r2, [r3, #18]
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	2200      	movs	r2, #0
 800b32a:	829a      	strh	r2, [r3, #20]
 800b32c:	687b      	ldr	r3, [r7, #4]
 800b32e:	2200      	movs	r2, #0
 800b330:	82da      	strh	r2, [r3, #22]
 800b332:	2200      	movs	r2, #0
 800b334:	2100      	movs	r1, #0
 800b336:	6878      	ldr	r0, [r7, #4]
 800b338:	f000 faef 	bl	800b91a <USBH_CtlReq>
 800b33c:	4603      	mov	r3, r0
 800b33e:	4618      	mov	r0, r3
 800b340:	3708      	adds	r7, #8
 800b342:	46bd      	mov	sp, r7
 800b344:	bd80      	pop	{r7, pc}

0800b346 <USBH_SetFeature>:
 800b346:	b580      	push	{r7, lr}
 800b348:	b082      	sub	sp, #8
 800b34a:	af00      	add	r7, sp, #0
 800b34c:	6078      	str	r0, [r7, #4]
 800b34e:	460b      	mov	r3, r1
 800b350:	70fb      	strb	r3, [r7, #3]
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	789b      	ldrb	r3, [r3, #2]
 800b356:	2b01      	cmp	r3, #1
 800b358:	d10f      	bne.n	800b37a <USBH_SetFeature+0x34>
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	2200      	movs	r2, #0
 800b35e:	741a      	strb	r2, [r3, #16]
 800b360:	687b      	ldr	r3, [r7, #4]
 800b362:	2203      	movs	r2, #3
 800b364:	745a      	strb	r2, [r3, #17]
 800b366:	78fb      	ldrb	r3, [r7, #3]
 800b368:	b29a      	uxth	r2, r3
 800b36a:	687b      	ldr	r3, [r7, #4]
 800b36c:	825a      	strh	r2, [r3, #18]
 800b36e:	687b      	ldr	r3, [r7, #4]
 800b370:	2200      	movs	r2, #0
 800b372:	829a      	strh	r2, [r3, #20]
 800b374:	687b      	ldr	r3, [r7, #4]
 800b376:	2200      	movs	r2, #0
 800b378:	82da      	strh	r2, [r3, #22]
 800b37a:	2200      	movs	r2, #0
 800b37c:	2100      	movs	r1, #0
 800b37e:	6878      	ldr	r0, [r7, #4]
 800b380:	f000 facb 	bl	800b91a <USBH_CtlReq>
 800b384:	4603      	mov	r3, r0
 800b386:	4618      	mov	r0, r3
 800b388:	3708      	adds	r7, #8
 800b38a:	46bd      	mov	sp, r7
 800b38c:	bd80      	pop	{r7, pc}

0800b38e <USBH_ClrFeature>:
 800b38e:	b580      	push	{r7, lr}
 800b390:	b082      	sub	sp, #8
 800b392:	af00      	add	r7, sp, #0
 800b394:	6078      	str	r0, [r7, #4]
 800b396:	460b      	mov	r3, r1
 800b398:	70fb      	strb	r3, [r7, #3]
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	789b      	ldrb	r3, [r3, #2]
 800b39e:	2b01      	cmp	r3, #1
 800b3a0:	d10f      	bne.n	800b3c2 <USBH_ClrFeature+0x34>
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	2202      	movs	r2, #2
 800b3a6:	741a      	strb	r2, [r3, #16]
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	2201      	movs	r2, #1
 800b3ac:	745a      	strb	r2, [r3, #17]
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	2200      	movs	r2, #0
 800b3b2:	825a      	strh	r2, [r3, #18]
 800b3b4:	78fb      	ldrb	r3, [r7, #3]
 800b3b6:	b29a      	uxth	r2, r3
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	829a      	strh	r2, [r3, #20]
 800b3bc:	687b      	ldr	r3, [r7, #4]
 800b3be:	2200      	movs	r2, #0
 800b3c0:	82da      	strh	r2, [r3, #22]
 800b3c2:	2200      	movs	r2, #0
 800b3c4:	2100      	movs	r1, #0
 800b3c6:	6878      	ldr	r0, [r7, #4]
 800b3c8:	f000 faa7 	bl	800b91a <USBH_CtlReq>
 800b3cc:	4603      	mov	r3, r0
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	3708      	adds	r7, #8
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	bd80      	pop	{r7, pc}
	...

0800b3d8 <USBH_ParseDevDesc>:
 800b3d8:	b480      	push	{r7}
 800b3da:	b085      	sub	sp, #20
 800b3dc:	af00      	add	r7, sp, #0
 800b3de:	60f8      	str	r0, [r7, #12]
 800b3e0:	60b9      	str	r1, [r7, #8]
 800b3e2:	4613      	mov	r3, r2
 800b3e4:	80fb      	strh	r3, [r7, #6]
 800b3e6:	68bb      	ldr	r3, [r7, #8]
 800b3e8:	781a      	ldrb	r2, [r3, #0]
 800b3ea:	68fb      	ldr	r3, [r7, #12]
 800b3ec:	701a      	strb	r2, [r3, #0]
 800b3ee:	68bb      	ldr	r3, [r7, #8]
 800b3f0:	785a      	ldrb	r2, [r3, #1]
 800b3f2:	68fb      	ldr	r3, [r7, #12]
 800b3f4:	705a      	strb	r2, [r3, #1]
 800b3f6:	68bb      	ldr	r3, [r7, #8]
 800b3f8:	3302      	adds	r3, #2
 800b3fa:	781b      	ldrb	r3, [r3, #0]
 800b3fc:	461a      	mov	r2, r3
 800b3fe:	68bb      	ldr	r3, [r7, #8]
 800b400:	3303      	adds	r3, #3
 800b402:	781b      	ldrb	r3, [r3, #0]
 800b404:	021b      	lsls	r3, r3, #8
 800b406:	b29b      	uxth	r3, r3
 800b408:	4313      	orrs	r3, r2
 800b40a:	b29a      	uxth	r2, r3
 800b40c:	68fb      	ldr	r3, [r7, #12]
 800b40e:	805a      	strh	r2, [r3, #2]
 800b410:	68bb      	ldr	r3, [r7, #8]
 800b412:	791a      	ldrb	r2, [r3, #4]
 800b414:	68fb      	ldr	r3, [r7, #12]
 800b416:	711a      	strb	r2, [r3, #4]
 800b418:	68bb      	ldr	r3, [r7, #8]
 800b41a:	795a      	ldrb	r2, [r3, #5]
 800b41c:	68fb      	ldr	r3, [r7, #12]
 800b41e:	715a      	strb	r2, [r3, #5]
 800b420:	68bb      	ldr	r3, [r7, #8]
 800b422:	799a      	ldrb	r2, [r3, #6]
 800b424:	68fb      	ldr	r3, [r7, #12]
 800b426:	719a      	strb	r2, [r3, #6]
 800b428:	68bb      	ldr	r3, [r7, #8]
 800b42a:	79da      	ldrb	r2, [r3, #7]
 800b42c:	68fb      	ldr	r3, [r7, #12]
 800b42e:	71da      	strb	r2, [r3, #7]
 800b430:	68fb      	ldr	r3, [r7, #12]
 800b432:	79db      	ldrb	r3, [r3, #7]
 800b434:	2b20      	cmp	r3, #32
 800b436:	dc0f      	bgt.n	800b458 <USBH_ParseDevDesc+0x80>
 800b438:	2b08      	cmp	r3, #8
 800b43a:	db14      	blt.n	800b466 <USBH_ParseDevDesc+0x8e>
 800b43c:	3b08      	subs	r3, #8
 800b43e:	4a2c      	ldr	r2, [pc, #176]	@ (800b4f0 <USBH_ParseDevDesc+0x118>)
 800b440:	fa22 f303 	lsr.w	r3, r2, r3
 800b444:	f003 0301 	and.w	r3, r3, #1
 800b448:	2b00      	cmp	r3, #0
 800b44a:	bf14      	ite	ne
 800b44c:	2301      	movne	r3, #1
 800b44e:	2300      	moveq	r3, #0
 800b450:	b2db      	uxtb	r3, r3
 800b452:	2b00      	cmp	r3, #0
 800b454:	d102      	bne.n	800b45c <USBH_ParseDevDesc+0x84>
 800b456:	e006      	b.n	800b466 <USBH_ParseDevDesc+0x8e>
 800b458:	2b40      	cmp	r3, #64	@ 0x40
 800b45a:	d104      	bne.n	800b466 <USBH_ParseDevDesc+0x8e>
 800b45c:	68fb      	ldr	r3, [r7, #12]
 800b45e:	79da      	ldrb	r2, [r3, #7]
 800b460:	68fb      	ldr	r3, [r7, #12]
 800b462:	71da      	strb	r2, [r3, #7]
 800b464:	e003      	b.n	800b46e <USBH_ParseDevDesc+0x96>
 800b466:	68fb      	ldr	r3, [r7, #12]
 800b468:	2240      	movs	r2, #64	@ 0x40
 800b46a:	71da      	strb	r2, [r3, #7]
 800b46c:	bf00      	nop
 800b46e:	88fb      	ldrh	r3, [r7, #6]
 800b470:	2b08      	cmp	r3, #8
 800b472:	d936      	bls.n	800b4e2 <USBH_ParseDevDesc+0x10a>
 800b474:	68bb      	ldr	r3, [r7, #8]
 800b476:	3308      	adds	r3, #8
 800b478:	781b      	ldrb	r3, [r3, #0]
 800b47a:	461a      	mov	r2, r3
 800b47c:	68bb      	ldr	r3, [r7, #8]
 800b47e:	3309      	adds	r3, #9
 800b480:	781b      	ldrb	r3, [r3, #0]
 800b482:	021b      	lsls	r3, r3, #8
 800b484:	b29b      	uxth	r3, r3
 800b486:	4313      	orrs	r3, r2
 800b488:	b29a      	uxth	r2, r3
 800b48a:	68fb      	ldr	r3, [r7, #12]
 800b48c:	811a      	strh	r2, [r3, #8]
 800b48e:	68bb      	ldr	r3, [r7, #8]
 800b490:	330a      	adds	r3, #10
 800b492:	781b      	ldrb	r3, [r3, #0]
 800b494:	461a      	mov	r2, r3
 800b496:	68bb      	ldr	r3, [r7, #8]
 800b498:	330b      	adds	r3, #11
 800b49a:	781b      	ldrb	r3, [r3, #0]
 800b49c:	021b      	lsls	r3, r3, #8
 800b49e:	b29b      	uxth	r3, r3
 800b4a0:	4313      	orrs	r3, r2
 800b4a2:	b29a      	uxth	r2, r3
 800b4a4:	68fb      	ldr	r3, [r7, #12]
 800b4a6:	815a      	strh	r2, [r3, #10]
 800b4a8:	68bb      	ldr	r3, [r7, #8]
 800b4aa:	330c      	adds	r3, #12
 800b4ac:	781b      	ldrb	r3, [r3, #0]
 800b4ae:	461a      	mov	r2, r3
 800b4b0:	68bb      	ldr	r3, [r7, #8]
 800b4b2:	330d      	adds	r3, #13
 800b4b4:	781b      	ldrb	r3, [r3, #0]
 800b4b6:	021b      	lsls	r3, r3, #8
 800b4b8:	b29b      	uxth	r3, r3
 800b4ba:	4313      	orrs	r3, r2
 800b4bc:	b29a      	uxth	r2, r3
 800b4be:	68fb      	ldr	r3, [r7, #12]
 800b4c0:	819a      	strh	r2, [r3, #12]
 800b4c2:	68bb      	ldr	r3, [r7, #8]
 800b4c4:	7b9a      	ldrb	r2, [r3, #14]
 800b4c6:	68fb      	ldr	r3, [r7, #12]
 800b4c8:	739a      	strb	r2, [r3, #14]
 800b4ca:	68bb      	ldr	r3, [r7, #8]
 800b4cc:	7bda      	ldrb	r2, [r3, #15]
 800b4ce:	68fb      	ldr	r3, [r7, #12]
 800b4d0:	73da      	strb	r2, [r3, #15]
 800b4d2:	68bb      	ldr	r3, [r7, #8]
 800b4d4:	7c1a      	ldrb	r2, [r3, #16]
 800b4d6:	68fb      	ldr	r3, [r7, #12]
 800b4d8:	741a      	strb	r2, [r3, #16]
 800b4da:	68bb      	ldr	r3, [r7, #8]
 800b4dc:	7c5a      	ldrb	r2, [r3, #17]
 800b4de:	68fb      	ldr	r3, [r7, #12]
 800b4e0:	745a      	strb	r2, [r3, #17]
 800b4e2:	bf00      	nop
 800b4e4:	3714      	adds	r7, #20
 800b4e6:	46bd      	mov	sp, r7
 800b4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ec:	4770      	bx	lr
 800b4ee:	bf00      	nop
 800b4f0:	01000101 	.word	0x01000101

0800b4f4 <USBH_ParseCfgDesc>:
 800b4f4:	b580      	push	{r7, lr}
 800b4f6:	b08c      	sub	sp, #48	@ 0x30
 800b4f8:	af00      	add	r7, sp, #0
 800b4fa:	60f8      	str	r0, [r7, #12]
 800b4fc:	60b9      	str	r1, [r7, #8]
 800b4fe:	4613      	mov	r3, r2
 800b500:	80fb      	strh	r3, [r7, #6]
 800b502:	68fb      	ldr	r3, [r7, #12]
 800b504:	f503 734e 	add.w	r3, r3, #824	@ 0x338
 800b508:	623b      	str	r3, [r7, #32]
 800b50a:	2300      	movs	r3, #0
 800b50c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800b510:	68bb      	ldr	r3, [r7, #8]
 800b512:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b514:	2300      	movs	r3, #0
 800b516:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b51a:	2300      	movs	r3, #0
 800b51c:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b520:	68bb      	ldr	r3, [r7, #8]
 800b522:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b524:	68bb      	ldr	r3, [r7, #8]
 800b526:	781a      	ldrb	r2, [r3, #0]
 800b528:	6a3b      	ldr	r3, [r7, #32]
 800b52a:	701a      	strb	r2, [r3, #0]
 800b52c:	68bb      	ldr	r3, [r7, #8]
 800b52e:	785a      	ldrb	r2, [r3, #1]
 800b530:	6a3b      	ldr	r3, [r7, #32]
 800b532:	705a      	strb	r2, [r3, #1]
 800b534:	68bb      	ldr	r3, [r7, #8]
 800b536:	3302      	adds	r3, #2
 800b538:	781b      	ldrb	r3, [r3, #0]
 800b53a:	461a      	mov	r2, r3
 800b53c:	68bb      	ldr	r3, [r7, #8]
 800b53e:	3303      	adds	r3, #3
 800b540:	781b      	ldrb	r3, [r3, #0]
 800b542:	021b      	lsls	r3, r3, #8
 800b544:	b29b      	uxth	r3, r3
 800b546:	4313      	orrs	r3, r2
 800b548:	b29b      	uxth	r3, r3
 800b54a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b54e:	bf28      	it	cs
 800b550:	f44f 7380 	movcs.w	r3, #256	@ 0x100
 800b554:	b29a      	uxth	r2, r3
 800b556:	6a3b      	ldr	r3, [r7, #32]
 800b558:	805a      	strh	r2, [r3, #2]
 800b55a:	68bb      	ldr	r3, [r7, #8]
 800b55c:	791a      	ldrb	r2, [r3, #4]
 800b55e:	6a3b      	ldr	r3, [r7, #32]
 800b560:	711a      	strb	r2, [r3, #4]
 800b562:	68bb      	ldr	r3, [r7, #8]
 800b564:	795a      	ldrb	r2, [r3, #5]
 800b566:	6a3b      	ldr	r3, [r7, #32]
 800b568:	715a      	strb	r2, [r3, #5]
 800b56a:	68bb      	ldr	r3, [r7, #8]
 800b56c:	799a      	ldrb	r2, [r3, #6]
 800b56e:	6a3b      	ldr	r3, [r7, #32]
 800b570:	719a      	strb	r2, [r3, #6]
 800b572:	68bb      	ldr	r3, [r7, #8]
 800b574:	79da      	ldrb	r2, [r3, #7]
 800b576:	6a3b      	ldr	r3, [r7, #32]
 800b578:	71da      	strb	r2, [r3, #7]
 800b57a:	68bb      	ldr	r3, [r7, #8]
 800b57c:	7a1a      	ldrb	r2, [r3, #8]
 800b57e:	6a3b      	ldr	r3, [r7, #32]
 800b580:	721a      	strb	r2, [r3, #8]
 800b582:	6a3b      	ldr	r3, [r7, #32]
 800b584:	781b      	ldrb	r3, [r3, #0]
 800b586:	2b09      	cmp	r3, #9
 800b588:	d002      	beq.n	800b590 <USBH_ParseCfgDesc+0x9c>
 800b58a:	6a3b      	ldr	r3, [r7, #32]
 800b58c:	2209      	movs	r2, #9
 800b58e:	701a      	strb	r2, [r3, #0]
 800b590:	88fb      	ldrh	r3, [r7, #6]
 800b592:	2b09      	cmp	r3, #9
 800b594:	f240 809d 	bls.w	800b6d2 <USBH_ParseCfgDesc+0x1de>
 800b598:	2309      	movs	r3, #9
 800b59a:	82fb      	strh	r3, [r7, #22]
 800b59c:	2300      	movs	r3, #0
 800b59e:	61fb      	str	r3, [r7, #28]
 800b5a0:	e081      	b.n	800b6a6 <USBH_ParseCfgDesc+0x1b2>
 800b5a2:	f107 0316 	add.w	r3, r7, #22
 800b5a6:	4619      	mov	r1, r3
 800b5a8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800b5aa:	f000 f99c 	bl	800b8e6 <USBH_GetNextDesc>
 800b5ae:	62b8      	str	r0, [r7, #40]	@ 0x28
 800b5b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b5b2:	785b      	ldrb	r3, [r3, #1]
 800b5b4:	2b04      	cmp	r3, #4
 800b5b6:	d176      	bne.n	800b6a6 <USBH_ParseCfgDesc+0x1b2>
 800b5b8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b5ba:	781b      	ldrb	r3, [r3, #0]
 800b5bc:	2b09      	cmp	r3, #9
 800b5be:	d002      	beq.n	800b5c6 <USBH_ParseCfgDesc+0xd2>
 800b5c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b5c2:	2209      	movs	r2, #9
 800b5c4:	701a      	strb	r2, [r3, #0]
 800b5c6:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b5ca:	221a      	movs	r2, #26
 800b5cc:	fb02 f303 	mul.w	r3, r2, r3
 800b5d0:	3308      	adds	r3, #8
 800b5d2:	6a3a      	ldr	r2, [r7, #32]
 800b5d4:	4413      	add	r3, r2
 800b5d6:	3302      	adds	r3, #2
 800b5d8:	61fb      	str	r3, [r7, #28]
 800b5da:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b5dc:	69f8      	ldr	r0, [r7, #28]
 800b5de:	f000 f87e 	bl	800b6de <USBH_ParseInterfaceDesc>
 800b5e2:	2300      	movs	r3, #0
 800b5e4:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b5e8:	2300      	movs	r3, #0
 800b5ea:	61bb      	str	r3, [r7, #24]
 800b5ec:	e043      	b.n	800b676 <USBH_ParseCfgDesc+0x182>
 800b5ee:	f107 0316 	add.w	r3, r7, #22
 800b5f2:	4619      	mov	r1, r3
 800b5f4:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800b5f6:	f000 f976 	bl	800b8e6 <USBH_GetNextDesc>
 800b5fa:	62b8      	str	r0, [r7, #40]	@ 0x28
 800b5fc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b5fe:	785b      	ldrb	r3, [r3, #1]
 800b600:	2b05      	cmp	r3, #5
 800b602:	d138      	bne.n	800b676 <USBH_ParseCfgDesc+0x182>
 800b604:	69fb      	ldr	r3, [r7, #28]
 800b606:	795b      	ldrb	r3, [r3, #5]
 800b608:	2b01      	cmp	r3, #1
 800b60a:	d10f      	bne.n	800b62c <USBH_ParseCfgDesc+0x138>
 800b60c:	69fb      	ldr	r3, [r7, #28]
 800b60e:	799b      	ldrb	r3, [r3, #6]
 800b610:	2b02      	cmp	r3, #2
 800b612:	d10b      	bne.n	800b62c <USBH_ParseCfgDesc+0x138>
 800b614:	69fb      	ldr	r3, [r7, #28]
 800b616:	79db      	ldrb	r3, [r3, #7]
 800b618:	2b00      	cmp	r3, #0
 800b61a:	d10f      	bne.n	800b63c <USBH_ParseCfgDesc+0x148>
 800b61c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b61e:	781b      	ldrb	r3, [r3, #0]
 800b620:	2b09      	cmp	r3, #9
 800b622:	d00b      	beq.n	800b63c <USBH_ParseCfgDesc+0x148>
 800b624:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b626:	2209      	movs	r2, #9
 800b628:	701a      	strb	r2, [r3, #0]
 800b62a:	e007      	b.n	800b63c <USBH_ParseCfgDesc+0x148>
 800b62c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b62e:	781b      	ldrb	r3, [r3, #0]
 800b630:	2b07      	cmp	r3, #7
 800b632:	d004      	beq.n	800b63e <USBH_ParseCfgDesc+0x14a>
 800b634:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b636:	2207      	movs	r2, #7
 800b638:	701a      	strb	r2, [r3, #0]
 800b63a:	e000      	b.n	800b63e <USBH_ParseCfgDesc+0x14a>
 800b63c:	bf00      	nop
 800b63e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b642:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 800b646:	3201      	adds	r2, #1
 800b648:	00d2      	lsls	r2, r2, #3
 800b64a:	211a      	movs	r1, #26
 800b64c:	fb01 f303 	mul.w	r3, r1, r3
 800b650:	4413      	add	r3, r2
 800b652:	3308      	adds	r3, #8
 800b654:	6a3a      	ldr	r2, [r7, #32]
 800b656:	4413      	add	r3, r2
 800b658:	3304      	adds	r3, #4
 800b65a:	61bb      	str	r3, [r7, #24]
 800b65c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800b65e:	69b9      	ldr	r1, [r7, #24]
 800b660:	68f8      	ldr	r0, [r7, #12]
 800b662:	f000 f86b 	bl	800b73c <USBH_ParseEPDesc>
 800b666:	4603      	mov	r3, r0
 800b668:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800b66c:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b670:	3301      	adds	r3, #1
 800b672:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b676:	69fb      	ldr	r3, [r7, #28]
 800b678:	791b      	ldrb	r3, [r3, #4]
 800b67a:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 800b67e:	429a      	cmp	r2, r3
 800b680:	d204      	bcs.n	800b68c <USBH_ParseCfgDesc+0x198>
 800b682:	6a3b      	ldr	r3, [r7, #32]
 800b684:	885a      	ldrh	r2, [r3, #2]
 800b686:	8afb      	ldrh	r3, [r7, #22]
 800b688:	429a      	cmp	r2, r3
 800b68a:	d8b0      	bhi.n	800b5ee <USBH_ParseCfgDesc+0xfa>
 800b68c:	69fb      	ldr	r3, [r7, #28]
 800b68e:	791b      	ldrb	r3, [r3, #4]
 800b690:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 800b694:	429a      	cmp	r2, r3
 800b696:	d201      	bcs.n	800b69c <USBH_ParseCfgDesc+0x1a8>
 800b698:	2303      	movs	r3, #3
 800b69a:	e01c      	b.n	800b6d6 <USBH_ParseCfgDesc+0x1e2>
 800b69c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b6a0:	3301      	adds	r3, #1
 800b6a2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b6a6:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b6aa:	2b01      	cmp	r3, #1
 800b6ac:	d805      	bhi.n	800b6ba <USBH_ParseCfgDesc+0x1c6>
 800b6ae:	6a3b      	ldr	r3, [r7, #32]
 800b6b0:	885a      	ldrh	r2, [r3, #2]
 800b6b2:	8afb      	ldrh	r3, [r7, #22]
 800b6b4:	429a      	cmp	r2, r3
 800b6b6:	f63f af74 	bhi.w	800b5a2 <USBH_ParseCfgDesc+0xae>
 800b6ba:	6a3b      	ldr	r3, [r7, #32]
 800b6bc:	791b      	ldrb	r3, [r3, #4]
 800b6be:	2b02      	cmp	r3, #2
 800b6c0:	bf28      	it	cs
 800b6c2:	2302      	movcs	r3, #2
 800b6c4:	b2db      	uxtb	r3, r3
 800b6c6:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800b6ca:	429a      	cmp	r2, r3
 800b6cc:	d201      	bcs.n	800b6d2 <USBH_ParseCfgDesc+0x1de>
 800b6ce:	2303      	movs	r3, #3
 800b6d0:	e001      	b.n	800b6d6 <USBH_ParseCfgDesc+0x1e2>
 800b6d2:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800b6d6:	4618      	mov	r0, r3
 800b6d8:	3730      	adds	r7, #48	@ 0x30
 800b6da:	46bd      	mov	sp, r7
 800b6dc:	bd80      	pop	{r7, pc}

0800b6de <USBH_ParseInterfaceDesc>:
 800b6de:	b480      	push	{r7}
 800b6e0:	b083      	sub	sp, #12
 800b6e2:	af00      	add	r7, sp, #0
 800b6e4:	6078      	str	r0, [r7, #4]
 800b6e6:	6039      	str	r1, [r7, #0]
 800b6e8:	683b      	ldr	r3, [r7, #0]
 800b6ea:	781a      	ldrb	r2, [r3, #0]
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	701a      	strb	r2, [r3, #0]
 800b6f0:	683b      	ldr	r3, [r7, #0]
 800b6f2:	785a      	ldrb	r2, [r3, #1]
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	705a      	strb	r2, [r3, #1]
 800b6f8:	683b      	ldr	r3, [r7, #0]
 800b6fa:	789a      	ldrb	r2, [r3, #2]
 800b6fc:	687b      	ldr	r3, [r7, #4]
 800b6fe:	709a      	strb	r2, [r3, #2]
 800b700:	683b      	ldr	r3, [r7, #0]
 800b702:	78da      	ldrb	r2, [r3, #3]
 800b704:	687b      	ldr	r3, [r7, #4]
 800b706:	70da      	strb	r2, [r3, #3]
 800b708:	683b      	ldr	r3, [r7, #0]
 800b70a:	791a      	ldrb	r2, [r3, #4]
 800b70c:	687b      	ldr	r3, [r7, #4]
 800b70e:	711a      	strb	r2, [r3, #4]
 800b710:	683b      	ldr	r3, [r7, #0]
 800b712:	795a      	ldrb	r2, [r3, #5]
 800b714:	687b      	ldr	r3, [r7, #4]
 800b716:	715a      	strb	r2, [r3, #5]
 800b718:	683b      	ldr	r3, [r7, #0]
 800b71a:	799a      	ldrb	r2, [r3, #6]
 800b71c:	687b      	ldr	r3, [r7, #4]
 800b71e:	719a      	strb	r2, [r3, #6]
 800b720:	683b      	ldr	r3, [r7, #0]
 800b722:	79da      	ldrb	r2, [r3, #7]
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	71da      	strb	r2, [r3, #7]
 800b728:	683b      	ldr	r3, [r7, #0]
 800b72a:	7a1a      	ldrb	r2, [r3, #8]
 800b72c:	687b      	ldr	r3, [r7, #4]
 800b72e:	721a      	strb	r2, [r3, #8]
 800b730:	bf00      	nop
 800b732:	370c      	adds	r7, #12
 800b734:	46bd      	mov	sp, r7
 800b736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b73a:	4770      	bx	lr

0800b73c <USBH_ParseEPDesc>:
 800b73c:	b480      	push	{r7}
 800b73e:	b087      	sub	sp, #28
 800b740:	af00      	add	r7, sp, #0
 800b742:	60f8      	str	r0, [r7, #12]
 800b744:	60b9      	str	r1, [r7, #8]
 800b746:	607a      	str	r2, [r7, #4]
 800b748:	2300      	movs	r3, #0
 800b74a:	75fb      	strb	r3, [r7, #23]
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	781a      	ldrb	r2, [r3, #0]
 800b750:	68bb      	ldr	r3, [r7, #8]
 800b752:	701a      	strb	r2, [r3, #0]
 800b754:	687b      	ldr	r3, [r7, #4]
 800b756:	785a      	ldrb	r2, [r3, #1]
 800b758:	68bb      	ldr	r3, [r7, #8]
 800b75a:	705a      	strb	r2, [r3, #1]
 800b75c:	687b      	ldr	r3, [r7, #4]
 800b75e:	789a      	ldrb	r2, [r3, #2]
 800b760:	68bb      	ldr	r3, [r7, #8]
 800b762:	709a      	strb	r2, [r3, #2]
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	78da      	ldrb	r2, [r3, #3]
 800b768:	68bb      	ldr	r3, [r7, #8]
 800b76a:	70da      	strb	r2, [r3, #3]
 800b76c:	687b      	ldr	r3, [r7, #4]
 800b76e:	3304      	adds	r3, #4
 800b770:	781b      	ldrb	r3, [r3, #0]
 800b772:	461a      	mov	r2, r3
 800b774:	687b      	ldr	r3, [r7, #4]
 800b776:	3305      	adds	r3, #5
 800b778:	781b      	ldrb	r3, [r3, #0]
 800b77a:	021b      	lsls	r3, r3, #8
 800b77c:	b29b      	uxth	r3, r3
 800b77e:	4313      	orrs	r3, r2
 800b780:	b29a      	uxth	r2, r3
 800b782:	68bb      	ldr	r3, [r7, #8]
 800b784:	809a      	strh	r2, [r3, #4]
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	799a      	ldrb	r2, [r3, #6]
 800b78a:	68bb      	ldr	r3, [r7, #8]
 800b78c:	719a      	strb	r2, [r3, #6]
 800b78e:	68bb      	ldr	r3, [r7, #8]
 800b790:	889b      	ldrh	r3, [r3, #4]
 800b792:	2b00      	cmp	r3, #0
 800b794:	d102      	bne.n	800b79c <USBH_ParseEPDesc+0x60>
 800b796:	2303      	movs	r3, #3
 800b798:	75fb      	strb	r3, [r7, #23]
 800b79a:	e031      	b.n	800b800 <USBH_ParseEPDesc+0xc4>
 800b79c:	68bb      	ldr	r3, [r7, #8]
 800b79e:	889b      	ldrh	r3, [r3, #4]
 800b7a0:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b7a4:	f023 0307 	bic.w	r3, r3, #7
 800b7a8:	b29a      	uxth	r2, r3
 800b7aa:	68bb      	ldr	r3, [r7, #8]
 800b7ac:	809a      	strh	r2, [r3, #4]
 800b7ae:	68bb      	ldr	r3, [r7, #8]
 800b7b0:	889b      	ldrh	r3, [r3, #4]
 800b7b2:	b21a      	sxth	r2, r3
 800b7b4:	687b      	ldr	r3, [r7, #4]
 800b7b6:	3304      	adds	r3, #4
 800b7b8:	781b      	ldrb	r3, [r3, #0]
 800b7ba:	4619      	mov	r1, r3
 800b7bc:	687b      	ldr	r3, [r7, #4]
 800b7be:	3305      	adds	r3, #5
 800b7c0:	781b      	ldrb	r3, [r3, #0]
 800b7c2:	021b      	lsls	r3, r3, #8
 800b7c4:	b29b      	uxth	r3, r3
 800b7c6:	430b      	orrs	r3, r1
 800b7c8:	b29b      	uxth	r3, r3
 800b7ca:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800b7ce:	2b00      	cmp	r3, #0
 800b7d0:	d10f      	bne.n	800b7f2 <USBH_ParseEPDesc+0xb6>
 800b7d2:	687b      	ldr	r3, [r7, #4]
 800b7d4:	3304      	adds	r3, #4
 800b7d6:	781b      	ldrb	r3, [r3, #0]
 800b7d8:	4619      	mov	r1, r3
 800b7da:	687b      	ldr	r3, [r7, #4]
 800b7dc:	3305      	adds	r3, #5
 800b7de:	781b      	ldrb	r3, [r3, #0]
 800b7e0:	021b      	lsls	r3, r3, #8
 800b7e2:	b29b      	uxth	r3, r3
 800b7e4:	430b      	orrs	r3, r1
 800b7e6:	b29b      	uxth	r3, r3
 800b7e8:	b21b      	sxth	r3, r3
 800b7ea:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b7ee:	b21b      	sxth	r3, r3
 800b7f0:	e001      	b.n	800b7f6 <USBH_ParseEPDesc+0xba>
 800b7f2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800b7f6:	4313      	orrs	r3, r2
 800b7f8:	b21b      	sxth	r3, r3
 800b7fa:	b29a      	uxth	r2, r3
 800b7fc:	68bb      	ldr	r3, [r7, #8]
 800b7fe:	809a      	strh	r2, [r3, #4]
 800b800:	68fb      	ldr	r3, [r7, #12]
 800b802:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800b806:	2b00      	cmp	r3, #0
 800b808:	d116      	bne.n	800b838 <USBH_ParseEPDesc+0xfc>
 800b80a:	68bb      	ldr	r3, [r7, #8]
 800b80c:	78db      	ldrb	r3, [r3, #3]
 800b80e:	f003 0303 	and.w	r3, r3, #3
 800b812:	2b01      	cmp	r3, #1
 800b814:	d005      	beq.n	800b822 <USBH_ParseEPDesc+0xe6>
 800b816:	68bb      	ldr	r3, [r7, #8]
 800b818:	78db      	ldrb	r3, [r3, #3]
 800b81a:	f003 0303 	and.w	r3, r3, #3
 800b81e:	2b03      	cmp	r3, #3
 800b820:	d127      	bne.n	800b872 <USBH_ParseEPDesc+0x136>
 800b822:	68bb      	ldr	r3, [r7, #8]
 800b824:	799b      	ldrb	r3, [r3, #6]
 800b826:	2b00      	cmp	r3, #0
 800b828:	d003      	beq.n	800b832 <USBH_ParseEPDesc+0xf6>
 800b82a:	68bb      	ldr	r3, [r7, #8]
 800b82c:	799b      	ldrb	r3, [r3, #6]
 800b82e:	2b10      	cmp	r3, #16
 800b830:	d91f      	bls.n	800b872 <USBH_ParseEPDesc+0x136>
 800b832:	2303      	movs	r3, #3
 800b834:	75fb      	strb	r3, [r7, #23]
 800b836:	e01c      	b.n	800b872 <USBH_ParseEPDesc+0x136>
 800b838:	68bb      	ldr	r3, [r7, #8]
 800b83a:	78db      	ldrb	r3, [r3, #3]
 800b83c:	f003 0303 	and.w	r3, r3, #3
 800b840:	2b01      	cmp	r3, #1
 800b842:	d10a      	bne.n	800b85a <USBH_ParseEPDesc+0x11e>
 800b844:	68bb      	ldr	r3, [r7, #8]
 800b846:	799b      	ldrb	r3, [r3, #6]
 800b848:	2b00      	cmp	r3, #0
 800b84a:	d003      	beq.n	800b854 <USBH_ParseEPDesc+0x118>
 800b84c:	68bb      	ldr	r3, [r7, #8]
 800b84e:	799b      	ldrb	r3, [r3, #6]
 800b850:	2b10      	cmp	r3, #16
 800b852:	d90e      	bls.n	800b872 <USBH_ParseEPDesc+0x136>
 800b854:	2303      	movs	r3, #3
 800b856:	75fb      	strb	r3, [r7, #23]
 800b858:	e00b      	b.n	800b872 <USBH_ParseEPDesc+0x136>
 800b85a:	68bb      	ldr	r3, [r7, #8]
 800b85c:	78db      	ldrb	r3, [r3, #3]
 800b85e:	f003 0303 	and.w	r3, r3, #3
 800b862:	2b03      	cmp	r3, #3
 800b864:	d105      	bne.n	800b872 <USBH_ParseEPDesc+0x136>
 800b866:	68bb      	ldr	r3, [r7, #8]
 800b868:	799b      	ldrb	r3, [r3, #6]
 800b86a:	2b00      	cmp	r3, #0
 800b86c:	d101      	bne.n	800b872 <USBH_ParseEPDesc+0x136>
 800b86e:	2303      	movs	r3, #3
 800b870:	75fb      	strb	r3, [r7, #23]
 800b872:	7dfb      	ldrb	r3, [r7, #23]
 800b874:	4618      	mov	r0, r3
 800b876:	371c      	adds	r7, #28
 800b878:	46bd      	mov	sp, r7
 800b87a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b87e:	4770      	bx	lr

0800b880 <USBH_ParseStringDesc>:
 800b880:	b480      	push	{r7}
 800b882:	b087      	sub	sp, #28
 800b884:	af00      	add	r7, sp, #0
 800b886:	60f8      	str	r0, [r7, #12]
 800b888:	60b9      	str	r1, [r7, #8]
 800b88a:	4613      	mov	r3, r2
 800b88c:	80fb      	strh	r3, [r7, #6]
 800b88e:	68fb      	ldr	r3, [r7, #12]
 800b890:	3301      	adds	r3, #1
 800b892:	781b      	ldrb	r3, [r3, #0]
 800b894:	2b03      	cmp	r3, #3
 800b896:	d120      	bne.n	800b8da <USBH_ParseStringDesc+0x5a>
 800b898:	68fb      	ldr	r3, [r7, #12]
 800b89a:	781b      	ldrb	r3, [r3, #0]
 800b89c:	1e9a      	subs	r2, r3, #2
 800b89e:	88fb      	ldrh	r3, [r7, #6]
 800b8a0:	4293      	cmp	r3, r2
 800b8a2:	bf28      	it	cs
 800b8a4:	4613      	movcs	r3, r2
 800b8a6:	82bb      	strh	r3, [r7, #20]
 800b8a8:	68fb      	ldr	r3, [r7, #12]
 800b8aa:	3302      	adds	r3, #2
 800b8ac:	60fb      	str	r3, [r7, #12]
 800b8ae:	2300      	movs	r3, #0
 800b8b0:	82fb      	strh	r3, [r7, #22]
 800b8b2:	e00b      	b.n	800b8cc <USBH_ParseStringDesc+0x4c>
 800b8b4:	8afb      	ldrh	r3, [r7, #22]
 800b8b6:	68fa      	ldr	r2, [r7, #12]
 800b8b8:	4413      	add	r3, r2
 800b8ba:	781a      	ldrb	r2, [r3, #0]
 800b8bc:	68bb      	ldr	r3, [r7, #8]
 800b8be:	701a      	strb	r2, [r3, #0]
 800b8c0:	68bb      	ldr	r3, [r7, #8]
 800b8c2:	3301      	adds	r3, #1
 800b8c4:	60bb      	str	r3, [r7, #8]
 800b8c6:	8afb      	ldrh	r3, [r7, #22]
 800b8c8:	3302      	adds	r3, #2
 800b8ca:	82fb      	strh	r3, [r7, #22]
 800b8cc:	8afa      	ldrh	r2, [r7, #22]
 800b8ce:	8abb      	ldrh	r3, [r7, #20]
 800b8d0:	429a      	cmp	r2, r3
 800b8d2:	d3ef      	bcc.n	800b8b4 <USBH_ParseStringDesc+0x34>
 800b8d4:	68bb      	ldr	r3, [r7, #8]
 800b8d6:	2200      	movs	r2, #0
 800b8d8:	701a      	strb	r2, [r3, #0]
 800b8da:	bf00      	nop
 800b8dc:	371c      	adds	r7, #28
 800b8de:	46bd      	mov	sp, r7
 800b8e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8e4:	4770      	bx	lr

0800b8e6 <USBH_GetNextDesc>:
 800b8e6:	b480      	push	{r7}
 800b8e8:	b085      	sub	sp, #20
 800b8ea:	af00      	add	r7, sp, #0
 800b8ec:	6078      	str	r0, [r7, #4]
 800b8ee:	6039      	str	r1, [r7, #0]
 800b8f0:	683b      	ldr	r3, [r7, #0]
 800b8f2:	881b      	ldrh	r3, [r3, #0]
 800b8f4:	687a      	ldr	r2, [r7, #4]
 800b8f6:	7812      	ldrb	r2, [r2, #0]
 800b8f8:	4413      	add	r3, r2
 800b8fa:	b29a      	uxth	r2, r3
 800b8fc:	683b      	ldr	r3, [r7, #0]
 800b8fe:	801a      	strh	r2, [r3, #0]
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	781b      	ldrb	r3, [r3, #0]
 800b904:	461a      	mov	r2, r3
 800b906:	687b      	ldr	r3, [r7, #4]
 800b908:	4413      	add	r3, r2
 800b90a:	60fb      	str	r3, [r7, #12]
 800b90c:	68fb      	ldr	r3, [r7, #12]
 800b90e:	4618      	mov	r0, r3
 800b910:	3714      	adds	r7, #20
 800b912:	46bd      	mov	sp, r7
 800b914:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b918:	4770      	bx	lr

0800b91a <USBH_CtlReq>:
 800b91a:	b580      	push	{r7, lr}
 800b91c:	b086      	sub	sp, #24
 800b91e:	af00      	add	r7, sp, #0
 800b920:	60f8      	str	r0, [r7, #12]
 800b922:	60b9      	str	r1, [r7, #8]
 800b924:	4613      	mov	r3, r2
 800b926:	80fb      	strh	r3, [r7, #6]
 800b928:	2301      	movs	r3, #1
 800b92a:	75fb      	strb	r3, [r7, #23]
 800b92c:	68fb      	ldr	r3, [r7, #12]
 800b92e:	789b      	ldrb	r3, [r3, #2]
 800b930:	2b01      	cmp	r3, #1
 800b932:	d002      	beq.n	800b93a <USBH_CtlReq+0x20>
 800b934:	2b02      	cmp	r3, #2
 800b936:	d01d      	beq.n	800b974 <USBH_CtlReq+0x5a>
 800b938:	e043      	b.n	800b9c2 <USBH_CtlReq+0xa8>
 800b93a:	68fb      	ldr	r3, [r7, #12]
 800b93c:	68ba      	ldr	r2, [r7, #8]
 800b93e:	609a      	str	r2, [r3, #8]
 800b940:	68fb      	ldr	r3, [r7, #12]
 800b942:	88fa      	ldrh	r2, [r7, #6]
 800b944:	819a      	strh	r2, [r3, #12]
 800b946:	68fb      	ldr	r3, [r7, #12]
 800b948:	2201      	movs	r2, #1
 800b94a:	761a      	strb	r2, [r3, #24]
 800b94c:	68fb      	ldr	r3, [r7, #12]
 800b94e:	2202      	movs	r2, #2
 800b950:	709a      	strb	r2, [r3, #2]
 800b952:	2301      	movs	r3, #1
 800b954:	75fb      	strb	r3, [r7, #23]
 800b956:	68fb      	ldr	r3, [r7, #12]
 800b958:	2203      	movs	r2, #3
 800b95a:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b95e:	68fb      	ldr	r3, [r7, #12]
 800b960:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b964:	68fb      	ldr	r3, [r7, #12]
 800b966:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b96a:	2300      	movs	r3, #0
 800b96c:	2200      	movs	r2, #0
 800b96e:	f000 fd93 	bl	800c498 <osMessageQueuePut>
 800b972:	e026      	b.n	800b9c2 <USBH_CtlReq+0xa8>
 800b974:	68f8      	ldr	r0, [r7, #12]
 800b976:	f000 f829 	bl	800b9cc <USBH_HandleControl>
 800b97a:	4603      	mov	r3, r0
 800b97c:	75fb      	strb	r3, [r7, #23]
 800b97e:	7dfb      	ldrb	r3, [r7, #23]
 800b980:	2b00      	cmp	r3, #0
 800b982:	d002      	beq.n	800b98a <USBH_CtlReq+0x70>
 800b984:	7dfb      	ldrb	r3, [r7, #23]
 800b986:	2b03      	cmp	r3, #3
 800b988:	d106      	bne.n	800b998 <USBH_CtlReq+0x7e>
 800b98a:	68fb      	ldr	r3, [r7, #12]
 800b98c:	2201      	movs	r2, #1
 800b98e:	709a      	strb	r2, [r3, #2]
 800b990:	68fb      	ldr	r3, [r7, #12]
 800b992:	2200      	movs	r2, #0
 800b994:	761a      	strb	r2, [r3, #24]
 800b996:	e005      	b.n	800b9a4 <USBH_CtlReq+0x8a>
 800b998:	7dfb      	ldrb	r3, [r7, #23]
 800b99a:	2b02      	cmp	r3, #2
 800b99c:	d102      	bne.n	800b9a4 <USBH_CtlReq+0x8a>
 800b99e:	68fb      	ldr	r3, [r7, #12]
 800b9a0:	2201      	movs	r2, #1
 800b9a2:	709a      	strb	r2, [r3, #2]
 800b9a4:	68fb      	ldr	r3, [r7, #12]
 800b9a6:	2203      	movs	r2, #3
 800b9a8:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800b9ac:	68fb      	ldr	r3, [r7, #12]
 800b9ae:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800b9b2:	68fb      	ldr	r3, [r7, #12]
 800b9b4:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800b9b8:	2300      	movs	r3, #0
 800b9ba:	2200      	movs	r2, #0
 800b9bc:	f000 fd6c 	bl	800c498 <osMessageQueuePut>
 800b9c0:	bf00      	nop
 800b9c2:	7dfb      	ldrb	r3, [r7, #23]
 800b9c4:	4618      	mov	r0, r3
 800b9c6:	3718      	adds	r7, #24
 800b9c8:	46bd      	mov	sp, r7
 800b9ca:	bd80      	pop	{r7, pc}

0800b9cc <USBH_HandleControl>:
 800b9cc:	b580      	push	{r7, lr}
 800b9ce:	b086      	sub	sp, #24
 800b9d0:	af02      	add	r7, sp, #8
 800b9d2:	6078      	str	r0, [r7, #4]
 800b9d4:	2301      	movs	r3, #1
 800b9d6:	73fb      	strb	r3, [r7, #15]
 800b9d8:	2300      	movs	r3, #0
 800b9da:	73bb      	strb	r3, [r7, #14]
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	7e1b      	ldrb	r3, [r3, #24]
 800b9e0:	3b01      	subs	r3, #1
 800b9e2:	2b0a      	cmp	r3, #10
 800b9e4:	f200 8229 	bhi.w	800be3a <USBH_HandleControl+0x46e>
 800b9e8:	a201      	add	r2, pc, #4	@ (adr r2, 800b9f0 <USBH_HandleControl+0x24>)
 800b9ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b9ee:	bf00      	nop
 800b9f0:	0800ba1d 	.word	0x0800ba1d
 800b9f4:	0800ba37 	.word	0x0800ba37
 800b9f8:	0800bad9 	.word	0x0800bad9
 800b9fc:	0800baff 	.word	0x0800baff
 800ba00:	0800bb8b 	.word	0x0800bb8b
 800ba04:	0800bbb5 	.word	0x0800bbb5
 800ba08:	0800bc77 	.word	0x0800bc77
 800ba0c:	0800bc99 	.word	0x0800bc99
 800ba10:	0800bd2b 	.word	0x0800bd2b
 800ba14:	0800bd51 	.word	0x0800bd51
 800ba18:	0800bde3 	.word	0x0800bde3
 800ba1c:	687b      	ldr	r3, [r7, #4]
 800ba1e:	f103 0110 	add.w	r1, r3, #16
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	795b      	ldrb	r3, [r3, #5]
 800ba26:	461a      	mov	r2, r3
 800ba28:	6878      	ldr	r0, [r7, #4]
 800ba2a:	f000 fa17 	bl	800be5c <USBH_CtlSendSetup>
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	2202      	movs	r2, #2
 800ba32:	761a      	strb	r2, [r3, #24]
 800ba34:	e20c      	b.n	800be50 <USBH_HandleControl+0x484>
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	795b      	ldrb	r3, [r3, #5]
 800ba3a:	4619      	mov	r1, r3
 800ba3c:	6878      	ldr	r0, [r7, #4]
 800ba3e:	f005 f85f 	bl	8010b00 <USBH_LL_GetURBState>
 800ba42:	4603      	mov	r3, r0
 800ba44:	73bb      	strb	r3, [r7, #14]
 800ba46:	7bbb      	ldrb	r3, [r7, #14]
 800ba48:	2b01      	cmp	r3, #1
 800ba4a:	d12c      	bne.n	800baa6 <USBH_HandleControl+0xda>
 800ba4c:	687b      	ldr	r3, [r7, #4]
 800ba4e:	7c1b      	ldrb	r3, [r3, #16]
 800ba50:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800ba54:	737b      	strb	r3, [r7, #13]
 800ba56:	687b      	ldr	r3, [r7, #4]
 800ba58:	8adb      	ldrh	r3, [r3, #22]
 800ba5a:	2b00      	cmp	r3, #0
 800ba5c:	d00a      	beq.n	800ba74 <USBH_HandleControl+0xa8>
 800ba5e:	7b7b      	ldrb	r3, [r7, #13]
 800ba60:	2b80      	cmp	r3, #128	@ 0x80
 800ba62:	d103      	bne.n	800ba6c <USBH_HandleControl+0xa0>
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	2203      	movs	r2, #3
 800ba68:	761a      	strb	r2, [r3, #24]
 800ba6a:	e00d      	b.n	800ba88 <USBH_HandleControl+0xbc>
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	2205      	movs	r2, #5
 800ba70:	761a      	strb	r2, [r3, #24]
 800ba72:	e009      	b.n	800ba88 <USBH_HandleControl+0xbc>
 800ba74:	7b7b      	ldrb	r3, [r7, #13]
 800ba76:	2b80      	cmp	r3, #128	@ 0x80
 800ba78:	d103      	bne.n	800ba82 <USBH_HandleControl+0xb6>
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	2209      	movs	r2, #9
 800ba7e:	761a      	strb	r2, [r3, #24]
 800ba80:	e002      	b.n	800ba88 <USBH_HandleControl+0xbc>
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	2207      	movs	r2, #7
 800ba86:	761a      	strb	r2, [r3, #24]
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	2203      	movs	r2, #3
 800ba8c:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800ba90:	687b      	ldr	r3, [r7, #4]
 800ba92:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800ba9c:	2300      	movs	r3, #0
 800ba9e:	2200      	movs	r2, #0
 800baa0:	f000 fcfa 	bl	800c498 <osMessageQueuePut>
 800baa4:	e1cb      	b.n	800be3e <USBH_HandleControl+0x472>
 800baa6:	7bbb      	ldrb	r3, [r7, #14]
 800baa8:	2b04      	cmp	r3, #4
 800baaa:	d003      	beq.n	800bab4 <USBH_HandleControl+0xe8>
 800baac:	7bbb      	ldrb	r3, [r7, #14]
 800baae:	2b02      	cmp	r3, #2
 800bab0:	f040 81c5 	bne.w	800be3e <USBH_HandleControl+0x472>
 800bab4:	687b      	ldr	r3, [r7, #4]
 800bab6:	220b      	movs	r2, #11
 800bab8:	761a      	strb	r2, [r3, #24]
 800baba:	687b      	ldr	r3, [r7, #4]
 800babc:	2203      	movs	r2, #3
 800babe:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bace:	2300      	movs	r3, #0
 800bad0:	2200      	movs	r2, #0
 800bad2:	f000 fce1 	bl	800c498 <osMessageQueuePut>
 800bad6:	e1b2      	b.n	800be3e <USBH_HandleControl+0x472>
 800bad8:	687b      	ldr	r3, [r7, #4]
 800bada:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800bade:	b29a      	uxth	r2, r3
 800bae0:	687b      	ldr	r3, [r7, #4]
 800bae2:	81da      	strh	r2, [r3, #14]
 800bae4:	687b      	ldr	r3, [r7, #4]
 800bae6:	6899      	ldr	r1, [r3, #8]
 800bae8:	687b      	ldr	r3, [r7, #4]
 800baea:	899a      	ldrh	r2, [r3, #12]
 800baec:	687b      	ldr	r3, [r7, #4]
 800baee:	791b      	ldrb	r3, [r3, #4]
 800baf0:	6878      	ldr	r0, [r7, #4]
 800baf2:	f000 f9f2 	bl	800beda <USBH_CtlReceiveData>
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	2204      	movs	r2, #4
 800bafa:	761a      	strb	r2, [r3, #24]
 800bafc:	e1a8      	b.n	800be50 <USBH_HandleControl+0x484>
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	791b      	ldrb	r3, [r3, #4]
 800bb02:	4619      	mov	r1, r3
 800bb04:	6878      	ldr	r0, [r7, #4]
 800bb06:	f004 fffb 	bl	8010b00 <USBH_LL_GetURBState>
 800bb0a:	4603      	mov	r3, r0
 800bb0c:	73bb      	strb	r3, [r7, #14]
 800bb0e:	7bbb      	ldrb	r3, [r7, #14]
 800bb10:	2b01      	cmp	r3, #1
 800bb12:	d110      	bne.n	800bb36 <USBH_HandleControl+0x16a>
 800bb14:	687b      	ldr	r3, [r7, #4]
 800bb16:	2209      	movs	r2, #9
 800bb18:	761a      	strb	r2, [r3, #24]
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	2203      	movs	r2, #3
 800bb1e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bb2e:	2300      	movs	r3, #0
 800bb30:	2200      	movs	r2, #0
 800bb32:	f000 fcb1 	bl	800c498 <osMessageQueuePut>
 800bb36:	7bbb      	ldrb	r3, [r7, #14]
 800bb38:	2b05      	cmp	r3, #5
 800bb3a:	d110      	bne.n	800bb5e <USBH_HandleControl+0x192>
 800bb3c:	2303      	movs	r3, #3
 800bb3e:	73fb      	strb	r3, [r7, #15]
 800bb40:	687b      	ldr	r3, [r7, #4]
 800bb42:	2203      	movs	r2, #3
 800bb44:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bb4e:	687b      	ldr	r3, [r7, #4]
 800bb50:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bb54:	2300      	movs	r3, #0
 800bb56:	2200      	movs	r2, #0
 800bb58:	f000 fc9e 	bl	800c498 <osMessageQueuePut>
 800bb5c:	e171      	b.n	800be42 <USBH_HandleControl+0x476>
 800bb5e:	7bbb      	ldrb	r3, [r7, #14]
 800bb60:	2b04      	cmp	r3, #4
 800bb62:	f040 816e 	bne.w	800be42 <USBH_HandleControl+0x476>
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	220b      	movs	r2, #11
 800bb6a:	761a      	strb	r2, [r3, #24]
 800bb6c:	687b      	ldr	r3, [r7, #4]
 800bb6e:	2203      	movs	r2, #3
 800bb70:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bb74:	687b      	ldr	r3, [r7, #4]
 800bb76:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bb80:	2300      	movs	r3, #0
 800bb82:	2200      	movs	r2, #0
 800bb84:	f000 fc88 	bl	800c498 <osMessageQueuePut>
 800bb88:	e15b      	b.n	800be42 <USBH_HandleControl+0x476>
 800bb8a:	687b      	ldr	r3, [r7, #4]
 800bb8c:	6899      	ldr	r1, [r3, #8]
 800bb8e:	687b      	ldr	r3, [r7, #4]
 800bb90:	899a      	ldrh	r2, [r3, #12]
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	795b      	ldrb	r3, [r3, #5]
 800bb96:	2001      	movs	r0, #1
 800bb98:	9000      	str	r0, [sp, #0]
 800bb9a:	6878      	ldr	r0, [r7, #4]
 800bb9c:	f000 f978 	bl	800be90 <USBH_CtlSendData>
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800bba6:	b29a      	uxth	r2, r3
 800bba8:	687b      	ldr	r3, [r7, #4]
 800bbaa:	81da      	strh	r2, [r3, #14]
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	2206      	movs	r2, #6
 800bbb0:	761a      	strb	r2, [r3, #24]
 800bbb2:	e14d      	b.n	800be50 <USBH_HandleControl+0x484>
 800bbb4:	687b      	ldr	r3, [r7, #4]
 800bbb6:	795b      	ldrb	r3, [r3, #5]
 800bbb8:	4619      	mov	r1, r3
 800bbba:	6878      	ldr	r0, [r7, #4]
 800bbbc:	f004 ffa0 	bl	8010b00 <USBH_LL_GetURBState>
 800bbc0:	4603      	mov	r3, r0
 800bbc2:	73bb      	strb	r3, [r7, #14]
 800bbc4:	7bbb      	ldrb	r3, [r7, #14]
 800bbc6:	2b01      	cmp	r3, #1
 800bbc8:	d111      	bne.n	800bbee <USBH_HandleControl+0x222>
 800bbca:	687b      	ldr	r3, [r7, #4]
 800bbcc:	2207      	movs	r2, #7
 800bbce:	761a      	strb	r2, [r3, #24]
 800bbd0:	687b      	ldr	r3, [r7, #4]
 800bbd2:	2203      	movs	r2, #3
 800bbd4:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bbd8:	687b      	ldr	r3, [r7, #4]
 800bbda:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bbde:	687b      	ldr	r3, [r7, #4]
 800bbe0:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bbe4:	2300      	movs	r3, #0
 800bbe6:	2200      	movs	r2, #0
 800bbe8:	f000 fc56 	bl	800c498 <osMessageQueuePut>
 800bbec:	e12b      	b.n	800be46 <USBH_HandleControl+0x47a>
 800bbee:	7bbb      	ldrb	r3, [r7, #14]
 800bbf0:	2b05      	cmp	r3, #5
 800bbf2:	d113      	bne.n	800bc1c <USBH_HandleControl+0x250>
 800bbf4:	687b      	ldr	r3, [r7, #4]
 800bbf6:	220c      	movs	r2, #12
 800bbf8:	761a      	strb	r2, [r3, #24]
 800bbfa:	2303      	movs	r3, #3
 800bbfc:	73fb      	strb	r3, [r7, #15]
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	2203      	movs	r2, #3
 800bc02:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bc0c:	687b      	ldr	r3, [r7, #4]
 800bc0e:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bc12:	2300      	movs	r3, #0
 800bc14:	2200      	movs	r2, #0
 800bc16:	f000 fc3f 	bl	800c498 <osMessageQueuePut>
 800bc1a:	e114      	b.n	800be46 <USBH_HandleControl+0x47a>
 800bc1c:	7bbb      	ldrb	r3, [r7, #14]
 800bc1e:	2b02      	cmp	r3, #2
 800bc20:	d111      	bne.n	800bc46 <USBH_HandleControl+0x27a>
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	2205      	movs	r2, #5
 800bc26:	761a      	strb	r2, [r3, #24]
 800bc28:	687b      	ldr	r3, [r7, #4]
 800bc2a:	2203      	movs	r2, #3
 800bc2c:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bc30:	687b      	ldr	r3, [r7, #4]
 800bc32:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bc3c:	2300      	movs	r3, #0
 800bc3e:	2200      	movs	r2, #0
 800bc40:	f000 fc2a 	bl	800c498 <osMessageQueuePut>
 800bc44:	e0ff      	b.n	800be46 <USBH_HandleControl+0x47a>
 800bc46:	7bbb      	ldrb	r3, [r7, #14]
 800bc48:	2b04      	cmp	r3, #4
 800bc4a:	f040 80fc 	bne.w	800be46 <USBH_HandleControl+0x47a>
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	220b      	movs	r2, #11
 800bc52:	761a      	strb	r2, [r3, #24]
 800bc54:	2302      	movs	r3, #2
 800bc56:	73fb      	strb	r3, [r7, #15]
 800bc58:	687b      	ldr	r3, [r7, #4]
 800bc5a:	2203      	movs	r2, #3
 800bc5c:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bc6c:	2300      	movs	r3, #0
 800bc6e:	2200      	movs	r2, #0
 800bc70:	f000 fc12 	bl	800c498 <osMessageQueuePut>
 800bc74:	e0e7      	b.n	800be46 <USBH_HandleControl+0x47a>
 800bc76:	687b      	ldr	r3, [r7, #4]
 800bc78:	791b      	ldrb	r3, [r3, #4]
 800bc7a:	2200      	movs	r2, #0
 800bc7c:	2100      	movs	r1, #0
 800bc7e:	6878      	ldr	r0, [r7, #4]
 800bc80:	f000 f92b 	bl	800beda <USBH_CtlReceiveData>
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800bc8a:	b29a      	uxth	r2, r3
 800bc8c:	687b      	ldr	r3, [r7, #4]
 800bc8e:	81da      	strh	r2, [r3, #14]
 800bc90:	687b      	ldr	r3, [r7, #4]
 800bc92:	2208      	movs	r2, #8
 800bc94:	761a      	strb	r2, [r3, #24]
 800bc96:	e0db      	b.n	800be50 <USBH_HandleControl+0x484>
 800bc98:	687b      	ldr	r3, [r7, #4]
 800bc9a:	791b      	ldrb	r3, [r3, #4]
 800bc9c:	4619      	mov	r1, r3
 800bc9e:	6878      	ldr	r0, [r7, #4]
 800bca0:	f004 ff2e 	bl	8010b00 <USBH_LL_GetURBState>
 800bca4:	4603      	mov	r3, r0
 800bca6:	73bb      	strb	r3, [r7, #14]
 800bca8:	7bbb      	ldrb	r3, [r7, #14]
 800bcaa:	2b01      	cmp	r3, #1
 800bcac:	d113      	bne.n	800bcd6 <USBH_HandleControl+0x30a>
 800bcae:	687b      	ldr	r3, [r7, #4]
 800bcb0:	220d      	movs	r2, #13
 800bcb2:	761a      	strb	r2, [r3, #24]
 800bcb4:	2300      	movs	r3, #0
 800bcb6:	73fb      	strb	r3, [r7, #15]
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	2203      	movs	r2, #3
 800bcbc:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bcc0:	687b      	ldr	r3, [r7, #4]
 800bcc2:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bcc6:	687b      	ldr	r3, [r7, #4]
 800bcc8:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bccc:	2300      	movs	r3, #0
 800bcce:	2200      	movs	r2, #0
 800bcd0:	f000 fbe2 	bl	800c498 <osMessageQueuePut>
 800bcd4:	e0b9      	b.n	800be4a <USBH_HandleControl+0x47e>
 800bcd6:	7bbb      	ldrb	r3, [r7, #14]
 800bcd8:	2b04      	cmp	r3, #4
 800bcda:	d111      	bne.n	800bd00 <USBH_HandleControl+0x334>
 800bcdc:	687b      	ldr	r3, [r7, #4]
 800bcde:	220b      	movs	r2, #11
 800bce0:	761a      	strb	r2, [r3, #24]
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	2203      	movs	r2, #3
 800bce6:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bcea:	687b      	ldr	r3, [r7, #4]
 800bcec:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bcf6:	2300      	movs	r3, #0
 800bcf8:	2200      	movs	r2, #0
 800bcfa:	f000 fbcd 	bl	800c498 <osMessageQueuePut>
 800bcfe:	e0a4      	b.n	800be4a <USBH_HandleControl+0x47e>
 800bd00:	7bbb      	ldrb	r3, [r7, #14]
 800bd02:	2b05      	cmp	r3, #5
 800bd04:	f040 80a1 	bne.w	800be4a <USBH_HandleControl+0x47e>
 800bd08:	2303      	movs	r3, #3
 800bd0a:	73fb      	strb	r3, [r7, #15]
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	2203      	movs	r2, #3
 800bd10:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bd14:	687b      	ldr	r3, [r7, #4]
 800bd16:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bd20:	2300      	movs	r3, #0
 800bd22:	2200      	movs	r2, #0
 800bd24:	f000 fbb8 	bl	800c498 <osMessageQueuePut>
 800bd28:	e08f      	b.n	800be4a <USBH_HandleControl+0x47e>
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	795b      	ldrb	r3, [r3, #5]
 800bd2e:	2201      	movs	r2, #1
 800bd30:	9200      	str	r2, [sp, #0]
 800bd32:	2200      	movs	r2, #0
 800bd34:	2100      	movs	r1, #0
 800bd36:	6878      	ldr	r0, [r7, #4]
 800bd38:	f000 f8aa 	bl	800be90 <USBH_CtlSendData>
 800bd3c:	687b      	ldr	r3, [r7, #4]
 800bd3e:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800bd42:	b29a      	uxth	r2, r3
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	81da      	strh	r2, [r3, #14]
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	220a      	movs	r2, #10
 800bd4c:	761a      	strb	r2, [r3, #24]
 800bd4e:	e07f      	b.n	800be50 <USBH_HandleControl+0x484>
 800bd50:	687b      	ldr	r3, [r7, #4]
 800bd52:	795b      	ldrb	r3, [r3, #5]
 800bd54:	4619      	mov	r1, r3
 800bd56:	6878      	ldr	r0, [r7, #4]
 800bd58:	f004 fed2 	bl	8010b00 <USBH_LL_GetURBState>
 800bd5c:	4603      	mov	r3, r0
 800bd5e:	73bb      	strb	r3, [r7, #14]
 800bd60:	7bbb      	ldrb	r3, [r7, #14]
 800bd62:	2b01      	cmp	r3, #1
 800bd64:	d113      	bne.n	800bd8e <USBH_HandleControl+0x3c2>
 800bd66:	2300      	movs	r3, #0
 800bd68:	73fb      	strb	r3, [r7, #15]
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	220d      	movs	r2, #13
 800bd6e:	761a      	strb	r2, [r3, #24]
 800bd70:	687b      	ldr	r3, [r7, #4]
 800bd72:	2203      	movs	r2, #3
 800bd74:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bd78:	687b      	ldr	r3, [r7, #4]
 800bd7a:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bd84:	2300      	movs	r3, #0
 800bd86:	2200      	movs	r2, #0
 800bd88:	f000 fb86 	bl	800c498 <osMessageQueuePut>
 800bd8c:	e05f      	b.n	800be4e <USBH_HandleControl+0x482>
 800bd8e:	7bbb      	ldrb	r3, [r7, #14]
 800bd90:	2b02      	cmp	r3, #2
 800bd92:	d111      	bne.n	800bdb8 <USBH_HandleControl+0x3ec>
 800bd94:	687b      	ldr	r3, [r7, #4]
 800bd96:	2209      	movs	r2, #9
 800bd98:	761a      	strb	r2, [r3, #24]
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	2203      	movs	r2, #3
 800bd9e:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bda8:	687b      	ldr	r3, [r7, #4]
 800bdaa:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bdae:	2300      	movs	r3, #0
 800bdb0:	2200      	movs	r2, #0
 800bdb2:	f000 fb71 	bl	800c498 <osMessageQueuePut>
 800bdb6:	e04a      	b.n	800be4e <USBH_HandleControl+0x482>
 800bdb8:	7bbb      	ldrb	r3, [r7, #14]
 800bdba:	2b04      	cmp	r3, #4
 800bdbc:	d147      	bne.n	800be4e <USBH_HandleControl+0x482>
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	220b      	movs	r2, #11
 800bdc2:	761a      	strb	r2, [r3, #24]
 800bdc4:	687b      	ldr	r3, [r7, #4]
 800bdc6:	2203      	movs	r2, #3
 800bdc8:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
 800bdcc:	687b      	ldr	r3, [r7, #4]
 800bdce:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800bdd2:	687b      	ldr	r3, [r7, #4]
 800bdd4:	f503 7178 	add.w	r1, r3, #992	@ 0x3e0
 800bdd8:	2300      	movs	r3, #0
 800bdda:	2200      	movs	r2, #0
 800bddc:	f000 fb5c 	bl	800c498 <osMessageQueuePut>
 800bde0:	e035      	b.n	800be4e <USBH_HandleControl+0x482>
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	7e5b      	ldrb	r3, [r3, #25]
 800bde6:	3301      	adds	r3, #1
 800bde8:	b2da      	uxtb	r2, r3
 800bdea:	687b      	ldr	r3, [r7, #4]
 800bdec:	765a      	strb	r2, [r3, #25]
 800bdee:	687b      	ldr	r3, [r7, #4]
 800bdf0:	7e5b      	ldrb	r3, [r3, #25]
 800bdf2:	2b02      	cmp	r3, #2
 800bdf4:	d806      	bhi.n	800be04 <USBH_HandleControl+0x438>
 800bdf6:	687b      	ldr	r3, [r7, #4]
 800bdf8:	2201      	movs	r2, #1
 800bdfa:	761a      	strb	r2, [r3, #24]
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	2201      	movs	r2, #1
 800be00:	709a      	strb	r2, [r3, #2]
 800be02:	e025      	b.n	800be50 <USBH_HandleControl+0x484>
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	f8d3 33d4 	ldr.w	r3, [r3, #980]	@ 0x3d4
 800be0a:	2106      	movs	r1, #6
 800be0c:	6878      	ldr	r0, [r7, #4]
 800be0e:	4798      	blx	r3
 800be10:	687b      	ldr	r3, [r7, #4]
 800be12:	2200      	movs	r2, #0
 800be14:	765a      	strb	r2, [r3, #25]
 800be16:	687b      	ldr	r3, [r7, #4]
 800be18:	795b      	ldrb	r3, [r3, #5]
 800be1a:	4619      	mov	r1, r3
 800be1c:	6878      	ldr	r0, [r7, #4]
 800be1e:	f000 f90d 	bl	800c03c <USBH_FreePipe>
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	791b      	ldrb	r3, [r3, #4]
 800be26:	4619      	mov	r1, r3
 800be28:	6878      	ldr	r0, [r7, #4]
 800be2a:	f000 f907 	bl	800c03c <USBH_FreePipe>
 800be2e:	687b      	ldr	r3, [r7, #4]
 800be30:	2200      	movs	r2, #0
 800be32:	701a      	strb	r2, [r3, #0]
 800be34:	2302      	movs	r3, #2
 800be36:	73fb      	strb	r3, [r7, #15]
 800be38:	e00a      	b.n	800be50 <USBH_HandleControl+0x484>
 800be3a:	bf00      	nop
 800be3c:	e008      	b.n	800be50 <USBH_HandleControl+0x484>
 800be3e:	bf00      	nop
 800be40:	e006      	b.n	800be50 <USBH_HandleControl+0x484>
 800be42:	bf00      	nop
 800be44:	e004      	b.n	800be50 <USBH_HandleControl+0x484>
 800be46:	bf00      	nop
 800be48:	e002      	b.n	800be50 <USBH_HandleControl+0x484>
 800be4a:	bf00      	nop
 800be4c:	e000      	b.n	800be50 <USBH_HandleControl+0x484>
 800be4e:	bf00      	nop
 800be50:	7bfb      	ldrb	r3, [r7, #15]
 800be52:	4618      	mov	r0, r3
 800be54:	3710      	adds	r7, #16
 800be56:	46bd      	mov	sp, r7
 800be58:	bd80      	pop	{r7, pc}
 800be5a:	bf00      	nop

0800be5c <USBH_CtlSendSetup>:
 800be5c:	b580      	push	{r7, lr}
 800be5e:	b088      	sub	sp, #32
 800be60:	af04      	add	r7, sp, #16
 800be62:	60f8      	str	r0, [r7, #12]
 800be64:	60b9      	str	r1, [r7, #8]
 800be66:	4613      	mov	r3, r2
 800be68:	71fb      	strb	r3, [r7, #7]
 800be6a:	79f9      	ldrb	r1, [r7, #7]
 800be6c:	2300      	movs	r3, #0
 800be6e:	9303      	str	r3, [sp, #12]
 800be70:	2308      	movs	r3, #8
 800be72:	9302      	str	r3, [sp, #8]
 800be74:	68bb      	ldr	r3, [r7, #8]
 800be76:	9301      	str	r3, [sp, #4]
 800be78:	2300      	movs	r3, #0
 800be7a:	9300      	str	r3, [sp, #0]
 800be7c:	2300      	movs	r3, #0
 800be7e:	2200      	movs	r2, #0
 800be80:	68f8      	ldr	r0, [r7, #12]
 800be82:	f004 fe0c 	bl	8010a9e <USBH_LL_SubmitURB>
 800be86:	2300      	movs	r3, #0
 800be88:	4618      	mov	r0, r3
 800be8a:	3710      	adds	r7, #16
 800be8c:	46bd      	mov	sp, r7
 800be8e:	bd80      	pop	{r7, pc}

0800be90 <USBH_CtlSendData>:
 800be90:	b580      	push	{r7, lr}
 800be92:	b088      	sub	sp, #32
 800be94:	af04      	add	r7, sp, #16
 800be96:	60f8      	str	r0, [r7, #12]
 800be98:	60b9      	str	r1, [r7, #8]
 800be9a:	4611      	mov	r1, r2
 800be9c:	461a      	mov	r2, r3
 800be9e:	460b      	mov	r3, r1
 800bea0:	80fb      	strh	r3, [r7, #6]
 800bea2:	4613      	mov	r3, r2
 800bea4:	717b      	strb	r3, [r7, #5]
 800bea6:	68fb      	ldr	r3, [r7, #12]
 800bea8:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800beac:	2b00      	cmp	r3, #0
 800beae:	d001      	beq.n	800beb4 <USBH_CtlSendData+0x24>
 800beb0:	2300      	movs	r3, #0
 800beb2:	763b      	strb	r3, [r7, #24]
 800beb4:	7979      	ldrb	r1, [r7, #5]
 800beb6:	7e3b      	ldrb	r3, [r7, #24]
 800beb8:	9303      	str	r3, [sp, #12]
 800beba:	88fb      	ldrh	r3, [r7, #6]
 800bebc:	9302      	str	r3, [sp, #8]
 800bebe:	68bb      	ldr	r3, [r7, #8]
 800bec0:	9301      	str	r3, [sp, #4]
 800bec2:	2301      	movs	r3, #1
 800bec4:	9300      	str	r3, [sp, #0]
 800bec6:	2300      	movs	r3, #0
 800bec8:	2200      	movs	r2, #0
 800beca:	68f8      	ldr	r0, [r7, #12]
 800becc:	f004 fde7 	bl	8010a9e <USBH_LL_SubmitURB>
 800bed0:	2300      	movs	r3, #0
 800bed2:	4618      	mov	r0, r3
 800bed4:	3710      	adds	r7, #16
 800bed6:	46bd      	mov	sp, r7
 800bed8:	bd80      	pop	{r7, pc}

0800beda <USBH_CtlReceiveData>:
 800beda:	b580      	push	{r7, lr}
 800bedc:	b088      	sub	sp, #32
 800bede:	af04      	add	r7, sp, #16
 800bee0:	60f8      	str	r0, [r7, #12]
 800bee2:	60b9      	str	r1, [r7, #8]
 800bee4:	4611      	mov	r1, r2
 800bee6:	461a      	mov	r2, r3
 800bee8:	460b      	mov	r3, r1
 800beea:	80fb      	strh	r3, [r7, #6]
 800beec:	4613      	mov	r3, r2
 800beee:	717b      	strb	r3, [r7, #5]
 800bef0:	7979      	ldrb	r1, [r7, #5]
 800bef2:	2300      	movs	r3, #0
 800bef4:	9303      	str	r3, [sp, #12]
 800bef6:	88fb      	ldrh	r3, [r7, #6]
 800bef8:	9302      	str	r3, [sp, #8]
 800befa:	68bb      	ldr	r3, [r7, #8]
 800befc:	9301      	str	r3, [sp, #4]
 800befe:	2301      	movs	r3, #1
 800bf00:	9300      	str	r3, [sp, #0]
 800bf02:	2300      	movs	r3, #0
 800bf04:	2201      	movs	r2, #1
 800bf06:	68f8      	ldr	r0, [r7, #12]
 800bf08:	f004 fdc9 	bl	8010a9e <USBH_LL_SubmitURB>
 800bf0c:	2300      	movs	r3, #0
 800bf0e:	4618      	mov	r0, r3
 800bf10:	3710      	adds	r7, #16
 800bf12:	46bd      	mov	sp, r7
 800bf14:	bd80      	pop	{r7, pc}

0800bf16 <USBH_BulkSendData>:
 800bf16:	b580      	push	{r7, lr}
 800bf18:	b088      	sub	sp, #32
 800bf1a:	af04      	add	r7, sp, #16
 800bf1c:	60f8      	str	r0, [r7, #12]
 800bf1e:	60b9      	str	r1, [r7, #8]
 800bf20:	4611      	mov	r1, r2
 800bf22:	461a      	mov	r2, r3
 800bf24:	460b      	mov	r3, r1
 800bf26:	80fb      	strh	r3, [r7, #6]
 800bf28:	4613      	mov	r3, r2
 800bf2a:	717b      	strb	r3, [r7, #5]
 800bf2c:	68fb      	ldr	r3, [r7, #12]
 800bf2e:	f893 331d 	ldrb.w	r3, [r3, #797]	@ 0x31d
 800bf32:	2b00      	cmp	r3, #0
 800bf34:	d001      	beq.n	800bf3a <USBH_BulkSendData+0x24>
 800bf36:	2300      	movs	r3, #0
 800bf38:	763b      	strb	r3, [r7, #24]
 800bf3a:	7979      	ldrb	r1, [r7, #5]
 800bf3c:	7e3b      	ldrb	r3, [r7, #24]
 800bf3e:	9303      	str	r3, [sp, #12]
 800bf40:	88fb      	ldrh	r3, [r7, #6]
 800bf42:	9302      	str	r3, [sp, #8]
 800bf44:	68bb      	ldr	r3, [r7, #8]
 800bf46:	9301      	str	r3, [sp, #4]
 800bf48:	2301      	movs	r3, #1
 800bf4a:	9300      	str	r3, [sp, #0]
 800bf4c:	2302      	movs	r3, #2
 800bf4e:	2200      	movs	r2, #0
 800bf50:	68f8      	ldr	r0, [r7, #12]
 800bf52:	f004 fda4 	bl	8010a9e <USBH_LL_SubmitURB>
 800bf56:	2300      	movs	r3, #0
 800bf58:	4618      	mov	r0, r3
 800bf5a:	3710      	adds	r7, #16
 800bf5c:	46bd      	mov	sp, r7
 800bf5e:	bd80      	pop	{r7, pc}

0800bf60 <USBH_BulkReceiveData>:
 800bf60:	b580      	push	{r7, lr}
 800bf62:	b088      	sub	sp, #32
 800bf64:	af04      	add	r7, sp, #16
 800bf66:	60f8      	str	r0, [r7, #12]
 800bf68:	60b9      	str	r1, [r7, #8]
 800bf6a:	4611      	mov	r1, r2
 800bf6c:	461a      	mov	r2, r3
 800bf6e:	460b      	mov	r3, r1
 800bf70:	80fb      	strh	r3, [r7, #6]
 800bf72:	4613      	mov	r3, r2
 800bf74:	717b      	strb	r3, [r7, #5]
 800bf76:	7979      	ldrb	r1, [r7, #5]
 800bf78:	2300      	movs	r3, #0
 800bf7a:	9303      	str	r3, [sp, #12]
 800bf7c:	88fb      	ldrh	r3, [r7, #6]
 800bf7e:	9302      	str	r3, [sp, #8]
 800bf80:	68bb      	ldr	r3, [r7, #8]
 800bf82:	9301      	str	r3, [sp, #4]
 800bf84:	2301      	movs	r3, #1
 800bf86:	9300      	str	r3, [sp, #0]
 800bf88:	2302      	movs	r3, #2
 800bf8a:	2201      	movs	r2, #1
 800bf8c:	68f8      	ldr	r0, [r7, #12]
 800bf8e:	f004 fd86 	bl	8010a9e <USBH_LL_SubmitURB>
 800bf92:	2300      	movs	r3, #0
 800bf94:	4618      	mov	r0, r3
 800bf96:	3710      	adds	r7, #16
 800bf98:	46bd      	mov	sp, r7
 800bf9a:	bd80      	pop	{r7, pc}

0800bf9c <USBH_OpenPipe>:
 800bf9c:	b580      	push	{r7, lr}
 800bf9e:	b086      	sub	sp, #24
 800bfa0:	af04      	add	r7, sp, #16
 800bfa2:	6078      	str	r0, [r7, #4]
 800bfa4:	4608      	mov	r0, r1
 800bfa6:	4611      	mov	r1, r2
 800bfa8:	461a      	mov	r2, r3
 800bfaa:	4603      	mov	r3, r0
 800bfac:	70fb      	strb	r3, [r7, #3]
 800bfae:	460b      	mov	r3, r1
 800bfb0:	70bb      	strb	r3, [r7, #2]
 800bfb2:	4613      	mov	r3, r2
 800bfb4:	707b      	strb	r3, [r7, #1]
 800bfb6:	7878      	ldrb	r0, [r7, #1]
 800bfb8:	78ba      	ldrb	r2, [r7, #2]
 800bfba:	78f9      	ldrb	r1, [r7, #3]
 800bfbc:	8b3b      	ldrh	r3, [r7, #24]
 800bfbe:	9302      	str	r3, [sp, #8]
 800bfc0:	7d3b      	ldrb	r3, [r7, #20]
 800bfc2:	9301      	str	r3, [sp, #4]
 800bfc4:	7c3b      	ldrb	r3, [r7, #16]
 800bfc6:	9300      	str	r3, [sp, #0]
 800bfc8:	4603      	mov	r3, r0
 800bfca:	6878      	ldr	r0, [r7, #4]
 800bfcc:	f004 fd19 	bl	8010a02 <USBH_LL_OpenPipe>
 800bfd0:	2300      	movs	r3, #0
 800bfd2:	4618      	mov	r0, r3
 800bfd4:	3708      	adds	r7, #8
 800bfd6:	46bd      	mov	sp, r7
 800bfd8:	bd80      	pop	{r7, pc}

0800bfda <USBH_ClosePipe>:
 800bfda:	b580      	push	{r7, lr}
 800bfdc:	b082      	sub	sp, #8
 800bfde:	af00      	add	r7, sp, #0
 800bfe0:	6078      	str	r0, [r7, #4]
 800bfe2:	460b      	mov	r3, r1
 800bfe4:	70fb      	strb	r3, [r7, #3]
 800bfe6:	78fb      	ldrb	r3, [r7, #3]
 800bfe8:	4619      	mov	r1, r3
 800bfea:	6878      	ldr	r0, [r7, #4]
 800bfec:	f004 fd38 	bl	8010a60 <USBH_LL_ClosePipe>
 800bff0:	2300      	movs	r3, #0
 800bff2:	4618      	mov	r0, r3
 800bff4:	3708      	adds	r7, #8
 800bff6:	46bd      	mov	sp, r7
 800bff8:	bd80      	pop	{r7, pc}

0800bffa <USBH_AllocPipe>:
 800bffa:	b580      	push	{r7, lr}
 800bffc:	b084      	sub	sp, #16
 800bffe:	af00      	add	r7, sp, #0
 800c000:	6078      	str	r0, [r7, #4]
 800c002:	460b      	mov	r3, r1
 800c004:	70fb      	strb	r3, [r7, #3]
 800c006:	6878      	ldr	r0, [r7, #4]
 800c008:	f000 f836 	bl	800c078 <USBH_GetFreePipe>
 800c00c:	4603      	mov	r3, r0
 800c00e:	81fb      	strh	r3, [r7, #14]
 800c010:	89fb      	ldrh	r3, [r7, #14]
 800c012:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c016:	4293      	cmp	r3, r2
 800c018:	d00a      	beq.n	800c030 <USBH_AllocPipe+0x36>
 800c01a:	78fa      	ldrb	r2, [r7, #3]
 800c01c:	89fb      	ldrh	r3, [r7, #14]
 800c01e:	f003 030f 	and.w	r3, r3, #15
 800c022:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c026:	6879      	ldr	r1, [r7, #4]
 800c028:	33e0      	adds	r3, #224	@ 0xe0
 800c02a:	009b      	lsls	r3, r3, #2
 800c02c:	440b      	add	r3, r1
 800c02e:	605a      	str	r2, [r3, #4]
 800c030:	89fb      	ldrh	r3, [r7, #14]
 800c032:	b2db      	uxtb	r3, r3
 800c034:	4618      	mov	r0, r3
 800c036:	3710      	adds	r7, #16
 800c038:	46bd      	mov	sp, r7
 800c03a:	bd80      	pop	{r7, pc}

0800c03c <USBH_FreePipe>:
 800c03c:	b480      	push	{r7}
 800c03e:	b083      	sub	sp, #12
 800c040:	af00      	add	r7, sp, #0
 800c042:	6078      	str	r0, [r7, #4]
 800c044:	460b      	mov	r3, r1
 800c046:	70fb      	strb	r3, [r7, #3]
 800c048:	78fb      	ldrb	r3, [r7, #3]
 800c04a:	2b0f      	cmp	r3, #15
 800c04c:	d80d      	bhi.n	800c06a <USBH_FreePipe+0x2e>
 800c04e:	78fb      	ldrb	r3, [r7, #3]
 800c050:	687a      	ldr	r2, [r7, #4]
 800c052:	33e0      	adds	r3, #224	@ 0xe0
 800c054:	009b      	lsls	r3, r3, #2
 800c056:	4413      	add	r3, r2
 800c058:	685a      	ldr	r2, [r3, #4]
 800c05a:	78fb      	ldrb	r3, [r7, #3]
 800c05c:	f3c2 020e 	ubfx	r2, r2, #0, #15
 800c060:	6879      	ldr	r1, [r7, #4]
 800c062:	33e0      	adds	r3, #224	@ 0xe0
 800c064:	009b      	lsls	r3, r3, #2
 800c066:	440b      	add	r3, r1
 800c068:	605a      	str	r2, [r3, #4]
 800c06a:	2300      	movs	r3, #0
 800c06c:	4618      	mov	r0, r3
 800c06e:	370c      	adds	r7, #12
 800c070:	46bd      	mov	sp, r7
 800c072:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c076:	4770      	bx	lr

0800c078 <USBH_GetFreePipe>:
 800c078:	b480      	push	{r7}
 800c07a:	b085      	sub	sp, #20
 800c07c:	af00      	add	r7, sp, #0
 800c07e:	6078      	str	r0, [r7, #4]
 800c080:	2300      	movs	r3, #0
 800c082:	73fb      	strb	r3, [r7, #15]
 800c084:	2300      	movs	r3, #0
 800c086:	73fb      	strb	r3, [r7, #15]
 800c088:	e00f      	b.n	800c0aa <USBH_GetFreePipe+0x32>
 800c08a:	7bfb      	ldrb	r3, [r7, #15]
 800c08c:	687a      	ldr	r2, [r7, #4]
 800c08e:	33e0      	adds	r3, #224	@ 0xe0
 800c090:	009b      	lsls	r3, r3, #2
 800c092:	4413      	add	r3, r2
 800c094:	685b      	ldr	r3, [r3, #4]
 800c096:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800c09a:	2b00      	cmp	r3, #0
 800c09c:	d102      	bne.n	800c0a4 <USBH_GetFreePipe+0x2c>
 800c09e:	7bfb      	ldrb	r3, [r7, #15]
 800c0a0:	b29b      	uxth	r3, r3
 800c0a2:	e007      	b.n	800c0b4 <USBH_GetFreePipe+0x3c>
 800c0a4:	7bfb      	ldrb	r3, [r7, #15]
 800c0a6:	3301      	adds	r3, #1
 800c0a8:	73fb      	strb	r3, [r7, #15]
 800c0aa:	7bfb      	ldrb	r3, [r7, #15]
 800c0ac:	2b0f      	cmp	r3, #15
 800c0ae:	d9ec      	bls.n	800c08a <USBH_GetFreePipe+0x12>
 800c0b0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c0b4:	4618      	mov	r0, r3
 800c0b6:	3714      	adds	r7, #20
 800c0b8:	46bd      	mov	sp, r7
 800c0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0be:	4770      	bx	lr

0800c0c0 <__NVIC_SetPriority>:
 800c0c0:	b480      	push	{r7}
 800c0c2:	b083      	sub	sp, #12
 800c0c4:	af00      	add	r7, sp, #0
 800c0c6:	4603      	mov	r3, r0
 800c0c8:	6039      	str	r1, [r7, #0]
 800c0ca:	71fb      	strb	r3, [r7, #7]
 800c0cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c0d0:	2b00      	cmp	r3, #0
 800c0d2:	db0a      	blt.n	800c0ea <__NVIC_SetPriority+0x2a>
 800c0d4:	683b      	ldr	r3, [r7, #0]
 800c0d6:	b2da      	uxtb	r2, r3
 800c0d8:	490c      	ldr	r1, [pc, #48]	@ (800c10c <__NVIC_SetPriority+0x4c>)
 800c0da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c0de:	0112      	lsls	r2, r2, #4
 800c0e0:	b2d2      	uxtb	r2, r2
 800c0e2:	440b      	add	r3, r1
 800c0e4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800c0e8:	e00a      	b.n	800c100 <__NVIC_SetPriority+0x40>
 800c0ea:	683b      	ldr	r3, [r7, #0]
 800c0ec:	b2da      	uxtb	r2, r3
 800c0ee:	4908      	ldr	r1, [pc, #32]	@ (800c110 <__NVIC_SetPriority+0x50>)
 800c0f0:	79fb      	ldrb	r3, [r7, #7]
 800c0f2:	f003 030f 	and.w	r3, r3, #15
 800c0f6:	3b04      	subs	r3, #4
 800c0f8:	0112      	lsls	r2, r2, #4
 800c0fa:	b2d2      	uxtb	r2, r2
 800c0fc:	440b      	add	r3, r1
 800c0fe:	761a      	strb	r2, [r3, #24]
 800c100:	bf00      	nop
 800c102:	370c      	adds	r7, #12
 800c104:	46bd      	mov	sp, r7
 800c106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c10a:	4770      	bx	lr
 800c10c:	e000e100 	.word	0xe000e100
 800c110:	e000ed00 	.word	0xe000ed00

0800c114 <SysTick_Handler>:
 800c114:	b580      	push	{r7, lr}
 800c116:	af00      	add	r7, sp, #0
 800c118:	4b05      	ldr	r3, [pc, #20]	@ (800c130 <SysTick_Handler+0x1c>)
 800c11a:	681b      	ldr	r3, [r3, #0]
 800c11c:	f002 ff1e 	bl	800ef5c <xTaskGetSchedulerState>
 800c120:	4603      	mov	r3, r0
 800c122:	2b01      	cmp	r3, #1
 800c124:	d001      	beq.n	800c12a <SysTick_Handler+0x16>
 800c126:	f004 f817 	bl	8010158 <xPortSysTickHandler>
 800c12a:	bf00      	nop
 800c12c:	bd80      	pop	{r7, pc}
 800c12e:	bf00      	nop
 800c130:	e000e010 	.word	0xe000e010

0800c134 <SVC_Setup>:
 800c134:	b580      	push	{r7, lr}
 800c136:	af00      	add	r7, sp, #0
 800c138:	2100      	movs	r1, #0
 800c13a:	f06f 0004 	mvn.w	r0, #4
 800c13e:	f7ff ffbf 	bl	800c0c0 <__NVIC_SetPriority>
 800c142:	bf00      	nop
 800c144:	bd80      	pop	{r7, pc}
	...

0800c148 <osKernelInitialize>:
 800c148:	b480      	push	{r7}
 800c14a:	b083      	sub	sp, #12
 800c14c:	af00      	add	r7, sp, #0
 800c14e:	f3ef 8305 	mrs	r3, IPSR
 800c152:	603b      	str	r3, [r7, #0]
 800c154:	683b      	ldr	r3, [r7, #0]
 800c156:	2b00      	cmp	r3, #0
 800c158:	d003      	beq.n	800c162 <osKernelInitialize+0x1a>
 800c15a:	f06f 0305 	mvn.w	r3, #5
 800c15e:	607b      	str	r3, [r7, #4]
 800c160:	e00c      	b.n	800c17c <osKernelInitialize+0x34>
 800c162:	4b0a      	ldr	r3, [pc, #40]	@ (800c18c <osKernelInitialize+0x44>)
 800c164:	681b      	ldr	r3, [r3, #0]
 800c166:	2b00      	cmp	r3, #0
 800c168:	d105      	bne.n	800c176 <osKernelInitialize+0x2e>
 800c16a:	4b08      	ldr	r3, [pc, #32]	@ (800c18c <osKernelInitialize+0x44>)
 800c16c:	2201      	movs	r2, #1
 800c16e:	601a      	str	r2, [r3, #0]
 800c170:	2300      	movs	r3, #0
 800c172:	607b      	str	r3, [r7, #4]
 800c174:	e002      	b.n	800c17c <osKernelInitialize+0x34>
 800c176:	f04f 33ff 	mov.w	r3, #4294967295
 800c17a:	607b      	str	r3, [r7, #4]
 800c17c:	687b      	ldr	r3, [r7, #4]
 800c17e:	4618      	mov	r0, r3
 800c180:	370c      	adds	r7, #12
 800c182:	46bd      	mov	sp, r7
 800c184:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c188:	4770      	bx	lr
 800c18a:	bf00      	nop
 800c18c:	200007e0 	.word	0x200007e0

0800c190 <osKernelGetInfo>:
 800c190:	b580      	push	{r7, lr}
 800c192:	b084      	sub	sp, #16
 800c194:	af00      	add	r7, sp, #0
 800c196:	60f8      	str	r0, [r7, #12]
 800c198:	60b9      	str	r1, [r7, #8]
 800c19a:	607a      	str	r2, [r7, #4]
 800c19c:	68fb      	ldr	r3, [r7, #12]
 800c19e:	2b00      	cmp	r3, #0
 800c1a0:	d005      	beq.n	800c1ae <osKernelGetInfo+0x1e>
 800c1a2:	68fb      	ldr	r3, [r7, #12]
 800c1a4:	4a0c      	ldr	r2, [pc, #48]	@ (800c1d8 <osKernelGetInfo+0x48>)
 800c1a6:	601a      	str	r2, [r3, #0]
 800c1a8:	68fb      	ldr	r3, [r7, #12]
 800c1aa:	4a0b      	ldr	r2, [pc, #44]	@ (800c1d8 <osKernelGetInfo+0x48>)
 800c1ac:	605a      	str	r2, [r3, #4]
 800c1ae:	68bb      	ldr	r3, [r7, #8]
 800c1b0:	2b00      	cmp	r3, #0
 800c1b2:	d00c      	beq.n	800c1ce <osKernelGetInfo+0x3e>
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d009      	beq.n	800c1ce <osKernelGetInfo+0x3e>
 800c1ba:	687b      	ldr	r3, [r7, #4]
 800c1bc:	2b11      	cmp	r3, #17
 800c1be:	d901      	bls.n	800c1c4 <osKernelGetInfo+0x34>
 800c1c0:	2311      	movs	r3, #17
 800c1c2:	607b      	str	r3, [r7, #4]
 800c1c4:	687a      	ldr	r2, [r7, #4]
 800c1c6:	4905      	ldr	r1, [pc, #20]	@ (800c1dc <osKernelGetInfo+0x4c>)
 800c1c8:	68b8      	ldr	r0, [r7, #8]
 800c1ca:	f006 fbde 	bl	801298a <memcpy>
 800c1ce:	2300      	movs	r3, #0
 800c1d0:	4618      	mov	r0, r3
 800c1d2:	3710      	adds	r7, #16
 800c1d4:	46bd      	mov	sp, r7
 800c1d6:	bd80      	pop	{r7, pc}
 800c1d8:	05f5f531 	.word	0x05f5f531
 800c1dc:	08015d08 	.word	0x08015d08

0800c1e0 <osKernelStart>:
 800c1e0:	b580      	push	{r7, lr}
 800c1e2:	b082      	sub	sp, #8
 800c1e4:	af00      	add	r7, sp, #0
 800c1e6:	f3ef 8305 	mrs	r3, IPSR
 800c1ea:	603b      	str	r3, [r7, #0]
 800c1ec:	683b      	ldr	r3, [r7, #0]
 800c1ee:	2b00      	cmp	r3, #0
 800c1f0:	d003      	beq.n	800c1fa <osKernelStart+0x1a>
 800c1f2:	f06f 0305 	mvn.w	r3, #5
 800c1f6:	607b      	str	r3, [r7, #4]
 800c1f8:	e010      	b.n	800c21c <osKernelStart+0x3c>
 800c1fa:	4b0b      	ldr	r3, [pc, #44]	@ (800c228 <osKernelStart+0x48>)
 800c1fc:	681b      	ldr	r3, [r3, #0]
 800c1fe:	2b01      	cmp	r3, #1
 800c200:	d109      	bne.n	800c216 <osKernelStart+0x36>
 800c202:	f7ff ff97 	bl	800c134 <SVC_Setup>
 800c206:	4b08      	ldr	r3, [pc, #32]	@ (800c228 <osKernelStart+0x48>)
 800c208:	2202      	movs	r2, #2
 800c20a:	601a      	str	r2, [r3, #0]
 800c20c:	f002 f82e 	bl	800e26c <vTaskStartScheduler>
 800c210:	2300      	movs	r3, #0
 800c212:	607b      	str	r3, [r7, #4]
 800c214:	e002      	b.n	800c21c <osKernelStart+0x3c>
 800c216:	f04f 33ff 	mov.w	r3, #4294967295
 800c21a:	607b      	str	r3, [r7, #4]
 800c21c:	687b      	ldr	r3, [r7, #4]
 800c21e:	4618      	mov	r0, r3
 800c220:	3708      	adds	r7, #8
 800c222:	46bd      	mov	sp, r7
 800c224:	bd80      	pop	{r7, pc}
 800c226:	bf00      	nop
 800c228:	200007e0 	.word	0x200007e0

0800c22c <osKernelGetTickFreq>:
 800c22c:	b480      	push	{r7}
 800c22e:	af00      	add	r7, sp, #0
 800c230:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800c234:	4618      	mov	r0, r3
 800c236:	46bd      	mov	sp, r7
 800c238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c23c:	4770      	bx	lr
	...

0800c240 <osKernelGetSysTimerFreq>:
 800c240:	b480      	push	{r7}
 800c242:	af00      	add	r7, sp, #0
 800c244:	4b03      	ldr	r3, [pc, #12]	@ (800c254 <osKernelGetSysTimerFreq+0x14>)
 800c246:	681b      	ldr	r3, [r3, #0]
 800c248:	4618      	mov	r0, r3
 800c24a:	46bd      	mov	sp, r7
 800c24c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c250:	4770      	bx	lr
 800c252:	bf00      	nop
 800c254:	2000025c 	.word	0x2000025c

0800c258 <osThreadNew>:
 800c258:	b580      	push	{r7, lr}
 800c25a:	b08e      	sub	sp, #56	@ 0x38
 800c25c:	af04      	add	r7, sp, #16
 800c25e:	60f8      	str	r0, [r7, #12]
 800c260:	60b9      	str	r1, [r7, #8]
 800c262:	607a      	str	r2, [r7, #4]
 800c264:	2300      	movs	r3, #0
 800c266:	613b      	str	r3, [r7, #16]
 800c268:	f3ef 8305 	mrs	r3, IPSR
 800c26c:	617b      	str	r3, [r7, #20]
 800c26e:	697b      	ldr	r3, [r7, #20]
 800c270:	2b00      	cmp	r3, #0
 800c272:	d17e      	bne.n	800c372 <osThreadNew+0x11a>
 800c274:	68fb      	ldr	r3, [r7, #12]
 800c276:	2b00      	cmp	r3, #0
 800c278:	d07b      	beq.n	800c372 <osThreadNew+0x11a>
 800c27a:	2380      	movs	r3, #128	@ 0x80
 800c27c:	623b      	str	r3, [r7, #32]
 800c27e:	2318      	movs	r3, #24
 800c280:	61fb      	str	r3, [r7, #28]
 800c282:	2300      	movs	r3, #0
 800c284:	627b      	str	r3, [r7, #36]	@ 0x24
 800c286:	f04f 33ff 	mov.w	r3, #4294967295
 800c28a:	61bb      	str	r3, [r7, #24]
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	2b00      	cmp	r3, #0
 800c290:	d045      	beq.n	800c31e <osThreadNew+0xc6>
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	681b      	ldr	r3, [r3, #0]
 800c296:	2b00      	cmp	r3, #0
 800c298:	d002      	beq.n	800c2a0 <osThreadNew+0x48>
 800c29a:	687b      	ldr	r3, [r7, #4]
 800c29c:	681b      	ldr	r3, [r3, #0]
 800c29e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	699b      	ldr	r3, [r3, #24]
 800c2a4:	2b00      	cmp	r3, #0
 800c2a6:	d002      	beq.n	800c2ae <osThreadNew+0x56>
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	699b      	ldr	r3, [r3, #24]
 800c2ac:	61fb      	str	r3, [r7, #28]
 800c2ae:	69fb      	ldr	r3, [r7, #28]
 800c2b0:	2b00      	cmp	r3, #0
 800c2b2:	d008      	beq.n	800c2c6 <osThreadNew+0x6e>
 800c2b4:	69fb      	ldr	r3, [r7, #28]
 800c2b6:	2b38      	cmp	r3, #56	@ 0x38
 800c2b8:	d805      	bhi.n	800c2c6 <osThreadNew+0x6e>
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	685b      	ldr	r3, [r3, #4]
 800c2be:	f003 0301 	and.w	r3, r3, #1
 800c2c2:	2b00      	cmp	r3, #0
 800c2c4:	d001      	beq.n	800c2ca <osThreadNew+0x72>
 800c2c6:	2300      	movs	r3, #0
 800c2c8:	e054      	b.n	800c374 <osThreadNew+0x11c>
 800c2ca:	687b      	ldr	r3, [r7, #4]
 800c2cc:	695b      	ldr	r3, [r3, #20]
 800c2ce:	2b00      	cmp	r3, #0
 800c2d0:	d003      	beq.n	800c2da <osThreadNew+0x82>
 800c2d2:	687b      	ldr	r3, [r7, #4]
 800c2d4:	695b      	ldr	r3, [r3, #20]
 800c2d6:	089b      	lsrs	r3, r3, #2
 800c2d8:	623b      	str	r3, [r7, #32]
 800c2da:	687b      	ldr	r3, [r7, #4]
 800c2dc:	689b      	ldr	r3, [r3, #8]
 800c2de:	2b00      	cmp	r3, #0
 800c2e0:	d00e      	beq.n	800c300 <osThreadNew+0xa8>
 800c2e2:	687b      	ldr	r3, [r7, #4]
 800c2e4:	68db      	ldr	r3, [r3, #12]
 800c2e6:	2ba7      	cmp	r3, #167	@ 0xa7
 800c2e8:	d90a      	bls.n	800c300 <osThreadNew+0xa8>
 800c2ea:	687b      	ldr	r3, [r7, #4]
 800c2ec:	691b      	ldr	r3, [r3, #16]
 800c2ee:	2b00      	cmp	r3, #0
 800c2f0:	d006      	beq.n	800c300 <osThreadNew+0xa8>
 800c2f2:	687b      	ldr	r3, [r7, #4]
 800c2f4:	695b      	ldr	r3, [r3, #20]
 800c2f6:	2b00      	cmp	r3, #0
 800c2f8:	d002      	beq.n	800c300 <osThreadNew+0xa8>
 800c2fa:	2301      	movs	r3, #1
 800c2fc:	61bb      	str	r3, [r7, #24]
 800c2fe:	e010      	b.n	800c322 <osThreadNew+0xca>
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	689b      	ldr	r3, [r3, #8]
 800c304:	2b00      	cmp	r3, #0
 800c306:	d10c      	bne.n	800c322 <osThreadNew+0xca>
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	68db      	ldr	r3, [r3, #12]
 800c30c:	2b00      	cmp	r3, #0
 800c30e:	d108      	bne.n	800c322 <osThreadNew+0xca>
 800c310:	687b      	ldr	r3, [r7, #4]
 800c312:	691b      	ldr	r3, [r3, #16]
 800c314:	2b00      	cmp	r3, #0
 800c316:	d104      	bne.n	800c322 <osThreadNew+0xca>
 800c318:	2300      	movs	r3, #0
 800c31a:	61bb      	str	r3, [r7, #24]
 800c31c:	e001      	b.n	800c322 <osThreadNew+0xca>
 800c31e:	2300      	movs	r3, #0
 800c320:	61bb      	str	r3, [r7, #24]
 800c322:	69bb      	ldr	r3, [r7, #24]
 800c324:	2b01      	cmp	r3, #1
 800c326:	d110      	bne.n	800c34a <osThreadNew+0xf2>
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	691b      	ldr	r3, [r3, #16]
 800c32c:	687a      	ldr	r2, [r7, #4]
 800c32e:	6892      	ldr	r2, [r2, #8]
 800c330:	9202      	str	r2, [sp, #8]
 800c332:	9301      	str	r3, [sp, #4]
 800c334:	69fb      	ldr	r3, [r7, #28]
 800c336:	9300      	str	r3, [sp, #0]
 800c338:	68bb      	ldr	r3, [r7, #8]
 800c33a:	6a3a      	ldr	r2, [r7, #32]
 800c33c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800c33e:	68f8      	ldr	r0, [r7, #12]
 800c340:	f001 fb1e 	bl	800d980 <xTaskCreateStatic>
 800c344:	4603      	mov	r3, r0
 800c346:	613b      	str	r3, [r7, #16]
 800c348:	e013      	b.n	800c372 <osThreadNew+0x11a>
 800c34a:	69bb      	ldr	r3, [r7, #24]
 800c34c:	2b00      	cmp	r3, #0
 800c34e:	d110      	bne.n	800c372 <osThreadNew+0x11a>
 800c350:	6a3b      	ldr	r3, [r7, #32]
 800c352:	b29a      	uxth	r2, r3
 800c354:	f107 0310 	add.w	r3, r7, #16
 800c358:	9301      	str	r3, [sp, #4]
 800c35a:	69fb      	ldr	r3, [r7, #28]
 800c35c:	9300      	str	r3, [sp, #0]
 800c35e:	68bb      	ldr	r3, [r7, #8]
 800c360:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800c362:	68f8      	ldr	r0, [r7, #12]
 800c364:	f001 fb6c 	bl	800da40 <xTaskCreate>
 800c368:	4603      	mov	r3, r0
 800c36a:	2b01      	cmp	r3, #1
 800c36c:	d001      	beq.n	800c372 <osThreadNew+0x11a>
 800c36e:	2300      	movs	r3, #0
 800c370:	613b      	str	r3, [r7, #16]
 800c372:	693b      	ldr	r3, [r7, #16]
 800c374:	4618      	mov	r0, r3
 800c376:	3728      	adds	r7, #40	@ 0x28
 800c378:	46bd      	mov	sp, r7
 800c37a:	bd80      	pop	{r7, pc}

0800c37c <osDelay>:
 800c37c:	b580      	push	{r7, lr}
 800c37e:	b084      	sub	sp, #16
 800c380:	af00      	add	r7, sp, #0
 800c382:	6078      	str	r0, [r7, #4]
 800c384:	f3ef 8305 	mrs	r3, IPSR
 800c388:	60bb      	str	r3, [r7, #8]
 800c38a:	68bb      	ldr	r3, [r7, #8]
 800c38c:	2b00      	cmp	r3, #0
 800c38e:	d003      	beq.n	800c398 <osDelay+0x1c>
 800c390:	f06f 0305 	mvn.w	r3, #5
 800c394:	60fb      	str	r3, [r7, #12]
 800c396:	e007      	b.n	800c3a8 <osDelay+0x2c>
 800c398:	2300      	movs	r3, #0
 800c39a:	60fb      	str	r3, [r7, #12]
 800c39c:	687b      	ldr	r3, [r7, #4]
 800c39e:	2b00      	cmp	r3, #0
 800c3a0:	d002      	beq.n	800c3a8 <osDelay+0x2c>
 800c3a2:	6878      	ldr	r0, [r7, #4]
 800c3a4:	f001 fd1e 	bl	800dde4 <vTaskDelay>
 800c3a8:	68fb      	ldr	r3, [r7, #12]
 800c3aa:	4618      	mov	r0, r3
 800c3ac:	3710      	adds	r7, #16
 800c3ae:	46bd      	mov	sp, r7
 800c3b0:	bd80      	pop	{r7, pc}

0800c3b2 <osMessageQueueNew>:
 800c3b2:	b580      	push	{r7, lr}
 800c3b4:	b08a      	sub	sp, #40	@ 0x28
 800c3b6:	af02      	add	r7, sp, #8
 800c3b8:	60f8      	str	r0, [r7, #12]
 800c3ba:	60b9      	str	r1, [r7, #8]
 800c3bc:	607a      	str	r2, [r7, #4]
 800c3be:	2300      	movs	r3, #0
 800c3c0:	61fb      	str	r3, [r7, #28]
 800c3c2:	f3ef 8305 	mrs	r3, IPSR
 800c3c6:	613b      	str	r3, [r7, #16]
 800c3c8:	693b      	ldr	r3, [r7, #16]
 800c3ca:	2b00      	cmp	r3, #0
 800c3cc:	d15f      	bne.n	800c48e <osMessageQueueNew+0xdc>
 800c3ce:	68fb      	ldr	r3, [r7, #12]
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d05c      	beq.n	800c48e <osMessageQueueNew+0xdc>
 800c3d4:	68bb      	ldr	r3, [r7, #8]
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	d059      	beq.n	800c48e <osMessageQueueNew+0xdc>
 800c3da:	f04f 33ff 	mov.w	r3, #4294967295
 800c3de:	61bb      	str	r3, [r7, #24]
 800c3e0:	687b      	ldr	r3, [r7, #4]
 800c3e2:	2b00      	cmp	r3, #0
 800c3e4:	d029      	beq.n	800c43a <osMessageQueueNew+0x88>
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	689b      	ldr	r3, [r3, #8]
 800c3ea:	2b00      	cmp	r3, #0
 800c3ec:	d012      	beq.n	800c414 <osMessageQueueNew+0x62>
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	68db      	ldr	r3, [r3, #12]
 800c3f2:	2b4f      	cmp	r3, #79	@ 0x4f
 800c3f4:	d90e      	bls.n	800c414 <osMessageQueueNew+0x62>
 800c3f6:	687b      	ldr	r3, [r7, #4]
 800c3f8:	691b      	ldr	r3, [r3, #16]
 800c3fa:	2b00      	cmp	r3, #0
 800c3fc:	d00a      	beq.n	800c414 <osMessageQueueNew+0x62>
 800c3fe:	687b      	ldr	r3, [r7, #4]
 800c400:	695a      	ldr	r2, [r3, #20]
 800c402:	68fb      	ldr	r3, [r7, #12]
 800c404:	68b9      	ldr	r1, [r7, #8]
 800c406:	fb01 f303 	mul.w	r3, r1, r3
 800c40a:	429a      	cmp	r2, r3
 800c40c:	d302      	bcc.n	800c414 <osMessageQueueNew+0x62>
 800c40e:	2301      	movs	r3, #1
 800c410:	61bb      	str	r3, [r7, #24]
 800c412:	e014      	b.n	800c43e <osMessageQueueNew+0x8c>
 800c414:	687b      	ldr	r3, [r7, #4]
 800c416:	689b      	ldr	r3, [r3, #8]
 800c418:	2b00      	cmp	r3, #0
 800c41a:	d110      	bne.n	800c43e <osMessageQueueNew+0x8c>
 800c41c:	687b      	ldr	r3, [r7, #4]
 800c41e:	68db      	ldr	r3, [r3, #12]
 800c420:	2b00      	cmp	r3, #0
 800c422:	d10c      	bne.n	800c43e <osMessageQueueNew+0x8c>
 800c424:	687b      	ldr	r3, [r7, #4]
 800c426:	691b      	ldr	r3, [r3, #16]
 800c428:	2b00      	cmp	r3, #0
 800c42a:	d108      	bne.n	800c43e <osMessageQueueNew+0x8c>
 800c42c:	687b      	ldr	r3, [r7, #4]
 800c42e:	695b      	ldr	r3, [r3, #20]
 800c430:	2b00      	cmp	r3, #0
 800c432:	d104      	bne.n	800c43e <osMessageQueueNew+0x8c>
 800c434:	2300      	movs	r3, #0
 800c436:	61bb      	str	r3, [r7, #24]
 800c438:	e001      	b.n	800c43e <osMessageQueueNew+0x8c>
 800c43a:	2300      	movs	r3, #0
 800c43c:	61bb      	str	r3, [r7, #24]
 800c43e:	69bb      	ldr	r3, [r7, #24]
 800c440:	2b01      	cmp	r3, #1
 800c442:	d10b      	bne.n	800c45c <osMessageQueueNew+0xaa>
 800c444:	687b      	ldr	r3, [r7, #4]
 800c446:	691a      	ldr	r2, [r3, #16]
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	689b      	ldr	r3, [r3, #8]
 800c44c:	2100      	movs	r1, #0
 800c44e:	9100      	str	r1, [sp, #0]
 800c450:	68b9      	ldr	r1, [r7, #8]
 800c452:	68f8      	ldr	r0, [r7, #12]
 800c454:	f000 fbec 	bl	800cc30 <xQueueGenericCreateStatic>
 800c458:	61f8      	str	r0, [r7, #28]
 800c45a:	e008      	b.n	800c46e <osMessageQueueNew+0xbc>
 800c45c:	69bb      	ldr	r3, [r7, #24]
 800c45e:	2b00      	cmp	r3, #0
 800c460:	d105      	bne.n	800c46e <osMessageQueueNew+0xbc>
 800c462:	2200      	movs	r2, #0
 800c464:	68b9      	ldr	r1, [r7, #8]
 800c466:	68f8      	ldr	r0, [r7, #12]
 800c468:	f000 fc5f 	bl	800cd2a <xQueueGenericCreate>
 800c46c:	61f8      	str	r0, [r7, #28]
 800c46e:	69fb      	ldr	r3, [r7, #28]
 800c470:	2b00      	cmp	r3, #0
 800c472:	d00c      	beq.n	800c48e <osMessageQueueNew+0xdc>
 800c474:	687b      	ldr	r3, [r7, #4]
 800c476:	2b00      	cmp	r3, #0
 800c478:	d003      	beq.n	800c482 <osMessageQueueNew+0xd0>
 800c47a:	687b      	ldr	r3, [r7, #4]
 800c47c:	681b      	ldr	r3, [r3, #0]
 800c47e:	617b      	str	r3, [r7, #20]
 800c480:	e001      	b.n	800c486 <osMessageQueueNew+0xd4>
 800c482:	2300      	movs	r3, #0
 800c484:	617b      	str	r3, [r7, #20]
 800c486:	6979      	ldr	r1, [r7, #20]
 800c488:	69f8      	ldr	r0, [r7, #28]
 800c48a:	f001 fa1b 	bl	800d8c4 <vQueueAddToRegistry>
 800c48e:	69fb      	ldr	r3, [r7, #28]
 800c490:	4618      	mov	r0, r3
 800c492:	3720      	adds	r7, #32
 800c494:	46bd      	mov	sp, r7
 800c496:	bd80      	pop	{r7, pc}

0800c498 <osMessageQueuePut>:
 800c498:	b580      	push	{r7, lr}
 800c49a:	b088      	sub	sp, #32
 800c49c:	af00      	add	r7, sp, #0
 800c49e:	60f8      	str	r0, [r7, #12]
 800c4a0:	60b9      	str	r1, [r7, #8]
 800c4a2:	603b      	str	r3, [r7, #0]
 800c4a4:	4613      	mov	r3, r2
 800c4a6:	71fb      	strb	r3, [r7, #7]
 800c4a8:	68fb      	ldr	r3, [r7, #12]
 800c4aa:	61bb      	str	r3, [r7, #24]
 800c4ac:	2300      	movs	r3, #0
 800c4ae:	61fb      	str	r3, [r7, #28]
 800c4b0:	f3ef 8305 	mrs	r3, IPSR
 800c4b4:	617b      	str	r3, [r7, #20]
 800c4b6:	697b      	ldr	r3, [r7, #20]
 800c4b8:	2b00      	cmp	r3, #0
 800c4ba:	d028      	beq.n	800c50e <osMessageQueuePut+0x76>
 800c4bc:	69bb      	ldr	r3, [r7, #24]
 800c4be:	2b00      	cmp	r3, #0
 800c4c0:	d005      	beq.n	800c4ce <osMessageQueuePut+0x36>
 800c4c2:	68bb      	ldr	r3, [r7, #8]
 800c4c4:	2b00      	cmp	r3, #0
 800c4c6:	d002      	beq.n	800c4ce <osMessageQueuePut+0x36>
 800c4c8:	683b      	ldr	r3, [r7, #0]
 800c4ca:	2b00      	cmp	r3, #0
 800c4cc:	d003      	beq.n	800c4d6 <osMessageQueuePut+0x3e>
 800c4ce:	f06f 0303 	mvn.w	r3, #3
 800c4d2:	61fb      	str	r3, [r7, #28]
 800c4d4:	e038      	b.n	800c548 <osMessageQueuePut+0xb0>
 800c4d6:	2300      	movs	r3, #0
 800c4d8:	613b      	str	r3, [r7, #16]
 800c4da:	f107 0210 	add.w	r2, r7, #16
 800c4de:	2300      	movs	r3, #0
 800c4e0:	68b9      	ldr	r1, [r7, #8]
 800c4e2:	69b8      	ldr	r0, [r7, #24]
 800c4e4:	f000 fdb4 	bl	800d050 <xQueueGenericSendFromISR>
 800c4e8:	4603      	mov	r3, r0
 800c4ea:	2b01      	cmp	r3, #1
 800c4ec:	d003      	beq.n	800c4f6 <osMessageQueuePut+0x5e>
 800c4ee:	f06f 0302 	mvn.w	r3, #2
 800c4f2:	61fb      	str	r3, [r7, #28]
 800c4f4:	e028      	b.n	800c548 <osMessageQueuePut+0xb0>
 800c4f6:	693b      	ldr	r3, [r7, #16]
 800c4f8:	2b00      	cmp	r3, #0
 800c4fa:	d025      	beq.n	800c548 <osMessageQueuePut+0xb0>
 800c4fc:	4b15      	ldr	r3, [pc, #84]	@ (800c554 <osMessageQueuePut+0xbc>)
 800c4fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c502:	601a      	str	r2, [r3, #0]
 800c504:	f3bf 8f4f 	dsb	sy
 800c508:	f3bf 8f6f 	isb	sy
 800c50c:	e01c      	b.n	800c548 <osMessageQueuePut+0xb0>
 800c50e:	69bb      	ldr	r3, [r7, #24]
 800c510:	2b00      	cmp	r3, #0
 800c512:	d002      	beq.n	800c51a <osMessageQueuePut+0x82>
 800c514:	68bb      	ldr	r3, [r7, #8]
 800c516:	2b00      	cmp	r3, #0
 800c518:	d103      	bne.n	800c522 <osMessageQueuePut+0x8a>
 800c51a:	f06f 0303 	mvn.w	r3, #3
 800c51e:	61fb      	str	r3, [r7, #28]
 800c520:	e012      	b.n	800c548 <osMessageQueuePut+0xb0>
 800c522:	2300      	movs	r3, #0
 800c524:	683a      	ldr	r2, [r7, #0]
 800c526:	68b9      	ldr	r1, [r7, #8]
 800c528:	69b8      	ldr	r0, [r7, #24]
 800c52a:	f000 fc8f 	bl	800ce4c <xQueueGenericSend>
 800c52e:	4603      	mov	r3, r0
 800c530:	2b01      	cmp	r3, #1
 800c532:	d009      	beq.n	800c548 <osMessageQueuePut+0xb0>
 800c534:	683b      	ldr	r3, [r7, #0]
 800c536:	2b00      	cmp	r3, #0
 800c538:	d003      	beq.n	800c542 <osMessageQueuePut+0xaa>
 800c53a:	f06f 0301 	mvn.w	r3, #1
 800c53e:	61fb      	str	r3, [r7, #28]
 800c540:	e002      	b.n	800c548 <osMessageQueuePut+0xb0>
 800c542:	f06f 0302 	mvn.w	r3, #2
 800c546:	61fb      	str	r3, [r7, #28]
 800c548:	69fb      	ldr	r3, [r7, #28]
 800c54a:	4618      	mov	r0, r3
 800c54c:	3720      	adds	r7, #32
 800c54e:	46bd      	mov	sp, r7
 800c550:	bd80      	pop	{r7, pc}
 800c552:	bf00      	nop
 800c554:	e000ed04 	.word	0xe000ed04

0800c558 <osMessageQueueGet>:
 800c558:	b580      	push	{r7, lr}
 800c55a:	b088      	sub	sp, #32
 800c55c:	af00      	add	r7, sp, #0
 800c55e:	60f8      	str	r0, [r7, #12]
 800c560:	60b9      	str	r1, [r7, #8]
 800c562:	607a      	str	r2, [r7, #4]
 800c564:	603b      	str	r3, [r7, #0]
 800c566:	68fb      	ldr	r3, [r7, #12]
 800c568:	61bb      	str	r3, [r7, #24]
 800c56a:	2300      	movs	r3, #0
 800c56c:	61fb      	str	r3, [r7, #28]
 800c56e:	f3ef 8305 	mrs	r3, IPSR
 800c572:	617b      	str	r3, [r7, #20]
 800c574:	697b      	ldr	r3, [r7, #20]
 800c576:	2b00      	cmp	r3, #0
 800c578:	d028      	beq.n	800c5cc <osMessageQueueGet+0x74>
 800c57a:	69bb      	ldr	r3, [r7, #24]
 800c57c:	2b00      	cmp	r3, #0
 800c57e:	d005      	beq.n	800c58c <osMessageQueueGet+0x34>
 800c580:	68bb      	ldr	r3, [r7, #8]
 800c582:	2b00      	cmp	r3, #0
 800c584:	d002      	beq.n	800c58c <osMessageQueueGet+0x34>
 800c586:	683b      	ldr	r3, [r7, #0]
 800c588:	2b00      	cmp	r3, #0
 800c58a:	d003      	beq.n	800c594 <osMessageQueueGet+0x3c>
 800c58c:	f06f 0303 	mvn.w	r3, #3
 800c590:	61fb      	str	r3, [r7, #28]
 800c592:	e037      	b.n	800c604 <osMessageQueueGet+0xac>
 800c594:	2300      	movs	r3, #0
 800c596:	613b      	str	r3, [r7, #16]
 800c598:	f107 0310 	add.w	r3, r7, #16
 800c59c:	461a      	mov	r2, r3
 800c59e:	68b9      	ldr	r1, [r7, #8]
 800c5a0:	69b8      	ldr	r0, [r7, #24]
 800c5a2:	f000 ffe5 	bl	800d570 <xQueueReceiveFromISR>
 800c5a6:	4603      	mov	r3, r0
 800c5a8:	2b01      	cmp	r3, #1
 800c5aa:	d003      	beq.n	800c5b4 <osMessageQueueGet+0x5c>
 800c5ac:	f06f 0302 	mvn.w	r3, #2
 800c5b0:	61fb      	str	r3, [r7, #28]
 800c5b2:	e027      	b.n	800c604 <osMessageQueueGet+0xac>
 800c5b4:	693b      	ldr	r3, [r7, #16]
 800c5b6:	2b00      	cmp	r3, #0
 800c5b8:	d024      	beq.n	800c604 <osMessageQueueGet+0xac>
 800c5ba:	4b15      	ldr	r3, [pc, #84]	@ (800c610 <osMessageQueueGet+0xb8>)
 800c5bc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c5c0:	601a      	str	r2, [r3, #0]
 800c5c2:	f3bf 8f4f 	dsb	sy
 800c5c6:	f3bf 8f6f 	isb	sy
 800c5ca:	e01b      	b.n	800c604 <osMessageQueueGet+0xac>
 800c5cc:	69bb      	ldr	r3, [r7, #24]
 800c5ce:	2b00      	cmp	r3, #0
 800c5d0:	d002      	beq.n	800c5d8 <osMessageQueueGet+0x80>
 800c5d2:	68bb      	ldr	r3, [r7, #8]
 800c5d4:	2b00      	cmp	r3, #0
 800c5d6:	d103      	bne.n	800c5e0 <osMessageQueueGet+0x88>
 800c5d8:	f06f 0303 	mvn.w	r3, #3
 800c5dc:	61fb      	str	r3, [r7, #28]
 800c5de:	e011      	b.n	800c604 <osMessageQueueGet+0xac>
 800c5e0:	683a      	ldr	r2, [r7, #0]
 800c5e2:	68b9      	ldr	r1, [r7, #8]
 800c5e4:	69b8      	ldr	r0, [r7, #24]
 800c5e6:	f000 fdd1 	bl	800d18c <xQueueReceive>
 800c5ea:	4603      	mov	r3, r0
 800c5ec:	2b01      	cmp	r3, #1
 800c5ee:	d009      	beq.n	800c604 <osMessageQueueGet+0xac>
 800c5f0:	683b      	ldr	r3, [r7, #0]
 800c5f2:	2b00      	cmp	r3, #0
 800c5f4:	d003      	beq.n	800c5fe <osMessageQueueGet+0xa6>
 800c5f6:	f06f 0301 	mvn.w	r3, #1
 800c5fa:	61fb      	str	r3, [r7, #28]
 800c5fc:	e002      	b.n	800c604 <osMessageQueueGet+0xac>
 800c5fe:	f06f 0302 	mvn.w	r3, #2
 800c602:	61fb      	str	r3, [r7, #28]
 800c604:	69fb      	ldr	r3, [r7, #28]
 800c606:	4618      	mov	r0, r3
 800c608:	3720      	adds	r7, #32
 800c60a:	46bd      	mov	sp, r7
 800c60c:	bd80      	pop	{r7, pc}
 800c60e:	bf00      	nop
 800c610:	e000ed04 	.word	0xe000ed04

0800c614 <vApplicationGetIdleTaskMemory>:
 800c614:	b480      	push	{r7}
 800c616:	b085      	sub	sp, #20
 800c618:	af00      	add	r7, sp, #0
 800c61a:	60f8      	str	r0, [r7, #12]
 800c61c:	60b9      	str	r1, [r7, #8]
 800c61e:	607a      	str	r2, [r7, #4]
 800c620:	68fb      	ldr	r3, [r7, #12]
 800c622:	4a07      	ldr	r2, [pc, #28]	@ (800c640 <vApplicationGetIdleTaskMemory+0x2c>)
 800c624:	601a      	str	r2, [r3, #0]
 800c626:	68bb      	ldr	r3, [r7, #8]
 800c628:	4a06      	ldr	r2, [pc, #24]	@ (800c644 <vApplicationGetIdleTaskMemory+0x30>)
 800c62a:	601a      	str	r2, [r3, #0]
 800c62c:	687b      	ldr	r3, [r7, #4]
 800c62e:	2280      	movs	r2, #128	@ 0x80
 800c630:	601a      	str	r2, [r3, #0]
 800c632:	bf00      	nop
 800c634:	3714      	adds	r7, #20
 800c636:	46bd      	mov	sp, r7
 800c638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c63c:	4770      	bx	lr
 800c63e:	bf00      	nop
 800c640:	200007e4 	.word	0x200007e4
 800c644:	2000088c 	.word	0x2000088c

0800c648 <vApplicationGetTimerTaskMemory>:
 800c648:	b480      	push	{r7}
 800c64a:	b085      	sub	sp, #20
 800c64c:	af00      	add	r7, sp, #0
 800c64e:	60f8      	str	r0, [r7, #12]
 800c650:	60b9      	str	r1, [r7, #8]
 800c652:	607a      	str	r2, [r7, #4]
 800c654:	68fb      	ldr	r3, [r7, #12]
 800c656:	4a07      	ldr	r2, [pc, #28]	@ (800c674 <vApplicationGetTimerTaskMemory+0x2c>)
 800c658:	601a      	str	r2, [r3, #0]
 800c65a:	68bb      	ldr	r3, [r7, #8]
 800c65c:	4a06      	ldr	r2, [pc, #24]	@ (800c678 <vApplicationGetTimerTaskMemory+0x30>)
 800c65e:	601a      	str	r2, [r3, #0]
 800c660:	687b      	ldr	r3, [r7, #4]
 800c662:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800c666:	601a      	str	r2, [r3, #0]
 800c668:	bf00      	nop
 800c66a:	3714      	adds	r7, #20
 800c66c:	46bd      	mov	sp, r7
 800c66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c672:	4770      	bx	lr
 800c674:	20000a8c 	.word	0x20000a8c
 800c678:	20000b34 	.word	0x20000b34

0800c67c <xEventGroupCreate>:
 800c67c:	b580      	push	{r7, lr}
 800c67e:	b082      	sub	sp, #8
 800c680:	af00      	add	r7, sp, #0
 800c682:	2020      	movs	r0, #32
 800c684:	f003 fdfa 	bl	801027c <pvPortMalloc>
 800c688:	6078      	str	r0, [r7, #4]
 800c68a:	687b      	ldr	r3, [r7, #4]
 800c68c:	2b00      	cmp	r3, #0
 800c68e:	d00a      	beq.n	800c6a6 <xEventGroupCreate+0x2a>
 800c690:	687b      	ldr	r3, [r7, #4]
 800c692:	2200      	movs	r2, #0
 800c694:	601a      	str	r2, [r3, #0]
 800c696:	687b      	ldr	r3, [r7, #4]
 800c698:	3304      	adds	r3, #4
 800c69a:	4618      	mov	r0, r3
 800c69c:	f000 f9aa 	bl	800c9f4 <vListInitialise>
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	2200      	movs	r2, #0
 800c6a4:	771a      	strb	r2, [r3, #28]
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	4618      	mov	r0, r3
 800c6aa:	3708      	adds	r7, #8
 800c6ac:	46bd      	mov	sp, r7
 800c6ae:	bd80      	pop	{r7, pc}

0800c6b0 <xEventGroupWaitBits>:
 800c6b0:	b580      	push	{r7, lr}
 800c6b2:	b090      	sub	sp, #64	@ 0x40
 800c6b4:	af00      	add	r7, sp, #0
 800c6b6:	60f8      	str	r0, [r7, #12]
 800c6b8:	60b9      	str	r1, [r7, #8]
 800c6ba:	607a      	str	r2, [r7, #4]
 800c6bc:	603b      	str	r3, [r7, #0]
 800c6be:	68fb      	ldr	r3, [r7, #12]
 800c6c0:	637b      	str	r3, [r7, #52]	@ 0x34
 800c6c2:	2300      	movs	r3, #0
 800c6c4:	63bb      	str	r3, [r7, #56]	@ 0x38
 800c6c6:	2300      	movs	r3, #0
 800c6c8:	633b      	str	r3, [r7, #48]	@ 0x30
 800c6ca:	68fb      	ldr	r3, [r7, #12]
 800c6cc:	2b00      	cmp	r3, #0
 800c6ce:	d10b      	bne.n	800c6e8 <xEventGroupWaitBits+0x38>
 800c6d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c6d4:	f383 8811 	msr	BASEPRI, r3
 800c6d8:	f3bf 8f6f 	isb	sy
 800c6dc:	f3bf 8f4f 	dsb	sy
 800c6e0:	623b      	str	r3, [r7, #32]
 800c6e2:	bf00      	nop
 800c6e4:	bf00      	nop
 800c6e6:	e7fd      	b.n	800c6e4 <xEventGroupWaitBits+0x34>
 800c6e8:	68bb      	ldr	r3, [r7, #8]
 800c6ea:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800c6ee:	d30b      	bcc.n	800c708 <xEventGroupWaitBits+0x58>
 800c6f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c6f4:	f383 8811 	msr	BASEPRI, r3
 800c6f8:	f3bf 8f6f 	isb	sy
 800c6fc:	f3bf 8f4f 	dsb	sy
 800c700:	61fb      	str	r3, [r7, #28]
 800c702:	bf00      	nop
 800c704:	bf00      	nop
 800c706:	e7fd      	b.n	800c704 <xEventGroupWaitBits+0x54>
 800c708:	68bb      	ldr	r3, [r7, #8]
 800c70a:	2b00      	cmp	r3, #0
 800c70c:	d10b      	bne.n	800c726 <xEventGroupWaitBits+0x76>
 800c70e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c712:	f383 8811 	msr	BASEPRI, r3
 800c716:	f3bf 8f6f 	isb	sy
 800c71a:	f3bf 8f4f 	dsb	sy
 800c71e:	61bb      	str	r3, [r7, #24]
 800c720:	bf00      	nop
 800c722:	bf00      	nop
 800c724:	e7fd      	b.n	800c722 <xEventGroupWaitBits+0x72>
 800c726:	f002 fc19 	bl	800ef5c <xTaskGetSchedulerState>
 800c72a:	4603      	mov	r3, r0
 800c72c:	2b00      	cmp	r3, #0
 800c72e:	d102      	bne.n	800c736 <xEventGroupWaitBits+0x86>
 800c730:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800c732:	2b00      	cmp	r3, #0
 800c734:	d101      	bne.n	800c73a <xEventGroupWaitBits+0x8a>
 800c736:	2301      	movs	r3, #1
 800c738:	e000      	b.n	800c73c <xEventGroupWaitBits+0x8c>
 800c73a:	2300      	movs	r3, #0
 800c73c:	2b00      	cmp	r3, #0
 800c73e:	d10b      	bne.n	800c758 <xEventGroupWaitBits+0xa8>
 800c740:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c744:	f383 8811 	msr	BASEPRI, r3
 800c748:	f3bf 8f6f 	isb	sy
 800c74c:	f3bf 8f4f 	dsb	sy
 800c750:	617b      	str	r3, [r7, #20]
 800c752:	bf00      	nop
 800c754:	bf00      	nop
 800c756:	e7fd      	b.n	800c754 <xEventGroupWaitBits+0xa4>
 800c758:	f001 fdf8 	bl	800e34c <vTaskSuspendAll>
 800c75c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c762:	683a      	ldr	r2, [r7, #0]
 800c764:	68b9      	ldr	r1, [r7, #8]
 800c766:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800c768:	f000 f90d 	bl	800c986 <prvTestWaitCondition>
 800c76c:	62b8      	str	r0, [r7, #40]	@ 0x28
 800c76e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c770:	2b00      	cmp	r3, #0
 800c772:	d00e      	beq.n	800c792 <xEventGroupWaitBits+0xe2>
 800c774:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c776:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800c778:	2300      	movs	r3, #0
 800c77a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800c77c:	687b      	ldr	r3, [r7, #4]
 800c77e:	2b00      	cmp	r3, #0
 800c780:	d028      	beq.n	800c7d4 <xEventGroupWaitBits+0x124>
 800c782:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c784:	681a      	ldr	r2, [r3, #0]
 800c786:	68bb      	ldr	r3, [r7, #8]
 800c788:	43db      	mvns	r3, r3
 800c78a:	401a      	ands	r2, r3
 800c78c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c78e:	601a      	str	r2, [r3, #0]
 800c790:	e020      	b.n	800c7d4 <xEventGroupWaitBits+0x124>
 800c792:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800c794:	2b00      	cmp	r3, #0
 800c796:	d104      	bne.n	800c7a2 <xEventGroupWaitBits+0xf2>
 800c798:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c79a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800c79c:	2301      	movs	r3, #1
 800c79e:	633b      	str	r3, [r7, #48]	@ 0x30
 800c7a0:	e018      	b.n	800c7d4 <xEventGroupWaitBits+0x124>
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	2b00      	cmp	r3, #0
 800c7a6:	d003      	beq.n	800c7b0 <xEventGroupWaitBits+0x100>
 800c7a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c7aa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800c7ae:	63bb      	str	r3, [r7, #56]	@ 0x38
 800c7b0:	683b      	ldr	r3, [r7, #0]
 800c7b2:	2b00      	cmp	r3, #0
 800c7b4:	d003      	beq.n	800c7be <xEventGroupWaitBits+0x10e>
 800c7b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c7b8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800c7bc:	63bb      	str	r3, [r7, #56]	@ 0x38
 800c7be:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c7c0:	1d18      	adds	r0, r3, #4
 800c7c2:	68ba      	ldr	r2, [r7, #8]
 800c7c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c7c6:	4313      	orrs	r3, r2
 800c7c8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800c7ca:	4619      	mov	r1, r3
 800c7cc:	f002 f894 	bl	800e8f8 <vTaskPlaceOnUnorderedEventList>
 800c7d0:	2300      	movs	r3, #0
 800c7d2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800c7d4:	f001 fdc8 	bl	800e368 <xTaskResumeAll>
 800c7d8:	6278      	str	r0, [r7, #36]	@ 0x24
 800c7da:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800c7dc:	2b00      	cmp	r3, #0
 800c7de:	d031      	beq.n	800c844 <xEventGroupWaitBits+0x194>
 800c7e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c7e2:	2b00      	cmp	r3, #0
 800c7e4:	d107      	bne.n	800c7f6 <xEventGroupWaitBits+0x146>
 800c7e6:	4b1a      	ldr	r3, [pc, #104]	@ (800c850 <xEventGroupWaitBits+0x1a0>)
 800c7e8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c7ec:	601a      	str	r2, [r3, #0]
 800c7ee:	f3bf 8f4f 	dsb	sy
 800c7f2:	f3bf 8f6f 	isb	sy
 800c7f6:	f002 fd2b 	bl	800f250 <uxTaskResetEventItemValue>
 800c7fa:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800c7fc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c7fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800c802:	2b00      	cmp	r3, #0
 800c804:	d11a      	bne.n	800c83c <xEventGroupWaitBits+0x18c>
 800c806:	f003 fc17 	bl	8010038 <vPortEnterCritical>
 800c80a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c80c:	681b      	ldr	r3, [r3, #0]
 800c80e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800c810:	683a      	ldr	r2, [r7, #0]
 800c812:	68b9      	ldr	r1, [r7, #8]
 800c814:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 800c816:	f000 f8b6 	bl	800c986 <prvTestWaitCondition>
 800c81a:	4603      	mov	r3, r0
 800c81c:	2b00      	cmp	r3, #0
 800c81e:	d009      	beq.n	800c834 <xEventGroupWaitBits+0x184>
 800c820:	687b      	ldr	r3, [r7, #4]
 800c822:	2b00      	cmp	r3, #0
 800c824:	d006      	beq.n	800c834 <xEventGroupWaitBits+0x184>
 800c826:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c828:	681a      	ldr	r2, [r3, #0]
 800c82a:	68bb      	ldr	r3, [r7, #8]
 800c82c:	43db      	mvns	r3, r3
 800c82e:	401a      	ands	r2, r3
 800c830:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c832:	601a      	str	r2, [r3, #0]
 800c834:	2301      	movs	r3, #1
 800c836:	633b      	str	r3, [r7, #48]	@ 0x30
 800c838:	f003 fc30 	bl	801009c <vPortExitCritical>
 800c83c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c83e:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800c842:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800c844:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c846:	4618      	mov	r0, r3
 800c848:	3740      	adds	r7, #64	@ 0x40
 800c84a:	46bd      	mov	sp, r7
 800c84c:	bd80      	pop	{r7, pc}
 800c84e:	bf00      	nop
 800c850:	e000ed04 	.word	0xe000ed04

0800c854 <xEventGroupSetBits>:
 800c854:	b580      	push	{r7, lr}
 800c856:	b08e      	sub	sp, #56	@ 0x38
 800c858:	af00      	add	r7, sp, #0
 800c85a:	6078      	str	r0, [r7, #4]
 800c85c:	6039      	str	r1, [r7, #0]
 800c85e:	2300      	movs	r3, #0
 800c860:	633b      	str	r3, [r7, #48]	@ 0x30
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	62bb      	str	r3, [r7, #40]	@ 0x28
 800c866:	2300      	movs	r3, #0
 800c868:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	2b00      	cmp	r3, #0
 800c86e:	d10b      	bne.n	800c888 <xEventGroupSetBits+0x34>
 800c870:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c874:	f383 8811 	msr	BASEPRI, r3
 800c878:	f3bf 8f6f 	isb	sy
 800c87c:	f3bf 8f4f 	dsb	sy
 800c880:	613b      	str	r3, [r7, #16]
 800c882:	bf00      	nop
 800c884:	bf00      	nop
 800c886:	e7fd      	b.n	800c884 <xEventGroupSetBits+0x30>
 800c888:	683b      	ldr	r3, [r7, #0]
 800c88a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800c88e:	d30b      	bcc.n	800c8a8 <xEventGroupSetBits+0x54>
 800c890:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c894:	f383 8811 	msr	BASEPRI, r3
 800c898:	f3bf 8f6f 	isb	sy
 800c89c:	f3bf 8f4f 	dsb	sy
 800c8a0:	60fb      	str	r3, [r7, #12]
 800c8a2:	bf00      	nop
 800c8a4:	bf00      	nop
 800c8a6:	e7fd      	b.n	800c8a4 <xEventGroupSetBits+0x50>
 800c8a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c8aa:	3304      	adds	r3, #4
 800c8ac:	627b      	str	r3, [r7, #36]	@ 0x24
 800c8ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c8b0:	3308      	adds	r3, #8
 800c8b2:	623b      	str	r3, [r7, #32]
 800c8b4:	f001 fd4a 	bl	800e34c <vTaskSuspendAll>
 800c8b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c8ba:	68db      	ldr	r3, [r3, #12]
 800c8bc:	637b      	str	r3, [r7, #52]	@ 0x34
 800c8be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c8c0:	681a      	ldr	r2, [r3, #0]
 800c8c2:	683b      	ldr	r3, [r7, #0]
 800c8c4:	431a      	orrs	r2, r3
 800c8c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c8c8:	601a      	str	r2, [r3, #0]
 800c8ca:	e03c      	b.n	800c946 <xEventGroupSetBits+0xf2>
 800c8cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c8ce:	685b      	ldr	r3, [r3, #4]
 800c8d0:	61fb      	str	r3, [r7, #28]
 800c8d2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c8d4:	681b      	ldr	r3, [r3, #0]
 800c8d6:	61bb      	str	r3, [r7, #24]
 800c8d8:	2300      	movs	r3, #0
 800c8da:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c8dc:	69bb      	ldr	r3, [r7, #24]
 800c8de:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 800c8e2:	617b      	str	r3, [r7, #20]
 800c8e4:	69bb      	ldr	r3, [r7, #24]
 800c8e6:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800c8ea:	61bb      	str	r3, [r7, #24]
 800c8ec:	697b      	ldr	r3, [r7, #20]
 800c8ee:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800c8f2:	2b00      	cmp	r3, #0
 800c8f4:	d108      	bne.n	800c908 <xEventGroupSetBits+0xb4>
 800c8f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c8f8:	681a      	ldr	r2, [r3, #0]
 800c8fa:	69bb      	ldr	r3, [r7, #24]
 800c8fc:	4013      	ands	r3, r2
 800c8fe:	2b00      	cmp	r3, #0
 800c900:	d00b      	beq.n	800c91a <xEventGroupSetBits+0xc6>
 800c902:	2301      	movs	r3, #1
 800c904:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c906:	e008      	b.n	800c91a <xEventGroupSetBits+0xc6>
 800c908:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c90a:	681a      	ldr	r2, [r3, #0]
 800c90c:	69bb      	ldr	r3, [r7, #24]
 800c90e:	4013      	ands	r3, r2
 800c910:	69ba      	ldr	r2, [r7, #24]
 800c912:	429a      	cmp	r2, r3
 800c914:	d101      	bne.n	800c91a <xEventGroupSetBits+0xc6>
 800c916:	2301      	movs	r3, #1
 800c918:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c91a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c91c:	2b00      	cmp	r3, #0
 800c91e:	d010      	beq.n	800c942 <xEventGroupSetBits+0xee>
 800c920:	697b      	ldr	r3, [r7, #20]
 800c922:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800c926:	2b00      	cmp	r3, #0
 800c928:	d003      	beq.n	800c932 <xEventGroupSetBits+0xde>
 800c92a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800c92c:	69bb      	ldr	r3, [r7, #24]
 800c92e:	4313      	orrs	r3, r2
 800c930:	633b      	str	r3, [r7, #48]	@ 0x30
 800c932:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c934:	681b      	ldr	r3, [r3, #0]
 800c936:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800c93a:	4619      	mov	r1, r3
 800c93c:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 800c93e:	f002 f8a9 	bl	800ea94 <vTaskRemoveFromUnorderedEventList>
 800c942:	69fb      	ldr	r3, [r7, #28]
 800c944:	637b      	str	r3, [r7, #52]	@ 0x34
 800c946:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800c948:	6a3b      	ldr	r3, [r7, #32]
 800c94a:	429a      	cmp	r2, r3
 800c94c:	d1be      	bne.n	800c8cc <xEventGroupSetBits+0x78>
 800c94e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c950:	681a      	ldr	r2, [r3, #0]
 800c952:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c954:	43db      	mvns	r3, r3
 800c956:	401a      	ands	r2, r3
 800c958:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c95a:	601a      	str	r2, [r3, #0]
 800c95c:	f001 fd04 	bl	800e368 <xTaskResumeAll>
 800c960:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c962:	681b      	ldr	r3, [r3, #0]
 800c964:	4618      	mov	r0, r3
 800c966:	3738      	adds	r7, #56	@ 0x38
 800c968:	46bd      	mov	sp, r7
 800c96a:	bd80      	pop	{r7, pc}

0800c96c <vEventGroupSetBitsCallback>:
 800c96c:	b580      	push	{r7, lr}
 800c96e:	b082      	sub	sp, #8
 800c970:	af00      	add	r7, sp, #0
 800c972:	6078      	str	r0, [r7, #4]
 800c974:	6039      	str	r1, [r7, #0]
 800c976:	6839      	ldr	r1, [r7, #0]
 800c978:	6878      	ldr	r0, [r7, #4]
 800c97a:	f7ff ff6b 	bl	800c854 <xEventGroupSetBits>
 800c97e:	bf00      	nop
 800c980:	3708      	adds	r7, #8
 800c982:	46bd      	mov	sp, r7
 800c984:	bd80      	pop	{r7, pc}

0800c986 <prvTestWaitCondition>:
 800c986:	b480      	push	{r7}
 800c988:	b087      	sub	sp, #28
 800c98a:	af00      	add	r7, sp, #0
 800c98c:	60f8      	str	r0, [r7, #12]
 800c98e:	60b9      	str	r1, [r7, #8]
 800c990:	607a      	str	r2, [r7, #4]
 800c992:	2300      	movs	r3, #0
 800c994:	617b      	str	r3, [r7, #20]
 800c996:	687b      	ldr	r3, [r7, #4]
 800c998:	2b00      	cmp	r3, #0
 800c99a:	d107      	bne.n	800c9ac <prvTestWaitCondition+0x26>
 800c99c:	68fa      	ldr	r2, [r7, #12]
 800c99e:	68bb      	ldr	r3, [r7, #8]
 800c9a0:	4013      	ands	r3, r2
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	d00a      	beq.n	800c9bc <prvTestWaitCondition+0x36>
 800c9a6:	2301      	movs	r3, #1
 800c9a8:	617b      	str	r3, [r7, #20]
 800c9aa:	e007      	b.n	800c9bc <prvTestWaitCondition+0x36>
 800c9ac:	68fa      	ldr	r2, [r7, #12]
 800c9ae:	68bb      	ldr	r3, [r7, #8]
 800c9b0:	4013      	ands	r3, r2
 800c9b2:	68ba      	ldr	r2, [r7, #8]
 800c9b4:	429a      	cmp	r2, r3
 800c9b6:	d101      	bne.n	800c9bc <prvTestWaitCondition+0x36>
 800c9b8:	2301      	movs	r3, #1
 800c9ba:	617b      	str	r3, [r7, #20]
 800c9bc:	697b      	ldr	r3, [r7, #20]
 800c9be:	4618      	mov	r0, r3
 800c9c0:	371c      	adds	r7, #28
 800c9c2:	46bd      	mov	sp, r7
 800c9c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9c8:	4770      	bx	lr
	...

0800c9cc <xEventGroupSetBitsFromISR>:
 800c9cc:	b580      	push	{r7, lr}
 800c9ce:	b086      	sub	sp, #24
 800c9d0:	af00      	add	r7, sp, #0
 800c9d2:	60f8      	str	r0, [r7, #12]
 800c9d4:	60b9      	str	r1, [r7, #8]
 800c9d6:	607a      	str	r2, [r7, #4]
 800c9d8:	687b      	ldr	r3, [r7, #4]
 800c9da:	68ba      	ldr	r2, [r7, #8]
 800c9dc:	68f9      	ldr	r1, [r7, #12]
 800c9de:	4804      	ldr	r0, [pc, #16]	@ (800c9f0 <xEventGroupSetBitsFromISR+0x24>)
 800c9e0:	f003 f9dc 	bl	800fd9c <xTimerPendFunctionCallFromISR>
 800c9e4:	6178      	str	r0, [r7, #20]
 800c9e6:	697b      	ldr	r3, [r7, #20]
 800c9e8:	4618      	mov	r0, r3
 800c9ea:	3718      	adds	r7, #24
 800c9ec:	46bd      	mov	sp, r7
 800c9ee:	bd80      	pop	{r7, pc}
 800c9f0:	0800c96d 	.word	0x0800c96d

0800c9f4 <vListInitialise>:
 800c9f4:	b480      	push	{r7}
 800c9f6:	b083      	sub	sp, #12
 800c9f8:	af00      	add	r7, sp, #0
 800c9fa:	6078      	str	r0, [r7, #4]
 800c9fc:	687b      	ldr	r3, [r7, #4]
 800c9fe:	f103 0208 	add.w	r2, r3, #8
 800ca02:	687b      	ldr	r3, [r7, #4]
 800ca04:	605a      	str	r2, [r3, #4]
 800ca06:	687b      	ldr	r3, [r7, #4]
 800ca08:	f04f 32ff 	mov.w	r2, #4294967295
 800ca0c:	609a      	str	r2, [r3, #8]
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	f103 0208 	add.w	r2, r3, #8
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	60da      	str	r2, [r3, #12]
 800ca18:	687b      	ldr	r3, [r7, #4]
 800ca1a:	f103 0208 	add.w	r2, r3, #8
 800ca1e:	687b      	ldr	r3, [r7, #4]
 800ca20:	611a      	str	r2, [r3, #16]
 800ca22:	687b      	ldr	r3, [r7, #4]
 800ca24:	2200      	movs	r2, #0
 800ca26:	601a      	str	r2, [r3, #0]
 800ca28:	bf00      	nop
 800ca2a:	370c      	adds	r7, #12
 800ca2c:	46bd      	mov	sp, r7
 800ca2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca32:	4770      	bx	lr

0800ca34 <vListInitialiseItem>:
 800ca34:	b480      	push	{r7}
 800ca36:	b083      	sub	sp, #12
 800ca38:	af00      	add	r7, sp, #0
 800ca3a:	6078      	str	r0, [r7, #4]
 800ca3c:	687b      	ldr	r3, [r7, #4]
 800ca3e:	2200      	movs	r2, #0
 800ca40:	611a      	str	r2, [r3, #16]
 800ca42:	bf00      	nop
 800ca44:	370c      	adds	r7, #12
 800ca46:	46bd      	mov	sp, r7
 800ca48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca4c:	4770      	bx	lr

0800ca4e <vListInsertEnd>:
 800ca4e:	b480      	push	{r7}
 800ca50:	b085      	sub	sp, #20
 800ca52:	af00      	add	r7, sp, #0
 800ca54:	6078      	str	r0, [r7, #4]
 800ca56:	6039      	str	r1, [r7, #0]
 800ca58:	687b      	ldr	r3, [r7, #4]
 800ca5a:	685b      	ldr	r3, [r3, #4]
 800ca5c:	60fb      	str	r3, [r7, #12]
 800ca5e:	683b      	ldr	r3, [r7, #0]
 800ca60:	68fa      	ldr	r2, [r7, #12]
 800ca62:	605a      	str	r2, [r3, #4]
 800ca64:	68fb      	ldr	r3, [r7, #12]
 800ca66:	689a      	ldr	r2, [r3, #8]
 800ca68:	683b      	ldr	r3, [r7, #0]
 800ca6a:	609a      	str	r2, [r3, #8]
 800ca6c:	68fb      	ldr	r3, [r7, #12]
 800ca6e:	689b      	ldr	r3, [r3, #8]
 800ca70:	683a      	ldr	r2, [r7, #0]
 800ca72:	605a      	str	r2, [r3, #4]
 800ca74:	68fb      	ldr	r3, [r7, #12]
 800ca76:	683a      	ldr	r2, [r7, #0]
 800ca78:	609a      	str	r2, [r3, #8]
 800ca7a:	683b      	ldr	r3, [r7, #0]
 800ca7c:	687a      	ldr	r2, [r7, #4]
 800ca7e:	611a      	str	r2, [r3, #16]
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	681b      	ldr	r3, [r3, #0]
 800ca84:	1c5a      	adds	r2, r3, #1
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	601a      	str	r2, [r3, #0]
 800ca8a:	bf00      	nop
 800ca8c:	3714      	adds	r7, #20
 800ca8e:	46bd      	mov	sp, r7
 800ca90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca94:	4770      	bx	lr

0800ca96 <vListInsert>:
 800ca96:	b480      	push	{r7}
 800ca98:	b085      	sub	sp, #20
 800ca9a:	af00      	add	r7, sp, #0
 800ca9c:	6078      	str	r0, [r7, #4]
 800ca9e:	6039      	str	r1, [r7, #0]
 800caa0:	683b      	ldr	r3, [r7, #0]
 800caa2:	681b      	ldr	r3, [r3, #0]
 800caa4:	60bb      	str	r3, [r7, #8]
 800caa6:	68bb      	ldr	r3, [r7, #8]
 800caa8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800caac:	d103      	bne.n	800cab6 <vListInsert+0x20>
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	691b      	ldr	r3, [r3, #16]
 800cab2:	60fb      	str	r3, [r7, #12]
 800cab4:	e00c      	b.n	800cad0 <vListInsert+0x3a>
 800cab6:	687b      	ldr	r3, [r7, #4]
 800cab8:	3308      	adds	r3, #8
 800caba:	60fb      	str	r3, [r7, #12]
 800cabc:	e002      	b.n	800cac4 <vListInsert+0x2e>
 800cabe:	68fb      	ldr	r3, [r7, #12]
 800cac0:	685b      	ldr	r3, [r3, #4]
 800cac2:	60fb      	str	r3, [r7, #12]
 800cac4:	68fb      	ldr	r3, [r7, #12]
 800cac6:	685b      	ldr	r3, [r3, #4]
 800cac8:	681b      	ldr	r3, [r3, #0]
 800caca:	68ba      	ldr	r2, [r7, #8]
 800cacc:	429a      	cmp	r2, r3
 800cace:	d2f6      	bcs.n	800cabe <vListInsert+0x28>
 800cad0:	68fb      	ldr	r3, [r7, #12]
 800cad2:	685a      	ldr	r2, [r3, #4]
 800cad4:	683b      	ldr	r3, [r7, #0]
 800cad6:	605a      	str	r2, [r3, #4]
 800cad8:	683b      	ldr	r3, [r7, #0]
 800cada:	685b      	ldr	r3, [r3, #4]
 800cadc:	683a      	ldr	r2, [r7, #0]
 800cade:	609a      	str	r2, [r3, #8]
 800cae0:	683b      	ldr	r3, [r7, #0]
 800cae2:	68fa      	ldr	r2, [r7, #12]
 800cae4:	609a      	str	r2, [r3, #8]
 800cae6:	68fb      	ldr	r3, [r7, #12]
 800cae8:	683a      	ldr	r2, [r7, #0]
 800caea:	605a      	str	r2, [r3, #4]
 800caec:	683b      	ldr	r3, [r7, #0]
 800caee:	687a      	ldr	r2, [r7, #4]
 800caf0:	611a      	str	r2, [r3, #16]
 800caf2:	687b      	ldr	r3, [r7, #4]
 800caf4:	681b      	ldr	r3, [r3, #0]
 800caf6:	1c5a      	adds	r2, r3, #1
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	601a      	str	r2, [r3, #0]
 800cafc:	bf00      	nop
 800cafe:	3714      	adds	r7, #20
 800cb00:	46bd      	mov	sp, r7
 800cb02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb06:	4770      	bx	lr

0800cb08 <uxListRemove>:
 800cb08:	b480      	push	{r7}
 800cb0a:	b085      	sub	sp, #20
 800cb0c:	af00      	add	r7, sp, #0
 800cb0e:	6078      	str	r0, [r7, #4]
 800cb10:	687b      	ldr	r3, [r7, #4]
 800cb12:	691b      	ldr	r3, [r3, #16]
 800cb14:	60fb      	str	r3, [r7, #12]
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	685b      	ldr	r3, [r3, #4]
 800cb1a:	687a      	ldr	r2, [r7, #4]
 800cb1c:	6892      	ldr	r2, [r2, #8]
 800cb1e:	609a      	str	r2, [r3, #8]
 800cb20:	687b      	ldr	r3, [r7, #4]
 800cb22:	689b      	ldr	r3, [r3, #8]
 800cb24:	687a      	ldr	r2, [r7, #4]
 800cb26:	6852      	ldr	r2, [r2, #4]
 800cb28:	605a      	str	r2, [r3, #4]
 800cb2a:	68fb      	ldr	r3, [r7, #12]
 800cb2c:	685b      	ldr	r3, [r3, #4]
 800cb2e:	687a      	ldr	r2, [r7, #4]
 800cb30:	429a      	cmp	r2, r3
 800cb32:	d103      	bne.n	800cb3c <uxListRemove+0x34>
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	689a      	ldr	r2, [r3, #8]
 800cb38:	68fb      	ldr	r3, [r7, #12]
 800cb3a:	605a      	str	r2, [r3, #4]
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	2200      	movs	r2, #0
 800cb40:	611a      	str	r2, [r3, #16]
 800cb42:	68fb      	ldr	r3, [r7, #12]
 800cb44:	681b      	ldr	r3, [r3, #0]
 800cb46:	1e5a      	subs	r2, r3, #1
 800cb48:	68fb      	ldr	r3, [r7, #12]
 800cb4a:	601a      	str	r2, [r3, #0]
 800cb4c:	68fb      	ldr	r3, [r7, #12]
 800cb4e:	681b      	ldr	r3, [r3, #0]
 800cb50:	4618      	mov	r0, r3
 800cb52:	3714      	adds	r7, #20
 800cb54:	46bd      	mov	sp, r7
 800cb56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb5a:	4770      	bx	lr

0800cb5c <xQueueGenericReset>:
 800cb5c:	b580      	push	{r7, lr}
 800cb5e:	b084      	sub	sp, #16
 800cb60:	af00      	add	r7, sp, #0
 800cb62:	6078      	str	r0, [r7, #4]
 800cb64:	6039      	str	r1, [r7, #0]
 800cb66:	687b      	ldr	r3, [r7, #4]
 800cb68:	60fb      	str	r3, [r7, #12]
 800cb6a:	68fb      	ldr	r3, [r7, #12]
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d10b      	bne.n	800cb88 <xQueueGenericReset+0x2c>
 800cb70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cb74:	f383 8811 	msr	BASEPRI, r3
 800cb78:	f3bf 8f6f 	isb	sy
 800cb7c:	f3bf 8f4f 	dsb	sy
 800cb80:	60bb      	str	r3, [r7, #8]
 800cb82:	bf00      	nop
 800cb84:	bf00      	nop
 800cb86:	e7fd      	b.n	800cb84 <xQueueGenericReset+0x28>
 800cb88:	f003 fa56 	bl	8010038 <vPortEnterCritical>
 800cb8c:	68fb      	ldr	r3, [r7, #12]
 800cb8e:	681a      	ldr	r2, [r3, #0]
 800cb90:	68fb      	ldr	r3, [r7, #12]
 800cb92:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb94:	68f9      	ldr	r1, [r7, #12]
 800cb96:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800cb98:	fb01 f303 	mul.w	r3, r1, r3
 800cb9c:	441a      	add	r2, r3
 800cb9e:	68fb      	ldr	r3, [r7, #12]
 800cba0:	609a      	str	r2, [r3, #8]
 800cba2:	68fb      	ldr	r3, [r7, #12]
 800cba4:	2200      	movs	r2, #0
 800cba6:	639a      	str	r2, [r3, #56]	@ 0x38
 800cba8:	68fb      	ldr	r3, [r7, #12]
 800cbaa:	681a      	ldr	r2, [r3, #0]
 800cbac:	68fb      	ldr	r3, [r7, #12]
 800cbae:	605a      	str	r2, [r3, #4]
 800cbb0:	68fb      	ldr	r3, [r7, #12]
 800cbb2:	681a      	ldr	r2, [r3, #0]
 800cbb4:	68fb      	ldr	r3, [r7, #12]
 800cbb6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cbb8:	3b01      	subs	r3, #1
 800cbba:	68f9      	ldr	r1, [r7, #12]
 800cbbc:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800cbbe:	fb01 f303 	mul.w	r3, r1, r3
 800cbc2:	441a      	add	r2, r3
 800cbc4:	68fb      	ldr	r3, [r7, #12]
 800cbc6:	60da      	str	r2, [r3, #12]
 800cbc8:	68fb      	ldr	r3, [r7, #12]
 800cbca:	22ff      	movs	r2, #255	@ 0xff
 800cbcc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800cbd0:	68fb      	ldr	r3, [r7, #12]
 800cbd2:	22ff      	movs	r2, #255	@ 0xff
 800cbd4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800cbd8:	683b      	ldr	r3, [r7, #0]
 800cbda:	2b00      	cmp	r3, #0
 800cbdc:	d114      	bne.n	800cc08 <xQueueGenericReset+0xac>
 800cbde:	68fb      	ldr	r3, [r7, #12]
 800cbe0:	691b      	ldr	r3, [r3, #16]
 800cbe2:	2b00      	cmp	r3, #0
 800cbe4:	d01a      	beq.n	800cc1c <xQueueGenericReset+0xc0>
 800cbe6:	68fb      	ldr	r3, [r7, #12]
 800cbe8:	3310      	adds	r3, #16
 800cbea:	4618      	mov	r0, r3
 800cbec:	f001 feee 	bl	800e9cc <xTaskRemoveFromEventList>
 800cbf0:	4603      	mov	r3, r0
 800cbf2:	2b00      	cmp	r3, #0
 800cbf4:	d012      	beq.n	800cc1c <xQueueGenericReset+0xc0>
 800cbf6:	4b0d      	ldr	r3, [pc, #52]	@ (800cc2c <xQueueGenericReset+0xd0>)
 800cbf8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cbfc:	601a      	str	r2, [r3, #0]
 800cbfe:	f3bf 8f4f 	dsb	sy
 800cc02:	f3bf 8f6f 	isb	sy
 800cc06:	e009      	b.n	800cc1c <xQueueGenericReset+0xc0>
 800cc08:	68fb      	ldr	r3, [r7, #12]
 800cc0a:	3310      	adds	r3, #16
 800cc0c:	4618      	mov	r0, r3
 800cc0e:	f7ff fef1 	bl	800c9f4 <vListInitialise>
 800cc12:	68fb      	ldr	r3, [r7, #12]
 800cc14:	3324      	adds	r3, #36	@ 0x24
 800cc16:	4618      	mov	r0, r3
 800cc18:	f7ff feec 	bl	800c9f4 <vListInitialise>
 800cc1c:	f003 fa3e 	bl	801009c <vPortExitCritical>
 800cc20:	2301      	movs	r3, #1
 800cc22:	4618      	mov	r0, r3
 800cc24:	3710      	adds	r7, #16
 800cc26:	46bd      	mov	sp, r7
 800cc28:	bd80      	pop	{r7, pc}
 800cc2a:	bf00      	nop
 800cc2c:	e000ed04 	.word	0xe000ed04

0800cc30 <xQueueGenericCreateStatic>:
 800cc30:	b580      	push	{r7, lr}
 800cc32:	b08e      	sub	sp, #56	@ 0x38
 800cc34:	af02      	add	r7, sp, #8
 800cc36:	60f8      	str	r0, [r7, #12]
 800cc38:	60b9      	str	r1, [r7, #8]
 800cc3a:	607a      	str	r2, [r7, #4]
 800cc3c:	603b      	str	r3, [r7, #0]
 800cc3e:	68fb      	ldr	r3, [r7, #12]
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	d10b      	bne.n	800cc5c <xQueueGenericCreateStatic+0x2c>
 800cc44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc48:	f383 8811 	msr	BASEPRI, r3
 800cc4c:	f3bf 8f6f 	isb	sy
 800cc50:	f3bf 8f4f 	dsb	sy
 800cc54:	62bb      	str	r3, [r7, #40]	@ 0x28
 800cc56:	bf00      	nop
 800cc58:	bf00      	nop
 800cc5a:	e7fd      	b.n	800cc58 <xQueueGenericCreateStatic+0x28>
 800cc5c:	683b      	ldr	r3, [r7, #0]
 800cc5e:	2b00      	cmp	r3, #0
 800cc60:	d10b      	bne.n	800cc7a <xQueueGenericCreateStatic+0x4a>
 800cc62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc66:	f383 8811 	msr	BASEPRI, r3
 800cc6a:	f3bf 8f6f 	isb	sy
 800cc6e:	f3bf 8f4f 	dsb	sy
 800cc72:	627b      	str	r3, [r7, #36]	@ 0x24
 800cc74:	bf00      	nop
 800cc76:	bf00      	nop
 800cc78:	e7fd      	b.n	800cc76 <xQueueGenericCreateStatic+0x46>
 800cc7a:	687b      	ldr	r3, [r7, #4]
 800cc7c:	2b00      	cmp	r3, #0
 800cc7e:	d002      	beq.n	800cc86 <xQueueGenericCreateStatic+0x56>
 800cc80:	68bb      	ldr	r3, [r7, #8]
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	d001      	beq.n	800cc8a <xQueueGenericCreateStatic+0x5a>
 800cc86:	2301      	movs	r3, #1
 800cc88:	e000      	b.n	800cc8c <xQueueGenericCreateStatic+0x5c>
 800cc8a:	2300      	movs	r3, #0
 800cc8c:	2b00      	cmp	r3, #0
 800cc8e:	d10b      	bne.n	800cca8 <xQueueGenericCreateStatic+0x78>
 800cc90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc94:	f383 8811 	msr	BASEPRI, r3
 800cc98:	f3bf 8f6f 	isb	sy
 800cc9c:	f3bf 8f4f 	dsb	sy
 800cca0:	623b      	str	r3, [r7, #32]
 800cca2:	bf00      	nop
 800cca4:	bf00      	nop
 800cca6:	e7fd      	b.n	800cca4 <xQueueGenericCreateStatic+0x74>
 800cca8:	687b      	ldr	r3, [r7, #4]
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	d102      	bne.n	800ccb4 <xQueueGenericCreateStatic+0x84>
 800ccae:	68bb      	ldr	r3, [r7, #8]
 800ccb0:	2b00      	cmp	r3, #0
 800ccb2:	d101      	bne.n	800ccb8 <xQueueGenericCreateStatic+0x88>
 800ccb4:	2301      	movs	r3, #1
 800ccb6:	e000      	b.n	800ccba <xQueueGenericCreateStatic+0x8a>
 800ccb8:	2300      	movs	r3, #0
 800ccba:	2b00      	cmp	r3, #0
 800ccbc:	d10b      	bne.n	800ccd6 <xQueueGenericCreateStatic+0xa6>
 800ccbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ccc2:	f383 8811 	msr	BASEPRI, r3
 800ccc6:	f3bf 8f6f 	isb	sy
 800ccca:	f3bf 8f4f 	dsb	sy
 800ccce:	61fb      	str	r3, [r7, #28]
 800ccd0:	bf00      	nop
 800ccd2:	bf00      	nop
 800ccd4:	e7fd      	b.n	800ccd2 <xQueueGenericCreateStatic+0xa2>
 800ccd6:	2350      	movs	r3, #80	@ 0x50
 800ccd8:	617b      	str	r3, [r7, #20]
 800ccda:	697b      	ldr	r3, [r7, #20]
 800ccdc:	2b50      	cmp	r3, #80	@ 0x50
 800ccde:	d00b      	beq.n	800ccf8 <xQueueGenericCreateStatic+0xc8>
 800cce0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cce4:	f383 8811 	msr	BASEPRI, r3
 800cce8:	f3bf 8f6f 	isb	sy
 800ccec:	f3bf 8f4f 	dsb	sy
 800ccf0:	61bb      	str	r3, [r7, #24]
 800ccf2:	bf00      	nop
 800ccf4:	bf00      	nop
 800ccf6:	e7fd      	b.n	800ccf4 <xQueueGenericCreateStatic+0xc4>
 800ccf8:	697b      	ldr	r3, [r7, #20]
 800ccfa:	683b      	ldr	r3, [r7, #0]
 800ccfc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ccfe:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd00:	2b00      	cmp	r3, #0
 800cd02:	d00d      	beq.n	800cd20 <xQueueGenericCreateStatic+0xf0>
 800cd04:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd06:	2201      	movs	r2, #1
 800cd08:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800cd0c:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 800cd10:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd12:	9300      	str	r3, [sp, #0]
 800cd14:	4613      	mov	r3, r2
 800cd16:	687a      	ldr	r2, [r7, #4]
 800cd18:	68b9      	ldr	r1, [r7, #8]
 800cd1a:	68f8      	ldr	r0, [r7, #12]
 800cd1c:	f000 f840 	bl	800cda0 <prvInitialiseNewQueue>
 800cd20:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd22:	4618      	mov	r0, r3
 800cd24:	3730      	adds	r7, #48	@ 0x30
 800cd26:	46bd      	mov	sp, r7
 800cd28:	bd80      	pop	{r7, pc}

0800cd2a <xQueueGenericCreate>:
 800cd2a:	b580      	push	{r7, lr}
 800cd2c:	b08a      	sub	sp, #40	@ 0x28
 800cd2e:	af02      	add	r7, sp, #8
 800cd30:	60f8      	str	r0, [r7, #12]
 800cd32:	60b9      	str	r1, [r7, #8]
 800cd34:	4613      	mov	r3, r2
 800cd36:	71fb      	strb	r3, [r7, #7]
 800cd38:	68fb      	ldr	r3, [r7, #12]
 800cd3a:	2b00      	cmp	r3, #0
 800cd3c:	d10b      	bne.n	800cd56 <xQueueGenericCreate+0x2c>
 800cd3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cd42:	f383 8811 	msr	BASEPRI, r3
 800cd46:	f3bf 8f6f 	isb	sy
 800cd4a:	f3bf 8f4f 	dsb	sy
 800cd4e:	613b      	str	r3, [r7, #16]
 800cd50:	bf00      	nop
 800cd52:	bf00      	nop
 800cd54:	e7fd      	b.n	800cd52 <xQueueGenericCreate+0x28>
 800cd56:	68fb      	ldr	r3, [r7, #12]
 800cd58:	68ba      	ldr	r2, [r7, #8]
 800cd5a:	fb02 f303 	mul.w	r3, r2, r3
 800cd5e:	61fb      	str	r3, [r7, #28]
 800cd60:	69fb      	ldr	r3, [r7, #28]
 800cd62:	3350      	adds	r3, #80	@ 0x50
 800cd64:	4618      	mov	r0, r3
 800cd66:	f003 fa89 	bl	801027c <pvPortMalloc>
 800cd6a:	61b8      	str	r0, [r7, #24]
 800cd6c:	69bb      	ldr	r3, [r7, #24]
 800cd6e:	2b00      	cmp	r3, #0
 800cd70:	d011      	beq.n	800cd96 <xQueueGenericCreate+0x6c>
 800cd72:	69bb      	ldr	r3, [r7, #24]
 800cd74:	617b      	str	r3, [r7, #20]
 800cd76:	697b      	ldr	r3, [r7, #20]
 800cd78:	3350      	adds	r3, #80	@ 0x50
 800cd7a:	617b      	str	r3, [r7, #20]
 800cd7c:	69bb      	ldr	r3, [r7, #24]
 800cd7e:	2200      	movs	r2, #0
 800cd80:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800cd84:	79fa      	ldrb	r2, [r7, #7]
 800cd86:	69bb      	ldr	r3, [r7, #24]
 800cd88:	9300      	str	r3, [sp, #0]
 800cd8a:	4613      	mov	r3, r2
 800cd8c:	697a      	ldr	r2, [r7, #20]
 800cd8e:	68b9      	ldr	r1, [r7, #8]
 800cd90:	68f8      	ldr	r0, [r7, #12]
 800cd92:	f000 f805 	bl	800cda0 <prvInitialiseNewQueue>
 800cd96:	69bb      	ldr	r3, [r7, #24]
 800cd98:	4618      	mov	r0, r3
 800cd9a:	3720      	adds	r7, #32
 800cd9c:	46bd      	mov	sp, r7
 800cd9e:	bd80      	pop	{r7, pc}

0800cda0 <prvInitialiseNewQueue>:
 800cda0:	b580      	push	{r7, lr}
 800cda2:	b084      	sub	sp, #16
 800cda4:	af00      	add	r7, sp, #0
 800cda6:	60f8      	str	r0, [r7, #12]
 800cda8:	60b9      	str	r1, [r7, #8]
 800cdaa:	607a      	str	r2, [r7, #4]
 800cdac:	70fb      	strb	r3, [r7, #3]
 800cdae:	68bb      	ldr	r3, [r7, #8]
 800cdb0:	2b00      	cmp	r3, #0
 800cdb2:	d103      	bne.n	800cdbc <prvInitialiseNewQueue+0x1c>
 800cdb4:	69bb      	ldr	r3, [r7, #24]
 800cdb6:	69ba      	ldr	r2, [r7, #24]
 800cdb8:	601a      	str	r2, [r3, #0]
 800cdba:	e002      	b.n	800cdc2 <prvInitialiseNewQueue+0x22>
 800cdbc:	69bb      	ldr	r3, [r7, #24]
 800cdbe:	687a      	ldr	r2, [r7, #4]
 800cdc0:	601a      	str	r2, [r3, #0]
 800cdc2:	69bb      	ldr	r3, [r7, #24]
 800cdc4:	68fa      	ldr	r2, [r7, #12]
 800cdc6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800cdc8:	69bb      	ldr	r3, [r7, #24]
 800cdca:	68ba      	ldr	r2, [r7, #8]
 800cdcc:	641a      	str	r2, [r3, #64]	@ 0x40
 800cdce:	2101      	movs	r1, #1
 800cdd0:	69b8      	ldr	r0, [r7, #24]
 800cdd2:	f7ff fec3 	bl	800cb5c <xQueueGenericReset>
 800cdd6:	69bb      	ldr	r3, [r7, #24]
 800cdd8:	78fa      	ldrb	r2, [r7, #3]
 800cdda:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800cdde:	bf00      	nop
 800cde0:	3710      	adds	r7, #16
 800cde2:	46bd      	mov	sp, r7
 800cde4:	bd80      	pop	{r7, pc}

0800cde6 <prvInitialiseMutex>:
 800cde6:	b580      	push	{r7, lr}
 800cde8:	b082      	sub	sp, #8
 800cdea:	af00      	add	r7, sp, #0
 800cdec:	6078      	str	r0, [r7, #4]
 800cdee:	687b      	ldr	r3, [r7, #4]
 800cdf0:	2b00      	cmp	r3, #0
 800cdf2:	d00e      	beq.n	800ce12 <prvInitialiseMutex+0x2c>
 800cdf4:	687b      	ldr	r3, [r7, #4]
 800cdf6:	2200      	movs	r2, #0
 800cdf8:	609a      	str	r2, [r3, #8]
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	2200      	movs	r2, #0
 800cdfe:	601a      	str	r2, [r3, #0]
 800ce00:	687b      	ldr	r3, [r7, #4]
 800ce02:	2200      	movs	r2, #0
 800ce04:	60da      	str	r2, [r3, #12]
 800ce06:	2300      	movs	r3, #0
 800ce08:	2200      	movs	r2, #0
 800ce0a:	2100      	movs	r1, #0
 800ce0c:	6878      	ldr	r0, [r7, #4]
 800ce0e:	f000 f81d 	bl	800ce4c <xQueueGenericSend>
 800ce12:	bf00      	nop
 800ce14:	3708      	adds	r7, #8
 800ce16:	46bd      	mov	sp, r7
 800ce18:	bd80      	pop	{r7, pc}

0800ce1a <xQueueCreateMutex>:
 800ce1a:	b580      	push	{r7, lr}
 800ce1c:	b086      	sub	sp, #24
 800ce1e:	af00      	add	r7, sp, #0
 800ce20:	4603      	mov	r3, r0
 800ce22:	71fb      	strb	r3, [r7, #7]
 800ce24:	2301      	movs	r3, #1
 800ce26:	617b      	str	r3, [r7, #20]
 800ce28:	2300      	movs	r3, #0
 800ce2a:	613b      	str	r3, [r7, #16]
 800ce2c:	79fb      	ldrb	r3, [r7, #7]
 800ce2e:	461a      	mov	r2, r3
 800ce30:	6939      	ldr	r1, [r7, #16]
 800ce32:	6978      	ldr	r0, [r7, #20]
 800ce34:	f7ff ff79 	bl	800cd2a <xQueueGenericCreate>
 800ce38:	60f8      	str	r0, [r7, #12]
 800ce3a:	68f8      	ldr	r0, [r7, #12]
 800ce3c:	f7ff ffd3 	bl	800cde6 <prvInitialiseMutex>
 800ce40:	68fb      	ldr	r3, [r7, #12]
 800ce42:	4618      	mov	r0, r3
 800ce44:	3718      	adds	r7, #24
 800ce46:	46bd      	mov	sp, r7
 800ce48:	bd80      	pop	{r7, pc}
	...

0800ce4c <xQueueGenericSend>:
 800ce4c:	b580      	push	{r7, lr}
 800ce4e:	b08e      	sub	sp, #56	@ 0x38
 800ce50:	af00      	add	r7, sp, #0
 800ce52:	60f8      	str	r0, [r7, #12]
 800ce54:	60b9      	str	r1, [r7, #8]
 800ce56:	607a      	str	r2, [r7, #4]
 800ce58:	603b      	str	r3, [r7, #0]
 800ce5a:	2300      	movs	r3, #0
 800ce5c:	637b      	str	r3, [r7, #52]	@ 0x34
 800ce5e:	68fb      	ldr	r3, [r7, #12]
 800ce60:	633b      	str	r3, [r7, #48]	@ 0x30
 800ce62:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ce64:	2b00      	cmp	r3, #0
 800ce66:	d10b      	bne.n	800ce80 <xQueueGenericSend+0x34>
 800ce68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ce6c:	f383 8811 	msr	BASEPRI, r3
 800ce70:	f3bf 8f6f 	isb	sy
 800ce74:	f3bf 8f4f 	dsb	sy
 800ce78:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ce7a:	bf00      	nop
 800ce7c:	bf00      	nop
 800ce7e:	e7fd      	b.n	800ce7c <xQueueGenericSend+0x30>
 800ce80:	68bb      	ldr	r3, [r7, #8]
 800ce82:	2b00      	cmp	r3, #0
 800ce84:	d103      	bne.n	800ce8e <xQueueGenericSend+0x42>
 800ce86:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ce88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ce8a:	2b00      	cmp	r3, #0
 800ce8c:	d101      	bne.n	800ce92 <xQueueGenericSend+0x46>
 800ce8e:	2301      	movs	r3, #1
 800ce90:	e000      	b.n	800ce94 <xQueueGenericSend+0x48>
 800ce92:	2300      	movs	r3, #0
 800ce94:	2b00      	cmp	r3, #0
 800ce96:	d10b      	bne.n	800ceb0 <xQueueGenericSend+0x64>
 800ce98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ce9c:	f383 8811 	msr	BASEPRI, r3
 800cea0:	f3bf 8f6f 	isb	sy
 800cea4:	f3bf 8f4f 	dsb	sy
 800cea8:	627b      	str	r3, [r7, #36]	@ 0x24
 800ceaa:	bf00      	nop
 800ceac:	bf00      	nop
 800ceae:	e7fd      	b.n	800ceac <xQueueGenericSend+0x60>
 800ceb0:	683b      	ldr	r3, [r7, #0]
 800ceb2:	2b02      	cmp	r3, #2
 800ceb4:	d103      	bne.n	800cebe <xQueueGenericSend+0x72>
 800ceb6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ceb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ceba:	2b01      	cmp	r3, #1
 800cebc:	d101      	bne.n	800cec2 <xQueueGenericSend+0x76>
 800cebe:	2301      	movs	r3, #1
 800cec0:	e000      	b.n	800cec4 <xQueueGenericSend+0x78>
 800cec2:	2300      	movs	r3, #0
 800cec4:	2b00      	cmp	r3, #0
 800cec6:	d10b      	bne.n	800cee0 <xQueueGenericSend+0x94>
 800cec8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cecc:	f383 8811 	msr	BASEPRI, r3
 800ced0:	f3bf 8f6f 	isb	sy
 800ced4:	f3bf 8f4f 	dsb	sy
 800ced8:	623b      	str	r3, [r7, #32]
 800ceda:	bf00      	nop
 800cedc:	bf00      	nop
 800cede:	e7fd      	b.n	800cedc <xQueueGenericSend+0x90>
 800cee0:	f002 f83c 	bl	800ef5c <xTaskGetSchedulerState>
 800cee4:	4603      	mov	r3, r0
 800cee6:	2b00      	cmp	r3, #0
 800cee8:	d102      	bne.n	800cef0 <xQueueGenericSend+0xa4>
 800ceea:	687b      	ldr	r3, [r7, #4]
 800ceec:	2b00      	cmp	r3, #0
 800ceee:	d101      	bne.n	800cef4 <xQueueGenericSend+0xa8>
 800cef0:	2301      	movs	r3, #1
 800cef2:	e000      	b.n	800cef6 <xQueueGenericSend+0xaa>
 800cef4:	2300      	movs	r3, #0
 800cef6:	2b00      	cmp	r3, #0
 800cef8:	d10b      	bne.n	800cf12 <xQueueGenericSend+0xc6>
 800cefa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cefe:	f383 8811 	msr	BASEPRI, r3
 800cf02:	f3bf 8f6f 	isb	sy
 800cf06:	f3bf 8f4f 	dsb	sy
 800cf0a:	61fb      	str	r3, [r7, #28]
 800cf0c:	bf00      	nop
 800cf0e:	bf00      	nop
 800cf10:	e7fd      	b.n	800cf0e <xQueueGenericSend+0xc2>
 800cf12:	f003 f891 	bl	8010038 <vPortEnterCritical>
 800cf16:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cf18:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800cf1a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cf1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cf1e:	429a      	cmp	r2, r3
 800cf20:	d302      	bcc.n	800cf28 <xQueueGenericSend+0xdc>
 800cf22:	683b      	ldr	r3, [r7, #0]
 800cf24:	2b02      	cmp	r3, #2
 800cf26:	d129      	bne.n	800cf7c <xQueueGenericSend+0x130>
 800cf28:	683a      	ldr	r2, [r7, #0]
 800cf2a:	68b9      	ldr	r1, [r7, #8]
 800cf2c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800cf2e:	f000 fbb9 	bl	800d6a4 <prvCopyDataToQueue>
 800cf32:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800cf34:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cf36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	d010      	beq.n	800cf5e <xQueueGenericSend+0x112>
 800cf3c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cf3e:	3324      	adds	r3, #36	@ 0x24
 800cf40:	4618      	mov	r0, r3
 800cf42:	f001 fd43 	bl	800e9cc <xTaskRemoveFromEventList>
 800cf46:	4603      	mov	r3, r0
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	d013      	beq.n	800cf74 <xQueueGenericSend+0x128>
 800cf4c:	4b3f      	ldr	r3, [pc, #252]	@ (800d04c <xQueueGenericSend+0x200>)
 800cf4e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cf52:	601a      	str	r2, [r3, #0]
 800cf54:	f3bf 8f4f 	dsb	sy
 800cf58:	f3bf 8f6f 	isb	sy
 800cf5c:	e00a      	b.n	800cf74 <xQueueGenericSend+0x128>
 800cf5e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cf60:	2b00      	cmp	r3, #0
 800cf62:	d007      	beq.n	800cf74 <xQueueGenericSend+0x128>
 800cf64:	4b39      	ldr	r3, [pc, #228]	@ (800d04c <xQueueGenericSend+0x200>)
 800cf66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cf6a:	601a      	str	r2, [r3, #0]
 800cf6c:	f3bf 8f4f 	dsb	sy
 800cf70:	f3bf 8f6f 	isb	sy
 800cf74:	f003 f892 	bl	801009c <vPortExitCritical>
 800cf78:	2301      	movs	r3, #1
 800cf7a:	e063      	b.n	800d044 <xQueueGenericSend+0x1f8>
 800cf7c:	687b      	ldr	r3, [r7, #4]
 800cf7e:	2b00      	cmp	r3, #0
 800cf80:	d103      	bne.n	800cf8a <xQueueGenericSend+0x13e>
 800cf82:	f003 f88b 	bl	801009c <vPortExitCritical>
 800cf86:	2300      	movs	r3, #0
 800cf88:	e05c      	b.n	800d044 <xQueueGenericSend+0x1f8>
 800cf8a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cf8c:	2b00      	cmp	r3, #0
 800cf8e:	d106      	bne.n	800cf9e <xQueueGenericSend+0x152>
 800cf90:	f107 0314 	add.w	r3, r7, #20
 800cf94:	4618      	mov	r0, r3
 800cf96:	f001 fde1 	bl	800eb5c <vTaskInternalSetTimeOutState>
 800cf9a:	2301      	movs	r3, #1
 800cf9c:	637b      	str	r3, [r7, #52]	@ 0x34
 800cf9e:	f003 f87d 	bl	801009c <vPortExitCritical>
 800cfa2:	f001 f9d3 	bl	800e34c <vTaskSuspendAll>
 800cfa6:	f003 f847 	bl	8010038 <vPortEnterCritical>
 800cfaa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cfac:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800cfb0:	b25b      	sxtb	r3, r3
 800cfb2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cfb6:	d103      	bne.n	800cfc0 <xQueueGenericSend+0x174>
 800cfb8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cfba:	2200      	movs	r2, #0
 800cfbc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800cfc0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cfc2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800cfc6:	b25b      	sxtb	r3, r3
 800cfc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cfcc:	d103      	bne.n	800cfd6 <xQueueGenericSend+0x18a>
 800cfce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cfd0:	2200      	movs	r2, #0
 800cfd2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800cfd6:	f003 f861 	bl	801009c <vPortExitCritical>
 800cfda:	1d3a      	adds	r2, r7, #4
 800cfdc:	f107 0314 	add.w	r3, r7, #20
 800cfe0:	4611      	mov	r1, r2
 800cfe2:	4618      	mov	r0, r3
 800cfe4:	f001 fdd0 	bl	800eb88 <xTaskCheckForTimeOut>
 800cfe8:	4603      	mov	r3, r0
 800cfea:	2b00      	cmp	r3, #0
 800cfec:	d124      	bne.n	800d038 <xQueueGenericSend+0x1ec>
 800cfee:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800cff0:	f000 fc50 	bl	800d894 <prvIsQueueFull>
 800cff4:	4603      	mov	r3, r0
 800cff6:	2b00      	cmp	r3, #0
 800cff8:	d018      	beq.n	800d02c <xQueueGenericSend+0x1e0>
 800cffa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cffc:	3310      	adds	r3, #16
 800cffe:	687a      	ldr	r2, [r7, #4]
 800d000:	4611      	mov	r1, r2
 800d002:	4618      	mov	r0, r3
 800d004:	f001 fc52 	bl	800e8ac <vTaskPlaceOnEventList>
 800d008:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800d00a:	f000 fbdb 	bl	800d7c4 <prvUnlockQueue>
 800d00e:	f001 f9ab 	bl	800e368 <xTaskResumeAll>
 800d012:	4603      	mov	r3, r0
 800d014:	2b00      	cmp	r3, #0
 800d016:	f47f af7c 	bne.w	800cf12 <xQueueGenericSend+0xc6>
 800d01a:	4b0c      	ldr	r3, [pc, #48]	@ (800d04c <xQueueGenericSend+0x200>)
 800d01c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d020:	601a      	str	r2, [r3, #0]
 800d022:	f3bf 8f4f 	dsb	sy
 800d026:	f3bf 8f6f 	isb	sy
 800d02a:	e772      	b.n	800cf12 <xQueueGenericSend+0xc6>
 800d02c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800d02e:	f000 fbc9 	bl	800d7c4 <prvUnlockQueue>
 800d032:	f001 f999 	bl	800e368 <xTaskResumeAll>
 800d036:	e76c      	b.n	800cf12 <xQueueGenericSend+0xc6>
 800d038:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800d03a:	f000 fbc3 	bl	800d7c4 <prvUnlockQueue>
 800d03e:	f001 f993 	bl	800e368 <xTaskResumeAll>
 800d042:	2300      	movs	r3, #0
 800d044:	4618      	mov	r0, r3
 800d046:	3738      	adds	r7, #56	@ 0x38
 800d048:	46bd      	mov	sp, r7
 800d04a:	bd80      	pop	{r7, pc}
 800d04c:	e000ed04 	.word	0xe000ed04

0800d050 <xQueueGenericSendFromISR>:
 800d050:	b580      	push	{r7, lr}
 800d052:	b090      	sub	sp, #64	@ 0x40
 800d054:	af00      	add	r7, sp, #0
 800d056:	60f8      	str	r0, [r7, #12]
 800d058:	60b9      	str	r1, [r7, #8]
 800d05a:	607a      	str	r2, [r7, #4]
 800d05c:	603b      	str	r3, [r7, #0]
 800d05e:	68fb      	ldr	r3, [r7, #12]
 800d060:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d062:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d064:	2b00      	cmp	r3, #0
 800d066:	d10b      	bne.n	800d080 <xQueueGenericSendFromISR+0x30>
 800d068:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d06c:	f383 8811 	msr	BASEPRI, r3
 800d070:	f3bf 8f6f 	isb	sy
 800d074:	f3bf 8f4f 	dsb	sy
 800d078:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d07a:	bf00      	nop
 800d07c:	bf00      	nop
 800d07e:	e7fd      	b.n	800d07c <xQueueGenericSendFromISR+0x2c>
 800d080:	68bb      	ldr	r3, [r7, #8]
 800d082:	2b00      	cmp	r3, #0
 800d084:	d103      	bne.n	800d08e <xQueueGenericSendFromISR+0x3e>
 800d086:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d088:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d08a:	2b00      	cmp	r3, #0
 800d08c:	d101      	bne.n	800d092 <xQueueGenericSendFromISR+0x42>
 800d08e:	2301      	movs	r3, #1
 800d090:	e000      	b.n	800d094 <xQueueGenericSendFromISR+0x44>
 800d092:	2300      	movs	r3, #0
 800d094:	2b00      	cmp	r3, #0
 800d096:	d10b      	bne.n	800d0b0 <xQueueGenericSendFromISR+0x60>
 800d098:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d09c:	f383 8811 	msr	BASEPRI, r3
 800d0a0:	f3bf 8f6f 	isb	sy
 800d0a4:	f3bf 8f4f 	dsb	sy
 800d0a8:	627b      	str	r3, [r7, #36]	@ 0x24
 800d0aa:	bf00      	nop
 800d0ac:	bf00      	nop
 800d0ae:	e7fd      	b.n	800d0ac <xQueueGenericSendFromISR+0x5c>
 800d0b0:	683b      	ldr	r3, [r7, #0]
 800d0b2:	2b02      	cmp	r3, #2
 800d0b4:	d103      	bne.n	800d0be <xQueueGenericSendFromISR+0x6e>
 800d0b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d0b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d0ba:	2b01      	cmp	r3, #1
 800d0bc:	d101      	bne.n	800d0c2 <xQueueGenericSendFromISR+0x72>
 800d0be:	2301      	movs	r3, #1
 800d0c0:	e000      	b.n	800d0c4 <xQueueGenericSendFromISR+0x74>
 800d0c2:	2300      	movs	r3, #0
 800d0c4:	2b00      	cmp	r3, #0
 800d0c6:	d10b      	bne.n	800d0e0 <xQueueGenericSendFromISR+0x90>
 800d0c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d0cc:	f383 8811 	msr	BASEPRI, r3
 800d0d0:	f3bf 8f6f 	isb	sy
 800d0d4:	f3bf 8f4f 	dsb	sy
 800d0d8:	623b      	str	r3, [r7, #32]
 800d0da:	bf00      	nop
 800d0dc:	bf00      	nop
 800d0de:	e7fd      	b.n	800d0dc <xQueueGenericSendFromISR+0x8c>
 800d0e0:	f003 f88a 	bl	80101f8 <vPortValidateInterruptPriority>
 800d0e4:	f3ef 8211 	mrs	r2, BASEPRI
 800d0e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d0ec:	f383 8811 	msr	BASEPRI, r3
 800d0f0:	f3bf 8f6f 	isb	sy
 800d0f4:	f3bf 8f4f 	dsb	sy
 800d0f8:	61fa      	str	r2, [r7, #28]
 800d0fa:	61bb      	str	r3, [r7, #24]
 800d0fc:	69fb      	ldr	r3, [r7, #28]
 800d0fe:	637b      	str	r3, [r7, #52]	@ 0x34
 800d100:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d102:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800d104:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d106:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d108:	429a      	cmp	r2, r3
 800d10a:	d302      	bcc.n	800d112 <xQueueGenericSendFromISR+0xc2>
 800d10c:	683b      	ldr	r3, [r7, #0]
 800d10e:	2b02      	cmp	r3, #2
 800d110:	d12f      	bne.n	800d172 <xQueueGenericSendFromISR+0x122>
 800d112:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d114:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800d118:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800d11c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d11e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d120:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d122:	683a      	ldr	r2, [r7, #0]
 800d124:	68b9      	ldr	r1, [r7, #8]
 800d126:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800d128:	f000 fabc 	bl	800d6a4 <prvCopyDataToQueue>
 800d12c:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 800d130:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d134:	d112      	bne.n	800d15c <xQueueGenericSendFromISR+0x10c>
 800d136:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d138:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d13a:	2b00      	cmp	r3, #0
 800d13c:	d016      	beq.n	800d16c <xQueueGenericSendFromISR+0x11c>
 800d13e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d140:	3324      	adds	r3, #36	@ 0x24
 800d142:	4618      	mov	r0, r3
 800d144:	f001 fc42 	bl	800e9cc <xTaskRemoveFromEventList>
 800d148:	4603      	mov	r3, r0
 800d14a:	2b00      	cmp	r3, #0
 800d14c:	d00e      	beq.n	800d16c <xQueueGenericSendFromISR+0x11c>
 800d14e:	687b      	ldr	r3, [r7, #4]
 800d150:	2b00      	cmp	r3, #0
 800d152:	d00b      	beq.n	800d16c <xQueueGenericSendFromISR+0x11c>
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	2201      	movs	r2, #1
 800d158:	601a      	str	r2, [r3, #0]
 800d15a:	e007      	b.n	800d16c <xQueueGenericSendFromISR+0x11c>
 800d15c:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800d160:	3301      	adds	r3, #1
 800d162:	b2db      	uxtb	r3, r3
 800d164:	b25a      	sxtb	r2, r3
 800d166:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d168:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800d16c:	2301      	movs	r3, #1
 800d16e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d170:	e001      	b.n	800d176 <xQueueGenericSendFromISR+0x126>
 800d172:	2300      	movs	r3, #0
 800d174:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d176:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d178:	617b      	str	r3, [r7, #20]
 800d17a:	697b      	ldr	r3, [r7, #20]
 800d17c:	f383 8811 	msr	BASEPRI, r3
 800d180:	bf00      	nop
 800d182:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800d184:	4618      	mov	r0, r3
 800d186:	3740      	adds	r7, #64	@ 0x40
 800d188:	46bd      	mov	sp, r7
 800d18a:	bd80      	pop	{r7, pc}

0800d18c <xQueueReceive>:
 800d18c:	b580      	push	{r7, lr}
 800d18e:	b08c      	sub	sp, #48	@ 0x30
 800d190:	af00      	add	r7, sp, #0
 800d192:	60f8      	str	r0, [r7, #12]
 800d194:	60b9      	str	r1, [r7, #8]
 800d196:	607a      	str	r2, [r7, #4]
 800d198:	2300      	movs	r3, #0
 800d19a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d19c:	68fb      	ldr	r3, [r7, #12]
 800d19e:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d1a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d1a2:	2b00      	cmp	r3, #0
 800d1a4:	d10b      	bne.n	800d1be <xQueueReceive+0x32>
 800d1a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d1aa:	f383 8811 	msr	BASEPRI, r3
 800d1ae:	f3bf 8f6f 	isb	sy
 800d1b2:	f3bf 8f4f 	dsb	sy
 800d1b6:	623b      	str	r3, [r7, #32]
 800d1b8:	bf00      	nop
 800d1ba:	bf00      	nop
 800d1bc:	e7fd      	b.n	800d1ba <xQueueReceive+0x2e>
 800d1be:	68bb      	ldr	r3, [r7, #8]
 800d1c0:	2b00      	cmp	r3, #0
 800d1c2:	d103      	bne.n	800d1cc <xQueueReceive+0x40>
 800d1c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d1c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	d101      	bne.n	800d1d0 <xQueueReceive+0x44>
 800d1cc:	2301      	movs	r3, #1
 800d1ce:	e000      	b.n	800d1d2 <xQueueReceive+0x46>
 800d1d0:	2300      	movs	r3, #0
 800d1d2:	2b00      	cmp	r3, #0
 800d1d4:	d10b      	bne.n	800d1ee <xQueueReceive+0x62>
 800d1d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d1da:	f383 8811 	msr	BASEPRI, r3
 800d1de:	f3bf 8f6f 	isb	sy
 800d1e2:	f3bf 8f4f 	dsb	sy
 800d1e6:	61fb      	str	r3, [r7, #28]
 800d1e8:	bf00      	nop
 800d1ea:	bf00      	nop
 800d1ec:	e7fd      	b.n	800d1ea <xQueueReceive+0x5e>
 800d1ee:	f001 feb5 	bl	800ef5c <xTaskGetSchedulerState>
 800d1f2:	4603      	mov	r3, r0
 800d1f4:	2b00      	cmp	r3, #0
 800d1f6:	d102      	bne.n	800d1fe <xQueueReceive+0x72>
 800d1f8:	687b      	ldr	r3, [r7, #4]
 800d1fa:	2b00      	cmp	r3, #0
 800d1fc:	d101      	bne.n	800d202 <xQueueReceive+0x76>
 800d1fe:	2301      	movs	r3, #1
 800d200:	e000      	b.n	800d204 <xQueueReceive+0x78>
 800d202:	2300      	movs	r3, #0
 800d204:	2b00      	cmp	r3, #0
 800d206:	d10b      	bne.n	800d220 <xQueueReceive+0x94>
 800d208:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d20c:	f383 8811 	msr	BASEPRI, r3
 800d210:	f3bf 8f6f 	isb	sy
 800d214:	f3bf 8f4f 	dsb	sy
 800d218:	61bb      	str	r3, [r7, #24]
 800d21a:	bf00      	nop
 800d21c:	bf00      	nop
 800d21e:	e7fd      	b.n	800d21c <xQueueReceive+0x90>
 800d220:	f002 ff0a 	bl	8010038 <vPortEnterCritical>
 800d224:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d226:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d228:	627b      	str	r3, [r7, #36]	@ 0x24
 800d22a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d22c:	2b00      	cmp	r3, #0
 800d22e:	d01f      	beq.n	800d270 <xQueueReceive+0xe4>
 800d230:	68b9      	ldr	r1, [r7, #8]
 800d232:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d234:	f000 faa0 	bl	800d778 <prvCopyDataFromQueue>
 800d238:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d23a:	1e5a      	subs	r2, r3, #1
 800d23c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d23e:	639a      	str	r2, [r3, #56]	@ 0x38
 800d240:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d242:	691b      	ldr	r3, [r3, #16]
 800d244:	2b00      	cmp	r3, #0
 800d246:	d00f      	beq.n	800d268 <xQueueReceive+0xdc>
 800d248:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d24a:	3310      	adds	r3, #16
 800d24c:	4618      	mov	r0, r3
 800d24e:	f001 fbbd 	bl	800e9cc <xTaskRemoveFromEventList>
 800d252:	4603      	mov	r3, r0
 800d254:	2b00      	cmp	r3, #0
 800d256:	d007      	beq.n	800d268 <xQueueReceive+0xdc>
 800d258:	4b3c      	ldr	r3, [pc, #240]	@ (800d34c <xQueueReceive+0x1c0>)
 800d25a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d25e:	601a      	str	r2, [r3, #0]
 800d260:	f3bf 8f4f 	dsb	sy
 800d264:	f3bf 8f6f 	isb	sy
 800d268:	f002 ff18 	bl	801009c <vPortExitCritical>
 800d26c:	2301      	movs	r3, #1
 800d26e:	e069      	b.n	800d344 <xQueueReceive+0x1b8>
 800d270:	687b      	ldr	r3, [r7, #4]
 800d272:	2b00      	cmp	r3, #0
 800d274:	d103      	bne.n	800d27e <xQueueReceive+0xf2>
 800d276:	f002 ff11 	bl	801009c <vPortExitCritical>
 800d27a:	2300      	movs	r3, #0
 800d27c:	e062      	b.n	800d344 <xQueueReceive+0x1b8>
 800d27e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d280:	2b00      	cmp	r3, #0
 800d282:	d106      	bne.n	800d292 <xQueueReceive+0x106>
 800d284:	f107 0310 	add.w	r3, r7, #16
 800d288:	4618      	mov	r0, r3
 800d28a:	f001 fc67 	bl	800eb5c <vTaskInternalSetTimeOutState>
 800d28e:	2301      	movs	r3, #1
 800d290:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d292:	f002 ff03 	bl	801009c <vPortExitCritical>
 800d296:	f001 f859 	bl	800e34c <vTaskSuspendAll>
 800d29a:	f002 fecd 	bl	8010038 <vPortEnterCritical>
 800d29e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2a0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800d2a4:	b25b      	sxtb	r3, r3
 800d2a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d2aa:	d103      	bne.n	800d2b4 <xQueueReceive+0x128>
 800d2ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2ae:	2200      	movs	r2, #0
 800d2b0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800d2b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2b6:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800d2ba:	b25b      	sxtb	r3, r3
 800d2bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d2c0:	d103      	bne.n	800d2ca <xQueueReceive+0x13e>
 800d2c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2c4:	2200      	movs	r2, #0
 800d2c6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800d2ca:	f002 fee7 	bl	801009c <vPortExitCritical>
 800d2ce:	1d3a      	adds	r2, r7, #4
 800d2d0:	f107 0310 	add.w	r3, r7, #16
 800d2d4:	4611      	mov	r1, r2
 800d2d6:	4618      	mov	r0, r3
 800d2d8:	f001 fc56 	bl	800eb88 <xTaskCheckForTimeOut>
 800d2dc:	4603      	mov	r3, r0
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d123      	bne.n	800d32a <xQueueReceive+0x19e>
 800d2e2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d2e4:	f000 fac0 	bl	800d868 <prvIsQueueEmpty>
 800d2e8:	4603      	mov	r3, r0
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	d017      	beq.n	800d31e <xQueueReceive+0x192>
 800d2ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2f0:	3324      	adds	r3, #36	@ 0x24
 800d2f2:	687a      	ldr	r2, [r7, #4]
 800d2f4:	4611      	mov	r1, r2
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	f001 fad8 	bl	800e8ac <vTaskPlaceOnEventList>
 800d2fc:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d2fe:	f000 fa61 	bl	800d7c4 <prvUnlockQueue>
 800d302:	f001 f831 	bl	800e368 <xTaskResumeAll>
 800d306:	4603      	mov	r3, r0
 800d308:	2b00      	cmp	r3, #0
 800d30a:	d189      	bne.n	800d220 <xQueueReceive+0x94>
 800d30c:	4b0f      	ldr	r3, [pc, #60]	@ (800d34c <xQueueReceive+0x1c0>)
 800d30e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d312:	601a      	str	r2, [r3, #0]
 800d314:	f3bf 8f4f 	dsb	sy
 800d318:	f3bf 8f6f 	isb	sy
 800d31c:	e780      	b.n	800d220 <xQueueReceive+0x94>
 800d31e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d320:	f000 fa50 	bl	800d7c4 <prvUnlockQueue>
 800d324:	f001 f820 	bl	800e368 <xTaskResumeAll>
 800d328:	e77a      	b.n	800d220 <xQueueReceive+0x94>
 800d32a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d32c:	f000 fa4a 	bl	800d7c4 <prvUnlockQueue>
 800d330:	f001 f81a 	bl	800e368 <xTaskResumeAll>
 800d334:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800d336:	f000 fa97 	bl	800d868 <prvIsQueueEmpty>
 800d33a:	4603      	mov	r3, r0
 800d33c:	2b00      	cmp	r3, #0
 800d33e:	f43f af6f 	beq.w	800d220 <xQueueReceive+0x94>
 800d342:	2300      	movs	r3, #0
 800d344:	4618      	mov	r0, r3
 800d346:	3730      	adds	r7, #48	@ 0x30
 800d348:	46bd      	mov	sp, r7
 800d34a:	bd80      	pop	{r7, pc}
 800d34c:	e000ed04 	.word	0xe000ed04

0800d350 <xQueueSemaphoreTake>:
 800d350:	b580      	push	{r7, lr}
 800d352:	b08e      	sub	sp, #56	@ 0x38
 800d354:	af00      	add	r7, sp, #0
 800d356:	6078      	str	r0, [r7, #4]
 800d358:	6039      	str	r1, [r7, #0]
 800d35a:	2300      	movs	r3, #0
 800d35c:	637b      	str	r3, [r7, #52]	@ 0x34
 800d35e:	687b      	ldr	r3, [r7, #4]
 800d360:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d362:	2300      	movs	r3, #0
 800d364:	633b      	str	r3, [r7, #48]	@ 0x30
 800d366:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d368:	2b00      	cmp	r3, #0
 800d36a:	d10b      	bne.n	800d384 <xQueueSemaphoreTake+0x34>
 800d36c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d370:	f383 8811 	msr	BASEPRI, r3
 800d374:	f3bf 8f6f 	isb	sy
 800d378:	f3bf 8f4f 	dsb	sy
 800d37c:	623b      	str	r3, [r7, #32]
 800d37e:	bf00      	nop
 800d380:	bf00      	nop
 800d382:	e7fd      	b.n	800d380 <xQueueSemaphoreTake+0x30>
 800d384:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d386:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d388:	2b00      	cmp	r3, #0
 800d38a:	d00b      	beq.n	800d3a4 <xQueueSemaphoreTake+0x54>
 800d38c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d390:	f383 8811 	msr	BASEPRI, r3
 800d394:	f3bf 8f6f 	isb	sy
 800d398:	f3bf 8f4f 	dsb	sy
 800d39c:	61fb      	str	r3, [r7, #28]
 800d39e:	bf00      	nop
 800d3a0:	bf00      	nop
 800d3a2:	e7fd      	b.n	800d3a0 <xQueueSemaphoreTake+0x50>
 800d3a4:	f001 fdda 	bl	800ef5c <xTaskGetSchedulerState>
 800d3a8:	4603      	mov	r3, r0
 800d3aa:	2b00      	cmp	r3, #0
 800d3ac:	d102      	bne.n	800d3b4 <xQueueSemaphoreTake+0x64>
 800d3ae:	683b      	ldr	r3, [r7, #0]
 800d3b0:	2b00      	cmp	r3, #0
 800d3b2:	d101      	bne.n	800d3b8 <xQueueSemaphoreTake+0x68>
 800d3b4:	2301      	movs	r3, #1
 800d3b6:	e000      	b.n	800d3ba <xQueueSemaphoreTake+0x6a>
 800d3b8:	2300      	movs	r3, #0
 800d3ba:	2b00      	cmp	r3, #0
 800d3bc:	d10b      	bne.n	800d3d6 <xQueueSemaphoreTake+0x86>
 800d3be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3c2:	f383 8811 	msr	BASEPRI, r3
 800d3c6:	f3bf 8f6f 	isb	sy
 800d3ca:	f3bf 8f4f 	dsb	sy
 800d3ce:	61bb      	str	r3, [r7, #24]
 800d3d0:	bf00      	nop
 800d3d2:	bf00      	nop
 800d3d4:	e7fd      	b.n	800d3d2 <xQueueSemaphoreTake+0x82>
 800d3d6:	f002 fe2f 	bl	8010038 <vPortEnterCritical>
 800d3da:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d3dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d3de:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d3e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d3e2:	2b00      	cmp	r3, #0
 800d3e4:	d024      	beq.n	800d430 <xQueueSemaphoreTake+0xe0>
 800d3e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d3e8:	1e5a      	subs	r2, r3, #1
 800d3ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d3ec:	639a      	str	r2, [r3, #56]	@ 0x38
 800d3ee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d3f0:	681b      	ldr	r3, [r3, #0]
 800d3f2:	2b00      	cmp	r3, #0
 800d3f4:	d104      	bne.n	800d400 <xQueueSemaphoreTake+0xb0>
 800d3f6:	f001 ff43 	bl	800f280 <pvTaskIncrementMutexHeldCount>
 800d3fa:	4602      	mov	r2, r0
 800d3fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d3fe:	609a      	str	r2, [r3, #8]
 800d400:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d402:	691b      	ldr	r3, [r3, #16]
 800d404:	2b00      	cmp	r3, #0
 800d406:	d00f      	beq.n	800d428 <xQueueSemaphoreTake+0xd8>
 800d408:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d40a:	3310      	adds	r3, #16
 800d40c:	4618      	mov	r0, r3
 800d40e:	f001 fadd 	bl	800e9cc <xTaskRemoveFromEventList>
 800d412:	4603      	mov	r3, r0
 800d414:	2b00      	cmp	r3, #0
 800d416:	d007      	beq.n	800d428 <xQueueSemaphoreTake+0xd8>
 800d418:	4b54      	ldr	r3, [pc, #336]	@ (800d56c <xQueueSemaphoreTake+0x21c>)
 800d41a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d41e:	601a      	str	r2, [r3, #0]
 800d420:	f3bf 8f4f 	dsb	sy
 800d424:	f3bf 8f6f 	isb	sy
 800d428:	f002 fe38 	bl	801009c <vPortExitCritical>
 800d42c:	2301      	movs	r3, #1
 800d42e:	e098      	b.n	800d562 <xQueueSemaphoreTake+0x212>
 800d430:	683b      	ldr	r3, [r7, #0]
 800d432:	2b00      	cmp	r3, #0
 800d434:	d112      	bne.n	800d45c <xQueueSemaphoreTake+0x10c>
 800d436:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d438:	2b00      	cmp	r3, #0
 800d43a:	d00b      	beq.n	800d454 <xQueueSemaphoreTake+0x104>
 800d43c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d440:	f383 8811 	msr	BASEPRI, r3
 800d444:	f3bf 8f6f 	isb	sy
 800d448:	f3bf 8f4f 	dsb	sy
 800d44c:	617b      	str	r3, [r7, #20]
 800d44e:	bf00      	nop
 800d450:	bf00      	nop
 800d452:	e7fd      	b.n	800d450 <xQueueSemaphoreTake+0x100>
 800d454:	f002 fe22 	bl	801009c <vPortExitCritical>
 800d458:	2300      	movs	r3, #0
 800d45a:	e082      	b.n	800d562 <xQueueSemaphoreTake+0x212>
 800d45c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d45e:	2b00      	cmp	r3, #0
 800d460:	d106      	bne.n	800d470 <xQueueSemaphoreTake+0x120>
 800d462:	f107 030c 	add.w	r3, r7, #12
 800d466:	4618      	mov	r0, r3
 800d468:	f001 fb78 	bl	800eb5c <vTaskInternalSetTimeOutState>
 800d46c:	2301      	movs	r3, #1
 800d46e:	637b      	str	r3, [r7, #52]	@ 0x34
 800d470:	f002 fe14 	bl	801009c <vPortExitCritical>
 800d474:	f000 ff6a 	bl	800e34c <vTaskSuspendAll>
 800d478:	f002 fdde 	bl	8010038 <vPortEnterCritical>
 800d47c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d47e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800d482:	b25b      	sxtb	r3, r3
 800d484:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d488:	d103      	bne.n	800d492 <xQueueSemaphoreTake+0x142>
 800d48a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d48c:	2200      	movs	r2, #0
 800d48e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800d492:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d494:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800d498:	b25b      	sxtb	r3, r3
 800d49a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d49e:	d103      	bne.n	800d4a8 <xQueueSemaphoreTake+0x158>
 800d4a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d4a2:	2200      	movs	r2, #0
 800d4a4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800d4a8:	f002 fdf8 	bl	801009c <vPortExitCritical>
 800d4ac:	463a      	mov	r2, r7
 800d4ae:	f107 030c 	add.w	r3, r7, #12
 800d4b2:	4611      	mov	r1, r2
 800d4b4:	4618      	mov	r0, r3
 800d4b6:	f001 fb67 	bl	800eb88 <xTaskCheckForTimeOut>
 800d4ba:	4603      	mov	r3, r0
 800d4bc:	2b00      	cmp	r3, #0
 800d4be:	d132      	bne.n	800d526 <xQueueSemaphoreTake+0x1d6>
 800d4c0:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d4c2:	f000 f9d1 	bl	800d868 <prvIsQueueEmpty>
 800d4c6:	4603      	mov	r3, r0
 800d4c8:	2b00      	cmp	r3, #0
 800d4ca:	d026      	beq.n	800d51a <xQueueSemaphoreTake+0x1ca>
 800d4cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d4ce:	681b      	ldr	r3, [r3, #0]
 800d4d0:	2b00      	cmp	r3, #0
 800d4d2:	d109      	bne.n	800d4e8 <xQueueSemaphoreTake+0x198>
 800d4d4:	f002 fdb0 	bl	8010038 <vPortEnterCritical>
 800d4d8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d4da:	689b      	ldr	r3, [r3, #8]
 800d4dc:	4618      	mov	r0, r3
 800d4de:	f001 fd5b 	bl	800ef98 <xTaskPriorityInherit>
 800d4e2:	6338      	str	r0, [r7, #48]	@ 0x30
 800d4e4:	f002 fdda 	bl	801009c <vPortExitCritical>
 800d4e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d4ea:	3324      	adds	r3, #36	@ 0x24
 800d4ec:	683a      	ldr	r2, [r7, #0]
 800d4ee:	4611      	mov	r1, r2
 800d4f0:	4618      	mov	r0, r3
 800d4f2:	f001 f9db 	bl	800e8ac <vTaskPlaceOnEventList>
 800d4f6:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d4f8:	f000 f964 	bl	800d7c4 <prvUnlockQueue>
 800d4fc:	f000 ff34 	bl	800e368 <xTaskResumeAll>
 800d500:	4603      	mov	r3, r0
 800d502:	2b00      	cmp	r3, #0
 800d504:	f47f af67 	bne.w	800d3d6 <xQueueSemaphoreTake+0x86>
 800d508:	4b18      	ldr	r3, [pc, #96]	@ (800d56c <xQueueSemaphoreTake+0x21c>)
 800d50a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d50e:	601a      	str	r2, [r3, #0]
 800d510:	f3bf 8f4f 	dsb	sy
 800d514:	f3bf 8f6f 	isb	sy
 800d518:	e75d      	b.n	800d3d6 <xQueueSemaphoreTake+0x86>
 800d51a:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d51c:	f000 f952 	bl	800d7c4 <prvUnlockQueue>
 800d520:	f000 ff22 	bl	800e368 <xTaskResumeAll>
 800d524:	e757      	b.n	800d3d6 <xQueueSemaphoreTake+0x86>
 800d526:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d528:	f000 f94c 	bl	800d7c4 <prvUnlockQueue>
 800d52c:	f000 ff1c 	bl	800e368 <xTaskResumeAll>
 800d530:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d532:	f000 f999 	bl	800d868 <prvIsQueueEmpty>
 800d536:	4603      	mov	r3, r0
 800d538:	2b00      	cmp	r3, #0
 800d53a:	f43f af4c 	beq.w	800d3d6 <xQueueSemaphoreTake+0x86>
 800d53e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d540:	2b00      	cmp	r3, #0
 800d542:	d00d      	beq.n	800d560 <xQueueSemaphoreTake+0x210>
 800d544:	f002 fd78 	bl	8010038 <vPortEnterCritical>
 800d548:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800d54a:	f000 f893 	bl	800d674 <prvGetDisinheritPriorityAfterTimeout>
 800d54e:	6278      	str	r0, [r7, #36]	@ 0x24
 800d550:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d552:	689b      	ldr	r3, [r3, #8]
 800d554:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800d556:	4618      	mov	r0, r3
 800d558:	f001 fdf6 	bl	800f148 <vTaskPriorityDisinheritAfterTimeout>
 800d55c:	f002 fd9e 	bl	801009c <vPortExitCritical>
 800d560:	2300      	movs	r3, #0
 800d562:	4618      	mov	r0, r3
 800d564:	3738      	adds	r7, #56	@ 0x38
 800d566:	46bd      	mov	sp, r7
 800d568:	bd80      	pop	{r7, pc}
 800d56a:	bf00      	nop
 800d56c:	e000ed04 	.word	0xe000ed04

0800d570 <xQueueReceiveFromISR>:
 800d570:	b580      	push	{r7, lr}
 800d572:	b08e      	sub	sp, #56	@ 0x38
 800d574:	af00      	add	r7, sp, #0
 800d576:	60f8      	str	r0, [r7, #12]
 800d578:	60b9      	str	r1, [r7, #8]
 800d57a:	607a      	str	r2, [r7, #4]
 800d57c:	68fb      	ldr	r3, [r7, #12]
 800d57e:	633b      	str	r3, [r7, #48]	@ 0x30
 800d580:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d582:	2b00      	cmp	r3, #0
 800d584:	d10b      	bne.n	800d59e <xQueueReceiveFromISR+0x2e>
 800d586:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d58a:	f383 8811 	msr	BASEPRI, r3
 800d58e:	f3bf 8f6f 	isb	sy
 800d592:	f3bf 8f4f 	dsb	sy
 800d596:	623b      	str	r3, [r7, #32]
 800d598:	bf00      	nop
 800d59a:	bf00      	nop
 800d59c:	e7fd      	b.n	800d59a <xQueueReceiveFromISR+0x2a>
 800d59e:	68bb      	ldr	r3, [r7, #8]
 800d5a0:	2b00      	cmp	r3, #0
 800d5a2:	d103      	bne.n	800d5ac <xQueueReceiveFromISR+0x3c>
 800d5a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d5a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d5a8:	2b00      	cmp	r3, #0
 800d5aa:	d101      	bne.n	800d5b0 <xQueueReceiveFromISR+0x40>
 800d5ac:	2301      	movs	r3, #1
 800d5ae:	e000      	b.n	800d5b2 <xQueueReceiveFromISR+0x42>
 800d5b0:	2300      	movs	r3, #0
 800d5b2:	2b00      	cmp	r3, #0
 800d5b4:	d10b      	bne.n	800d5ce <xQueueReceiveFromISR+0x5e>
 800d5b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d5ba:	f383 8811 	msr	BASEPRI, r3
 800d5be:	f3bf 8f6f 	isb	sy
 800d5c2:	f3bf 8f4f 	dsb	sy
 800d5c6:	61fb      	str	r3, [r7, #28]
 800d5c8:	bf00      	nop
 800d5ca:	bf00      	nop
 800d5cc:	e7fd      	b.n	800d5ca <xQueueReceiveFromISR+0x5a>
 800d5ce:	f002 fe13 	bl	80101f8 <vPortValidateInterruptPriority>
 800d5d2:	f3ef 8211 	mrs	r2, BASEPRI
 800d5d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d5da:	f383 8811 	msr	BASEPRI, r3
 800d5de:	f3bf 8f6f 	isb	sy
 800d5e2:	f3bf 8f4f 	dsb	sy
 800d5e6:	61ba      	str	r2, [r7, #24]
 800d5e8:	617b      	str	r3, [r7, #20]
 800d5ea:	69bb      	ldr	r3, [r7, #24]
 800d5ec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d5ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d5f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d5f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d5f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d5f6:	2b00      	cmp	r3, #0
 800d5f8:	d02f      	beq.n	800d65a <xQueueReceiveFromISR+0xea>
 800d5fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d5fc:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800d600:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800d604:	68b9      	ldr	r1, [r7, #8]
 800d606:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800d608:	f000 f8b6 	bl	800d778 <prvCopyDataFromQueue>
 800d60c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d60e:	1e5a      	subs	r2, r3, #1
 800d610:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d612:	639a      	str	r2, [r3, #56]	@ 0x38
 800d614:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 800d618:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d61c:	d112      	bne.n	800d644 <xQueueReceiveFromISR+0xd4>
 800d61e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d620:	691b      	ldr	r3, [r3, #16]
 800d622:	2b00      	cmp	r3, #0
 800d624:	d016      	beq.n	800d654 <xQueueReceiveFromISR+0xe4>
 800d626:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d628:	3310      	adds	r3, #16
 800d62a:	4618      	mov	r0, r3
 800d62c:	f001 f9ce 	bl	800e9cc <xTaskRemoveFromEventList>
 800d630:	4603      	mov	r3, r0
 800d632:	2b00      	cmp	r3, #0
 800d634:	d00e      	beq.n	800d654 <xQueueReceiveFromISR+0xe4>
 800d636:	687b      	ldr	r3, [r7, #4]
 800d638:	2b00      	cmp	r3, #0
 800d63a:	d00b      	beq.n	800d654 <xQueueReceiveFromISR+0xe4>
 800d63c:	687b      	ldr	r3, [r7, #4]
 800d63e:	2201      	movs	r2, #1
 800d640:	601a      	str	r2, [r3, #0]
 800d642:	e007      	b.n	800d654 <xQueueReceiveFromISR+0xe4>
 800d644:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800d648:	3301      	adds	r3, #1
 800d64a:	b2db      	uxtb	r3, r3
 800d64c:	b25a      	sxtb	r2, r3
 800d64e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d650:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800d654:	2301      	movs	r3, #1
 800d656:	637b      	str	r3, [r7, #52]	@ 0x34
 800d658:	e001      	b.n	800d65e <xQueueReceiveFromISR+0xee>
 800d65a:	2300      	movs	r3, #0
 800d65c:	637b      	str	r3, [r7, #52]	@ 0x34
 800d65e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d660:	613b      	str	r3, [r7, #16]
 800d662:	693b      	ldr	r3, [r7, #16]
 800d664:	f383 8811 	msr	BASEPRI, r3
 800d668:	bf00      	nop
 800d66a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d66c:	4618      	mov	r0, r3
 800d66e:	3738      	adds	r7, #56	@ 0x38
 800d670:	46bd      	mov	sp, r7
 800d672:	bd80      	pop	{r7, pc}

0800d674 <prvGetDisinheritPriorityAfterTimeout>:
 800d674:	b480      	push	{r7}
 800d676:	b085      	sub	sp, #20
 800d678:	af00      	add	r7, sp, #0
 800d67a:	6078      	str	r0, [r7, #4]
 800d67c:	687b      	ldr	r3, [r7, #4]
 800d67e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d680:	2b00      	cmp	r3, #0
 800d682:	d006      	beq.n	800d692 <prvGetDisinheritPriorityAfterTimeout+0x1e>
 800d684:	687b      	ldr	r3, [r7, #4]
 800d686:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d688:	681b      	ldr	r3, [r3, #0]
 800d68a:	f1c3 0338 	rsb	r3, r3, #56	@ 0x38
 800d68e:	60fb      	str	r3, [r7, #12]
 800d690:	e001      	b.n	800d696 <prvGetDisinheritPriorityAfterTimeout+0x22>
 800d692:	2300      	movs	r3, #0
 800d694:	60fb      	str	r3, [r7, #12]
 800d696:	68fb      	ldr	r3, [r7, #12]
 800d698:	4618      	mov	r0, r3
 800d69a:	3714      	adds	r7, #20
 800d69c:	46bd      	mov	sp, r7
 800d69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6a2:	4770      	bx	lr

0800d6a4 <prvCopyDataToQueue>:
 800d6a4:	b580      	push	{r7, lr}
 800d6a6:	b086      	sub	sp, #24
 800d6a8:	af00      	add	r7, sp, #0
 800d6aa:	60f8      	str	r0, [r7, #12]
 800d6ac:	60b9      	str	r1, [r7, #8]
 800d6ae:	607a      	str	r2, [r7, #4]
 800d6b0:	2300      	movs	r3, #0
 800d6b2:	617b      	str	r3, [r7, #20]
 800d6b4:	68fb      	ldr	r3, [r7, #12]
 800d6b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d6b8:	613b      	str	r3, [r7, #16]
 800d6ba:	68fb      	ldr	r3, [r7, #12]
 800d6bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d6be:	2b00      	cmp	r3, #0
 800d6c0:	d10d      	bne.n	800d6de <prvCopyDataToQueue+0x3a>
 800d6c2:	68fb      	ldr	r3, [r7, #12]
 800d6c4:	681b      	ldr	r3, [r3, #0]
 800d6c6:	2b00      	cmp	r3, #0
 800d6c8:	d14d      	bne.n	800d766 <prvCopyDataToQueue+0xc2>
 800d6ca:	68fb      	ldr	r3, [r7, #12]
 800d6cc:	689b      	ldr	r3, [r3, #8]
 800d6ce:	4618      	mov	r0, r3
 800d6d0:	f001 fcca 	bl	800f068 <xTaskPriorityDisinherit>
 800d6d4:	6178      	str	r0, [r7, #20]
 800d6d6:	68fb      	ldr	r3, [r7, #12]
 800d6d8:	2200      	movs	r2, #0
 800d6da:	609a      	str	r2, [r3, #8]
 800d6dc:	e043      	b.n	800d766 <prvCopyDataToQueue+0xc2>
 800d6de:	687b      	ldr	r3, [r7, #4]
 800d6e0:	2b00      	cmp	r3, #0
 800d6e2:	d119      	bne.n	800d718 <prvCopyDataToQueue+0x74>
 800d6e4:	68fb      	ldr	r3, [r7, #12]
 800d6e6:	6858      	ldr	r0, [r3, #4]
 800d6e8:	68fb      	ldr	r3, [r7, #12]
 800d6ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d6ec:	461a      	mov	r2, r3
 800d6ee:	68b9      	ldr	r1, [r7, #8]
 800d6f0:	f005 f94b 	bl	801298a <memcpy>
 800d6f4:	68fb      	ldr	r3, [r7, #12]
 800d6f6:	685a      	ldr	r2, [r3, #4]
 800d6f8:	68fb      	ldr	r3, [r7, #12]
 800d6fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d6fc:	441a      	add	r2, r3
 800d6fe:	68fb      	ldr	r3, [r7, #12]
 800d700:	605a      	str	r2, [r3, #4]
 800d702:	68fb      	ldr	r3, [r7, #12]
 800d704:	685a      	ldr	r2, [r3, #4]
 800d706:	68fb      	ldr	r3, [r7, #12]
 800d708:	689b      	ldr	r3, [r3, #8]
 800d70a:	429a      	cmp	r2, r3
 800d70c:	d32b      	bcc.n	800d766 <prvCopyDataToQueue+0xc2>
 800d70e:	68fb      	ldr	r3, [r7, #12]
 800d710:	681a      	ldr	r2, [r3, #0]
 800d712:	68fb      	ldr	r3, [r7, #12]
 800d714:	605a      	str	r2, [r3, #4]
 800d716:	e026      	b.n	800d766 <prvCopyDataToQueue+0xc2>
 800d718:	68fb      	ldr	r3, [r7, #12]
 800d71a:	68d8      	ldr	r0, [r3, #12]
 800d71c:	68fb      	ldr	r3, [r7, #12]
 800d71e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d720:	461a      	mov	r2, r3
 800d722:	68b9      	ldr	r1, [r7, #8]
 800d724:	f005 f931 	bl	801298a <memcpy>
 800d728:	68fb      	ldr	r3, [r7, #12]
 800d72a:	68da      	ldr	r2, [r3, #12]
 800d72c:	68fb      	ldr	r3, [r7, #12]
 800d72e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d730:	425b      	negs	r3, r3
 800d732:	441a      	add	r2, r3
 800d734:	68fb      	ldr	r3, [r7, #12]
 800d736:	60da      	str	r2, [r3, #12]
 800d738:	68fb      	ldr	r3, [r7, #12]
 800d73a:	68da      	ldr	r2, [r3, #12]
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	681b      	ldr	r3, [r3, #0]
 800d740:	429a      	cmp	r2, r3
 800d742:	d207      	bcs.n	800d754 <prvCopyDataToQueue+0xb0>
 800d744:	68fb      	ldr	r3, [r7, #12]
 800d746:	689a      	ldr	r2, [r3, #8]
 800d748:	68fb      	ldr	r3, [r7, #12]
 800d74a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d74c:	425b      	negs	r3, r3
 800d74e:	441a      	add	r2, r3
 800d750:	68fb      	ldr	r3, [r7, #12]
 800d752:	60da      	str	r2, [r3, #12]
 800d754:	687b      	ldr	r3, [r7, #4]
 800d756:	2b02      	cmp	r3, #2
 800d758:	d105      	bne.n	800d766 <prvCopyDataToQueue+0xc2>
 800d75a:	693b      	ldr	r3, [r7, #16]
 800d75c:	2b00      	cmp	r3, #0
 800d75e:	d002      	beq.n	800d766 <prvCopyDataToQueue+0xc2>
 800d760:	693b      	ldr	r3, [r7, #16]
 800d762:	3b01      	subs	r3, #1
 800d764:	613b      	str	r3, [r7, #16]
 800d766:	693b      	ldr	r3, [r7, #16]
 800d768:	1c5a      	adds	r2, r3, #1
 800d76a:	68fb      	ldr	r3, [r7, #12]
 800d76c:	639a      	str	r2, [r3, #56]	@ 0x38
 800d76e:	697b      	ldr	r3, [r7, #20]
 800d770:	4618      	mov	r0, r3
 800d772:	3718      	adds	r7, #24
 800d774:	46bd      	mov	sp, r7
 800d776:	bd80      	pop	{r7, pc}

0800d778 <prvCopyDataFromQueue>:
 800d778:	b580      	push	{r7, lr}
 800d77a:	b082      	sub	sp, #8
 800d77c:	af00      	add	r7, sp, #0
 800d77e:	6078      	str	r0, [r7, #4]
 800d780:	6039      	str	r1, [r7, #0]
 800d782:	687b      	ldr	r3, [r7, #4]
 800d784:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d786:	2b00      	cmp	r3, #0
 800d788:	d018      	beq.n	800d7bc <prvCopyDataFromQueue+0x44>
 800d78a:	687b      	ldr	r3, [r7, #4]
 800d78c:	68da      	ldr	r2, [r3, #12]
 800d78e:	687b      	ldr	r3, [r7, #4]
 800d790:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d792:	441a      	add	r2, r3
 800d794:	687b      	ldr	r3, [r7, #4]
 800d796:	60da      	str	r2, [r3, #12]
 800d798:	687b      	ldr	r3, [r7, #4]
 800d79a:	68da      	ldr	r2, [r3, #12]
 800d79c:	687b      	ldr	r3, [r7, #4]
 800d79e:	689b      	ldr	r3, [r3, #8]
 800d7a0:	429a      	cmp	r2, r3
 800d7a2:	d303      	bcc.n	800d7ac <prvCopyDataFromQueue+0x34>
 800d7a4:	687b      	ldr	r3, [r7, #4]
 800d7a6:	681a      	ldr	r2, [r3, #0]
 800d7a8:	687b      	ldr	r3, [r7, #4]
 800d7aa:	60da      	str	r2, [r3, #12]
 800d7ac:	687b      	ldr	r3, [r7, #4]
 800d7ae:	68d9      	ldr	r1, [r3, #12]
 800d7b0:	687b      	ldr	r3, [r7, #4]
 800d7b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d7b4:	461a      	mov	r2, r3
 800d7b6:	6838      	ldr	r0, [r7, #0]
 800d7b8:	f005 f8e7 	bl	801298a <memcpy>
 800d7bc:	bf00      	nop
 800d7be:	3708      	adds	r7, #8
 800d7c0:	46bd      	mov	sp, r7
 800d7c2:	bd80      	pop	{r7, pc}

0800d7c4 <prvUnlockQueue>:
 800d7c4:	b580      	push	{r7, lr}
 800d7c6:	b084      	sub	sp, #16
 800d7c8:	af00      	add	r7, sp, #0
 800d7ca:	6078      	str	r0, [r7, #4]
 800d7cc:	f002 fc34 	bl	8010038 <vPortEnterCritical>
 800d7d0:	687b      	ldr	r3, [r7, #4]
 800d7d2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800d7d6:	73fb      	strb	r3, [r7, #15]
 800d7d8:	e011      	b.n	800d7fe <prvUnlockQueue+0x3a>
 800d7da:	687b      	ldr	r3, [r7, #4]
 800d7dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7de:	2b00      	cmp	r3, #0
 800d7e0:	d012      	beq.n	800d808 <prvUnlockQueue+0x44>
 800d7e2:	687b      	ldr	r3, [r7, #4]
 800d7e4:	3324      	adds	r3, #36	@ 0x24
 800d7e6:	4618      	mov	r0, r3
 800d7e8:	f001 f8f0 	bl	800e9cc <xTaskRemoveFromEventList>
 800d7ec:	4603      	mov	r3, r0
 800d7ee:	2b00      	cmp	r3, #0
 800d7f0:	d001      	beq.n	800d7f6 <prvUnlockQueue+0x32>
 800d7f2:	f001 fa2d 	bl	800ec50 <vTaskMissedYield>
 800d7f6:	7bfb      	ldrb	r3, [r7, #15]
 800d7f8:	3b01      	subs	r3, #1
 800d7fa:	b2db      	uxtb	r3, r3
 800d7fc:	73fb      	strb	r3, [r7, #15]
 800d7fe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800d802:	2b00      	cmp	r3, #0
 800d804:	dce9      	bgt.n	800d7da <prvUnlockQueue+0x16>
 800d806:	e000      	b.n	800d80a <prvUnlockQueue+0x46>
 800d808:	bf00      	nop
 800d80a:	687b      	ldr	r3, [r7, #4]
 800d80c:	22ff      	movs	r2, #255	@ 0xff
 800d80e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800d812:	f002 fc43 	bl	801009c <vPortExitCritical>
 800d816:	f002 fc0f 	bl	8010038 <vPortEnterCritical>
 800d81a:	687b      	ldr	r3, [r7, #4]
 800d81c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800d820:	73bb      	strb	r3, [r7, #14]
 800d822:	e011      	b.n	800d848 <prvUnlockQueue+0x84>
 800d824:	687b      	ldr	r3, [r7, #4]
 800d826:	691b      	ldr	r3, [r3, #16]
 800d828:	2b00      	cmp	r3, #0
 800d82a:	d012      	beq.n	800d852 <prvUnlockQueue+0x8e>
 800d82c:	687b      	ldr	r3, [r7, #4]
 800d82e:	3310      	adds	r3, #16
 800d830:	4618      	mov	r0, r3
 800d832:	f001 f8cb 	bl	800e9cc <xTaskRemoveFromEventList>
 800d836:	4603      	mov	r3, r0
 800d838:	2b00      	cmp	r3, #0
 800d83a:	d001      	beq.n	800d840 <prvUnlockQueue+0x7c>
 800d83c:	f001 fa08 	bl	800ec50 <vTaskMissedYield>
 800d840:	7bbb      	ldrb	r3, [r7, #14]
 800d842:	3b01      	subs	r3, #1
 800d844:	b2db      	uxtb	r3, r3
 800d846:	73bb      	strb	r3, [r7, #14]
 800d848:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800d84c:	2b00      	cmp	r3, #0
 800d84e:	dce9      	bgt.n	800d824 <prvUnlockQueue+0x60>
 800d850:	e000      	b.n	800d854 <prvUnlockQueue+0x90>
 800d852:	bf00      	nop
 800d854:	687b      	ldr	r3, [r7, #4]
 800d856:	22ff      	movs	r2, #255	@ 0xff
 800d858:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800d85c:	f002 fc1e 	bl	801009c <vPortExitCritical>
 800d860:	bf00      	nop
 800d862:	3710      	adds	r7, #16
 800d864:	46bd      	mov	sp, r7
 800d866:	bd80      	pop	{r7, pc}

0800d868 <prvIsQueueEmpty>:
 800d868:	b580      	push	{r7, lr}
 800d86a:	b084      	sub	sp, #16
 800d86c:	af00      	add	r7, sp, #0
 800d86e:	6078      	str	r0, [r7, #4]
 800d870:	f002 fbe2 	bl	8010038 <vPortEnterCritical>
 800d874:	687b      	ldr	r3, [r7, #4]
 800d876:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d878:	2b00      	cmp	r3, #0
 800d87a:	d102      	bne.n	800d882 <prvIsQueueEmpty+0x1a>
 800d87c:	2301      	movs	r3, #1
 800d87e:	60fb      	str	r3, [r7, #12]
 800d880:	e001      	b.n	800d886 <prvIsQueueEmpty+0x1e>
 800d882:	2300      	movs	r3, #0
 800d884:	60fb      	str	r3, [r7, #12]
 800d886:	f002 fc09 	bl	801009c <vPortExitCritical>
 800d88a:	68fb      	ldr	r3, [r7, #12]
 800d88c:	4618      	mov	r0, r3
 800d88e:	3710      	adds	r7, #16
 800d890:	46bd      	mov	sp, r7
 800d892:	bd80      	pop	{r7, pc}

0800d894 <prvIsQueueFull>:
 800d894:	b580      	push	{r7, lr}
 800d896:	b084      	sub	sp, #16
 800d898:	af00      	add	r7, sp, #0
 800d89a:	6078      	str	r0, [r7, #4]
 800d89c:	f002 fbcc 	bl	8010038 <vPortEnterCritical>
 800d8a0:	687b      	ldr	r3, [r7, #4]
 800d8a2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800d8a4:	687b      	ldr	r3, [r7, #4]
 800d8a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d8a8:	429a      	cmp	r2, r3
 800d8aa:	d102      	bne.n	800d8b2 <prvIsQueueFull+0x1e>
 800d8ac:	2301      	movs	r3, #1
 800d8ae:	60fb      	str	r3, [r7, #12]
 800d8b0:	e001      	b.n	800d8b6 <prvIsQueueFull+0x22>
 800d8b2:	2300      	movs	r3, #0
 800d8b4:	60fb      	str	r3, [r7, #12]
 800d8b6:	f002 fbf1 	bl	801009c <vPortExitCritical>
 800d8ba:	68fb      	ldr	r3, [r7, #12]
 800d8bc:	4618      	mov	r0, r3
 800d8be:	3710      	adds	r7, #16
 800d8c0:	46bd      	mov	sp, r7
 800d8c2:	bd80      	pop	{r7, pc}

0800d8c4 <vQueueAddToRegistry>:
 800d8c4:	b480      	push	{r7}
 800d8c6:	b085      	sub	sp, #20
 800d8c8:	af00      	add	r7, sp, #0
 800d8ca:	6078      	str	r0, [r7, #4]
 800d8cc:	6039      	str	r1, [r7, #0]
 800d8ce:	2300      	movs	r3, #0
 800d8d0:	60fb      	str	r3, [r7, #12]
 800d8d2:	e014      	b.n	800d8fe <vQueueAddToRegistry+0x3a>
 800d8d4:	4a0f      	ldr	r2, [pc, #60]	@ (800d914 <vQueueAddToRegistry+0x50>)
 800d8d6:	68fb      	ldr	r3, [r7, #12]
 800d8d8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800d8dc:	2b00      	cmp	r3, #0
 800d8de:	d10b      	bne.n	800d8f8 <vQueueAddToRegistry+0x34>
 800d8e0:	490c      	ldr	r1, [pc, #48]	@ (800d914 <vQueueAddToRegistry+0x50>)
 800d8e2:	68fb      	ldr	r3, [r7, #12]
 800d8e4:	683a      	ldr	r2, [r7, #0]
 800d8e6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800d8ea:	4a0a      	ldr	r2, [pc, #40]	@ (800d914 <vQueueAddToRegistry+0x50>)
 800d8ec:	68fb      	ldr	r3, [r7, #12]
 800d8ee:	00db      	lsls	r3, r3, #3
 800d8f0:	4413      	add	r3, r2
 800d8f2:	687a      	ldr	r2, [r7, #4]
 800d8f4:	605a      	str	r2, [r3, #4]
 800d8f6:	e006      	b.n	800d906 <vQueueAddToRegistry+0x42>
 800d8f8:	68fb      	ldr	r3, [r7, #12]
 800d8fa:	3301      	adds	r3, #1
 800d8fc:	60fb      	str	r3, [r7, #12]
 800d8fe:	68fb      	ldr	r3, [r7, #12]
 800d900:	2b07      	cmp	r3, #7
 800d902:	d9e7      	bls.n	800d8d4 <vQueueAddToRegistry+0x10>
 800d904:	bf00      	nop
 800d906:	bf00      	nop
 800d908:	3714      	adds	r7, #20
 800d90a:	46bd      	mov	sp, r7
 800d90c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d910:	4770      	bx	lr
 800d912:	bf00      	nop
 800d914:	20000f34 	.word	0x20000f34

0800d918 <vQueueWaitForMessageRestricted>:
 800d918:	b580      	push	{r7, lr}
 800d91a:	b086      	sub	sp, #24
 800d91c:	af00      	add	r7, sp, #0
 800d91e:	60f8      	str	r0, [r7, #12]
 800d920:	60b9      	str	r1, [r7, #8]
 800d922:	607a      	str	r2, [r7, #4]
 800d924:	68fb      	ldr	r3, [r7, #12]
 800d926:	617b      	str	r3, [r7, #20]
 800d928:	f002 fb86 	bl	8010038 <vPortEnterCritical>
 800d92c:	697b      	ldr	r3, [r7, #20]
 800d92e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800d932:	b25b      	sxtb	r3, r3
 800d934:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d938:	d103      	bne.n	800d942 <vQueueWaitForMessageRestricted+0x2a>
 800d93a:	697b      	ldr	r3, [r7, #20]
 800d93c:	2200      	movs	r2, #0
 800d93e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800d942:	697b      	ldr	r3, [r7, #20]
 800d944:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800d948:	b25b      	sxtb	r3, r3
 800d94a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d94e:	d103      	bne.n	800d958 <vQueueWaitForMessageRestricted+0x40>
 800d950:	697b      	ldr	r3, [r7, #20]
 800d952:	2200      	movs	r2, #0
 800d954:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800d958:	f002 fba0 	bl	801009c <vPortExitCritical>
 800d95c:	697b      	ldr	r3, [r7, #20]
 800d95e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d960:	2b00      	cmp	r3, #0
 800d962:	d106      	bne.n	800d972 <vQueueWaitForMessageRestricted+0x5a>
 800d964:	697b      	ldr	r3, [r7, #20]
 800d966:	3324      	adds	r3, #36	@ 0x24
 800d968:	687a      	ldr	r2, [r7, #4]
 800d96a:	68b9      	ldr	r1, [r7, #8]
 800d96c:	4618      	mov	r0, r3
 800d96e:	f001 f801 	bl	800e974 <vTaskPlaceOnEventListRestricted>
 800d972:	6978      	ldr	r0, [r7, #20]
 800d974:	f7ff ff26 	bl	800d7c4 <prvUnlockQueue>
 800d978:	bf00      	nop
 800d97a:	3718      	adds	r7, #24
 800d97c:	46bd      	mov	sp, r7
 800d97e:	bd80      	pop	{r7, pc}

0800d980 <xTaskCreateStatic>:
 800d980:	b580      	push	{r7, lr}
 800d982:	b08e      	sub	sp, #56	@ 0x38
 800d984:	af04      	add	r7, sp, #16
 800d986:	60f8      	str	r0, [r7, #12]
 800d988:	60b9      	str	r1, [r7, #8]
 800d98a:	607a      	str	r2, [r7, #4]
 800d98c:	603b      	str	r3, [r7, #0]
 800d98e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d990:	2b00      	cmp	r3, #0
 800d992:	d10b      	bne.n	800d9ac <xTaskCreateStatic+0x2c>
 800d994:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d998:	f383 8811 	msr	BASEPRI, r3
 800d99c:	f3bf 8f6f 	isb	sy
 800d9a0:	f3bf 8f4f 	dsb	sy
 800d9a4:	623b      	str	r3, [r7, #32]
 800d9a6:	bf00      	nop
 800d9a8:	bf00      	nop
 800d9aa:	e7fd      	b.n	800d9a8 <xTaskCreateStatic+0x28>
 800d9ac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9ae:	2b00      	cmp	r3, #0
 800d9b0:	d10b      	bne.n	800d9ca <xTaskCreateStatic+0x4a>
 800d9b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9b6:	f383 8811 	msr	BASEPRI, r3
 800d9ba:	f3bf 8f6f 	isb	sy
 800d9be:	f3bf 8f4f 	dsb	sy
 800d9c2:	61fb      	str	r3, [r7, #28]
 800d9c4:	bf00      	nop
 800d9c6:	bf00      	nop
 800d9c8:	e7fd      	b.n	800d9c6 <xTaskCreateStatic+0x46>
 800d9ca:	23a8      	movs	r3, #168	@ 0xa8
 800d9cc:	613b      	str	r3, [r7, #16]
 800d9ce:	693b      	ldr	r3, [r7, #16]
 800d9d0:	2ba8      	cmp	r3, #168	@ 0xa8
 800d9d2:	d00b      	beq.n	800d9ec <xTaskCreateStatic+0x6c>
 800d9d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9d8:	f383 8811 	msr	BASEPRI, r3
 800d9dc:	f3bf 8f6f 	isb	sy
 800d9e0:	f3bf 8f4f 	dsb	sy
 800d9e4:	61bb      	str	r3, [r7, #24]
 800d9e6:	bf00      	nop
 800d9e8:	bf00      	nop
 800d9ea:	e7fd      	b.n	800d9e8 <xTaskCreateStatic+0x68>
 800d9ec:	693b      	ldr	r3, [r7, #16]
 800d9ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9f0:	2b00      	cmp	r3, #0
 800d9f2:	d01e      	beq.n	800da32 <xTaskCreateStatic+0xb2>
 800d9f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d9f6:	2b00      	cmp	r3, #0
 800d9f8:	d01b      	beq.n	800da32 <xTaskCreateStatic+0xb2>
 800d9fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9fc:	627b      	str	r3, [r7, #36]	@ 0x24
 800d9fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800da00:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800da02:	631a      	str	r2, [r3, #48]	@ 0x30
 800da04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800da06:	2202      	movs	r2, #2
 800da08:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800da0c:	2300      	movs	r3, #0
 800da0e:	9303      	str	r3, [sp, #12]
 800da10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800da12:	9302      	str	r3, [sp, #8]
 800da14:	f107 0314 	add.w	r3, r7, #20
 800da18:	9301      	str	r3, [sp, #4]
 800da1a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800da1c:	9300      	str	r3, [sp, #0]
 800da1e:	683b      	ldr	r3, [r7, #0]
 800da20:	687a      	ldr	r2, [r7, #4]
 800da22:	68b9      	ldr	r1, [r7, #8]
 800da24:	68f8      	ldr	r0, [r7, #12]
 800da26:	f000 f851 	bl	800dacc <prvInitialiseNewTask>
 800da2a:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800da2c:	f000 f8f6 	bl	800dc1c <prvAddNewTaskToReadyList>
 800da30:	e001      	b.n	800da36 <xTaskCreateStatic+0xb6>
 800da32:	2300      	movs	r3, #0
 800da34:	617b      	str	r3, [r7, #20]
 800da36:	697b      	ldr	r3, [r7, #20]
 800da38:	4618      	mov	r0, r3
 800da3a:	3728      	adds	r7, #40	@ 0x28
 800da3c:	46bd      	mov	sp, r7
 800da3e:	bd80      	pop	{r7, pc}

0800da40 <xTaskCreate>:
 800da40:	b580      	push	{r7, lr}
 800da42:	b08c      	sub	sp, #48	@ 0x30
 800da44:	af04      	add	r7, sp, #16
 800da46:	60f8      	str	r0, [r7, #12]
 800da48:	60b9      	str	r1, [r7, #8]
 800da4a:	603b      	str	r3, [r7, #0]
 800da4c:	4613      	mov	r3, r2
 800da4e:	80fb      	strh	r3, [r7, #6]
 800da50:	88fb      	ldrh	r3, [r7, #6]
 800da52:	009b      	lsls	r3, r3, #2
 800da54:	4618      	mov	r0, r3
 800da56:	f002 fc11 	bl	801027c <pvPortMalloc>
 800da5a:	6178      	str	r0, [r7, #20]
 800da5c:	697b      	ldr	r3, [r7, #20]
 800da5e:	2b00      	cmp	r3, #0
 800da60:	d00e      	beq.n	800da80 <xTaskCreate+0x40>
 800da62:	20a8      	movs	r0, #168	@ 0xa8
 800da64:	f002 fc0a 	bl	801027c <pvPortMalloc>
 800da68:	61f8      	str	r0, [r7, #28]
 800da6a:	69fb      	ldr	r3, [r7, #28]
 800da6c:	2b00      	cmp	r3, #0
 800da6e:	d003      	beq.n	800da78 <xTaskCreate+0x38>
 800da70:	69fb      	ldr	r3, [r7, #28]
 800da72:	697a      	ldr	r2, [r7, #20]
 800da74:	631a      	str	r2, [r3, #48]	@ 0x30
 800da76:	e005      	b.n	800da84 <xTaskCreate+0x44>
 800da78:	6978      	ldr	r0, [r7, #20]
 800da7a:	f002 fccd 	bl	8010418 <vPortFree>
 800da7e:	e001      	b.n	800da84 <xTaskCreate+0x44>
 800da80:	2300      	movs	r3, #0
 800da82:	61fb      	str	r3, [r7, #28]
 800da84:	69fb      	ldr	r3, [r7, #28]
 800da86:	2b00      	cmp	r3, #0
 800da88:	d017      	beq.n	800daba <xTaskCreate+0x7a>
 800da8a:	69fb      	ldr	r3, [r7, #28]
 800da8c:	2200      	movs	r2, #0
 800da8e:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800da92:	88fa      	ldrh	r2, [r7, #6]
 800da94:	2300      	movs	r3, #0
 800da96:	9303      	str	r3, [sp, #12]
 800da98:	69fb      	ldr	r3, [r7, #28]
 800da9a:	9302      	str	r3, [sp, #8]
 800da9c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800da9e:	9301      	str	r3, [sp, #4]
 800daa0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800daa2:	9300      	str	r3, [sp, #0]
 800daa4:	683b      	ldr	r3, [r7, #0]
 800daa6:	68b9      	ldr	r1, [r7, #8]
 800daa8:	68f8      	ldr	r0, [r7, #12]
 800daaa:	f000 f80f 	bl	800dacc <prvInitialiseNewTask>
 800daae:	69f8      	ldr	r0, [r7, #28]
 800dab0:	f000 f8b4 	bl	800dc1c <prvAddNewTaskToReadyList>
 800dab4:	2301      	movs	r3, #1
 800dab6:	61bb      	str	r3, [r7, #24]
 800dab8:	e002      	b.n	800dac0 <xTaskCreate+0x80>
 800daba:	f04f 33ff 	mov.w	r3, #4294967295
 800dabe:	61bb      	str	r3, [r7, #24]
 800dac0:	69bb      	ldr	r3, [r7, #24]
 800dac2:	4618      	mov	r0, r3
 800dac4:	3720      	adds	r7, #32
 800dac6:	46bd      	mov	sp, r7
 800dac8:	bd80      	pop	{r7, pc}
	...

0800dacc <prvInitialiseNewTask>:
 800dacc:	b580      	push	{r7, lr}
 800dace:	b088      	sub	sp, #32
 800dad0:	af00      	add	r7, sp, #0
 800dad2:	60f8      	str	r0, [r7, #12]
 800dad4:	60b9      	str	r1, [r7, #8]
 800dad6:	607a      	str	r2, [r7, #4]
 800dad8:	603b      	str	r3, [r7, #0]
 800dada:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dadc:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800dade:	687b      	ldr	r3, [r7, #4]
 800dae0:	009b      	lsls	r3, r3, #2
 800dae2:	461a      	mov	r2, r3
 800dae4:	21a5      	movs	r1, #165	@ 0xa5
 800dae6:	f004 fdcd 	bl	8012684 <memset>
 800daea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800daec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800daee:	687b      	ldr	r3, [r7, #4]
 800daf0:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800daf4:	3b01      	subs	r3, #1
 800daf6:	009b      	lsls	r3, r3, #2
 800daf8:	4413      	add	r3, r2
 800dafa:	61bb      	str	r3, [r7, #24]
 800dafc:	69bb      	ldr	r3, [r7, #24]
 800dafe:	f023 0307 	bic.w	r3, r3, #7
 800db02:	61bb      	str	r3, [r7, #24]
 800db04:	69bb      	ldr	r3, [r7, #24]
 800db06:	f003 0307 	and.w	r3, r3, #7
 800db0a:	2b00      	cmp	r3, #0
 800db0c:	d00b      	beq.n	800db26 <prvInitialiseNewTask+0x5a>
 800db0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db12:	f383 8811 	msr	BASEPRI, r3
 800db16:	f3bf 8f6f 	isb	sy
 800db1a:	f3bf 8f4f 	dsb	sy
 800db1e:	617b      	str	r3, [r7, #20]
 800db20:	bf00      	nop
 800db22:	bf00      	nop
 800db24:	e7fd      	b.n	800db22 <prvInitialiseNewTask+0x56>
 800db26:	68bb      	ldr	r3, [r7, #8]
 800db28:	2b00      	cmp	r3, #0
 800db2a:	d01f      	beq.n	800db6c <prvInitialiseNewTask+0xa0>
 800db2c:	2300      	movs	r3, #0
 800db2e:	61fb      	str	r3, [r7, #28]
 800db30:	e012      	b.n	800db58 <prvInitialiseNewTask+0x8c>
 800db32:	68ba      	ldr	r2, [r7, #8]
 800db34:	69fb      	ldr	r3, [r7, #28]
 800db36:	4413      	add	r3, r2
 800db38:	7819      	ldrb	r1, [r3, #0]
 800db3a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800db3c:	69fb      	ldr	r3, [r7, #28]
 800db3e:	4413      	add	r3, r2
 800db40:	3334      	adds	r3, #52	@ 0x34
 800db42:	460a      	mov	r2, r1
 800db44:	701a      	strb	r2, [r3, #0]
 800db46:	68ba      	ldr	r2, [r7, #8]
 800db48:	69fb      	ldr	r3, [r7, #28]
 800db4a:	4413      	add	r3, r2
 800db4c:	781b      	ldrb	r3, [r3, #0]
 800db4e:	2b00      	cmp	r3, #0
 800db50:	d006      	beq.n	800db60 <prvInitialiseNewTask+0x94>
 800db52:	69fb      	ldr	r3, [r7, #28]
 800db54:	3301      	adds	r3, #1
 800db56:	61fb      	str	r3, [r7, #28]
 800db58:	69fb      	ldr	r3, [r7, #28]
 800db5a:	2b0f      	cmp	r3, #15
 800db5c:	d9e9      	bls.n	800db32 <prvInitialiseNewTask+0x66>
 800db5e:	e000      	b.n	800db62 <prvInitialiseNewTask+0x96>
 800db60:	bf00      	nop
 800db62:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db64:	2200      	movs	r2, #0
 800db66:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800db6a:	e003      	b.n	800db74 <prvInitialiseNewTask+0xa8>
 800db6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db6e:	2200      	movs	r2, #0
 800db70:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800db74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800db76:	2b37      	cmp	r3, #55	@ 0x37
 800db78:	d901      	bls.n	800db7e <prvInitialiseNewTask+0xb2>
 800db7a:	2337      	movs	r3, #55	@ 0x37
 800db7c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800db7e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db80:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800db82:	62da      	str	r2, [r3, #44]	@ 0x2c
 800db84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db86:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800db88:	64da      	str	r2, [r3, #76]	@ 0x4c
 800db8a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db8c:	2200      	movs	r2, #0
 800db8e:	651a      	str	r2, [r3, #80]	@ 0x50
 800db90:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db92:	3304      	adds	r3, #4
 800db94:	4618      	mov	r0, r3
 800db96:	f7fe ff4d 	bl	800ca34 <vListInitialiseItem>
 800db9a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800db9c:	3318      	adds	r3, #24
 800db9e:	4618      	mov	r0, r3
 800dba0:	f7fe ff48 	bl	800ca34 <vListInitialiseItem>
 800dba4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dba6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800dba8:	611a      	str	r2, [r3, #16]
 800dbaa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dbac:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800dbb0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbb2:	619a      	str	r2, [r3, #24]
 800dbb4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbb6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800dbb8:	625a      	str	r2, [r3, #36]	@ 0x24
 800dbba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbbc:	2200      	movs	r2, #0
 800dbbe:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800dbc2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbc4:	2200      	movs	r2, #0
 800dbc6:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800dbca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbcc:	3354      	adds	r3, #84	@ 0x54
 800dbce:	224c      	movs	r2, #76	@ 0x4c
 800dbd0:	2100      	movs	r1, #0
 800dbd2:	4618      	mov	r0, r3
 800dbd4:	f004 fd56 	bl	8012684 <memset>
 800dbd8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbda:	4a0d      	ldr	r2, [pc, #52]	@ (800dc10 <prvInitialiseNewTask+0x144>)
 800dbdc:	659a      	str	r2, [r3, #88]	@ 0x58
 800dbde:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbe0:	4a0c      	ldr	r2, [pc, #48]	@ (800dc14 <prvInitialiseNewTask+0x148>)
 800dbe2:	65da      	str	r2, [r3, #92]	@ 0x5c
 800dbe4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbe6:	4a0c      	ldr	r2, [pc, #48]	@ (800dc18 <prvInitialiseNewTask+0x14c>)
 800dbe8:	661a      	str	r2, [r3, #96]	@ 0x60
 800dbea:	683a      	ldr	r2, [r7, #0]
 800dbec:	68f9      	ldr	r1, [r7, #12]
 800dbee:	69b8      	ldr	r0, [r7, #24]
 800dbf0:	f002 f8f4 	bl	800fddc <pxPortInitialiseStack>
 800dbf4:	4602      	mov	r2, r0
 800dbf6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dbf8:	601a      	str	r2, [r3, #0]
 800dbfa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dbfc:	2b00      	cmp	r3, #0
 800dbfe:	d002      	beq.n	800dc06 <prvInitialiseNewTask+0x13a>
 800dc00:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dc02:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800dc04:	601a      	str	r2, [r3, #0]
 800dc06:	bf00      	nop
 800dc08:	3720      	adds	r7, #32
 800dc0a:	46bd      	mov	sp, r7
 800dc0c:	bd80      	pop	{r7, pc}
 800dc0e:	bf00      	nop
 800dc10:	200116bc 	.word	0x200116bc
 800dc14:	20011724 	.word	0x20011724
 800dc18:	2001178c 	.word	0x2001178c

0800dc1c <prvAddNewTaskToReadyList>:
 800dc1c:	b580      	push	{r7, lr}
 800dc1e:	b082      	sub	sp, #8
 800dc20:	af00      	add	r7, sp, #0
 800dc22:	6078      	str	r0, [r7, #4]
 800dc24:	f002 fa08 	bl	8010038 <vPortEnterCritical>
 800dc28:	4b2d      	ldr	r3, [pc, #180]	@ (800dce0 <prvAddNewTaskToReadyList+0xc4>)
 800dc2a:	681b      	ldr	r3, [r3, #0]
 800dc2c:	3301      	adds	r3, #1
 800dc2e:	4a2c      	ldr	r2, [pc, #176]	@ (800dce0 <prvAddNewTaskToReadyList+0xc4>)
 800dc30:	6013      	str	r3, [r2, #0]
 800dc32:	4b2c      	ldr	r3, [pc, #176]	@ (800dce4 <prvAddNewTaskToReadyList+0xc8>)
 800dc34:	681b      	ldr	r3, [r3, #0]
 800dc36:	2b00      	cmp	r3, #0
 800dc38:	d109      	bne.n	800dc4e <prvAddNewTaskToReadyList+0x32>
 800dc3a:	4a2a      	ldr	r2, [pc, #168]	@ (800dce4 <prvAddNewTaskToReadyList+0xc8>)
 800dc3c:	687b      	ldr	r3, [r7, #4]
 800dc3e:	6013      	str	r3, [r2, #0]
 800dc40:	4b27      	ldr	r3, [pc, #156]	@ (800dce0 <prvAddNewTaskToReadyList+0xc4>)
 800dc42:	681b      	ldr	r3, [r3, #0]
 800dc44:	2b01      	cmp	r3, #1
 800dc46:	d110      	bne.n	800dc6a <prvAddNewTaskToReadyList+0x4e>
 800dc48:	f001 f826 	bl	800ec98 <prvInitialiseTaskLists>
 800dc4c:	e00d      	b.n	800dc6a <prvAddNewTaskToReadyList+0x4e>
 800dc4e:	4b26      	ldr	r3, [pc, #152]	@ (800dce8 <prvAddNewTaskToReadyList+0xcc>)
 800dc50:	681b      	ldr	r3, [r3, #0]
 800dc52:	2b00      	cmp	r3, #0
 800dc54:	d109      	bne.n	800dc6a <prvAddNewTaskToReadyList+0x4e>
 800dc56:	4b23      	ldr	r3, [pc, #140]	@ (800dce4 <prvAddNewTaskToReadyList+0xc8>)
 800dc58:	681b      	ldr	r3, [r3, #0]
 800dc5a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dc5c:	687b      	ldr	r3, [r7, #4]
 800dc5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc60:	429a      	cmp	r2, r3
 800dc62:	d802      	bhi.n	800dc6a <prvAddNewTaskToReadyList+0x4e>
 800dc64:	4a1f      	ldr	r2, [pc, #124]	@ (800dce4 <prvAddNewTaskToReadyList+0xc8>)
 800dc66:	687b      	ldr	r3, [r7, #4]
 800dc68:	6013      	str	r3, [r2, #0]
 800dc6a:	4b20      	ldr	r3, [pc, #128]	@ (800dcec <prvAddNewTaskToReadyList+0xd0>)
 800dc6c:	681b      	ldr	r3, [r3, #0]
 800dc6e:	3301      	adds	r3, #1
 800dc70:	4a1e      	ldr	r2, [pc, #120]	@ (800dcec <prvAddNewTaskToReadyList+0xd0>)
 800dc72:	6013      	str	r3, [r2, #0]
 800dc74:	4b1d      	ldr	r3, [pc, #116]	@ (800dcec <prvAddNewTaskToReadyList+0xd0>)
 800dc76:	681a      	ldr	r2, [r3, #0]
 800dc78:	687b      	ldr	r3, [r7, #4]
 800dc7a:	645a      	str	r2, [r3, #68]	@ 0x44
 800dc7c:	687b      	ldr	r3, [r7, #4]
 800dc7e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dc80:	4b1b      	ldr	r3, [pc, #108]	@ (800dcf0 <prvAddNewTaskToReadyList+0xd4>)
 800dc82:	681b      	ldr	r3, [r3, #0]
 800dc84:	429a      	cmp	r2, r3
 800dc86:	d903      	bls.n	800dc90 <prvAddNewTaskToReadyList+0x74>
 800dc88:	687b      	ldr	r3, [r7, #4]
 800dc8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc8c:	4a18      	ldr	r2, [pc, #96]	@ (800dcf0 <prvAddNewTaskToReadyList+0xd4>)
 800dc8e:	6013      	str	r3, [r2, #0]
 800dc90:	687b      	ldr	r3, [r7, #4]
 800dc92:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dc94:	4613      	mov	r3, r2
 800dc96:	009b      	lsls	r3, r3, #2
 800dc98:	4413      	add	r3, r2
 800dc9a:	009b      	lsls	r3, r3, #2
 800dc9c:	4a15      	ldr	r2, [pc, #84]	@ (800dcf4 <prvAddNewTaskToReadyList+0xd8>)
 800dc9e:	441a      	add	r2, r3
 800dca0:	687b      	ldr	r3, [r7, #4]
 800dca2:	3304      	adds	r3, #4
 800dca4:	4619      	mov	r1, r3
 800dca6:	4610      	mov	r0, r2
 800dca8:	f7fe fed1 	bl	800ca4e <vListInsertEnd>
 800dcac:	f002 f9f6 	bl	801009c <vPortExitCritical>
 800dcb0:	4b0d      	ldr	r3, [pc, #52]	@ (800dce8 <prvAddNewTaskToReadyList+0xcc>)
 800dcb2:	681b      	ldr	r3, [r3, #0]
 800dcb4:	2b00      	cmp	r3, #0
 800dcb6:	d00e      	beq.n	800dcd6 <prvAddNewTaskToReadyList+0xba>
 800dcb8:	4b0a      	ldr	r3, [pc, #40]	@ (800dce4 <prvAddNewTaskToReadyList+0xc8>)
 800dcba:	681b      	ldr	r3, [r3, #0]
 800dcbc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dcbe:	687b      	ldr	r3, [r7, #4]
 800dcc0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dcc2:	429a      	cmp	r2, r3
 800dcc4:	d207      	bcs.n	800dcd6 <prvAddNewTaskToReadyList+0xba>
 800dcc6:	4b0c      	ldr	r3, [pc, #48]	@ (800dcf8 <prvAddNewTaskToReadyList+0xdc>)
 800dcc8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dccc:	601a      	str	r2, [r3, #0]
 800dcce:	f3bf 8f4f 	dsb	sy
 800dcd2:	f3bf 8f6f 	isb	sy
 800dcd6:	bf00      	nop
 800dcd8:	3708      	adds	r7, #8
 800dcda:	46bd      	mov	sp, r7
 800dcdc:	bd80      	pop	{r7, pc}
 800dcde:	bf00      	nop
 800dce0:	20001448 	.word	0x20001448
 800dce4:	20000f74 	.word	0x20000f74
 800dce8:	20001454 	.word	0x20001454
 800dcec:	20001464 	.word	0x20001464
 800dcf0:	20001450 	.word	0x20001450
 800dcf4:	20000f78 	.word	0x20000f78
 800dcf8:	e000ed04 	.word	0xe000ed04

0800dcfc <vTaskDelete>:
 800dcfc:	b580      	push	{r7, lr}
 800dcfe:	b084      	sub	sp, #16
 800dd00:	af00      	add	r7, sp, #0
 800dd02:	6078      	str	r0, [r7, #4]
 800dd04:	f002 f998 	bl	8010038 <vPortEnterCritical>
 800dd08:	687b      	ldr	r3, [r7, #4]
 800dd0a:	2b00      	cmp	r3, #0
 800dd0c:	d102      	bne.n	800dd14 <vTaskDelete+0x18>
 800dd0e:	4b2d      	ldr	r3, [pc, #180]	@ (800ddc4 <vTaskDelete+0xc8>)
 800dd10:	681b      	ldr	r3, [r3, #0]
 800dd12:	e000      	b.n	800dd16 <vTaskDelete+0x1a>
 800dd14:	687b      	ldr	r3, [r7, #4]
 800dd16:	60fb      	str	r3, [r7, #12]
 800dd18:	68fb      	ldr	r3, [r7, #12]
 800dd1a:	3304      	adds	r3, #4
 800dd1c:	4618      	mov	r0, r3
 800dd1e:	f7fe fef3 	bl	800cb08 <uxListRemove>
 800dd22:	68fb      	ldr	r3, [r7, #12]
 800dd24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dd26:	2b00      	cmp	r3, #0
 800dd28:	d004      	beq.n	800dd34 <vTaskDelete+0x38>
 800dd2a:	68fb      	ldr	r3, [r7, #12]
 800dd2c:	3318      	adds	r3, #24
 800dd2e:	4618      	mov	r0, r3
 800dd30:	f7fe feea 	bl	800cb08 <uxListRemove>
 800dd34:	4b24      	ldr	r3, [pc, #144]	@ (800ddc8 <vTaskDelete+0xcc>)
 800dd36:	681b      	ldr	r3, [r3, #0]
 800dd38:	3301      	adds	r3, #1
 800dd3a:	4a23      	ldr	r2, [pc, #140]	@ (800ddc8 <vTaskDelete+0xcc>)
 800dd3c:	6013      	str	r3, [r2, #0]
 800dd3e:	4b21      	ldr	r3, [pc, #132]	@ (800ddc4 <vTaskDelete+0xc8>)
 800dd40:	681b      	ldr	r3, [r3, #0]
 800dd42:	68fa      	ldr	r2, [r7, #12]
 800dd44:	429a      	cmp	r2, r3
 800dd46:	d10b      	bne.n	800dd60 <vTaskDelete+0x64>
 800dd48:	68fb      	ldr	r3, [r7, #12]
 800dd4a:	3304      	adds	r3, #4
 800dd4c:	4619      	mov	r1, r3
 800dd4e:	481f      	ldr	r0, [pc, #124]	@ (800ddcc <vTaskDelete+0xd0>)
 800dd50:	f7fe fe7d 	bl	800ca4e <vListInsertEnd>
 800dd54:	4b1e      	ldr	r3, [pc, #120]	@ (800ddd0 <vTaskDelete+0xd4>)
 800dd56:	681b      	ldr	r3, [r3, #0]
 800dd58:	3301      	adds	r3, #1
 800dd5a:	4a1d      	ldr	r2, [pc, #116]	@ (800ddd0 <vTaskDelete+0xd4>)
 800dd5c:	6013      	str	r3, [r2, #0]
 800dd5e:	e009      	b.n	800dd74 <vTaskDelete+0x78>
 800dd60:	4b1c      	ldr	r3, [pc, #112]	@ (800ddd4 <vTaskDelete+0xd8>)
 800dd62:	681b      	ldr	r3, [r3, #0]
 800dd64:	3b01      	subs	r3, #1
 800dd66:	4a1b      	ldr	r2, [pc, #108]	@ (800ddd4 <vTaskDelete+0xd8>)
 800dd68:	6013      	str	r3, [r2, #0]
 800dd6a:	68f8      	ldr	r0, [r7, #12]
 800dd6c:	f001 f8a0 	bl	800eeb0 <prvDeleteTCB>
 800dd70:	f001 f8d4 	bl	800ef1c <prvResetNextTaskUnblockTime>
 800dd74:	f002 f992 	bl	801009c <vPortExitCritical>
 800dd78:	4b17      	ldr	r3, [pc, #92]	@ (800ddd8 <vTaskDelete+0xdc>)
 800dd7a:	681b      	ldr	r3, [r3, #0]
 800dd7c:	2b00      	cmp	r3, #0
 800dd7e:	d01c      	beq.n	800ddba <vTaskDelete+0xbe>
 800dd80:	4b10      	ldr	r3, [pc, #64]	@ (800ddc4 <vTaskDelete+0xc8>)
 800dd82:	681b      	ldr	r3, [r3, #0]
 800dd84:	68fa      	ldr	r2, [r7, #12]
 800dd86:	429a      	cmp	r2, r3
 800dd88:	d117      	bne.n	800ddba <vTaskDelete+0xbe>
 800dd8a:	4b14      	ldr	r3, [pc, #80]	@ (800dddc <vTaskDelete+0xe0>)
 800dd8c:	681b      	ldr	r3, [r3, #0]
 800dd8e:	2b00      	cmp	r3, #0
 800dd90:	d00b      	beq.n	800ddaa <vTaskDelete+0xae>
 800dd92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd96:	f383 8811 	msr	BASEPRI, r3
 800dd9a:	f3bf 8f6f 	isb	sy
 800dd9e:	f3bf 8f4f 	dsb	sy
 800dda2:	60bb      	str	r3, [r7, #8]
 800dda4:	bf00      	nop
 800dda6:	bf00      	nop
 800dda8:	e7fd      	b.n	800dda6 <vTaskDelete+0xaa>
 800ddaa:	4b0d      	ldr	r3, [pc, #52]	@ (800dde0 <vTaskDelete+0xe4>)
 800ddac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ddb0:	601a      	str	r2, [r3, #0]
 800ddb2:	f3bf 8f4f 	dsb	sy
 800ddb6:	f3bf 8f6f 	isb	sy
 800ddba:	bf00      	nop
 800ddbc:	3710      	adds	r7, #16
 800ddbe:	46bd      	mov	sp, r7
 800ddc0:	bd80      	pop	{r7, pc}
 800ddc2:	bf00      	nop
 800ddc4:	20000f74 	.word	0x20000f74
 800ddc8:	20001464 	.word	0x20001464
 800ddcc:	2000141c 	.word	0x2000141c
 800ddd0:	20001430 	.word	0x20001430
 800ddd4:	20001448 	.word	0x20001448
 800ddd8:	20001454 	.word	0x20001454
 800dddc:	20001470 	.word	0x20001470
 800dde0:	e000ed04 	.word	0xe000ed04

0800dde4 <vTaskDelay>:
 800dde4:	b580      	push	{r7, lr}
 800dde6:	b084      	sub	sp, #16
 800dde8:	af00      	add	r7, sp, #0
 800ddea:	6078      	str	r0, [r7, #4]
 800ddec:	2300      	movs	r3, #0
 800ddee:	60fb      	str	r3, [r7, #12]
 800ddf0:	687b      	ldr	r3, [r7, #4]
 800ddf2:	2b00      	cmp	r3, #0
 800ddf4:	d018      	beq.n	800de28 <vTaskDelay+0x44>
 800ddf6:	4b14      	ldr	r3, [pc, #80]	@ (800de48 <vTaskDelay+0x64>)
 800ddf8:	681b      	ldr	r3, [r3, #0]
 800ddfa:	2b00      	cmp	r3, #0
 800ddfc:	d00b      	beq.n	800de16 <vTaskDelay+0x32>
 800ddfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de02:	f383 8811 	msr	BASEPRI, r3
 800de06:	f3bf 8f6f 	isb	sy
 800de0a:	f3bf 8f4f 	dsb	sy
 800de0e:	60bb      	str	r3, [r7, #8]
 800de10:	bf00      	nop
 800de12:	bf00      	nop
 800de14:	e7fd      	b.n	800de12 <vTaskDelay+0x2e>
 800de16:	f000 fa99 	bl	800e34c <vTaskSuspendAll>
 800de1a:	2100      	movs	r1, #0
 800de1c:	6878      	ldr	r0, [r7, #4]
 800de1e:	f001 fbb1 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800de22:	f000 faa1 	bl	800e368 <xTaskResumeAll>
 800de26:	60f8      	str	r0, [r7, #12]
 800de28:	68fb      	ldr	r3, [r7, #12]
 800de2a:	2b00      	cmp	r3, #0
 800de2c:	d107      	bne.n	800de3e <vTaskDelay+0x5a>
 800de2e:	4b07      	ldr	r3, [pc, #28]	@ (800de4c <vTaskDelay+0x68>)
 800de30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800de34:	601a      	str	r2, [r3, #0]
 800de36:	f3bf 8f4f 	dsb	sy
 800de3a:	f3bf 8f6f 	isb	sy
 800de3e:	bf00      	nop
 800de40:	3710      	adds	r7, #16
 800de42:	46bd      	mov	sp, r7
 800de44:	bd80      	pop	{r7, pc}
 800de46:	bf00      	nop
 800de48:	20001470 	.word	0x20001470
 800de4c:	e000ed04 	.word	0xe000ed04

0800de50 <eTaskGetState>:
 800de50:	b580      	push	{r7, lr}
 800de52:	b088      	sub	sp, #32
 800de54:	af00      	add	r7, sp, #0
 800de56:	6078      	str	r0, [r7, #4]
 800de58:	687b      	ldr	r3, [r7, #4]
 800de5a:	61bb      	str	r3, [r7, #24]
 800de5c:	69bb      	ldr	r3, [r7, #24]
 800de5e:	2b00      	cmp	r3, #0
 800de60:	d10b      	bne.n	800de7a <eTaskGetState+0x2a>
 800de62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de66:	f383 8811 	msr	BASEPRI, r3
 800de6a:	f3bf 8f6f 	isb	sy
 800de6e:	f3bf 8f4f 	dsb	sy
 800de72:	60bb      	str	r3, [r7, #8]
 800de74:	bf00      	nop
 800de76:	bf00      	nop
 800de78:	e7fd      	b.n	800de76 <eTaskGetState+0x26>
 800de7a:	4b24      	ldr	r3, [pc, #144]	@ (800df0c <eTaskGetState+0xbc>)
 800de7c:	681b      	ldr	r3, [r3, #0]
 800de7e:	69ba      	ldr	r2, [r7, #24]
 800de80:	429a      	cmp	r2, r3
 800de82:	d102      	bne.n	800de8a <eTaskGetState+0x3a>
 800de84:	2300      	movs	r3, #0
 800de86:	77fb      	strb	r3, [r7, #31]
 800de88:	e03a      	b.n	800df00 <eTaskGetState+0xb0>
 800de8a:	f002 f8d5 	bl	8010038 <vPortEnterCritical>
 800de8e:	69bb      	ldr	r3, [r7, #24]
 800de90:	695b      	ldr	r3, [r3, #20]
 800de92:	617b      	str	r3, [r7, #20]
 800de94:	4b1e      	ldr	r3, [pc, #120]	@ (800df10 <eTaskGetState+0xc0>)
 800de96:	681b      	ldr	r3, [r3, #0]
 800de98:	613b      	str	r3, [r7, #16]
 800de9a:	4b1e      	ldr	r3, [pc, #120]	@ (800df14 <eTaskGetState+0xc4>)
 800de9c:	681b      	ldr	r3, [r3, #0]
 800de9e:	60fb      	str	r3, [r7, #12]
 800dea0:	f002 f8fc 	bl	801009c <vPortExitCritical>
 800dea4:	697a      	ldr	r2, [r7, #20]
 800dea6:	693b      	ldr	r3, [r7, #16]
 800dea8:	429a      	cmp	r2, r3
 800deaa:	d003      	beq.n	800deb4 <eTaskGetState+0x64>
 800deac:	697a      	ldr	r2, [r7, #20]
 800deae:	68fb      	ldr	r3, [r7, #12]
 800deb0:	429a      	cmp	r2, r3
 800deb2:	d102      	bne.n	800deba <eTaskGetState+0x6a>
 800deb4:	2302      	movs	r3, #2
 800deb6:	77fb      	strb	r3, [r7, #31]
 800deb8:	e022      	b.n	800df00 <eTaskGetState+0xb0>
 800deba:	697b      	ldr	r3, [r7, #20]
 800debc:	4a16      	ldr	r2, [pc, #88]	@ (800df18 <eTaskGetState+0xc8>)
 800debe:	4293      	cmp	r3, r2
 800dec0:	d112      	bne.n	800dee8 <eTaskGetState+0x98>
 800dec2:	69bb      	ldr	r3, [r7, #24]
 800dec4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dec6:	2b00      	cmp	r3, #0
 800dec8:	d10b      	bne.n	800dee2 <eTaskGetState+0x92>
 800deca:	69bb      	ldr	r3, [r7, #24]
 800decc:	f893 30a4 	ldrb.w	r3, [r3, #164]	@ 0xa4
 800ded0:	b2db      	uxtb	r3, r3
 800ded2:	2b01      	cmp	r3, #1
 800ded4:	d102      	bne.n	800dedc <eTaskGetState+0x8c>
 800ded6:	2302      	movs	r3, #2
 800ded8:	77fb      	strb	r3, [r7, #31]
 800deda:	e011      	b.n	800df00 <eTaskGetState+0xb0>
 800dedc:	2303      	movs	r3, #3
 800dede:	77fb      	strb	r3, [r7, #31]
 800dee0:	e00e      	b.n	800df00 <eTaskGetState+0xb0>
 800dee2:	2302      	movs	r3, #2
 800dee4:	77fb      	strb	r3, [r7, #31]
 800dee6:	e00b      	b.n	800df00 <eTaskGetState+0xb0>
 800dee8:	697b      	ldr	r3, [r7, #20]
 800deea:	4a0c      	ldr	r2, [pc, #48]	@ (800df1c <eTaskGetState+0xcc>)
 800deec:	4293      	cmp	r3, r2
 800deee:	d002      	beq.n	800def6 <eTaskGetState+0xa6>
 800def0:	697b      	ldr	r3, [r7, #20]
 800def2:	2b00      	cmp	r3, #0
 800def4:	d102      	bne.n	800defc <eTaskGetState+0xac>
 800def6:	2304      	movs	r3, #4
 800def8:	77fb      	strb	r3, [r7, #31]
 800defa:	e001      	b.n	800df00 <eTaskGetState+0xb0>
 800defc:	2301      	movs	r3, #1
 800defe:	77fb      	strb	r3, [r7, #31]
 800df00:	7ffb      	ldrb	r3, [r7, #31]
 800df02:	4618      	mov	r0, r3
 800df04:	3720      	adds	r7, #32
 800df06:	46bd      	mov	sp, r7
 800df08:	bd80      	pop	{r7, pc}
 800df0a:	bf00      	nop
 800df0c:	20000f74 	.word	0x20000f74
 800df10:	20001400 	.word	0x20001400
 800df14:	20001404 	.word	0x20001404
 800df18:	20001434 	.word	0x20001434
 800df1c:	2000141c 	.word	0x2000141c

0800df20 <vTaskPrioritySet>:
 800df20:	b580      	push	{r7, lr}
 800df22:	b088      	sub	sp, #32
 800df24:	af00      	add	r7, sp, #0
 800df26:	6078      	str	r0, [r7, #4]
 800df28:	6039      	str	r1, [r7, #0]
 800df2a:	2300      	movs	r3, #0
 800df2c:	61fb      	str	r3, [r7, #28]
 800df2e:	683b      	ldr	r3, [r7, #0]
 800df30:	2b37      	cmp	r3, #55	@ 0x37
 800df32:	d90b      	bls.n	800df4c <vTaskPrioritySet+0x2c>
 800df34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df38:	f383 8811 	msr	BASEPRI, r3
 800df3c:	f3bf 8f6f 	isb	sy
 800df40:	f3bf 8f4f 	dsb	sy
 800df44:	60fb      	str	r3, [r7, #12]
 800df46:	bf00      	nop
 800df48:	bf00      	nop
 800df4a:	e7fd      	b.n	800df48 <vTaskPrioritySet+0x28>
 800df4c:	683b      	ldr	r3, [r7, #0]
 800df4e:	2b37      	cmp	r3, #55	@ 0x37
 800df50:	d901      	bls.n	800df56 <vTaskPrioritySet+0x36>
 800df52:	2337      	movs	r3, #55	@ 0x37
 800df54:	603b      	str	r3, [r7, #0]
 800df56:	f002 f86f 	bl	8010038 <vPortEnterCritical>
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d102      	bne.n	800df66 <vTaskPrioritySet+0x46>
 800df60:	4b3a      	ldr	r3, [pc, #232]	@ (800e04c <vTaskPrioritySet+0x12c>)
 800df62:	681b      	ldr	r3, [r3, #0]
 800df64:	e000      	b.n	800df68 <vTaskPrioritySet+0x48>
 800df66:	687b      	ldr	r3, [r7, #4]
 800df68:	61bb      	str	r3, [r7, #24]
 800df6a:	69bb      	ldr	r3, [r7, #24]
 800df6c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800df6e:	617b      	str	r3, [r7, #20]
 800df70:	697a      	ldr	r2, [r7, #20]
 800df72:	683b      	ldr	r3, [r7, #0]
 800df74:	429a      	cmp	r2, r3
 800df76:	d063      	beq.n	800e040 <vTaskPrioritySet+0x120>
 800df78:	683a      	ldr	r2, [r7, #0]
 800df7a:	697b      	ldr	r3, [r7, #20]
 800df7c:	429a      	cmp	r2, r3
 800df7e:	d90d      	bls.n	800df9c <vTaskPrioritySet+0x7c>
 800df80:	4b32      	ldr	r3, [pc, #200]	@ (800e04c <vTaskPrioritySet+0x12c>)
 800df82:	681b      	ldr	r3, [r3, #0]
 800df84:	69ba      	ldr	r2, [r7, #24]
 800df86:	429a      	cmp	r2, r3
 800df88:	d00f      	beq.n	800dfaa <vTaskPrioritySet+0x8a>
 800df8a:	4b30      	ldr	r3, [pc, #192]	@ (800e04c <vTaskPrioritySet+0x12c>)
 800df8c:	681b      	ldr	r3, [r3, #0]
 800df8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df90:	683a      	ldr	r2, [r7, #0]
 800df92:	429a      	cmp	r2, r3
 800df94:	d309      	bcc.n	800dfaa <vTaskPrioritySet+0x8a>
 800df96:	2301      	movs	r3, #1
 800df98:	61fb      	str	r3, [r7, #28]
 800df9a:	e006      	b.n	800dfaa <vTaskPrioritySet+0x8a>
 800df9c:	4b2b      	ldr	r3, [pc, #172]	@ (800e04c <vTaskPrioritySet+0x12c>)
 800df9e:	681b      	ldr	r3, [r3, #0]
 800dfa0:	69ba      	ldr	r2, [r7, #24]
 800dfa2:	429a      	cmp	r2, r3
 800dfa4:	d101      	bne.n	800dfaa <vTaskPrioritySet+0x8a>
 800dfa6:	2301      	movs	r3, #1
 800dfa8:	61fb      	str	r3, [r7, #28]
 800dfaa:	69bb      	ldr	r3, [r7, #24]
 800dfac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dfae:	613b      	str	r3, [r7, #16]
 800dfb0:	69bb      	ldr	r3, [r7, #24]
 800dfb2:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800dfb4:	69bb      	ldr	r3, [r7, #24]
 800dfb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dfb8:	429a      	cmp	r2, r3
 800dfba:	d102      	bne.n	800dfc2 <vTaskPrioritySet+0xa2>
 800dfbc:	69bb      	ldr	r3, [r7, #24]
 800dfbe:	683a      	ldr	r2, [r7, #0]
 800dfc0:	62da      	str	r2, [r3, #44]	@ 0x2c
 800dfc2:	69bb      	ldr	r3, [r7, #24]
 800dfc4:	683a      	ldr	r2, [r7, #0]
 800dfc6:	64da      	str	r2, [r3, #76]	@ 0x4c
 800dfc8:	69bb      	ldr	r3, [r7, #24]
 800dfca:	699b      	ldr	r3, [r3, #24]
 800dfcc:	2b00      	cmp	r3, #0
 800dfce:	db04      	blt.n	800dfda <vTaskPrioritySet+0xba>
 800dfd0:	683b      	ldr	r3, [r7, #0]
 800dfd2:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800dfd6:	69bb      	ldr	r3, [r7, #24]
 800dfd8:	619a      	str	r2, [r3, #24]
 800dfda:	69bb      	ldr	r3, [r7, #24]
 800dfdc:	6959      	ldr	r1, [r3, #20]
 800dfde:	693a      	ldr	r2, [r7, #16]
 800dfe0:	4613      	mov	r3, r2
 800dfe2:	009b      	lsls	r3, r3, #2
 800dfe4:	4413      	add	r3, r2
 800dfe6:	009b      	lsls	r3, r3, #2
 800dfe8:	4a19      	ldr	r2, [pc, #100]	@ (800e050 <vTaskPrioritySet+0x130>)
 800dfea:	4413      	add	r3, r2
 800dfec:	4299      	cmp	r1, r3
 800dfee:	d11c      	bne.n	800e02a <vTaskPrioritySet+0x10a>
 800dff0:	69bb      	ldr	r3, [r7, #24]
 800dff2:	3304      	adds	r3, #4
 800dff4:	4618      	mov	r0, r3
 800dff6:	f7fe fd87 	bl	800cb08 <uxListRemove>
 800dffa:	69bb      	ldr	r3, [r7, #24]
 800dffc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dffe:	4b15      	ldr	r3, [pc, #84]	@ (800e054 <vTaskPrioritySet+0x134>)
 800e000:	681b      	ldr	r3, [r3, #0]
 800e002:	429a      	cmp	r2, r3
 800e004:	d903      	bls.n	800e00e <vTaskPrioritySet+0xee>
 800e006:	69bb      	ldr	r3, [r7, #24]
 800e008:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e00a:	4a12      	ldr	r2, [pc, #72]	@ (800e054 <vTaskPrioritySet+0x134>)
 800e00c:	6013      	str	r3, [r2, #0]
 800e00e:	69bb      	ldr	r3, [r7, #24]
 800e010:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e012:	4613      	mov	r3, r2
 800e014:	009b      	lsls	r3, r3, #2
 800e016:	4413      	add	r3, r2
 800e018:	009b      	lsls	r3, r3, #2
 800e01a:	4a0d      	ldr	r2, [pc, #52]	@ (800e050 <vTaskPrioritySet+0x130>)
 800e01c:	441a      	add	r2, r3
 800e01e:	69bb      	ldr	r3, [r7, #24]
 800e020:	3304      	adds	r3, #4
 800e022:	4619      	mov	r1, r3
 800e024:	4610      	mov	r0, r2
 800e026:	f7fe fd12 	bl	800ca4e <vListInsertEnd>
 800e02a:	69fb      	ldr	r3, [r7, #28]
 800e02c:	2b00      	cmp	r3, #0
 800e02e:	d007      	beq.n	800e040 <vTaskPrioritySet+0x120>
 800e030:	4b09      	ldr	r3, [pc, #36]	@ (800e058 <vTaskPrioritySet+0x138>)
 800e032:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e036:	601a      	str	r2, [r3, #0]
 800e038:	f3bf 8f4f 	dsb	sy
 800e03c:	f3bf 8f6f 	isb	sy
 800e040:	f002 f82c 	bl	801009c <vPortExitCritical>
 800e044:	bf00      	nop
 800e046:	3720      	adds	r7, #32
 800e048:	46bd      	mov	sp, r7
 800e04a:	bd80      	pop	{r7, pc}
 800e04c:	20000f74 	.word	0x20000f74
 800e050:	20000f78 	.word	0x20000f78
 800e054:	20001450 	.word	0x20001450
 800e058:	e000ed04 	.word	0xe000ed04

0800e05c <vTaskSuspend>:
 800e05c:	b580      	push	{r7, lr}
 800e05e:	b084      	sub	sp, #16
 800e060:	af00      	add	r7, sp, #0
 800e062:	6078      	str	r0, [r7, #4]
 800e064:	f001 ffe8 	bl	8010038 <vPortEnterCritical>
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	2b00      	cmp	r3, #0
 800e06c:	d102      	bne.n	800e074 <vTaskSuspend+0x18>
 800e06e:	4b30      	ldr	r3, [pc, #192]	@ (800e130 <vTaskSuspend+0xd4>)
 800e070:	681b      	ldr	r3, [r3, #0]
 800e072:	e000      	b.n	800e076 <vTaskSuspend+0x1a>
 800e074:	687b      	ldr	r3, [r7, #4]
 800e076:	60fb      	str	r3, [r7, #12]
 800e078:	68fb      	ldr	r3, [r7, #12]
 800e07a:	3304      	adds	r3, #4
 800e07c:	4618      	mov	r0, r3
 800e07e:	f7fe fd43 	bl	800cb08 <uxListRemove>
 800e082:	68fb      	ldr	r3, [r7, #12]
 800e084:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e086:	2b00      	cmp	r3, #0
 800e088:	d004      	beq.n	800e094 <vTaskSuspend+0x38>
 800e08a:	68fb      	ldr	r3, [r7, #12]
 800e08c:	3318      	adds	r3, #24
 800e08e:	4618      	mov	r0, r3
 800e090:	f7fe fd3a 	bl	800cb08 <uxListRemove>
 800e094:	68fb      	ldr	r3, [r7, #12]
 800e096:	3304      	adds	r3, #4
 800e098:	4619      	mov	r1, r3
 800e09a:	4826      	ldr	r0, [pc, #152]	@ (800e134 <vTaskSuspend+0xd8>)
 800e09c:	f7fe fcd7 	bl	800ca4e <vListInsertEnd>
 800e0a0:	68fb      	ldr	r3, [r7, #12]
 800e0a2:	f893 30a4 	ldrb.w	r3, [r3, #164]	@ 0xa4
 800e0a6:	b2db      	uxtb	r3, r3
 800e0a8:	2b01      	cmp	r3, #1
 800e0aa:	d103      	bne.n	800e0b4 <vTaskSuspend+0x58>
 800e0ac:	68fb      	ldr	r3, [r7, #12]
 800e0ae:	2200      	movs	r2, #0
 800e0b0:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800e0b4:	f001 fff2 	bl	801009c <vPortExitCritical>
 800e0b8:	4b1f      	ldr	r3, [pc, #124]	@ (800e138 <vTaskSuspend+0xdc>)
 800e0ba:	681b      	ldr	r3, [r3, #0]
 800e0bc:	2b00      	cmp	r3, #0
 800e0be:	d005      	beq.n	800e0cc <vTaskSuspend+0x70>
 800e0c0:	f001 ffba 	bl	8010038 <vPortEnterCritical>
 800e0c4:	f000 ff2a 	bl	800ef1c <prvResetNextTaskUnblockTime>
 800e0c8:	f001 ffe8 	bl	801009c <vPortExitCritical>
 800e0cc:	4b18      	ldr	r3, [pc, #96]	@ (800e130 <vTaskSuspend+0xd4>)
 800e0ce:	681b      	ldr	r3, [r3, #0]
 800e0d0:	68fa      	ldr	r2, [r7, #12]
 800e0d2:	429a      	cmp	r2, r3
 800e0d4:	d128      	bne.n	800e128 <vTaskSuspend+0xcc>
 800e0d6:	4b18      	ldr	r3, [pc, #96]	@ (800e138 <vTaskSuspend+0xdc>)
 800e0d8:	681b      	ldr	r3, [r3, #0]
 800e0da:	2b00      	cmp	r3, #0
 800e0dc:	d018      	beq.n	800e110 <vTaskSuspend+0xb4>
 800e0de:	4b17      	ldr	r3, [pc, #92]	@ (800e13c <vTaskSuspend+0xe0>)
 800e0e0:	681b      	ldr	r3, [r3, #0]
 800e0e2:	2b00      	cmp	r3, #0
 800e0e4:	d00b      	beq.n	800e0fe <vTaskSuspend+0xa2>
 800e0e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e0ea:	f383 8811 	msr	BASEPRI, r3
 800e0ee:	f3bf 8f6f 	isb	sy
 800e0f2:	f3bf 8f4f 	dsb	sy
 800e0f6:	60bb      	str	r3, [r7, #8]
 800e0f8:	bf00      	nop
 800e0fa:	bf00      	nop
 800e0fc:	e7fd      	b.n	800e0fa <vTaskSuspend+0x9e>
 800e0fe:	4b10      	ldr	r3, [pc, #64]	@ (800e140 <vTaskSuspend+0xe4>)
 800e100:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e104:	601a      	str	r2, [r3, #0]
 800e106:	f3bf 8f4f 	dsb	sy
 800e10a:	f3bf 8f6f 	isb	sy
 800e10e:	e00b      	b.n	800e128 <vTaskSuspend+0xcc>
 800e110:	4b08      	ldr	r3, [pc, #32]	@ (800e134 <vTaskSuspend+0xd8>)
 800e112:	681a      	ldr	r2, [r3, #0]
 800e114:	4b0b      	ldr	r3, [pc, #44]	@ (800e144 <vTaskSuspend+0xe8>)
 800e116:	681b      	ldr	r3, [r3, #0]
 800e118:	429a      	cmp	r2, r3
 800e11a:	d103      	bne.n	800e124 <vTaskSuspend+0xc8>
 800e11c:	4b04      	ldr	r3, [pc, #16]	@ (800e130 <vTaskSuspend+0xd4>)
 800e11e:	2200      	movs	r2, #0
 800e120:	601a      	str	r2, [r3, #0]
 800e122:	e001      	b.n	800e128 <vTaskSuspend+0xcc>
 800e124:	f000 fb5c 	bl	800e7e0 <vTaskSwitchContext>
 800e128:	bf00      	nop
 800e12a:	3710      	adds	r7, #16
 800e12c:	46bd      	mov	sp, r7
 800e12e:	bd80      	pop	{r7, pc}
 800e130:	20000f74 	.word	0x20000f74
 800e134:	20001434 	.word	0x20001434
 800e138:	20001454 	.word	0x20001454
 800e13c:	20001470 	.word	0x20001470
 800e140:	e000ed04 	.word	0xe000ed04
 800e144:	20001448 	.word	0x20001448

0800e148 <prvTaskIsTaskSuspended>:
 800e148:	b480      	push	{r7}
 800e14a:	b087      	sub	sp, #28
 800e14c:	af00      	add	r7, sp, #0
 800e14e:	6078      	str	r0, [r7, #4]
 800e150:	2300      	movs	r3, #0
 800e152:	617b      	str	r3, [r7, #20]
 800e154:	687b      	ldr	r3, [r7, #4]
 800e156:	613b      	str	r3, [r7, #16]
 800e158:	687b      	ldr	r3, [r7, #4]
 800e15a:	2b00      	cmp	r3, #0
 800e15c:	d10b      	bne.n	800e176 <prvTaskIsTaskSuspended+0x2e>
 800e15e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e162:	f383 8811 	msr	BASEPRI, r3
 800e166:	f3bf 8f6f 	isb	sy
 800e16a:	f3bf 8f4f 	dsb	sy
 800e16e:	60fb      	str	r3, [r7, #12]
 800e170:	bf00      	nop
 800e172:	bf00      	nop
 800e174:	e7fd      	b.n	800e172 <prvTaskIsTaskSuspended+0x2a>
 800e176:	693b      	ldr	r3, [r7, #16]
 800e178:	695b      	ldr	r3, [r3, #20]
 800e17a:	4a0a      	ldr	r2, [pc, #40]	@ (800e1a4 <prvTaskIsTaskSuspended+0x5c>)
 800e17c:	4293      	cmp	r3, r2
 800e17e:	d10a      	bne.n	800e196 <prvTaskIsTaskSuspended+0x4e>
 800e180:	693b      	ldr	r3, [r7, #16]
 800e182:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e184:	4a08      	ldr	r2, [pc, #32]	@ (800e1a8 <prvTaskIsTaskSuspended+0x60>)
 800e186:	4293      	cmp	r3, r2
 800e188:	d005      	beq.n	800e196 <prvTaskIsTaskSuspended+0x4e>
 800e18a:	693b      	ldr	r3, [r7, #16]
 800e18c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e18e:	2b00      	cmp	r3, #0
 800e190:	d101      	bne.n	800e196 <prvTaskIsTaskSuspended+0x4e>
 800e192:	2301      	movs	r3, #1
 800e194:	617b      	str	r3, [r7, #20]
 800e196:	697b      	ldr	r3, [r7, #20]
 800e198:	4618      	mov	r0, r3
 800e19a:	371c      	adds	r7, #28
 800e19c:	46bd      	mov	sp, r7
 800e19e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1a2:	4770      	bx	lr
 800e1a4:	20001434 	.word	0x20001434
 800e1a8:	20001408 	.word	0x20001408

0800e1ac <vTaskResume>:
 800e1ac:	b580      	push	{r7, lr}
 800e1ae:	b084      	sub	sp, #16
 800e1b0:	af00      	add	r7, sp, #0
 800e1b2:	6078      	str	r0, [r7, #4]
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	60fb      	str	r3, [r7, #12]
 800e1b8:	687b      	ldr	r3, [r7, #4]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d10b      	bne.n	800e1d6 <vTaskResume+0x2a>
 800e1be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e1c2:	f383 8811 	msr	BASEPRI, r3
 800e1c6:	f3bf 8f6f 	isb	sy
 800e1ca:	f3bf 8f4f 	dsb	sy
 800e1ce:	60bb      	str	r3, [r7, #8]
 800e1d0:	bf00      	nop
 800e1d2:	bf00      	nop
 800e1d4:	e7fd      	b.n	800e1d2 <vTaskResume+0x26>
 800e1d6:	4b21      	ldr	r3, [pc, #132]	@ (800e25c <vTaskResume+0xb0>)
 800e1d8:	681b      	ldr	r3, [r3, #0]
 800e1da:	68fa      	ldr	r2, [r7, #12]
 800e1dc:	429a      	cmp	r2, r3
 800e1de:	d038      	beq.n	800e252 <vTaskResume+0xa6>
 800e1e0:	68fb      	ldr	r3, [r7, #12]
 800e1e2:	2b00      	cmp	r3, #0
 800e1e4:	d035      	beq.n	800e252 <vTaskResume+0xa6>
 800e1e6:	f001 ff27 	bl	8010038 <vPortEnterCritical>
 800e1ea:	68f8      	ldr	r0, [r7, #12]
 800e1ec:	f7ff ffac 	bl	800e148 <prvTaskIsTaskSuspended>
 800e1f0:	4603      	mov	r3, r0
 800e1f2:	2b00      	cmp	r3, #0
 800e1f4:	d02b      	beq.n	800e24e <vTaskResume+0xa2>
 800e1f6:	68fb      	ldr	r3, [r7, #12]
 800e1f8:	3304      	adds	r3, #4
 800e1fa:	4618      	mov	r0, r3
 800e1fc:	f7fe fc84 	bl	800cb08 <uxListRemove>
 800e200:	68fb      	ldr	r3, [r7, #12]
 800e202:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e204:	4b16      	ldr	r3, [pc, #88]	@ (800e260 <vTaskResume+0xb4>)
 800e206:	681b      	ldr	r3, [r3, #0]
 800e208:	429a      	cmp	r2, r3
 800e20a:	d903      	bls.n	800e214 <vTaskResume+0x68>
 800e20c:	68fb      	ldr	r3, [r7, #12]
 800e20e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e210:	4a13      	ldr	r2, [pc, #76]	@ (800e260 <vTaskResume+0xb4>)
 800e212:	6013      	str	r3, [r2, #0]
 800e214:	68fb      	ldr	r3, [r7, #12]
 800e216:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e218:	4613      	mov	r3, r2
 800e21a:	009b      	lsls	r3, r3, #2
 800e21c:	4413      	add	r3, r2
 800e21e:	009b      	lsls	r3, r3, #2
 800e220:	4a10      	ldr	r2, [pc, #64]	@ (800e264 <vTaskResume+0xb8>)
 800e222:	441a      	add	r2, r3
 800e224:	68fb      	ldr	r3, [r7, #12]
 800e226:	3304      	adds	r3, #4
 800e228:	4619      	mov	r1, r3
 800e22a:	4610      	mov	r0, r2
 800e22c:	f7fe fc0f 	bl	800ca4e <vListInsertEnd>
 800e230:	68fb      	ldr	r3, [r7, #12]
 800e232:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e234:	4b09      	ldr	r3, [pc, #36]	@ (800e25c <vTaskResume+0xb0>)
 800e236:	681b      	ldr	r3, [r3, #0]
 800e238:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e23a:	429a      	cmp	r2, r3
 800e23c:	d307      	bcc.n	800e24e <vTaskResume+0xa2>
 800e23e:	4b0a      	ldr	r3, [pc, #40]	@ (800e268 <vTaskResume+0xbc>)
 800e240:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e244:	601a      	str	r2, [r3, #0]
 800e246:	f3bf 8f4f 	dsb	sy
 800e24a:	f3bf 8f6f 	isb	sy
 800e24e:	f001 ff25 	bl	801009c <vPortExitCritical>
 800e252:	bf00      	nop
 800e254:	3710      	adds	r7, #16
 800e256:	46bd      	mov	sp, r7
 800e258:	bd80      	pop	{r7, pc}
 800e25a:	bf00      	nop
 800e25c:	20000f74 	.word	0x20000f74
 800e260:	20001450 	.word	0x20001450
 800e264:	20000f78 	.word	0x20000f78
 800e268:	e000ed04 	.word	0xe000ed04

0800e26c <vTaskStartScheduler>:
 800e26c:	b580      	push	{r7, lr}
 800e26e:	b08a      	sub	sp, #40	@ 0x28
 800e270:	af04      	add	r7, sp, #16
 800e272:	2300      	movs	r3, #0
 800e274:	60bb      	str	r3, [r7, #8]
 800e276:	2300      	movs	r3, #0
 800e278:	607b      	str	r3, [r7, #4]
 800e27a:	463a      	mov	r2, r7
 800e27c:	1d39      	adds	r1, r7, #4
 800e27e:	f107 0308 	add.w	r3, r7, #8
 800e282:	4618      	mov	r0, r3
 800e284:	f7fe f9c6 	bl	800c614 <vApplicationGetIdleTaskMemory>
 800e288:	6839      	ldr	r1, [r7, #0]
 800e28a:	687b      	ldr	r3, [r7, #4]
 800e28c:	68ba      	ldr	r2, [r7, #8]
 800e28e:	9202      	str	r2, [sp, #8]
 800e290:	9301      	str	r3, [sp, #4]
 800e292:	2300      	movs	r3, #0
 800e294:	9300      	str	r3, [sp, #0]
 800e296:	2300      	movs	r3, #0
 800e298:	460a      	mov	r2, r1
 800e29a:	4924      	ldr	r1, [pc, #144]	@ (800e32c <vTaskStartScheduler+0xc0>)
 800e29c:	4824      	ldr	r0, [pc, #144]	@ (800e330 <vTaskStartScheduler+0xc4>)
 800e29e:	f7ff fb6f 	bl	800d980 <xTaskCreateStatic>
 800e2a2:	4603      	mov	r3, r0
 800e2a4:	4a23      	ldr	r2, [pc, #140]	@ (800e334 <vTaskStartScheduler+0xc8>)
 800e2a6:	6013      	str	r3, [r2, #0]
 800e2a8:	4b22      	ldr	r3, [pc, #136]	@ (800e334 <vTaskStartScheduler+0xc8>)
 800e2aa:	681b      	ldr	r3, [r3, #0]
 800e2ac:	2b00      	cmp	r3, #0
 800e2ae:	d002      	beq.n	800e2b6 <vTaskStartScheduler+0x4a>
 800e2b0:	2301      	movs	r3, #1
 800e2b2:	617b      	str	r3, [r7, #20]
 800e2b4:	e001      	b.n	800e2ba <vTaskStartScheduler+0x4e>
 800e2b6:	2300      	movs	r3, #0
 800e2b8:	617b      	str	r3, [r7, #20]
 800e2ba:	697b      	ldr	r3, [r7, #20]
 800e2bc:	2b01      	cmp	r3, #1
 800e2be:	d102      	bne.n	800e2c6 <vTaskStartScheduler+0x5a>
 800e2c0:	f001 f9b4 	bl	800f62c <xTimerCreateTimerTask>
 800e2c4:	6178      	str	r0, [r7, #20]
 800e2c6:	697b      	ldr	r3, [r7, #20]
 800e2c8:	2b01      	cmp	r3, #1
 800e2ca:	d11b      	bne.n	800e304 <vTaskStartScheduler+0x98>
 800e2cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e2d0:	f383 8811 	msr	BASEPRI, r3
 800e2d4:	f3bf 8f6f 	isb	sy
 800e2d8:	f3bf 8f4f 	dsb	sy
 800e2dc:	613b      	str	r3, [r7, #16]
 800e2de:	bf00      	nop
 800e2e0:	4b15      	ldr	r3, [pc, #84]	@ (800e338 <vTaskStartScheduler+0xcc>)
 800e2e2:	681b      	ldr	r3, [r3, #0]
 800e2e4:	3354      	adds	r3, #84	@ 0x54
 800e2e6:	4a15      	ldr	r2, [pc, #84]	@ (800e33c <vTaskStartScheduler+0xd0>)
 800e2e8:	6013      	str	r3, [r2, #0]
 800e2ea:	4b15      	ldr	r3, [pc, #84]	@ (800e340 <vTaskStartScheduler+0xd4>)
 800e2ec:	f04f 32ff 	mov.w	r2, #4294967295
 800e2f0:	601a      	str	r2, [r3, #0]
 800e2f2:	4b14      	ldr	r3, [pc, #80]	@ (800e344 <vTaskStartScheduler+0xd8>)
 800e2f4:	2201      	movs	r2, #1
 800e2f6:	601a      	str	r2, [r3, #0]
 800e2f8:	4b13      	ldr	r3, [pc, #76]	@ (800e348 <vTaskStartScheduler+0xdc>)
 800e2fa:	2200      	movs	r2, #0
 800e2fc:	601a      	str	r2, [r3, #0]
 800e2fe:	f001 fdf7 	bl	800fef0 <xPortStartScheduler>
 800e302:	e00f      	b.n	800e324 <vTaskStartScheduler+0xb8>
 800e304:	697b      	ldr	r3, [r7, #20]
 800e306:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e30a:	d10b      	bne.n	800e324 <vTaskStartScheduler+0xb8>
 800e30c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e310:	f383 8811 	msr	BASEPRI, r3
 800e314:	f3bf 8f6f 	isb	sy
 800e318:	f3bf 8f4f 	dsb	sy
 800e31c:	60fb      	str	r3, [r7, #12]
 800e31e:	bf00      	nop
 800e320:	bf00      	nop
 800e322:	e7fd      	b.n	800e320 <vTaskStartScheduler+0xb4>
 800e324:	bf00      	nop
 800e326:	3718      	adds	r7, #24
 800e328:	46bd      	mov	sp, r7
 800e32a:	bd80      	pop	{r7, pc}
 800e32c:	08015d1c 	.word	0x08015d1c
 800e330:	0800ec69 	.word	0x0800ec69
 800e334:	2000146c 	.word	0x2000146c
 800e338:	20000f74 	.word	0x20000f74
 800e33c:	20000404 	.word	0x20000404
 800e340:	20001468 	.word	0x20001468
 800e344:	20001454 	.word	0x20001454
 800e348:	2000144c 	.word	0x2000144c

0800e34c <vTaskSuspendAll>:
 800e34c:	b480      	push	{r7}
 800e34e:	af00      	add	r7, sp, #0
 800e350:	4b04      	ldr	r3, [pc, #16]	@ (800e364 <vTaskSuspendAll+0x18>)
 800e352:	681b      	ldr	r3, [r3, #0]
 800e354:	3301      	adds	r3, #1
 800e356:	4a03      	ldr	r2, [pc, #12]	@ (800e364 <vTaskSuspendAll+0x18>)
 800e358:	6013      	str	r3, [r2, #0]
 800e35a:	bf00      	nop
 800e35c:	46bd      	mov	sp, r7
 800e35e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e362:	4770      	bx	lr
 800e364:	20001470 	.word	0x20001470

0800e368 <xTaskResumeAll>:
 800e368:	b580      	push	{r7, lr}
 800e36a:	b084      	sub	sp, #16
 800e36c:	af00      	add	r7, sp, #0
 800e36e:	2300      	movs	r3, #0
 800e370:	60fb      	str	r3, [r7, #12]
 800e372:	2300      	movs	r3, #0
 800e374:	60bb      	str	r3, [r7, #8]
 800e376:	4b42      	ldr	r3, [pc, #264]	@ (800e480 <xTaskResumeAll+0x118>)
 800e378:	681b      	ldr	r3, [r3, #0]
 800e37a:	2b00      	cmp	r3, #0
 800e37c:	d10b      	bne.n	800e396 <xTaskResumeAll+0x2e>
 800e37e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e382:	f383 8811 	msr	BASEPRI, r3
 800e386:	f3bf 8f6f 	isb	sy
 800e38a:	f3bf 8f4f 	dsb	sy
 800e38e:	603b      	str	r3, [r7, #0]
 800e390:	bf00      	nop
 800e392:	bf00      	nop
 800e394:	e7fd      	b.n	800e392 <xTaskResumeAll+0x2a>
 800e396:	f001 fe4f 	bl	8010038 <vPortEnterCritical>
 800e39a:	4b39      	ldr	r3, [pc, #228]	@ (800e480 <xTaskResumeAll+0x118>)
 800e39c:	681b      	ldr	r3, [r3, #0]
 800e39e:	3b01      	subs	r3, #1
 800e3a0:	4a37      	ldr	r2, [pc, #220]	@ (800e480 <xTaskResumeAll+0x118>)
 800e3a2:	6013      	str	r3, [r2, #0]
 800e3a4:	4b36      	ldr	r3, [pc, #216]	@ (800e480 <xTaskResumeAll+0x118>)
 800e3a6:	681b      	ldr	r3, [r3, #0]
 800e3a8:	2b00      	cmp	r3, #0
 800e3aa:	d162      	bne.n	800e472 <xTaskResumeAll+0x10a>
 800e3ac:	4b35      	ldr	r3, [pc, #212]	@ (800e484 <xTaskResumeAll+0x11c>)
 800e3ae:	681b      	ldr	r3, [r3, #0]
 800e3b0:	2b00      	cmp	r3, #0
 800e3b2:	d05e      	beq.n	800e472 <xTaskResumeAll+0x10a>
 800e3b4:	e02f      	b.n	800e416 <xTaskResumeAll+0xae>
 800e3b6:	4b34      	ldr	r3, [pc, #208]	@ (800e488 <xTaskResumeAll+0x120>)
 800e3b8:	68db      	ldr	r3, [r3, #12]
 800e3ba:	68db      	ldr	r3, [r3, #12]
 800e3bc:	60fb      	str	r3, [r7, #12]
 800e3be:	68fb      	ldr	r3, [r7, #12]
 800e3c0:	3318      	adds	r3, #24
 800e3c2:	4618      	mov	r0, r3
 800e3c4:	f7fe fba0 	bl	800cb08 <uxListRemove>
 800e3c8:	68fb      	ldr	r3, [r7, #12]
 800e3ca:	3304      	adds	r3, #4
 800e3cc:	4618      	mov	r0, r3
 800e3ce:	f7fe fb9b 	bl	800cb08 <uxListRemove>
 800e3d2:	68fb      	ldr	r3, [r7, #12]
 800e3d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e3d6:	4b2d      	ldr	r3, [pc, #180]	@ (800e48c <xTaskResumeAll+0x124>)
 800e3d8:	681b      	ldr	r3, [r3, #0]
 800e3da:	429a      	cmp	r2, r3
 800e3dc:	d903      	bls.n	800e3e6 <xTaskResumeAll+0x7e>
 800e3de:	68fb      	ldr	r3, [r7, #12]
 800e3e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e3e2:	4a2a      	ldr	r2, [pc, #168]	@ (800e48c <xTaskResumeAll+0x124>)
 800e3e4:	6013      	str	r3, [r2, #0]
 800e3e6:	68fb      	ldr	r3, [r7, #12]
 800e3e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e3ea:	4613      	mov	r3, r2
 800e3ec:	009b      	lsls	r3, r3, #2
 800e3ee:	4413      	add	r3, r2
 800e3f0:	009b      	lsls	r3, r3, #2
 800e3f2:	4a27      	ldr	r2, [pc, #156]	@ (800e490 <xTaskResumeAll+0x128>)
 800e3f4:	441a      	add	r2, r3
 800e3f6:	68fb      	ldr	r3, [r7, #12]
 800e3f8:	3304      	adds	r3, #4
 800e3fa:	4619      	mov	r1, r3
 800e3fc:	4610      	mov	r0, r2
 800e3fe:	f7fe fb26 	bl	800ca4e <vListInsertEnd>
 800e402:	68fb      	ldr	r3, [r7, #12]
 800e404:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e406:	4b23      	ldr	r3, [pc, #140]	@ (800e494 <xTaskResumeAll+0x12c>)
 800e408:	681b      	ldr	r3, [r3, #0]
 800e40a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e40c:	429a      	cmp	r2, r3
 800e40e:	d302      	bcc.n	800e416 <xTaskResumeAll+0xae>
 800e410:	4b21      	ldr	r3, [pc, #132]	@ (800e498 <xTaskResumeAll+0x130>)
 800e412:	2201      	movs	r2, #1
 800e414:	601a      	str	r2, [r3, #0]
 800e416:	4b1c      	ldr	r3, [pc, #112]	@ (800e488 <xTaskResumeAll+0x120>)
 800e418:	681b      	ldr	r3, [r3, #0]
 800e41a:	2b00      	cmp	r3, #0
 800e41c:	d1cb      	bne.n	800e3b6 <xTaskResumeAll+0x4e>
 800e41e:	68fb      	ldr	r3, [r7, #12]
 800e420:	2b00      	cmp	r3, #0
 800e422:	d001      	beq.n	800e428 <xTaskResumeAll+0xc0>
 800e424:	f000 fd7a 	bl	800ef1c <prvResetNextTaskUnblockTime>
 800e428:	4b1c      	ldr	r3, [pc, #112]	@ (800e49c <xTaskResumeAll+0x134>)
 800e42a:	681b      	ldr	r3, [r3, #0]
 800e42c:	607b      	str	r3, [r7, #4]
 800e42e:	687b      	ldr	r3, [r7, #4]
 800e430:	2b00      	cmp	r3, #0
 800e432:	d010      	beq.n	800e456 <xTaskResumeAll+0xee>
 800e434:	f000 f91a 	bl	800e66c <xTaskIncrementTick>
 800e438:	4603      	mov	r3, r0
 800e43a:	2b00      	cmp	r3, #0
 800e43c:	d002      	beq.n	800e444 <xTaskResumeAll+0xdc>
 800e43e:	4b16      	ldr	r3, [pc, #88]	@ (800e498 <xTaskResumeAll+0x130>)
 800e440:	2201      	movs	r2, #1
 800e442:	601a      	str	r2, [r3, #0]
 800e444:	687b      	ldr	r3, [r7, #4]
 800e446:	3b01      	subs	r3, #1
 800e448:	607b      	str	r3, [r7, #4]
 800e44a:	687b      	ldr	r3, [r7, #4]
 800e44c:	2b00      	cmp	r3, #0
 800e44e:	d1f1      	bne.n	800e434 <xTaskResumeAll+0xcc>
 800e450:	4b12      	ldr	r3, [pc, #72]	@ (800e49c <xTaskResumeAll+0x134>)
 800e452:	2200      	movs	r2, #0
 800e454:	601a      	str	r2, [r3, #0]
 800e456:	4b10      	ldr	r3, [pc, #64]	@ (800e498 <xTaskResumeAll+0x130>)
 800e458:	681b      	ldr	r3, [r3, #0]
 800e45a:	2b00      	cmp	r3, #0
 800e45c:	d009      	beq.n	800e472 <xTaskResumeAll+0x10a>
 800e45e:	2301      	movs	r3, #1
 800e460:	60bb      	str	r3, [r7, #8]
 800e462:	4b0f      	ldr	r3, [pc, #60]	@ (800e4a0 <xTaskResumeAll+0x138>)
 800e464:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e468:	601a      	str	r2, [r3, #0]
 800e46a:	f3bf 8f4f 	dsb	sy
 800e46e:	f3bf 8f6f 	isb	sy
 800e472:	f001 fe13 	bl	801009c <vPortExitCritical>
 800e476:	68bb      	ldr	r3, [r7, #8]
 800e478:	4618      	mov	r0, r3
 800e47a:	3710      	adds	r7, #16
 800e47c:	46bd      	mov	sp, r7
 800e47e:	bd80      	pop	{r7, pc}
 800e480:	20001470 	.word	0x20001470
 800e484:	20001448 	.word	0x20001448
 800e488:	20001408 	.word	0x20001408
 800e48c:	20001450 	.word	0x20001450
 800e490:	20000f78 	.word	0x20000f78
 800e494:	20000f74 	.word	0x20000f74
 800e498:	2000145c 	.word	0x2000145c
 800e49c:	20001458 	.word	0x20001458
 800e4a0:	e000ed04 	.word	0xe000ed04

0800e4a4 <xTaskGetTickCount>:
 800e4a4:	b480      	push	{r7}
 800e4a6:	b083      	sub	sp, #12
 800e4a8:	af00      	add	r7, sp, #0
 800e4aa:	4b05      	ldr	r3, [pc, #20]	@ (800e4c0 <xTaskGetTickCount+0x1c>)
 800e4ac:	681b      	ldr	r3, [r3, #0]
 800e4ae:	607b      	str	r3, [r7, #4]
 800e4b0:	687b      	ldr	r3, [r7, #4]
 800e4b2:	4618      	mov	r0, r3
 800e4b4:	370c      	adds	r7, #12
 800e4b6:	46bd      	mov	sp, r7
 800e4b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4bc:	4770      	bx	lr
 800e4be:	bf00      	nop
 800e4c0:	2000144c 	.word	0x2000144c

0800e4c4 <prvSearchForNameWithinSingleList>:
 800e4c4:	b480      	push	{r7}
 800e4c6:	b08b      	sub	sp, #44	@ 0x2c
 800e4c8:	af00      	add	r7, sp, #0
 800e4ca:	6078      	str	r0, [r7, #4]
 800e4cc:	6039      	str	r1, [r7, #0]
 800e4ce:	2300      	movs	r3, #0
 800e4d0:	627b      	str	r3, [r7, #36]	@ 0x24
 800e4d2:	687b      	ldr	r3, [r7, #4]
 800e4d4:	681b      	ldr	r3, [r3, #0]
 800e4d6:	2b00      	cmp	r3, #0
 800e4d8:	d05b      	beq.n	800e592 <prvSearchForNameWithinSingleList+0xce>
 800e4da:	687b      	ldr	r3, [r7, #4]
 800e4dc:	61bb      	str	r3, [r7, #24]
 800e4de:	69bb      	ldr	r3, [r7, #24]
 800e4e0:	685b      	ldr	r3, [r3, #4]
 800e4e2:	685a      	ldr	r2, [r3, #4]
 800e4e4:	69bb      	ldr	r3, [r7, #24]
 800e4e6:	605a      	str	r2, [r3, #4]
 800e4e8:	69bb      	ldr	r3, [r7, #24]
 800e4ea:	685a      	ldr	r2, [r3, #4]
 800e4ec:	69bb      	ldr	r3, [r7, #24]
 800e4ee:	3308      	adds	r3, #8
 800e4f0:	429a      	cmp	r2, r3
 800e4f2:	d104      	bne.n	800e4fe <prvSearchForNameWithinSingleList+0x3a>
 800e4f4:	69bb      	ldr	r3, [r7, #24]
 800e4f6:	685b      	ldr	r3, [r3, #4]
 800e4f8:	685a      	ldr	r2, [r3, #4]
 800e4fa:	69bb      	ldr	r3, [r7, #24]
 800e4fc:	605a      	str	r2, [r3, #4]
 800e4fe:	69bb      	ldr	r3, [r7, #24]
 800e500:	685b      	ldr	r3, [r3, #4]
 800e502:	68db      	ldr	r3, [r3, #12]
 800e504:	617b      	str	r3, [r7, #20]
 800e506:	687b      	ldr	r3, [r7, #4]
 800e508:	613b      	str	r3, [r7, #16]
 800e50a:	693b      	ldr	r3, [r7, #16]
 800e50c:	685b      	ldr	r3, [r3, #4]
 800e50e:	685a      	ldr	r2, [r3, #4]
 800e510:	693b      	ldr	r3, [r7, #16]
 800e512:	605a      	str	r2, [r3, #4]
 800e514:	693b      	ldr	r3, [r7, #16]
 800e516:	685a      	ldr	r2, [r3, #4]
 800e518:	693b      	ldr	r3, [r7, #16]
 800e51a:	3308      	adds	r3, #8
 800e51c:	429a      	cmp	r2, r3
 800e51e:	d104      	bne.n	800e52a <prvSearchForNameWithinSingleList+0x66>
 800e520:	693b      	ldr	r3, [r7, #16]
 800e522:	685b      	ldr	r3, [r3, #4]
 800e524:	685a      	ldr	r2, [r3, #4]
 800e526:	693b      	ldr	r3, [r7, #16]
 800e528:	605a      	str	r2, [r3, #4]
 800e52a:	693b      	ldr	r3, [r7, #16]
 800e52c:	685b      	ldr	r3, [r3, #4]
 800e52e:	68db      	ldr	r3, [r3, #12]
 800e530:	60fb      	str	r3, [r7, #12]
 800e532:	2300      	movs	r3, #0
 800e534:	61fb      	str	r3, [r7, #28]
 800e536:	2300      	movs	r3, #0
 800e538:	623b      	str	r3, [r7, #32]
 800e53a:	e01c      	b.n	800e576 <prvSearchForNameWithinSingleList+0xb2>
 800e53c:	68fa      	ldr	r2, [r7, #12]
 800e53e:	6a3b      	ldr	r3, [r7, #32]
 800e540:	4413      	add	r3, r2
 800e542:	3334      	adds	r3, #52	@ 0x34
 800e544:	781b      	ldrb	r3, [r3, #0]
 800e546:	72fb      	strb	r3, [r7, #11]
 800e548:	683a      	ldr	r2, [r7, #0]
 800e54a:	6a3b      	ldr	r3, [r7, #32]
 800e54c:	4413      	add	r3, r2
 800e54e:	781b      	ldrb	r3, [r3, #0]
 800e550:	7afa      	ldrb	r2, [r7, #11]
 800e552:	429a      	cmp	r2, r3
 800e554:	d002      	beq.n	800e55c <prvSearchForNameWithinSingleList+0x98>
 800e556:	2301      	movs	r3, #1
 800e558:	61fb      	str	r3, [r7, #28]
 800e55a:	e006      	b.n	800e56a <prvSearchForNameWithinSingleList+0xa6>
 800e55c:	7afb      	ldrb	r3, [r7, #11]
 800e55e:	2b00      	cmp	r3, #0
 800e560:	d103      	bne.n	800e56a <prvSearchForNameWithinSingleList+0xa6>
 800e562:	68fb      	ldr	r3, [r7, #12]
 800e564:	627b      	str	r3, [r7, #36]	@ 0x24
 800e566:	2301      	movs	r3, #1
 800e568:	61fb      	str	r3, [r7, #28]
 800e56a:	69fb      	ldr	r3, [r7, #28]
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	d106      	bne.n	800e57e <prvSearchForNameWithinSingleList+0xba>
 800e570:	6a3b      	ldr	r3, [r7, #32]
 800e572:	3301      	adds	r3, #1
 800e574:	623b      	str	r3, [r7, #32]
 800e576:	6a3b      	ldr	r3, [r7, #32]
 800e578:	2b0f      	cmp	r3, #15
 800e57a:	d9df      	bls.n	800e53c <prvSearchForNameWithinSingleList+0x78>
 800e57c:	e000      	b.n	800e580 <prvSearchForNameWithinSingleList+0xbc>
 800e57e:	bf00      	nop
 800e580:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e582:	2b00      	cmp	r3, #0
 800e584:	d104      	bne.n	800e590 <prvSearchForNameWithinSingleList+0xcc>
 800e586:	68fa      	ldr	r2, [r7, #12]
 800e588:	697b      	ldr	r3, [r7, #20]
 800e58a:	429a      	cmp	r2, r3
 800e58c:	d1bb      	bne.n	800e506 <prvSearchForNameWithinSingleList+0x42>
 800e58e:	e000      	b.n	800e592 <prvSearchForNameWithinSingleList+0xce>
 800e590:	bf00      	nop
 800e592:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e594:	4618      	mov	r0, r3
 800e596:	372c      	adds	r7, #44	@ 0x2c
 800e598:	46bd      	mov	sp, r7
 800e59a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e59e:	4770      	bx	lr

0800e5a0 <xTaskGetHandle>:
 800e5a0:	b580      	push	{r7, lr}
 800e5a2:	b086      	sub	sp, #24
 800e5a4:	af00      	add	r7, sp, #0
 800e5a6:	6078      	str	r0, [r7, #4]
 800e5a8:	2338      	movs	r3, #56	@ 0x38
 800e5aa:	617b      	str	r3, [r7, #20]
 800e5ac:	6878      	ldr	r0, [r7, #4]
 800e5ae:	f7f1 fe5f 	bl	8000270 <strlen>
 800e5b2:	4603      	mov	r3, r0
 800e5b4:	2b0f      	cmp	r3, #15
 800e5b6:	d90b      	bls.n	800e5d0 <xTaskGetHandle+0x30>
 800e5b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e5bc:	f383 8811 	msr	BASEPRI, r3
 800e5c0:	f3bf 8f6f 	isb	sy
 800e5c4:	f3bf 8f4f 	dsb	sy
 800e5c8:	60fb      	str	r3, [r7, #12]
 800e5ca:	bf00      	nop
 800e5cc:	bf00      	nop
 800e5ce:	e7fd      	b.n	800e5cc <xTaskGetHandle+0x2c>
 800e5d0:	f7ff febc 	bl	800e34c <vTaskSuspendAll>
 800e5d4:	697b      	ldr	r3, [r7, #20]
 800e5d6:	3b01      	subs	r3, #1
 800e5d8:	617b      	str	r3, [r7, #20]
 800e5da:	697a      	ldr	r2, [r7, #20]
 800e5dc:	4613      	mov	r3, r2
 800e5de:	009b      	lsls	r3, r3, #2
 800e5e0:	4413      	add	r3, r2
 800e5e2:	009b      	lsls	r3, r3, #2
 800e5e4:	4a1c      	ldr	r2, [pc, #112]	@ (800e658 <xTaskGetHandle+0xb8>)
 800e5e6:	4413      	add	r3, r2
 800e5e8:	6879      	ldr	r1, [r7, #4]
 800e5ea:	4618      	mov	r0, r3
 800e5ec:	f7ff ff6a 	bl	800e4c4 <prvSearchForNameWithinSingleList>
 800e5f0:	6138      	str	r0, [r7, #16]
 800e5f2:	693b      	ldr	r3, [r7, #16]
 800e5f4:	2b00      	cmp	r3, #0
 800e5f6:	d103      	bne.n	800e600 <xTaskGetHandle+0x60>
 800e5f8:	697b      	ldr	r3, [r7, #20]
 800e5fa:	2b00      	cmp	r3, #0
 800e5fc:	d1ea      	bne.n	800e5d4 <xTaskGetHandle+0x34>
 800e5fe:	e000      	b.n	800e602 <xTaskGetHandle+0x62>
 800e600:	bf00      	nop
 800e602:	693b      	ldr	r3, [r7, #16]
 800e604:	2b00      	cmp	r3, #0
 800e606:	d106      	bne.n	800e616 <xTaskGetHandle+0x76>
 800e608:	4b14      	ldr	r3, [pc, #80]	@ (800e65c <xTaskGetHandle+0xbc>)
 800e60a:	681b      	ldr	r3, [r3, #0]
 800e60c:	6879      	ldr	r1, [r7, #4]
 800e60e:	4618      	mov	r0, r3
 800e610:	f7ff ff58 	bl	800e4c4 <prvSearchForNameWithinSingleList>
 800e614:	6138      	str	r0, [r7, #16]
 800e616:	693b      	ldr	r3, [r7, #16]
 800e618:	2b00      	cmp	r3, #0
 800e61a:	d106      	bne.n	800e62a <xTaskGetHandle+0x8a>
 800e61c:	4b10      	ldr	r3, [pc, #64]	@ (800e660 <xTaskGetHandle+0xc0>)
 800e61e:	681b      	ldr	r3, [r3, #0]
 800e620:	6879      	ldr	r1, [r7, #4]
 800e622:	4618      	mov	r0, r3
 800e624:	f7ff ff4e 	bl	800e4c4 <prvSearchForNameWithinSingleList>
 800e628:	6138      	str	r0, [r7, #16]
 800e62a:	693b      	ldr	r3, [r7, #16]
 800e62c:	2b00      	cmp	r3, #0
 800e62e:	d104      	bne.n	800e63a <xTaskGetHandle+0x9a>
 800e630:	6879      	ldr	r1, [r7, #4]
 800e632:	480c      	ldr	r0, [pc, #48]	@ (800e664 <xTaskGetHandle+0xc4>)
 800e634:	f7ff ff46 	bl	800e4c4 <prvSearchForNameWithinSingleList>
 800e638:	6138      	str	r0, [r7, #16]
 800e63a:	693b      	ldr	r3, [r7, #16]
 800e63c:	2b00      	cmp	r3, #0
 800e63e:	d104      	bne.n	800e64a <xTaskGetHandle+0xaa>
 800e640:	6879      	ldr	r1, [r7, #4]
 800e642:	4809      	ldr	r0, [pc, #36]	@ (800e668 <xTaskGetHandle+0xc8>)
 800e644:	f7ff ff3e 	bl	800e4c4 <prvSearchForNameWithinSingleList>
 800e648:	6138      	str	r0, [r7, #16]
 800e64a:	f7ff fe8d 	bl	800e368 <xTaskResumeAll>
 800e64e:	693b      	ldr	r3, [r7, #16]
 800e650:	4618      	mov	r0, r3
 800e652:	3718      	adds	r7, #24
 800e654:	46bd      	mov	sp, r7
 800e656:	bd80      	pop	{r7, pc}
 800e658:	20000f78 	.word	0x20000f78
 800e65c:	20001400 	.word	0x20001400
 800e660:	20001404 	.word	0x20001404
 800e664:	20001434 	.word	0x20001434
 800e668:	2000141c 	.word	0x2000141c

0800e66c <xTaskIncrementTick>:
 800e66c:	b580      	push	{r7, lr}
 800e66e:	b086      	sub	sp, #24
 800e670:	af00      	add	r7, sp, #0
 800e672:	2300      	movs	r3, #0
 800e674:	617b      	str	r3, [r7, #20]
 800e676:	4b4f      	ldr	r3, [pc, #316]	@ (800e7b4 <xTaskIncrementTick+0x148>)
 800e678:	681b      	ldr	r3, [r3, #0]
 800e67a:	2b00      	cmp	r3, #0
 800e67c:	f040 8090 	bne.w	800e7a0 <xTaskIncrementTick+0x134>
 800e680:	4b4d      	ldr	r3, [pc, #308]	@ (800e7b8 <xTaskIncrementTick+0x14c>)
 800e682:	681b      	ldr	r3, [r3, #0]
 800e684:	3301      	adds	r3, #1
 800e686:	613b      	str	r3, [r7, #16]
 800e688:	4a4b      	ldr	r2, [pc, #300]	@ (800e7b8 <xTaskIncrementTick+0x14c>)
 800e68a:	693b      	ldr	r3, [r7, #16]
 800e68c:	6013      	str	r3, [r2, #0]
 800e68e:	693b      	ldr	r3, [r7, #16]
 800e690:	2b00      	cmp	r3, #0
 800e692:	d121      	bne.n	800e6d8 <xTaskIncrementTick+0x6c>
 800e694:	4b49      	ldr	r3, [pc, #292]	@ (800e7bc <xTaskIncrementTick+0x150>)
 800e696:	681b      	ldr	r3, [r3, #0]
 800e698:	681b      	ldr	r3, [r3, #0]
 800e69a:	2b00      	cmp	r3, #0
 800e69c:	d00b      	beq.n	800e6b6 <xTaskIncrementTick+0x4a>
 800e69e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6a2:	f383 8811 	msr	BASEPRI, r3
 800e6a6:	f3bf 8f6f 	isb	sy
 800e6aa:	f3bf 8f4f 	dsb	sy
 800e6ae:	603b      	str	r3, [r7, #0]
 800e6b0:	bf00      	nop
 800e6b2:	bf00      	nop
 800e6b4:	e7fd      	b.n	800e6b2 <xTaskIncrementTick+0x46>
 800e6b6:	4b41      	ldr	r3, [pc, #260]	@ (800e7bc <xTaskIncrementTick+0x150>)
 800e6b8:	681b      	ldr	r3, [r3, #0]
 800e6ba:	60fb      	str	r3, [r7, #12]
 800e6bc:	4b40      	ldr	r3, [pc, #256]	@ (800e7c0 <xTaskIncrementTick+0x154>)
 800e6be:	681b      	ldr	r3, [r3, #0]
 800e6c0:	4a3e      	ldr	r2, [pc, #248]	@ (800e7bc <xTaskIncrementTick+0x150>)
 800e6c2:	6013      	str	r3, [r2, #0]
 800e6c4:	4a3e      	ldr	r2, [pc, #248]	@ (800e7c0 <xTaskIncrementTick+0x154>)
 800e6c6:	68fb      	ldr	r3, [r7, #12]
 800e6c8:	6013      	str	r3, [r2, #0]
 800e6ca:	4b3e      	ldr	r3, [pc, #248]	@ (800e7c4 <xTaskIncrementTick+0x158>)
 800e6cc:	681b      	ldr	r3, [r3, #0]
 800e6ce:	3301      	adds	r3, #1
 800e6d0:	4a3c      	ldr	r2, [pc, #240]	@ (800e7c4 <xTaskIncrementTick+0x158>)
 800e6d2:	6013      	str	r3, [r2, #0]
 800e6d4:	f000 fc22 	bl	800ef1c <prvResetNextTaskUnblockTime>
 800e6d8:	4b3b      	ldr	r3, [pc, #236]	@ (800e7c8 <xTaskIncrementTick+0x15c>)
 800e6da:	681b      	ldr	r3, [r3, #0]
 800e6dc:	693a      	ldr	r2, [r7, #16]
 800e6de:	429a      	cmp	r2, r3
 800e6e0:	d349      	bcc.n	800e776 <xTaskIncrementTick+0x10a>
 800e6e2:	4b36      	ldr	r3, [pc, #216]	@ (800e7bc <xTaskIncrementTick+0x150>)
 800e6e4:	681b      	ldr	r3, [r3, #0]
 800e6e6:	681b      	ldr	r3, [r3, #0]
 800e6e8:	2b00      	cmp	r3, #0
 800e6ea:	d104      	bne.n	800e6f6 <xTaskIncrementTick+0x8a>
 800e6ec:	4b36      	ldr	r3, [pc, #216]	@ (800e7c8 <xTaskIncrementTick+0x15c>)
 800e6ee:	f04f 32ff 	mov.w	r2, #4294967295
 800e6f2:	601a      	str	r2, [r3, #0]
 800e6f4:	e03f      	b.n	800e776 <xTaskIncrementTick+0x10a>
 800e6f6:	4b31      	ldr	r3, [pc, #196]	@ (800e7bc <xTaskIncrementTick+0x150>)
 800e6f8:	681b      	ldr	r3, [r3, #0]
 800e6fa:	68db      	ldr	r3, [r3, #12]
 800e6fc:	68db      	ldr	r3, [r3, #12]
 800e6fe:	60bb      	str	r3, [r7, #8]
 800e700:	68bb      	ldr	r3, [r7, #8]
 800e702:	685b      	ldr	r3, [r3, #4]
 800e704:	607b      	str	r3, [r7, #4]
 800e706:	693a      	ldr	r2, [r7, #16]
 800e708:	687b      	ldr	r3, [r7, #4]
 800e70a:	429a      	cmp	r2, r3
 800e70c:	d203      	bcs.n	800e716 <xTaskIncrementTick+0xaa>
 800e70e:	4a2e      	ldr	r2, [pc, #184]	@ (800e7c8 <xTaskIncrementTick+0x15c>)
 800e710:	687b      	ldr	r3, [r7, #4]
 800e712:	6013      	str	r3, [r2, #0]
 800e714:	e02f      	b.n	800e776 <xTaskIncrementTick+0x10a>
 800e716:	68bb      	ldr	r3, [r7, #8]
 800e718:	3304      	adds	r3, #4
 800e71a:	4618      	mov	r0, r3
 800e71c:	f7fe f9f4 	bl	800cb08 <uxListRemove>
 800e720:	68bb      	ldr	r3, [r7, #8]
 800e722:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e724:	2b00      	cmp	r3, #0
 800e726:	d004      	beq.n	800e732 <xTaskIncrementTick+0xc6>
 800e728:	68bb      	ldr	r3, [r7, #8]
 800e72a:	3318      	adds	r3, #24
 800e72c:	4618      	mov	r0, r3
 800e72e:	f7fe f9eb 	bl	800cb08 <uxListRemove>
 800e732:	68bb      	ldr	r3, [r7, #8]
 800e734:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e736:	4b25      	ldr	r3, [pc, #148]	@ (800e7cc <xTaskIncrementTick+0x160>)
 800e738:	681b      	ldr	r3, [r3, #0]
 800e73a:	429a      	cmp	r2, r3
 800e73c:	d903      	bls.n	800e746 <xTaskIncrementTick+0xda>
 800e73e:	68bb      	ldr	r3, [r7, #8]
 800e740:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e742:	4a22      	ldr	r2, [pc, #136]	@ (800e7cc <xTaskIncrementTick+0x160>)
 800e744:	6013      	str	r3, [r2, #0]
 800e746:	68bb      	ldr	r3, [r7, #8]
 800e748:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e74a:	4613      	mov	r3, r2
 800e74c:	009b      	lsls	r3, r3, #2
 800e74e:	4413      	add	r3, r2
 800e750:	009b      	lsls	r3, r3, #2
 800e752:	4a1f      	ldr	r2, [pc, #124]	@ (800e7d0 <xTaskIncrementTick+0x164>)
 800e754:	441a      	add	r2, r3
 800e756:	68bb      	ldr	r3, [r7, #8]
 800e758:	3304      	adds	r3, #4
 800e75a:	4619      	mov	r1, r3
 800e75c:	4610      	mov	r0, r2
 800e75e:	f7fe f976 	bl	800ca4e <vListInsertEnd>
 800e762:	68bb      	ldr	r3, [r7, #8]
 800e764:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e766:	4b1b      	ldr	r3, [pc, #108]	@ (800e7d4 <xTaskIncrementTick+0x168>)
 800e768:	681b      	ldr	r3, [r3, #0]
 800e76a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e76c:	429a      	cmp	r2, r3
 800e76e:	d3b8      	bcc.n	800e6e2 <xTaskIncrementTick+0x76>
 800e770:	2301      	movs	r3, #1
 800e772:	617b      	str	r3, [r7, #20]
 800e774:	e7b5      	b.n	800e6e2 <xTaskIncrementTick+0x76>
 800e776:	4b17      	ldr	r3, [pc, #92]	@ (800e7d4 <xTaskIncrementTick+0x168>)
 800e778:	681b      	ldr	r3, [r3, #0]
 800e77a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e77c:	4914      	ldr	r1, [pc, #80]	@ (800e7d0 <xTaskIncrementTick+0x164>)
 800e77e:	4613      	mov	r3, r2
 800e780:	009b      	lsls	r3, r3, #2
 800e782:	4413      	add	r3, r2
 800e784:	009b      	lsls	r3, r3, #2
 800e786:	440b      	add	r3, r1
 800e788:	681b      	ldr	r3, [r3, #0]
 800e78a:	2b01      	cmp	r3, #1
 800e78c:	d901      	bls.n	800e792 <xTaskIncrementTick+0x126>
 800e78e:	2301      	movs	r3, #1
 800e790:	617b      	str	r3, [r7, #20]
 800e792:	4b11      	ldr	r3, [pc, #68]	@ (800e7d8 <xTaskIncrementTick+0x16c>)
 800e794:	681b      	ldr	r3, [r3, #0]
 800e796:	2b00      	cmp	r3, #0
 800e798:	d007      	beq.n	800e7aa <xTaskIncrementTick+0x13e>
 800e79a:	2301      	movs	r3, #1
 800e79c:	617b      	str	r3, [r7, #20]
 800e79e:	e004      	b.n	800e7aa <xTaskIncrementTick+0x13e>
 800e7a0:	4b0e      	ldr	r3, [pc, #56]	@ (800e7dc <xTaskIncrementTick+0x170>)
 800e7a2:	681b      	ldr	r3, [r3, #0]
 800e7a4:	3301      	adds	r3, #1
 800e7a6:	4a0d      	ldr	r2, [pc, #52]	@ (800e7dc <xTaskIncrementTick+0x170>)
 800e7a8:	6013      	str	r3, [r2, #0]
 800e7aa:	697b      	ldr	r3, [r7, #20]
 800e7ac:	4618      	mov	r0, r3
 800e7ae:	3718      	adds	r7, #24
 800e7b0:	46bd      	mov	sp, r7
 800e7b2:	bd80      	pop	{r7, pc}
 800e7b4:	20001470 	.word	0x20001470
 800e7b8:	2000144c 	.word	0x2000144c
 800e7bc:	20001400 	.word	0x20001400
 800e7c0:	20001404 	.word	0x20001404
 800e7c4:	20001460 	.word	0x20001460
 800e7c8:	20001468 	.word	0x20001468
 800e7cc:	20001450 	.word	0x20001450
 800e7d0:	20000f78 	.word	0x20000f78
 800e7d4:	20000f74 	.word	0x20000f74
 800e7d8:	2000145c 	.word	0x2000145c
 800e7dc:	20001458 	.word	0x20001458

0800e7e0 <vTaskSwitchContext>:
 800e7e0:	b480      	push	{r7}
 800e7e2:	b085      	sub	sp, #20
 800e7e4:	af00      	add	r7, sp, #0
 800e7e6:	4b2b      	ldr	r3, [pc, #172]	@ (800e894 <vTaskSwitchContext+0xb4>)
 800e7e8:	681b      	ldr	r3, [r3, #0]
 800e7ea:	2b00      	cmp	r3, #0
 800e7ec:	d003      	beq.n	800e7f6 <vTaskSwitchContext+0x16>
 800e7ee:	4b2a      	ldr	r3, [pc, #168]	@ (800e898 <vTaskSwitchContext+0xb8>)
 800e7f0:	2201      	movs	r2, #1
 800e7f2:	601a      	str	r2, [r3, #0]
 800e7f4:	e047      	b.n	800e886 <vTaskSwitchContext+0xa6>
 800e7f6:	4b28      	ldr	r3, [pc, #160]	@ (800e898 <vTaskSwitchContext+0xb8>)
 800e7f8:	2200      	movs	r2, #0
 800e7fa:	601a      	str	r2, [r3, #0]
 800e7fc:	4b27      	ldr	r3, [pc, #156]	@ (800e89c <vTaskSwitchContext+0xbc>)
 800e7fe:	681b      	ldr	r3, [r3, #0]
 800e800:	60fb      	str	r3, [r7, #12]
 800e802:	e011      	b.n	800e828 <vTaskSwitchContext+0x48>
 800e804:	68fb      	ldr	r3, [r7, #12]
 800e806:	2b00      	cmp	r3, #0
 800e808:	d10b      	bne.n	800e822 <vTaskSwitchContext+0x42>
 800e80a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e80e:	f383 8811 	msr	BASEPRI, r3
 800e812:	f3bf 8f6f 	isb	sy
 800e816:	f3bf 8f4f 	dsb	sy
 800e81a:	607b      	str	r3, [r7, #4]
 800e81c:	bf00      	nop
 800e81e:	bf00      	nop
 800e820:	e7fd      	b.n	800e81e <vTaskSwitchContext+0x3e>
 800e822:	68fb      	ldr	r3, [r7, #12]
 800e824:	3b01      	subs	r3, #1
 800e826:	60fb      	str	r3, [r7, #12]
 800e828:	491d      	ldr	r1, [pc, #116]	@ (800e8a0 <vTaskSwitchContext+0xc0>)
 800e82a:	68fa      	ldr	r2, [r7, #12]
 800e82c:	4613      	mov	r3, r2
 800e82e:	009b      	lsls	r3, r3, #2
 800e830:	4413      	add	r3, r2
 800e832:	009b      	lsls	r3, r3, #2
 800e834:	440b      	add	r3, r1
 800e836:	681b      	ldr	r3, [r3, #0]
 800e838:	2b00      	cmp	r3, #0
 800e83a:	d0e3      	beq.n	800e804 <vTaskSwitchContext+0x24>
 800e83c:	68fa      	ldr	r2, [r7, #12]
 800e83e:	4613      	mov	r3, r2
 800e840:	009b      	lsls	r3, r3, #2
 800e842:	4413      	add	r3, r2
 800e844:	009b      	lsls	r3, r3, #2
 800e846:	4a16      	ldr	r2, [pc, #88]	@ (800e8a0 <vTaskSwitchContext+0xc0>)
 800e848:	4413      	add	r3, r2
 800e84a:	60bb      	str	r3, [r7, #8]
 800e84c:	68bb      	ldr	r3, [r7, #8]
 800e84e:	685b      	ldr	r3, [r3, #4]
 800e850:	685a      	ldr	r2, [r3, #4]
 800e852:	68bb      	ldr	r3, [r7, #8]
 800e854:	605a      	str	r2, [r3, #4]
 800e856:	68bb      	ldr	r3, [r7, #8]
 800e858:	685a      	ldr	r2, [r3, #4]
 800e85a:	68bb      	ldr	r3, [r7, #8]
 800e85c:	3308      	adds	r3, #8
 800e85e:	429a      	cmp	r2, r3
 800e860:	d104      	bne.n	800e86c <vTaskSwitchContext+0x8c>
 800e862:	68bb      	ldr	r3, [r7, #8]
 800e864:	685b      	ldr	r3, [r3, #4]
 800e866:	685a      	ldr	r2, [r3, #4]
 800e868:	68bb      	ldr	r3, [r7, #8]
 800e86a:	605a      	str	r2, [r3, #4]
 800e86c:	68bb      	ldr	r3, [r7, #8]
 800e86e:	685b      	ldr	r3, [r3, #4]
 800e870:	68db      	ldr	r3, [r3, #12]
 800e872:	4a0c      	ldr	r2, [pc, #48]	@ (800e8a4 <vTaskSwitchContext+0xc4>)
 800e874:	6013      	str	r3, [r2, #0]
 800e876:	4a09      	ldr	r2, [pc, #36]	@ (800e89c <vTaskSwitchContext+0xbc>)
 800e878:	68fb      	ldr	r3, [r7, #12]
 800e87a:	6013      	str	r3, [r2, #0]
 800e87c:	4b09      	ldr	r3, [pc, #36]	@ (800e8a4 <vTaskSwitchContext+0xc4>)
 800e87e:	681b      	ldr	r3, [r3, #0]
 800e880:	3354      	adds	r3, #84	@ 0x54
 800e882:	4a09      	ldr	r2, [pc, #36]	@ (800e8a8 <vTaskSwitchContext+0xc8>)
 800e884:	6013      	str	r3, [r2, #0]
 800e886:	bf00      	nop
 800e888:	3714      	adds	r7, #20
 800e88a:	46bd      	mov	sp, r7
 800e88c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e890:	4770      	bx	lr
 800e892:	bf00      	nop
 800e894:	20001470 	.word	0x20001470
 800e898:	2000145c 	.word	0x2000145c
 800e89c:	20001450 	.word	0x20001450
 800e8a0:	20000f78 	.word	0x20000f78
 800e8a4:	20000f74 	.word	0x20000f74
 800e8a8:	20000404 	.word	0x20000404

0800e8ac <vTaskPlaceOnEventList>:
 800e8ac:	b580      	push	{r7, lr}
 800e8ae:	b084      	sub	sp, #16
 800e8b0:	af00      	add	r7, sp, #0
 800e8b2:	6078      	str	r0, [r7, #4]
 800e8b4:	6039      	str	r1, [r7, #0]
 800e8b6:	687b      	ldr	r3, [r7, #4]
 800e8b8:	2b00      	cmp	r3, #0
 800e8ba:	d10b      	bne.n	800e8d4 <vTaskPlaceOnEventList+0x28>
 800e8bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e8c0:	f383 8811 	msr	BASEPRI, r3
 800e8c4:	f3bf 8f6f 	isb	sy
 800e8c8:	f3bf 8f4f 	dsb	sy
 800e8cc:	60fb      	str	r3, [r7, #12]
 800e8ce:	bf00      	nop
 800e8d0:	bf00      	nop
 800e8d2:	e7fd      	b.n	800e8d0 <vTaskPlaceOnEventList+0x24>
 800e8d4:	4b07      	ldr	r3, [pc, #28]	@ (800e8f4 <vTaskPlaceOnEventList+0x48>)
 800e8d6:	681b      	ldr	r3, [r3, #0]
 800e8d8:	3318      	adds	r3, #24
 800e8da:	4619      	mov	r1, r3
 800e8dc:	6878      	ldr	r0, [r7, #4]
 800e8de:	f7fe f8da 	bl	800ca96 <vListInsert>
 800e8e2:	2101      	movs	r1, #1
 800e8e4:	6838      	ldr	r0, [r7, #0]
 800e8e6:	f000 fe4d 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800e8ea:	bf00      	nop
 800e8ec:	3710      	adds	r7, #16
 800e8ee:	46bd      	mov	sp, r7
 800e8f0:	bd80      	pop	{r7, pc}
 800e8f2:	bf00      	nop
 800e8f4:	20000f74 	.word	0x20000f74

0800e8f8 <vTaskPlaceOnUnorderedEventList>:
 800e8f8:	b580      	push	{r7, lr}
 800e8fa:	b086      	sub	sp, #24
 800e8fc:	af00      	add	r7, sp, #0
 800e8fe:	60f8      	str	r0, [r7, #12]
 800e900:	60b9      	str	r1, [r7, #8]
 800e902:	607a      	str	r2, [r7, #4]
 800e904:	68fb      	ldr	r3, [r7, #12]
 800e906:	2b00      	cmp	r3, #0
 800e908:	d10b      	bne.n	800e922 <vTaskPlaceOnUnorderedEventList+0x2a>
 800e90a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e90e:	f383 8811 	msr	BASEPRI, r3
 800e912:	f3bf 8f6f 	isb	sy
 800e916:	f3bf 8f4f 	dsb	sy
 800e91a:	617b      	str	r3, [r7, #20]
 800e91c:	bf00      	nop
 800e91e:	bf00      	nop
 800e920:	e7fd      	b.n	800e91e <vTaskPlaceOnUnorderedEventList+0x26>
 800e922:	4b12      	ldr	r3, [pc, #72]	@ (800e96c <vTaskPlaceOnUnorderedEventList+0x74>)
 800e924:	681b      	ldr	r3, [r3, #0]
 800e926:	2b00      	cmp	r3, #0
 800e928:	d10b      	bne.n	800e942 <vTaskPlaceOnUnorderedEventList+0x4a>
 800e92a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e92e:	f383 8811 	msr	BASEPRI, r3
 800e932:	f3bf 8f6f 	isb	sy
 800e936:	f3bf 8f4f 	dsb	sy
 800e93a:	613b      	str	r3, [r7, #16]
 800e93c:	bf00      	nop
 800e93e:	bf00      	nop
 800e940:	e7fd      	b.n	800e93e <vTaskPlaceOnUnorderedEventList+0x46>
 800e942:	4b0b      	ldr	r3, [pc, #44]	@ (800e970 <vTaskPlaceOnUnorderedEventList+0x78>)
 800e944:	681b      	ldr	r3, [r3, #0]
 800e946:	68ba      	ldr	r2, [r7, #8]
 800e948:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
 800e94c:	619a      	str	r2, [r3, #24]
 800e94e:	4b08      	ldr	r3, [pc, #32]	@ (800e970 <vTaskPlaceOnUnorderedEventList+0x78>)
 800e950:	681b      	ldr	r3, [r3, #0]
 800e952:	3318      	adds	r3, #24
 800e954:	4619      	mov	r1, r3
 800e956:	68f8      	ldr	r0, [r7, #12]
 800e958:	f7fe f879 	bl	800ca4e <vListInsertEnd>
 800e95c:	2101      	movs	r1, #1
 800e95e:	6878      	ldr	r0, [r7, #4]
 800e960:	f000 fe10 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800e964:	bf00      	nop
 800e966:	3718      	adds	r7, #24
 800e968:	46bd      	mov	sp, r7
 800e96a:	bd80      	pop	{r7, pc}
 800e96c:	20001470 	.word	0x20001470
 800e970:	20000f74 	.word	0x20000f74

0800e974 <vTaskPlaceOnEventListRestricted>:
 800e974:	b580      	push	{r7, lr}
 800e976:	b086      	sub	sp, #24
 800e978:	af00      	add	r7, sp, #0
 800e97a:	60f8      	str	r0, [r7, #12]
 800e97c:	60b9      	str	r1, [r7, #8]
 800e97e:	607a      	str	r2, [r7, #4]
 800e980:	68fb      	ldr	r3, [r7, #12]
 800e982:	2b00      	cmp	r3, #0
 800e984:	d10b      	bne.n	800e99e <vTaskPlaceOnEventListRestricted+0x2a>
 800e986:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e98a:	f383 8811 	msr	BASEPRI, r3
 800e98e:	f3bf 8f6f 	isb	sy
 800e992:	f3bf 8f4f 	dsb	sy
 800e996:	617b      	str	r3, [r7, #20]
 800e998:	bf00      	nop
 800e99a:	bf00      	nop
 800e99c:	e7fd      	b.n	800e99a <vTaskPlaceOnEventListRestricted+0x26>
 800e99e:	4b0a      	ldr	r3, [pc, #40]	@ (800e9c8 <vTaskPlaceOnEventListRestricted+0x54>)
 800e9a0:	681b      	ldr	r3, [r3, #0]
 800e9a2:	3318      	adds	r3, #24
 800e9a4:	4619      	mov	r1, r3
 800e9a6:	68f8      	ldr	r0, [r7, #12]
 800e9a8:	f7fe f851 	bl	800ca4e <vListInsertEnd>
 800e9ac:	687b      	ldr	r3, [r7, #4]
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	d002      	beq.n	800e9b8 <vTaskPlaceOnEventListRestricted+0x44>
 800e9b2:	f04f 33ff 	mov.w	r3, #4294967295
 800e9b6:	60bb      	str	r3, [r7, #8]
 800e9b8:	6879      	ldr	r1, [r7, #4]
 800e9ba:	68b8      	ldr	r0, [r7, #8]
 800e9bc:	f000 fde2 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800e9c0:	bf00      	nop
 800e9c2:	3718      	adds	r7, #24
 800e9c4:	46bd      	mov	sp, r7
 800e9c6:	bd80      	pop	{r7, pc}
 800e9c8:	20000f74 	.word	0x20000f74

0800e9cc <xTaskRemoveFromEventList>:
 800e9cc:	b580      	push	{r7, lr}
 800e9ce:	b086      	sub	sp, #24
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	6078      	str	r0, [r7, #4]
 800e9d4:	687b      	ldr	r3, [r7, #4]
 800e9d6:	68db      	ldr	r3, [r3, #12]
 800e9d8:	68db      	ldr	r3, [r3, #12]
 800e9da:	613b      	str	r3, [r7, #16]
 800e9dc:	693b      	ldr	r3, [r7, #16]
 800e9de:	2b00      	cmp	r3, #0
 800e9e0:	d10b      	bne.n	800e9fa <xTaskRemoveFromEventList+0x2e>
 800e9e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e9e6:	f383 8811 	msr	BASEPRI, r3
 800e9ea:	f3bf 8f6f 	isb	sy
 800e9ee:	f3bf 8f4f 	dsb	sy
 800e9f2:	60fb      	str	r3, [r7, #12]
 800e9f4:	bf00      	nop
 800e9f6:	bf00      	nop
 800e9f8:	e7fd      	b.n	800e9f6 <xTaskRemoveFromEventList+0x2a>
 800e9fa:	693b      	ldr	r3, [r7, #16]
 800e9fc:	3318      	adds	r3, #24
 800e9fe:	4618      	mov	r0, r3
 800ea00:	f7fe f882 	bl	800cb08 <uxListRemove>
 800ea04:	4b1d      	ldr	r3, [pc, #116]	@ (800ea7c <xTaskRemoveFromEventList+0xb0>)
 800ea06:	681b      	ldr	r3, [r3, #0]
 800ea08:	2b00      	cmp	r3, #0
 800ea0a:	d11d      	bne.n	800ea48 <xTaskRemoveFromEventList+0x7c>
 800ea0c:	693b      	ldr	r3, [r7, #16]
 800ea0e:	3304      	adds	r3, #4
 800ea10:	4618      	mov	r0, r3
 800ea12:	f7fe f879 	bl	800cb08 <uxListRemove>
 800ea16:	693b      	ldr	r3, [r7, #16]
 800ea18:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ea1a:	4b19      	ldr	r3, [pc, #100]	@ (800ea80 <xTaskRemoveFromEventList+0xb4>)
 800ea1c:	681b      	ldr	r3, [r3, #0]
 800ea1e:	429a      	cmp	r2, r3
 800ea20:	d903      	bls.n	800ea2a <xTaskRemoveFromEventList+0x5e>
 800ea22:	693b      	ldr	r3, [r7, #16]
 800ea24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea26:	4a16      	ldr	r2, [pc, #88]	@ (800ea80 <xTaskRemoveFromEventList+0xb4>)
 800ea28:	6013      	str	r3, [r2, #0]
 800ea2a:	693b      	ldr	r3, [r7, #16]
 800ea2c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ea2e:	4613      	mov	r3, r2
 800ea30:	009b      	lsls	r3, r3, #2
 800ea32:	4413      	add	r3, r2
 800ea34:	009b      	lsls	r3, r3, #2
 800ea36:	4a13      	ldr	r2, [pc, #76]	@ (800ea84 <xTaskRemoveFromEventList+0xb8>)
 800ea38:	441a      	add	r2, r3
 800ea3a:	693b      	ldr	r3, [r7, #16]
 800ea3c:	3304      	adds	r3, #4
 800ea3e:	4619      	mov	r1, r3
 800ea40:	4610      	mov	r0, r2
 800ea42:	f7fe f804 	bl	800ca4e <vListInsertEnd>
 800ea46:	e005      	b.n	800ea54 <xTaskRemoveFromEventList+0x88>
 800ea48:	693b      	ldr	r3, [r7, #16]
 800ea4a:	3318      	adds	r3, #24
 800ea4c:	4619      	mov	r1, r3
 800ea4e:	480e      	ldr	r0, [pc, #56]	@ (800ea88 <xTaskRemoveFromEventList+0xbc>)
 800ea50:	f7fd fffd 	bl	800ca4e <vListInsertEnd>
 800ea54:	693b      	ldr	r3, [r7, #16]
 800ea56:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ea58:	4b0c      	ldr	r3, [pc, #48]	@ (800ea8c <xTaskRemoveFromEventList+0xc0>)
 800ea5a:	681b      	ldr	r3, [r3, #0]
 800ea5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea5e:	429a      	cmp	r2, r3
 800ea60:	d905      	bls.n	800ea6e <xTaskRemoveFromEventList+0xa2>
 800ea62:	2301      	movs	r3, #1
 800ea64:	617b      	str	r3, [r7, #20]
 800ea66:	4b0a      	ldr	r3, [pc, #40]	@ (800ea90 <xTaskRemoveFromEventList+0xc4>)
 800ea68:	2201      	movs	r2, #1
 800ea6a:	601a      	str	r2, [r3, #0]
 800ea6c:	e001      	b.n	800ea72 <xTaskRemoveFromEventList+0xa6>
 800ea6e:	2300      	movs	r3, #0
 800ea70:	617b      	str	r3, [r7, #20]
 800ea72:	697b      	ldr	r3, [r7, #20]
 800ea74:	4618      	mov	r0, r3
 800ea76:	3718      	adds	r7, #24
 800ea78:	46bd      	mov	sp, r7
 800ea7a:	bd80      	pop	{r7, pc}
 800ea7c:	20001470 	.word	0x20001470
 800ea80:	20001450 	.word	0x20001450
 800ea84:	20000f78 	.word	0x20000f78
 800ea88:	20001408 	.word	0x20001408
 800ea8c:	20000f74 	.word	0x20000f74
 800ea90:	2000145c 	.word	0x2000145c

0800ea94 <vTaskRemoveFromUnorderedEventList>:
 800ea94:	b580      	push	{r7, lr}
 800ea96:	b086      	sub	sp, #24
 800ea98:	af00      	add	r7, sp, #0
 800ea9a:	6078      	str	r0, [r7, #4]
 800ea9c:	6039      	str	r1, [r7, #0]
 800ea9e:	4b2a      	ldr	r3, [pc, #168]	@ (800eb48 <vTaskRemoveFromUnorderedEventList+0xb4>)
 800eaa0:	681b      	ldr	r3, [r3, #0]
 800eaa2:	2b00      	cmp	r3, #0
 800eaa4:	d10b      	bne.n	800eabe <vTaskRemoveFromUnorderedEventList+0x2a>
 800eaa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eaaa:	f383 8811 	msr	BASEPRI, r3
 800eaae:	f3bf 8f6f 	isb	sy
 800eab2:	f3bf 8f4f 	dsb	sy
 800eab6:	613b      	str	r3, [r7, #16]
 800eab8:	bf00      	nop
 800eaba:	bf00      	nop
 800eabc:	e7fd      	b.n	800eaba <vTaskRemoveFromUnorderedEventList+0x26>
 800eabe:	683b      	ldr	r3, [r7, #0]
 800eac0:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 800eac4:	687b      	ldr	r3, [r7, #4]
 800eac6:	601a      	str	r2, [r3, #0]
 800eac8:	687b      	ldr	r3, [r7, #4]
 800eaca:	68db      	ldr	r3, [r3, #12]
 800eacc:	617b      	str	r3, [r7, #20]
 800eace:	697b      	ldr	r3, [r7, #20]
 800ead0:	2b00      	cmp	r3, #0
 800ead2:	d10b      	bne.n	800eaec <vTaskRemoveFromUnorderedEventList+0x58>
 800ead4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ead8:	f383 8811 	msr	BASEPRI, r3
 800eadc:	f3bf 8f6f 	isb	sy
 800eae0:	f3bf 8f4f 	dsb	sy
 800eae4:	60fb      	str	r3, [r7, #12]
 800eae6:	bf00      	nop
 800eae8:	bf00      	nop
 800eaea:	e7fd      	b.n	800eae8 <vTaskRemoveFromUnorderedEventList+0x54>
 800eaec:	6878      	ldr	r0, [r7, #4]
 800eaee:	f7fe f80b 	bl	800cb08 <uxListRemove>
 800eaf2:	697b      	ldr	r3, [r7, #20]
 800eaf4:	3304      	adds	r3, #4
 800eaf6:	4618      	mov	r0, r3
 800eaf8:	f7fe f806 	bl	800cb08 <uxListRemove>
 800eafc:	697b      	ldr	r3, [r7, #20]
 800eafe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eb00:	4b12      	ldr	r3, [pc, #72]	@ (800eb4c <vTaskRemoveFromUnorderedEventList+0xb8>)
 800eb02:	681b      	ldr	r3, [r3, #0]
 800eb04:	429a      	cmp	r2, r3
 800eb06:	d903      	bls.n	800eb10 <vTaskRemoveFromUnorderedEventList+0x7c>
 800eb08:	697b      	ldr	r3, [r7, #20]
 800eb0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb0c:	4a0f      	ldr	r2, [pc, #60]	@ (800eb4c <vTaskRemoveFromUnorderedEventList+0xb8>)
 800eb0e:	6013      	str	r3, [r2, #0]
 800eb10:	697b      	ldr	r3, [r7, #20]
 800eb12:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eb14:	4613      	mov	r3, r2
 800eb16:	009b      	lsls	r3, r3, #2
 800eb18:	4413      	add	r3, r2
 800eb1a:	009b      	lsls	r3, r3, #2
 800eb1c:	4a0c      	ldr	r2, [pc, #48]	@ (800eb50 <vTaskRemoveFromUnorderedEventList+0xbc>)
 800eb1e:	441a      	add	r2, r3
 800eb20:	697b      	ldr	r3, [r7, #20]
 800eb22:	3304      	adds	r3, #4
 800eb24:	4619      	mov	r1, r3
 800eb26:	4610      	mov	r0, r2
 800eb28:	f7fd ff91 	bl	800ca4e <vListInsertEnd>
 800eb2c:	697b      	ldr	r3, [r7, #20]
 800eb2e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eb30:	4b08      	ldr	r3, [pc, #32]	@ (800eb54 <vTaskRemoveFromUnorderedEventList+0xc0>)
 800eb32:	681b      	ldr	r3, [r3, #0]
 800eb34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb36:	429a      	cmp	r2, r3
 800eb38:	d902      	bls.n	800eb40 <vTaskRemoveFromUnorderedEventList+0xac>
 800eb3a:	4b07      	ldr	r3, [pc, #28]	@ (800eb58 <vTaskRemoveFromUnorderedEventList+0xc4>)
 800eb3c:	2201      	movs	r2, #1
 800eb3e:	601a      	str	r2, [r3, #0]
 800eb40:	bf00      	nop
 800eb42:	3718      	adds	r7, #24
 800eb44:	46bd      	mov	sp, r7
 800eb46:	bd80      	pop	{r7, pc}
 800eb48:	20001470 	.word	0x20001470
 800eb4c:	20001450 	.word	0x20001450
 800eb50:	20000f78 	.word	0x20000f78
 800eb54:	20000f74 	.word	0x20000f74
 800eb58:	2000145c 	.word	0x2000145c

0800eb5c <vTaskInternalSetTimeOutState>:
 800eb5c:	b480      	push	{r7}
 800eb5e:	b083      	sub	sp, #12
 800eb60:	af00      	add	r7, sp, #0
 800eb62:	6078      	str	r0, [r7, #4]
 800eb64:	4b06      	ldr	r3, [pc, #24]	@ (800eb80 <vTaskInternalSetTimeOutState+0x24>)
 800eb66:	681a      	ldr	r2, [r3, #0]
 800eb68:	687b      	ldr	r3, [r7, #4]
 800eb6a:	601a      	str	r2, [r3, #0]
 800eb6c:	4b05      	ldr	r3, [pc, #20]	@ (800eb84 <vTaskInternalSetTimeOutState+0x28>)
 800eb6e:	681a      	ldr	r2, [r3, #0]
 800eb70:	687b      	ldr	r3, [r7, #4]
 800eb72:	605a      	str	r2, [r3, #4]
 800eb74:	bf00      	nop
 800eb76:	370c      	adds	r7, #12
 800eb78:	46bd      	mov	sp, r7
 800eb7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb7e:	4770      	bx	lr
 800eb80:	20001460 	.word	0x20001460
 800eb84:	2000144c 	.word	0x2000144c

0800eb88 <xTaskCheckForTimeOut>:
 800eb88:	b580      	push	{r7, lr}
 800eb8a:	b088      	sub	sp, #32
 800eb8c:	af00      	add	r7, sp, #0
 800eb8e:	6078      	str	r0, [r7, #4]
 800eb90:	6039      	str	r1, [r7, #0]
 800eb92:	687b      	ldr	r3, [r7, #4]
 800eb94:	2b00      	cmp	r3, #0
 800eb96:	d10b      	bne.n	800ebb0 <xTaskCheckForTimeOut+0x28>
 800eb98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb9c:	f383 8811 	msr	BASEPRI, r3
 800eba0:	f3bf 8f6f 	isb	sy
 800eba4:	f3bf 8f4f 	dsb	sy
 800eba8:	613b      	str	r3, [r7, #16]
 800ebaa:	bf00      	nop
 800ebac:	bf00      	nop
 800ebae:	e7fd      	b.n	800ebac <xTaskCheckForTimeOut+0x24>
 800ebb0:	683b      	ldr	r3, [r7, #0]
 800ebb2:	2b00      	cmp	r3, #0
 800ebb4:	d10b      	bne.n	800ebce <xTaskCheckForTimeOut+0x46>
 800ebb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ebba:	f383 8811 	msr	BASEPRI, r3
 800ebbe:	f3bf 8f6f 	isb	sy
 800ebc2:	f3bf 8f4f 	dsb	sy
 800ebc6:	60fb      	str	r3, [r7, #12]
 800ebc8:	bf00      	nop
 800ebca:	bf00      	nop
 800ebcc:	e7fd      	b.n	800ebca <xTaskCheckForTimeOut+0x42>
 800ebce:	f001 fa33 	bl	8010038 <vPortEnterCritical>
 800ebd2:	4b1d      	ldr	r3, [pc, #116]	@ (800ec48 <xTaskCheckForTimeOut+0xc0>)
 800ebd4:	681b      	ldr	r3, [r3, #0]
 800ebd6:	61bb      	str	r3, [r7, #24]
 800ebd8:	687b      	ldr	r3, [r7, #4]
 800ebda:	685b      	ldr	r3, [r3, #4]
 800ebdc:	69ba      	ldr	r2, [r7, #24]
 800ebde:	1ad3      	subs	r3, r2, r3
 800ebe0:	617b      	str	r3, [r7, #20]
 800ebe2:	683b      	ldr	r3, [r7, #0]
 800ebe4:	681b      	ldr	r3, [r3, #0]
 800ebe6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ebea:	d102      	bne.n	800ebf2 <xTaskCheckForTimeOut+0x6a>
 800ebec:	2300      	movs	r3, #0
 800ebee:	61fb      	str	r3, [r7, #28]
 800ebf0:	e023      	b.n	800ec3a <xTaskCheckForTimeOut+0xb2>
 800ebf2:	687b      	ldr	r3, [r7, #4]
 800ebf4:	681a      	ldr	r2, [r3, #0]
 800ebf6:	4b15      	ldr	r3, [pc, #84]	@ (800ec4c <xTaskCheckForTimeOut+0xc4>)
 800ebf8:	681b      	ldr	r3, [r3, #0]
 800ebfa:	429a      	cmp	r2, r3
 800ebfc:	d007      	beq.n	800ec0e <xTaskCheckForTimeOut+0x86>
 800ebfe:	687b      	ldr	r3, [r7, #4]
 800ec00:	685b      	ldr	r3, [r3, #4]
 800ec02:	69ba      	ldr	r2, [r7, #24]
 800ec04:	429a      	cmp	r2, r3
 800ec06:	d302      	bcc.n	800ec0e <xTaskCheckForTimeOut+0x86>
 800ec08:	2301      	movs	r3, #1
 800ec0a:	61fb      	str	r3, [r7, #28]
 800ec0c:	e015      	b.n	800ec3a <xTaskCheckForTimeOut+0xb2>
 800ec0e:	683b      	ldr	r3, [r7, #0]
 800ec10:	681b      	ldr	r3, [r3, #0]
 800ec12:	697a      	ldr	r2, [r7, #20]
 800ec14:	429a      	cmp	r2, r3
 800ec16:	d20b      	bcs.n	800ec30 <xTaskCheckForTimeOut+0xa8>
 800ec18:	683b      	ldr	r3, [r7, #0]
 800ec1a:	681a      	ldr	r2, [r3, #0]
 800ec1c:	697b      	ldr	r3, [r7, #20]
 800ec1e:	1ad2      	subs	r2, r2, r3
 800ec20:	683b      	ldr	r3, [r7, #0]
 800ec22:	601a      	str	r2, [r3, #0]
 800ec24:	6878      	ldr	r0, [r7, #4]
 800ec26:	f7ff ff99 	bl	800eb5c <vTaskInternalSetTimeOutState>
 800ec2a:	2300      	movs	r3, #0
 800ec2c:	61fb      	str	r3, [r7, #28]
 800ec2e:	e004      	b.n	800ec3a <xTaskCheckForTimeOut+0xb2>
 800ec30:	683b      	ldr	r3, [r7, #0]
 800ec32:	2200      	movs	r2, #0
 800ec34:	601a      	str	r2, [r3, #0]
 800ec36:	2301      	movs	r3, #1
 800ec38:	61fb      	str	r3, [r7, #28]
 800ec3a:	f001 fa2f 	bl	801009c <vPortExitCritical>
 800ec3e:	69fb      	ldr	r3, [r7, #28]
 800ec40:	4618      	mov	r0, r3
 800ec42:	3720      	adds	r7, #32
 800ec44:	46bd      	mov	sp, r7
 800ec46:	bd80      	pop	{r7, pc}
 800ec48:	2000144c 	.word	0x2000144c
 800ec4c:	20001460 	.word	0x20001460

0800ec50 <vTaskMissedYield>:
 800ec50:	b480      	push	{r7}
 800ec52:	af00      	add	r7, sp, #0
 800ec54:	4b03      	ldr	r3, [pc, #12]	@ (800ec64 <vTaskMissedYield+0x14>)
 800ec56:	2201      	movs	r2, #1
 800ec58:	601a      	str	r2, [r3, #0]
 800ec5a:	bf00      	nop
 800ec5c:	46bd      	mov	sp, r7
 800ec5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec62:	4770      	bx	lr
 800ec64:	2000145c 	.word	0x2000145c

0800ec68 <prvIdleTask>:
 800ec68:	b580      	push	{r7, lr}
 800ec6a:	b082      	sub	sp, #8
 800ec6c:	af00      	add	r7, sp, #0
 800ec6e:	6078      	str	r0, [r7, #4]
 800ec70:	f000 f852 	bl	800ed18 <prvCheckTasksWaitingTermination>
 800ec74:	4b06      	ldr	r3, [pc, #24]	@ (800ec90 <prvIdleTask+0x28>)
 800ec76:	681b      	ldr	r3, [r3, #0]
 800ec78:	2b01      	cmp	r3, #1
 800ec7a:	d9f9      	bls.n	800ec70 <prvIdleTask+0x8>
 800ec7c:	4b05      	ldr	r3, [pc, #20]	@ (800ec94 <prvIdleTask+0x2c>)
 800ec7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ec82:	601a      	str	r2, [r3, #0]
 800ec84:	f3bf 8f4f 	dsb	sy
 800ec88:	f3bf 8f6f 	isb	sy
 800ec8c:	e7f0      	b.n	800ec70 <prvIdleTask+0x8>
 800ec8e:	bf00      	nop
 800ec90:	20000f78 	.word	0x20000f78
 800ec94:	e000ed04 	.word	0xe000ed04

0800ec98 <prvInitialiseTaskLists>:
 800ec98:	b580      	push	{r7, lr}
 800ec9a:	b082      	sub	sp, #8
 800ec9c:	af00      	add	r7, sp, #0
 800ec9e:	2300      	movs	r3, #0
 800eca0:	607b      	str	r3, [r7, #4]
 800eca2:	e00c      	b.n	800ecbe <prvInitialiseTaskLists+0x26>
 800eca4:	687a      	ldr	r2, [r7, #4]
 800eca6:	4613      	mov	r3, r2
 800eca8:	009b      	lsls	r3, r3, #2
 800ecaa:	4413      	add	r3, r2
 800ecac:	009b      	lsls	r3, r3, #2
 800ecae:	4a12      	ldr	r2, [pc, #72]	@ (800ecf8 <prvInitialiseTaskLists+0x60>)
 800ecb0:	4413      	add	r3, r2
 800ecb2:	4618      	mov	r0, r3
 800ecb4:	f7fd fe9e 	bl	800c9f4 <vListInitialise>
 800ecb8:	687b      	ldr	r3, [r7, #4]
 800ecba:	3301      	adds	r3, #1
 800ecbc:	607b      	str	r3, [r7, #4]
 800ecbe:	687b      	ldr	r3, [r7, #4]
 800ecc0:	2b37      	cmp	r3, #55	@ 0x37
 800ecc2:	d9ef      	bls.n	800eca4 <prvInitialiseTaskLists+0xc>
 800ecc4:	480d      	ldr	r0, [pc, #52]	@ (800ecfc <prvInitialiseTaskLists+0x64>)
 800ecc6:	f7fd fe95 	bl	800c9f4 <vListInitialise>
 800ecca:	480d      	ldr	r0, [pc, #52]	@ (800ed00 <prvInitialiseTaskLists+0x68>)
 800eccc:	f7fd fe92 	bl	800c9f4 <vListInitialise>
 800ecd0:	480c      	ldr	r0, [pc, #48]	@ (800ed04 <prvInitialiseTaskLists+0x6c>)
 800ecd2:	f7fd fe8f 	bl	800c9f4 <vListInitialise>
 800ecd6:	480c      	ldr	r0, [pc, #48]	@ (800ed08 <prvInitialiseTaskLists+0x70>)
 800ecd8:	f7fd fe8c 	bl	800c9f4 <vListInitialise>
 800ecdc:	480b      	ldr	r0, [pc, #44]	@ (800ed0c <prvInitialiseTaskLists+0x74>)
 800ecde:	f7fd fe89 	bl	800c9f4 <vListInitialise>
 800ece2:	4b0b      	ldr	r3, [pc, #44]	@ (800ed10 <prvInitialiseTaskLists+0x78>)
 800ece4:	4a05      	ldr	r2, [pc, #20]	@ (800ecfc <prvInitialiseTaskLists+0x64>)
 800ece6:	601a      	str	r2, [r3, #0]
 800ece8:	4b0a      	ldr	r3, [pc, #40]	@ (800ed14 <prvInitialiseTaskLists+0x7c>)
 800ecea:	4a05      	ldr	r2, [pc, #20]	@ (800ed00 <prvInitialiseTaskLists+0x68>)
 800ecec:	601a      	str	r2, [r3, #0]
 800ecee:	bf00      	nop
 800ecf0:	3708      	adds	r7, #8
 800ecf2:	46bd      	mov	sp, r7
 800ecf4:	bd80      	pop	{r7, pc}
 800ecf6:	bf00      	nop
 800ecf8:	20000f78 	.word	0x20000f78
 800ecfc:	200013d8 	.word	0x200013d8
 800ed00:	200013ec 	.word	0x200013ec
 800ed04:	20001408 	.word	0x20001408
 800ed08:	2000141c 	.word	0x2000141c
 800ed0c:	20001434 	.word	0x20001434
 800ed10:	20001400 	.word	0x20001400
 800ed14:	20001404 	.word	0x20001404

0800ed18 <prvCheckTasksWaitingTermination>:
 800ed18:	b580      	push	{r7, lr}
 800ed1a:	b082      	sub	sp, #8
 800ed1c:	af00      	add	r7, sp, #0
 800ed1e:	e019      	b.n	800ed54 <prvCheckTasksWaitingTermination+0x3c>
 800ed20:	f001 f98a 	bl	8010038 <vPortEnterCritical>
 800ed24:	4b10      	ldr	r3, [pc, #64]	@ (800ed68 <prvCheckTasksWaitingTermination+0x50>)
 800ed26:	68db      	ldr	r3, [r3, #12]
 800ed28:	68db      	ldr	r3, [r3, #12]
 800ed2a:	607b      	str	r3, [r7, #4]
 800ed2c:	687b      	ldr	r3, [r7, #4]
 800ed2e:	3304      	adds	r3, #4
 800ed30:	4618      	mov	r0, r3
 800ed32:	f7fd fee9 	bl	800cb08 <uxListRemove>
 800ed36:	4b0d      	ldr	r3, [pc, #52]	@ (800ed6c <prvCheckTasksWaitingTermination+0x54>)
 800ed38:	681b      	ldr	r3, [r3, #0]
 800ed3a:	3b01      	subs	r3, #1
 800ed3c:	4a0b      	ldr	r2, [pc, #44]	@ (800ed6c <prvCheckTasksWaitingTermination+0x54>)
 800ed3e:	6013      	str	r3, [r2, #0]
 800ed40:	4b0b      	ldr	r3, [pc, #44]	@ (800ed70 <prvCheckTasksWaitingTermination+0x58>)
 800ed42:	681b      	ldr	r3, [r3, #0]
 800ed44:	3b01      	subs	r3, #1
 800ed46:	4a0a      	ldr	r2, [pc, #40]	@ (800ed70 <prvCheckTasksWaitingTermination+0x58>)
 800ed48:	6013      	str	r3, [r2, #0]
 800ed4a:	f001 f9a7 	bl	801009c <vPortExitCritical>
 800ed4e:	6878      	ldr	r0, [r7, #4]
 800ed50:	f000 f8ae 	bl	800eeb0 <prvDeleteTCB>
 800ed54:	4b06      	ldr	r3, [pc, #24]	@ (800ed70 <prvCheckTasksWaitingTermination+0x58>)
 800ed56:	681b      	ldr	r3, [r3, #0]
 800ed58:	2b00      	cmp	r3, #0
 800ed5a:	d1e1      	bne.n	800ed20 <prvCheckTasksWaitingTermination+0x8>
 800ed5c:	bf00      	nop
 800ed5e:	bf00      	nop
 800ed60:	3708      	adds	r7, #8
 800ed62:	46bd      	mov	sp, r7
 800ed64:	bd80      	pop	{r7, pc}
 800ed66:	bf00      	nop
 800ed68:	2000141c 	.word	0x2000141c
 800ed6c:	20001448 	.word	0x20001448
 800ed70:	20001430 	.word	0x20001430

0800ed74 <vTaskGetInfo>:
 800ed74:	b580      	push	{r7, lr}
 800ed76:	b086      	sub	sp, #24
 800ed78:	af00      	add	r7, sp, #0
 800ed7a:	60f8      	str	r0, [r7, #12]
 800ed7c:	60b9      	str	r1, [r7, #8]
 800ed7e:	607a      	str	r2, [r7, #4]
 800ed80:	70fb      	strb	r3, [r7, #3]
 800ed82:	68fb      	ldr	r3, [r7, #12]
 800ed84:	2b00      	cmp	r3, #0
 800ed86:	d102      	bne.n	800ed8e <vTaskGetInfo+0x1a>
 800ed88:	4b2c      	ldr	r3, [pc, #176]	@ (800ee3c <vTaskGetInfo+0xc8>)
 800ed8a:	681b      	ldr	r3, [r3, #0]
 800ed8c:	e000      	b.n	800ed90 <vTaskGetInfo+0x1c>
 800ed8e:	68fb      	ldr	r3, [r7, #12]
 800ed90:	617b      	str	r3, [r7, #20]
 800ed92:	68bb      	ldr	r3, [r7, #8]
 800ed94:	697a      	ldr	r2, [r7, #20]
 800ed96:	601a      	str	r2, [r3, #0]
 800ed98:	697b      	ldr	r3, [r7, #20]
 800ed9a:	f103 0234 	add.w	r2, r3, #52	@ 0x34
 800ed9e:	68bb      	ldr	r3, [r7, #8]
 800eda0:	605a      	str	r2, [r3, #4]
 800eda2:	697b      	ldr	r3, [r7, #20]
 800eda4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eda6:	68bb      	ldr	r3, [r7, #8]
 800eda8:	611a      	str	r2, [r3, #16]
 800edaa:	697b      	ldr	r3, [r7, #20]
 800edac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800edae:	68bb      	ldr	r3, [r7, #8]
 800edb0:	61da      	str	r2, [r3, #28]
 800edb2:	697b      	ldr	r3, [r7, #20]
 800edb4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800edb6:	68bb      	ldr	r3, [r7, #8]
 800edb8:	609a      	str	r2, [r3, #8]
 800edba:	697b      	ldr	r3, [r7, #20]
 800edbc:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800edbe:	68bb      	ldr	r3, [r7, #8]
 800edc0:	615a      	str	r2, [r3, #20]
 800edc2:	68bb      	ldr	r3, [r7, #8]
 800edc4:	2200      	movs	r2, #0
 800edc6:	619a      	str	r2, [r3, #24]
 800edc8:	78fb      	ldrb	r3, [r7, #3]
 800edca:	2b05      	cmp	r3, #5
 800edcc:	d01a      	beq.n	800ee04 <vTaskGetInfo+0x90>
 800edce:	4b1b      	ldr	r3, [pc, #108]	@ (800ee3c <vTaskGetInfo+0xc8>)
 800edd0:	681b      	ldr	r3, [r3, #0]
 800edd2:	697a      	ldr	r2, [r7, #20]
 800edd4:	429a      	cmp	r2, r3
 800edd6:	d103      	bne.n	800ede0 <vTaskGetInfo+0x6c>
 800edd8:	68bb      	ldr	r3, [r7, #8]
 800edda:	2200      	movs	r2, #0
 800eddc:	731a      	strb	r2, [r3, #12]
 800edde:	e018      	b.n	800ee12 <vTaskGetInfo+0x9e>
 800ede0:	68bb      	ldr	r3, [r7, #8]
 800ede2:	78fa      	ldrb	r2, [r7, #3]
 800ede4:	731a      	strb	r2, [r3, #12]
 800ede6:	78fb      	ldrb	r3, [r7, #3]
 800ede8:	2b03      	cmp	r3, #3
 800edea:	d112      	bne.n	800ee12 <vTaskGetInfo+0x9e>
 800edec:	f7ff faae 	bl	800e34c <vTaskSuspendAll>
 800edf0:	697b      	ldr	r3, [r7, #20]
 800edf2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800edf4:	2b00      	cmp	r3, #0
 800edf6:	d002      	beq.n	800edfe <vTaskGetInfo+0x8a>
 800edf8:	68bb      	ldr	r3, [r7, #8]
 800edfa:	2202      	movs	r2, #2
 800edfc:	731a      	strb	r2, [r3, #12]
 800edfe:	f7ff fab3 	bl	800e368 <xTaskResumeAll>
 800ee02:	e006      	b.n	800ee12 <vTaskGetInfo+0x9e>
 800ee04:	6978      	ldr	r0, [r7, #20]
 800ee06:	f7ff f823 	bl	800de50 <eTaskGetState>
 800ee0a:	4603      	mov	r3, r0
 800ee0c:	461a      	mov	r2, r3
 800ee0e:	68bb      	ldr	r3, [r7, #8]
 800ee10:	731a      	strb	r2, [r3, #12]
 800ee12:	687b      	ldr	r3, [r7, #4]
 800ee14:	2b00      	cmp	r3, #0
 800ee16:	d009      	beq.n	800ee2c <vTaskGetInfo+0xb8>
 800ee18:	697b      	ldr	r3, [r7, #20]
 800ee1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ee1c:	4618      	mov	r0, r3
 800ee1e:	f000 f80f 	bl	800ee40 <prvTaskCheckFreeStackSpace>
 800ee22:	4603      	mov	r3, r0
 800ee24:	461a      	mov	r2, r3
 800ee26:	68bb      	ldr	r3, [r7, #8]
 800ee28:	841a      	strh	r2, [r3, #32]
 800ee2a:	e002      	b.n	800ee32 <vTaskGetInfo+0xbe>
 800ee2c:	68bb      	ldr	r3, [r7, #8]
 800ee2e:	2200      	movs	r2, #0
 800ee30:	841a      	strh	r2, [r3, #32]
 800ee32:	bf00      	nop
 800ee34:	3718      	adds	r7, #24
 800ee36:	46bd      	mov	sp, r7
 800ee38:	bd80      	pop	{r7, pc}
 800ee3a:	bf00      	nop
 800ee3c:	20000f74 	.word	0x20000f74

0800ee40 <prvTaskCheckFreeStackSpace>:
 800ee40:	b480      	push	{r7}
 800ee42:	b085      	sub	sp, #20
 800ee44:	af00      	add	r7, sp, #0
 800ee46:	6078      	str	r0, [r7, #4]
 800ee48:	2300      	movs	r3, #0
 800ee4a:	60fb      	str	r3, [r7, #12]
 800ee4c:	e005      	b.n	800ee5a <prvTaskCheckFreeStackSpace+0x1a>
 800ee4e:	687b      	ldr	r3, [r7, #4]
 800ee50:	3301      	adds	r3, #1
 800ee52:	607b      	str	r3, [r7, #4]
 800ee54:	68fb      	ldr	r3, [r7, #12]
 800ee56:	3301      	adds	r3, #1
 800ee58:	60fb      	str	r3, [r7, #12]
 800ee5a:	687b      	ldr	r3, [r7, #4]
 800ee5c:	781b      	ldrb	r3, [r3, #0]
 800ee5e:	2ba5      	cmp	r3, #165	@ 0xa5
 800ee60:	d0f5      	beq.n	800ee4e <prvTaskCheckFreeStackSpace+0xe>
 800ee62:	68fb      	ldr	r3, [r7, #12]
 800ee64:	089b      	lsrs	r3, r3, #2
 800ee66:	60fb      	str	r3, [r7, #12]
 800ee68:	68fb      	ldr	r3, [r7, #12]
 800ee6a:	b29b      	uxth	r3, r3
 800ee6c:	4618      	mov	r0, r3
 800ee6e:	3714      	adds	r7, #20
 800ee70:	46bd      	mov	sp, r7
 800ee72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee76:	4770      	bx	lr

0800ee78 <uxTaskGetStackHighWaterMark>:
 800ee78:	b580      	push	{r7, lr}
 800ee7a:	b086      	sub	sp, #24
 800ee7c:	af00      	add	r7, sp, #0
 800ee7e:	6078      	str	r0, [r7, #4]
 800ee80:	687b      	ldr	r3, [r7, #4]
 800ee82:	2b00      	cmp	r3, #0
 800ee84:	d102      	bne.n	800ee8c <uxTaskGetStackHighWaterMark+0x14>
 800ee86:	4b09      	ldr	r3, [pc, #36]	@ (800eeac <uxTaskGetStackHighWaterMark+0x34>)
 800ee88:	681b      	ldr	r3, [r3, #0]
 800ee8a:	e000      	b.n	800ee8e <uxTaskGetStackHighWaterMark+0x16>
 800ee8c:	687b      	ldr	r3, [r7, #4]
 800ee8e:	617b      	str	r3, [r7, #20]
 800ee90:	697b      	ldr	r3, [r7, #20]
 800ee92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ee94:	613b      	str	r3, [r7, #16]
 800ee96:	6938      	ldr	r0, [r7, #16]
 800ee98:	f7ff ffd2 	bl	800ee40 <prvTaskCheckFreeStackSpace>
 800ee9c:	4603      	mov	r3, r0
 800ee9e:	60fb      	str	r3, [r7, #12]
 800eea0:	68fb      	ldr	r3, [r7, #12]
 800eea2:	4618      	mov	r0, r3
 800eea4:	3718      	adds	r7, #24
 800eea6:	46bd      	mov	sp, r7
 800eea8:	bd80      	pop	{r7, pc}
 800eeaa:	bf00      	nop
 800eeac:	20000f74 	.word	0x20000f74

0800eeb0 <prvDeleteTCB>:
 800eeb0:	b580      	push	{r7, lr}
 800eeb2:	b084      	sub	sp, #16
 800eeb4:	af00      	add	r7, sp, #0
 800eeb6:	6078      	str	r0, [r7, #4]
 800eeb8:	687b      	ldr	r3, [r7, #4]
 800eeba:	3354      	adds	r3, #84	@ 0x54
 800eebc:	4618      	mov	r0, r3
 800eebe:	f003 fc8b 	bl	80127d8 <_reclaim_reent>
 800eec2:	687b      	ldr	r3, [r7, #4]
 800eec4:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800eec8:	2b00      	cmp	r3, #0
 800eeca:	d108      	bne.n	800eede <prvDeleteTCB+0x2e>
 800eecc:	687b      	ldr	r3, [r7, #4]
 800eece:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eed0:	4618      	mov	r0, r3
 800eed2:	f001 faa1 	bl	8010418 <vPortFree>
 800eed6:	6878      	ldr	r0, [r7, #4]
 800eed8:	f001 fa9e 	bl	8010418 <vPortFree>
 800eedc:	e019      	b.n	800ef12 <prvDeleteTCB+0x62>
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800eee4:	2b01      	cmp	r3, #1
 800eee6:	d103      	bne.n	800eef0 <prvDeleteTCB+0x40>
 800eee8:	6878      	ldr	r0, [r7, #4]
 800eeea:	f001 fa95 	bl	8010418 <vPortFree>
 800eeee:	e010      	b.n	800ef12 <prvDeleteTCB+0x62>
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800eef6:	2b02      	cmp	r3, #2
 800eef8:	d00b      	beq.n	800ef12 <prvDeleteTCB+0x62>
 800eefa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eefe:	f383 8811 	msr	BASEPRI, r3
 800ef02:	f3bf 8f6f 	isb	sy
 800ef06:	f3bf 8f4f 	dsb	sy
 800ef0a:	60fb      	str	r3, [r7, #12]
 800ef0c:	bf00      	nop
 800ef0e:	bf00      	nop
 800ef10:	e7fd      	b.n	800ef0e <prvDeleteTCB+0x5e>
 800ef12:	bf00      	nop
 800ef14:	3710      	adds	r7, #16
 800ef16:	46bd      	mov	sp, r7
 800ef18:	bd80      	pop	{r7, pc}
	...

0800ef1c <prvResetNextTaskUnblockTime>:
 800ef1c:	b480      	push	{r7}
 800ef1e:	b083      	sub	sp, #12
 800ef20:	af00      	add	r7, sp, #0
 800ef22:	4b0c      	ldr	r3, [pc, #48]	@ (800ef54 <prvResetNextTaskUnblockTime+0x38>)
 800ef24:	681b      	ldr	r3, [r3, #0]
 800ef26:	681b      	ldr	r3, [r3, #0]
 800ef28:	2b00      	cmp	r3, #0
 800ef2a:	d104      	bne.n	800ef36 <prvResetNextTaskUnblockTime+0x1a>
 800ef2c:	4b0a      	ldr	r3, [pc, #40]	@ (800ef58 <prvResetNextTaskUnblockTime+0x3c>)
 800ef2e:	f04f 32ff 	mov.w	r2, #4294967295
 800ef32:	601a      	str	r2, [r3, #0]
 800ef34:	e008      	b.n	800ef48 <prvResetNextTaskUnblockTime+0x2c>
 800ef36:	4b07      	ldr	r3, [pc, #28]	@ (800ef54 <prvResetNextTaskUnblockTime+0x38>)
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	68db      	ldr	r3, [r3, #12]
 800ef3c:	68db      	ldr	r3, [r3, #12]
 800ef3e:	607b      	str	r3, [r7, #4]
 800ef40:	687b      	ldr	r3, [r7, #4]
 800ef42:	685b      	ldr	r3, [r3, #4]
 800ef44:	4a04      	ldr	r2, [pc, #16]	@ (800ef58 <prvResetNextTaskUnblockTime+0x3c>)
 800ef46:	6013      	str	r3, [r2, #0]
 800ef48:	bf00      	nop
 800ef4a:	370c      	adds	r7, #12
 800ef4c:	46bd      	mov	sp, r7
 800ef4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef52:	4770      	bx	lr
 800ef54:	20001400 	.word	0x20001400
 800ef58:	20001468 	.word	0x20001468

0800ef5c <xTaskGetSchedulerState>:
 800ef5c:	b480      	push	{r7}
 800ef5e:	b083      	sub	sp, #12
 800ef60:	af00      	add	r7, sp, #0
 800ef62:	4b0b      	ldr	r3, [pc, #44]	@ (800ef90 <xTaskGetSchedulerState+0x34>)
 800ef64:	681b      	ldr	r3, [r3, #0]
 800ef66:	2b00      	cmp	r3, #0
 800ef68:	d102      	bne.n	800ef70 <xTaskGetSchedulerState+0x14>
 800ef6a:	2301      	movs	r3, #1
 800ef6c:	607b      	str	r3, [r7, #4]
 800ef6e:	e008      	b.n	800ef82 <xTaskGetSchedulerState+0x26>
 800ef70:	4b08      	ldr	r3, [pc, #32]	@ (800ef94 <xTaskGetSchedulerState+0x38>)
 800ef72:	681b      	ldr	r3, [r3, #0]
 800ef74:	2b00      	cmp	r3, #0
 800ef76:	d102      	bne.n	800ef7e <xTaskGetSchedulerState+0x22>
 800ef78:	2302      	movs	r3, #2
 800ef7a:	607b      	str	r3, [r7, #4]
 800ef7c:	e001      	b.n	800ef82 <xTaskGetSchedulerState+0x26>
 800ef7e:	2300      	movs	r3, #0
 800ef80:	607b      	str	r3, [r7, #4]
 800ef82:	687b      	ldr	r3, [r7, #4]
 800ef84:	4618      	mov	r0, r3
 800ef86:	370c      	adds	r7, #12
 800ef88:	46bd      	mov	sp, r7
 800ef8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef8e:	4770      	bx	lr
 800ef90:	20001454 	.word	0x20001454
 800ef94:	20001470 	.word	0x20001470

0800ef98 <xTaskPriorityInherit>:
 800ef98:	b580      	push	{r7, lr}
 800ef9a:	b084      	sub	sp, #16
 800ef9c:	af00      	add	r7, sp, #0
 800ef9e:	6078      	str	r0, [r7, #4]
 800efa0:	687b      	ldr	r3, [r7, #4]
 800efa2:	60bb      	str	r3, [r7, #8]
 800efa4:	2300      	movs	r3, #0
 800efa6:	60fb      	str	r3, [r7, #12]
 800efa8:	687b      	ldr	r3, [r7, #4]
 800efaa:	2b00      	cmp	r3, #0
 800efac:	d051      	beq.n	800f052 <xTaskPriorityInherit+0xba>
 800efae:	68bb      	ldr	r3, [r7, #8]
 800efb0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800efb2:	4b2a      	ldr	r3, [pc, #168]	@ (800f05c <xTaskPriorityInherit+0xc4>)
 800efb4:	681b      	ldr	r3, [r3, #0]
 800efb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800efb8:	429a      	cmp	r2, r3
 800efba:	d241      	bcs.n	800f040 <xTaskPriorityInherit+0xa8>
 800efbc:	68bb      	ldr	r3, [r7, #8]
 800efbe:	699b      	ldr	r3, [r3, #24]
 800efc0:	2b00      	cmp	r3, #0
 800efc2:	db06      	blt.n	800efd2 <xTaskPriorityInherit+0x3a>
 800efc4:	4b25      	ldr	r3, [pc, #148]	@ (800f05c <xTaskPriorityInherit+0xc4>)
 800efc6:	681b      	ldr	r3, [r3, #0]
 800efc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800efca:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800efce:	68bb      	ldr	r3, [r7, #8]
 800efd0:	619a      	str	r2, [r3, #24]
 800efd2:	68bb      	ldr	r3, [r7, #8]
 800efd4:	6959      	ldr	r1, [r3, #20]
 800efd6:	68bb      	ldr	r3, [r7, #8]
 800efd8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800efda:	4613      	mov	r3, r2
 800efdc:	009b      	lsls	r3, r3, #2
 800efde:	4413      	add	r3, r2
 800efe0:	009b      	lsls	r3, r3, #2
 800efe2:	4a1f      	ldr	r2, [pc, #124]	@ (800f060 <xTaskPriorityInherit+0xc8>)
 800efe4:	4413      	add	r3, r2
 800efe6:	4299      	cmp	r1, r3
 800efe8:	d122      	bne.n	800f030 <xTaskPriorityInherit+0x98>
 800efea:	68bb      	ldr	r3, [r7, #8]
 800efec:	3304      	adds	r3, #4
 800efee:	4618      	mov	r0, r3
 800eff0:	f7fd fd8a 	bl	800cb08 <uxListRemove>
 800eff4:	4b19      	ldr	r3, [pc, #100]	@ (800f05c <xTaskPriorityInherit+0xc4>)
 800eff6:	681b      	ldr	r3, [r3, #0]
 800eff8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800effa:	68bb      	ldr	r3, [r7, #8]
 800effc:	62da      	str	r2, [r3, #44]	@ 0x2c
 800effe:	68bb      	ldr	r3, [r7, #8]
 800f000:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f002:	4b18      	ldr	r3, [pc, #96]	@ (800f064 <xTaskPriorityInherit+0xcc>)
 800f004:	681b      	ldr	r3, [r3, #0]
 800f006:	429a      	cmp	r2, r3
 800f008:	d903      	bls.n	800f012 <xTaskPriorityInherit+0x7a>
 800f00a:	68bb      	ldr	r3, [r7, #8]
 800f00c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f00e:	4a15      	ldr	r2, [pc, #84]	@ (800f064 <xTaskPriorityInherit+0xcc>)
 800f010:	6013      	str	r3, [r2, #0]
 800f012:	68bb      	ldr	r3, [r7, #8]
 800f014:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f016:	4613      	mov	r3, r2
 800f018:	009b      	lsls	r3, r3, #2
 800f01a:	4413      	add	r3, r2
 800f01c:	009b      	lsls	r3, r3, #2
 800f01e:	4a10      	ldr	r2, [pc, #64]	@ (800f060 <xTaskPriorityInherit+0xc8>)
 800f020:	441a      	add	r2, r3
 800f022:	68bb      	ldr	r3, [r7, #8]
 800f024:	3304      	adds	r3, #4
 800f026:	4619      	mov	r1, r3
 800f028:	4610      	mov	r0, r2
 800f02a:	f7fd fd10 	bl	800ca4e <vListInsertEnd>
 800f02e:	e004      	b.n	800f03a <xTaskPriorityInherit+0xa2>
 800f030:	4b0a      	ldr	r3, [pc, #40]	@ (800f05c <xTaskPriorityInherit+0xc4>)
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f036:	68bb      	ldr	r3, [r7, #8]
 800f038:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f03a:	2301      	movs	r3, #1
 800f03c:	60fb      	str	r3, [r7, #12]
 800f03e:	e008      	b.n	800f052 <xTaskPriorityInherit+0xba>
 800f040:	68bb      	ldr	r3, [r7, #8]
 800f042:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800f044:	4b05      	ldr	r3, [pc, #20]	@ (800f05c <xTaskPriorityInherit+0xc4>)
 800f046:	681b      	ldr	r3, [r3, #0]
 800f048:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f04a:	429a      	cmp	r2, r3
 800f04c:	d201      	bcs.n	800f052 <xTaskPriorityInherit+0xba>
 800f04e:	2301      	movs	r3, #1
 800f050:	60fb      	str	r3, [r7, #12]
 800f052:	68fb      	ldr	r3, [r7, #12]
 800f054:	4618      	mov	r0, r3
 800f056:	3710      	adds	r7, #16
 800f058:	46bd      	mov	sp, r7
 800f05a:	bd80      	pop	{r7, pc}
 800f05c:	20000f74 	.word	0x20000f74
 800f060:	20000f78 	.word	0x20000f78
 800f064:	20001450 	.word	0x20001450

0800f068 <xTaskPriorityDisinherit>:
 800f068:	b580      	push	{r7, lr}
 800f06a:	b086      	sub	sp, #24
 800f06c:	af00      	add	r7, sp, #0
 800f06e:	6078      	str	r0, [r7, #4]
 800f070:	687b      	ldr	r3, [r7, #4]
 800f072:	613b      	str	r3, [r7, #16]
 800f074:	2300      	movs	r3, #0
 800f076:	617b      	str	r3, [r7, #20]
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	2b00      	cmp	r3, #0
 800f07c:	d058      	beq.n	800f130 <xTaskPriorityDisinherit+0xc8>
 800f07e:	4b2f      	ldr	r3, [pc, #188]	@ (800f13c <xTaskPriorityDisinherit+0xd4>)
 800f080:	681b      	ldr	r3, [r3, #0]
 800f082:	693a      	ldr	r2, [r7, #16]
 800f084:	429a      	cmp	r2, r3
 800f086:	d00b      	beq.n	800f0a0 <xTaskPriorityDisinherit+0x38>
 800f088:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f08c:	f383 8811 	msr	BASEPRI, r3
 800f090:	f3bf 8f6f 	isb	sy
 800f094:	f3bf 8f4f 	dsb	sy
 800f098:	60fb      	str	r3, [r7, #12]
 800f09a:	bf00      	nop
 800f09c:	bf00      	nop
 800f09e:	e7fd      	b.n	800f09c <xTaskPriorityDisinherit+0x34>
 800f0a0:	693b      	ldr	r3, [r7, #16]
 800f0a2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f0a4:	2b00      	cmp	r3, #0
 800f0a6:	d10b      	bne.n	800f0c0 <xTaskPriorityDisinherit+0x58>
 800f0a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f0ac:	f383 8811 	msr	BASEPRI, r3
 800f0b0:	f3bf 8f6f 	isb	sy
 800f0b4:	f3bf 8f4f 	dsb	sy
 800f0b8:	60bb      	str	r3, [r7, #8]
 800f0ba:	bf00      	nop
 800f0bc:	bf00      	nop
 800f0be:	e7fd      	b.n	800f0bc <xTaskPriorityDisinherit+0x54>
 800f0c0:	693b      	ldr	r3, [r7, #16]
 800f0c2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f0c4:	1e5a      	subs	r2, r3, #1
 800f0c6:	693b      	ldr	r3, [r7, #16]
 800f0c8:	651a      	str	r2, [r3, #80]	@ 0x50
 800f0ca:	693b      	ldr	r3, [r7, #16]
 800f0cc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f0ce:	693b      	ldr	r3, [r7, #16]
 800f0d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f0d2:	429a      	cmp	r2, r3
 800f0d4:	d02c      	beq.n	800f130 <xTaskPriorityDisinherit+0xc8>
 800f0d6:	693b      	ldr	r3, [r7, #16]
 800f0d8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f0da:	2b00      	cmp	r3, #0
 800f0dc:	d128      	bne.n	800f130 <xTaskPriorityDisinherit+0xc8>
 800f0de:	693b      	ldr	r3, [r7, #16]
 800f0e0:	3304      	adds	r3, #4
 800f0e2:	4618      	mov	r0, r3
 800f0e4:	f7fd fd10 	bl	800cb08 <uxListRemove>
 800f0e8:	693b      	ldr	r3, [r7, #16]
 800f0ea:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800f0ec:	693b      	ldr	r3, [r7, #16]
 800f0ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f0f0:	693b      	ldr	r3, [r7, #16]
 800f0f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f0f4:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800f0f8:	693b      	ldr	r3, [r7, #16]
 800f0fa:	619a      	str	r2, [r3, #24]
 800f0fc:	693b      	ldr	r3, [r7, #16]
 800f0fe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f100:	4b0f      	ldr	r3, [pc, #60]	@ (800f140 <xTaskPriorityDisinherit+0xd8>)
 800f102:	681b      	ldr	r3, [r3, #0]
 800f104:	429a      	cmp	r2, r3
 800f106:	d903      	bls.n	800f110 <xTaskPriorityDisinherit+0xa8>
 800f108:	693b      	ldr	r3, [r7, #16]
 800f10a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f10c:	4a0c      	ldr	r2, [pc, #48]	@ (800f140 <xTaskPriorityDisinherit+0xd8>)
 800f10e:	6013      	str	r3, [r2, #0]
 800f110:	693b      	ldr	r3, [r7, #16]
 800f112:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f114:	4613      	mov	r3, r2
 800f116:	009b      	lsls	r3, r3, #2
 800f118:	4413      	add	r3, r2
 800f11a:	009b      	lsls	r3, r3, #2
 800f11c:	4a09      	ldr	r2, [pc, #36]	@ (800f144 <xTaskPriorityDisinherit+0xdc>)
 800f11e:	441a      	add	r2, r3
 800f120:	693b      	ldr	r3, [r7, #16]
 800f122:	3304      	adds	r3, #4
 800f124:	4619      	mov	r1, r3
 800f126:	4610      	mov	r0, r2
 800f128:	f7fd fc91 	bl	800ca4e <vListInsertEnd>
 800f12c:	2301      	movs	r3, #1
 800f12e:	617b      	str	r3, [r7, #20]
 800f130:	697b      	ldr	r3, [r7, #20]
 800f132:	4618      	mov	r0, r3
 800f134:	3718      	adds	r7, #24
 800f136:	46bd      	mov	sp, r7
 800f138:	bd80      	pop	{r7, pc}
 800f13a:	bf00      	nop
 800f13c:	20000f74 	.word	0x20000f74
 800f140:	20001450 	.word	0x20001450
 800f144:	20000f78 	.word	0x20000f78

0800f148 <vTaskPriorityDisinheritAfterTimeout>:
 800f148:	b580      	push	{r7, lr}
 800f14a:	b088      	sub	sp, #32
 800f14c:	af00      	add	r7, sp, #0
 800f14e:	6078      	str	r0, [r7, #4]
 800f150:	6039      	str	r1, [r7, #0]
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	61bb      	str	r3, [r7, #24]
 800f156:	2301      	movs	r3, #1
 800f158:	617b      	str	r3, [r7, #20]
 800f15a:	687b      	ldr	r3, [r7, #4]
 800f15c:	2b00      	cmp	r3, #0
 800f15e:	d06c      	beq.n	800f23a <vTaskPriorityDisinheritAfterTimeout+0xf2>
 800f160:	69bb      	ldr	r3, [r7, #24]
 800f162:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f164:	2b00      	cmp	r3, #0
 800f166:	d10b      	bne.n	800f180 <vTaskPriorityDisinheritAfterTimeout+0x38>
 800f168:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f16c:	f383 8811 	msr	BASEPRI, r3
 800f170:	f3bf 8f6f 	isb	sy
 800f174:	f3bf 8f4f 	dsb	sy
 800f178:	60fb      	str	r3, [r7, #12]
 800f17a:	bf00      	nop
 800f17c:	bf00      	nop
 800f17e:	e7fd      	b.n	800f17c <vTaskPriorityDisinheritAfterTimeout+0x34>
 800f180:	69bb      	ldr	r3, [r7, #24]
 800f182:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f184:	683a      	ldr	r2, [r7, #0]
 800f186:	429a      	cmp	r2, r3
 800f188:	d902      	bls.n	800f190 <vTaskPriorityDisinheritAfterTimeout+0x48>
 800f18a:	683b      	ldr	r3, [r7, #0]
 800f18c:	61fb      	str	r3, [r7, #28]
 800f18e:	e002      	b.n	800f196 <vTaskPriorityDisinheritAfterTimeout+0x4e>
 800f190:	69bb      	ldr	r3, [r7, #24]
 800f192:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f194:	61fb      	str	r3, [r7, #28]
 800f196:	69bb      	ldr	r3, [r7, #24]
 800f198:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f19a:	69fa      	ldr	r2, [r7, #28]
 800f19c:	429a      	cmp	r2, r3
 800f19e:	d04c      	beq.n	800f23a <vTaskPriorityDisinheritAfterTimeout+0xf2>
 800f1a0:	69bb      	ldr	r3, [r7, #24]
 800f1a2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f1a4:	697a      	ldr	r2, [r7, #20]
 800f1a6:	429a      	cmp	r2, r3
 800f1a8:	d147      	bne.n	800f23a <vTaskPriorityDisinheritAfterTimeout+0xf2>
 800f1aa:	4b26      	ldr	r3, [pc, #152]	@ (800f244 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 800f1ac:	681b      	ldr	r3, [r3, #0]
 800f1ae:	69ba      	ldr	r2, [r7, #24]
 800f1b0:	429a      	cmp	r2, r3
 800f1b2:	d10b      	bne.n	800f1cc <vTaskPriorityDisinheritAfterTimeout+0x84>
 800f1b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1b8:	f383 8811 	msr	BASEPRI, r3
 800f1bc:	f3bf 8f6f 	isb	sy
 800f1c0:	f3bf 8f4f 	dsb	sy
 800f1c4:	60bb      	str	r3, [r7, #8]
 800f1c6:	bf00      	nop
 800f1c8:	bf00      	nop
 800f1ca:	e7fd      	b.n	800f1c8 <vTaskPriorityDisinheritAfterTimeout+0x80>
 800f1cc:	69bb      	ldr	r3, [r7, #24]
 800f1ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f1d0:	613b      	str	r3, [r7, #16]
 800f1d2:	69bb      	ldr	r3, [r7, #24]
 800f1d4:	69fa      	ldr	r2, [r7, #28]
 800f1d6:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f1d8:	69bb      	ldr	r3, [r7, #24]
 800f1da:	699b      	ldr	r3, [r3, #24]
 800f1dc:	2b00      	cmp	r3, #0
 800f1de:	db04      	blt.n	800f1ea <vTaskPriorityDisinheritAfterTimeout+0xa2>
 800f1e0:	69fb      	ldr	r3, [r7, #28]
 800f1e2:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800f1e6:	69bb      	ldr	r3, [r7, #24]
 800f1e8:	619a      	str	r2, [r3, #24]
 800f1ea:	69bb      	ldr	r3, [r7, #24]
 800f1ec:	6959      	ldr	r1, [r3, #20]
 800f1ee:	693a      	ldr	r2, [r7, #16]
 800f1f0:	4613      	mov	r3, r2
 800f1f2:	009b      	lsls	r3, r3, #2
 800f1f4:	4413      	add	r3, r2
 800f1f6:	009b      	lsls	r3, r3, #2
 800f1f8:	4a13      	ldr	r2, [pc, #76]	@ (800f248 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 800f1fa:	4413      	add	r3, r2
 800f1fc:	4299      	cmp	r1, r3
 800f1fe:	d11c      	bne.n	800f23a <vTaskPriorityDisinheritAfterTimeout+0xf2>
 800f200:	69bb      	ldr	r3, [r7, #24]
 800f202:	3304      	adds	r3, #4
 800f204:	4618      	mov	r0, r3
 800f206:	f7fd fc7f 	bl	800cb08 <uxListRemove>
 800f20a:	69bb      	ldr	r3, [r7, #24]
 800f20c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f20e:	4b0f      	ldr	r3, [pc, #60]	@ (800f24c <vTaskPriorityDisinheritAfterTimeout+0x104>)
 800f210:	681b      	ldr	r3, [r3, #0]
 800f212:	429a      	cmp	r2, r3
 800f214:	d903      	bls.n	800f21e <vTaskPriorityDisinheritAfterTimeout+0xd6>
 800f216:	69bb      	ldr	r3, [r7, #24]
 800f218:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f21a:	4a0c      	ldr	r2, [pc, #48]	@ (800f24c <vTaskPriorityDisinheritAfterTimeout+0x104>)
 800f21c:	6013      	str	r3, [r2, #0]
 800f21e:	69bb      	ldr	r3, [r7, #24]
 800f220:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f222:	4613      	mov	r3, r2
 800f224:	009b      	lsls	r3, r3, #2
 800f226:	4413      	add	r3, r2
 800f228:	009b      	lsls	r3, r3, #2
 800f22a:	4a07      	ldr	r2, [pc, #28]	@ (800f248 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 800f22c:	441a      	add	r2, r3
 800f22e:	69bb      	ldr	r3, [r7, #24]
 800f230:	3304      	adds	r3, #4
 800f232:	4619      	mov	r1, r3
 800f234:	4610      	mov	r0, r2
 800f236:	f7fd fc0a 	bl	800ca4e <vListInsertEnd>
 800f23a:	bf00      	nop
 800f23c:	3720      	adds	r7, #32
 800f23e:	46bd      	mov	sp, r7
 800f240:	bd80      	pop	{r7, pc}
 800f242:	bf00      	nop
 800f244:	20000f74 	.word	0x20000f74
 800f248:	20000f78 	.word	0x20000f78
 800f24c:	20001450 	.word	0x20001450

0800f250 <uxTaskResetEventItemValue>:
 800f250:	b480      	push	{r7}
 800f252:	b083      	sub	sp, #12
 800f254:	af00      	add	r7, sp, #0
 800f256:	4b09      	ldr	r3, [pc, #36]	@ (800f27c <uxTaskResetEventItemValue+0x2c>)
 800f258:	681b      	ldr	r3, [r3, #0]
 800f25a:	699b      	ldr	r3, [r3, #24]
 800f25c:	607b      	str	r3, [r7, #4]
 800f25e:	4b07      	ldr	r3, [pc, #28]	@ (800f27c <uxTaskResetEventItemValue+0x2c>)
 800f260:	681b      	ldr	r3, [r3, #0]
 800f262:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f264:	4b05      	ldr	r3, [pc, #20]	@ (800f27c <uxTaskResetEventItemValue+0x2c>)
 800f266:	681b      	ldr	r3, [r3, #0]
 800f268:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 800f26c:	619a      	str	r2, [r3, #24]
 800f26e:	687b      	ldr	r3, [r7, #4]
 800f270:	4618      	mov	r0, r3
 800f272:	370c      	adds	r7, #12
 800f274:	46bd      	mov	sp, r7
 800f276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f27a:	4770      	bx	lr
 800f27c:	20000f74 	.word	0x20000f74

0800f280 <pvTaskIncrementMutexHeldCount>:
 800f280:	b480      	push	{r7}
 800f282:	af00      	add	r7, sp, #0
 800f284:	4b07      	ldr	r3, [pc, #28]	@ (800f2a4 <pvTaskIncrementMutexHeldCount+0x24>)
 800f286:	681b      	ldr	r3, [r3, #0]
 800f288:	2b00      	cmp	r3, #0
 800f28a:	d004      	beq.n	800f296 <pvTaskIncrementMutexHeldCount+0x16>
 800f28c:	4b05      	ldr	r3, [pc, #20]	@ (800f2a4 <pvTaskIncrementMutexHeldCount+0x24>)
 800f28e:	681b      	ldr	r3, [r3, #0]
 800f290:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800f292:	3201      	adds	r2, #1
 800f294:	651a      	str	r2, [r3, #80]	@ 0x50
 800f296:	4b03      	ldr	r3, [pc, #12]	@ (800f2a4 <pvTaskIncrementMutexHeldCount+0x24>)
 800f298:	681b      	ldr	r3, [r3, #0]
 800f29a:	4618      	mov	r0, r3
 800f29c:	46bd      	mov	sp, r7
 800f29e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2a2:	4770      	bx	lr
 800f2a4:	20000f74 	.word	0x20000f74

0800f2a8 <ulTaskNotifyTake>:
 800f2a8:	b580      	push	{r7, lr}
 800f2aa:	b084      	sub	sp, #16
 800f2ac:	af00      	add	r7, sp, #0
 800f2ae:	6078      	str	r0, [r7, #4]
 800f2b0:	6039      	str	r1, [r7, #0]
 800f2b2:	f000 fec1 	bl	8010038 <vPortEnterCritical>
 800f2b6:	4b20      	ldr	r3, [pc, #128]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f2b8:	681b      	ldr	r3, [r3, #0]
 800f2ba:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f2be:	2b00      	cmp	r3, #0
 800f2c0:	d113      	bne.n	800f2ea <ulTaskNotifyTake+0x42>
 800f2c2:	4b1d      	ldr	r3, [pc, #116]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f2c4:	681b      	ldr	r3, [r3, #0]
 800f2c6:	2201      	movs	r2, #1
 800f2c8:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800f2cc:	683b      	ldr	r3, [r7, #0]
 800f2ce:	2b00      	cmp	r3, #0
 800f2d0:	d00b      	beq.n	800f2ea <ulTaskNotifyTake+0x42>
 800f2d2:	2101      	movs	r1, #1
 800f2d4:	6838      	ldr	r0, [r7, #0]
 800f2d6:	f000 f955 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800f2da:	4b18      	ldr	r3, [pc, #96]	@ (800f33c <ulTaskNotifyTake+0x94>)
 800f2dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f2e0:	601a      	str	r2, [r3, #0]
 800f2e2:	f3bf 8f4f 	dsb	sy
 800f2e6:	f3bf 8f6f 	isb	sy
 800f2ea:	f000 fed7 	bl	801009c <vPortExitCritical>
 800f2ee:	f000 fea3 	bl	8010038 <vPortEnterCritical>
 800f2f2:	4b11      	ldr	r3, [pc, #68]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f2f4:	681b      	ldr	r3, [r3, #0]
 800f2f6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f2fa:	60fb      	str	r3, [r7, #12]
 800f2fc:	68fb      	ldr	r3, [r7, #12]
 800f2fe:	2b00      	cmp	r3, #0
 800f300:	d00e      	beq.n	800f320 <ulTaskNotifyTake+0x78>
 800f302:	687b      	ldr	r3, [r7, #4]
 800f304:	2b00      	cmp	r3, #0
 800f306:	d005      	beq.n	800f314 <ulTaskNotifyTake+0x6c>
 800f308:	4b0b      	ldr	r3, [pc, #44]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f30a:	681b      	ldr	r3, [r3, #0]
 800f30c:	2200      	movs	r2, #0
 800f30e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f312:	e005      	b.n	800f320 <ulTaskNotifyTake+0x78>
 800f314:	4b08      	ldr	r3, [pc, #32]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f316:	681b      	ldr	r3, [r3, #0]
 800f318:	68fa      	ldr	r2, [r7, #12]
 800f31a:	3a01      	subs	r2, #1
 800f31c:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f320:	4b05      	ldr	r3, [pc, #20]	@ (800f338 <ulTaskNotifyTake+0x90>)
 800f322:	681b      	ldr	r3, [r3, #0]
 800f324:	2200      	movs	r2, #0
 800f326:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800f32a:	f000 feb7 	bl	801009c <vPortExitCritical>
 800f32e:	68fb      	ldr	r3, [r7, #12]
 800f330:	4618      	mov	r0, r3
 800f332:	3710      	adds	r7, #16
 800f334:	46bd      	mov	sp, r7
 800f336:	bd80      	pop	{r7, pc}
 800f338:	20000f74 	.word	0x20000f74
 800f33c:	e000ed04 	.word	0xe000ed04

0800f340 <xTaskNotifyWait>:
 800f340:	b580      	push	{r7, lr}
 800f342:	b086      	sub	sp, #24
 800f344:	af00      	add	r7, sp, #0
 800f346:	60f8      	str	r0, [r7, #12]
 800f348:	60b9      	str	r1, [r7, #8]
 800f34a:	607a      	str	r2, [r7, #4]
 800f34c:	603b      	str	r3, [r7, #0]
 800f34e:	f000 fe73 	bl	8010038 <vPortEnterCritical>
 800f352:	4b29      	ldr	r3, [pc, #164]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f354:	681b      	ldr	r3, [r3, #0]
 800f356:	f893 30a4 	ldrb.w	r3, [r3, #164]	@ 0xa4
 800f35a:	b2db      	uxtb	r3, r3
 800f35c:	2b02      	cmp	r3, #2
 800f35e:	d01c      	beq.n	800f39a <xTaskNotifyWait+0x5a>
 800f360:	4b25      	ldr	r3, [pc, #148]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f362:	681b      	ldr	r3, [r3, #0]
 800f364:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 800f368:	68fa      	ldr	r2, [r7, #12]
 800f36a:	43d2      	mvns	r2, r2
 800f36c:	400a      	ands	r2, r1
 800f36e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f372:	4b21      	ldr	r3, [pc, #132]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f374:	681b      	ldr	r3, [r3, #0]
 800f376:	2201      	movs	r2, #1
 800f378:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800f37c:	683b      	ldr	r3, [r7, #0]
 800f37e:	2b00      	cmp	r3, #0
 800f380:	d00b      	beq.n	800f39a <xTaskNotifyWait+0x5a>
 800f382:	2101      	movs	r1, #1
 800f384:	6838      	ldr	r0, [r7, #0]
 800f386:	f000 f8fd 	bl	800f584 <prvAddCurrentTaskToDelayedList>
 800f38a:	4b1c      	ldr	r3, [pc, #112]	@ (800f3fc <xTaskNotifyWait+0xbc>)
 800f38c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f390:	601a      	str	r2, [r3, #0]
 800f392:	f3bf 8f4f 	dsb	sy
 800f396:	f3bf 8f6f 	isb	sy
 800f39a:	f000 fe7f 	bl	801009c <vPortExitCritical>
 800f39e:	f000 fe4b 	bl	8010038 <vPortEnterCritical>
 800f3a2:	687b      	ldr	r3, [r7, #4]
 800f3a4:	2b00      	cmp	r3, #0
 800f3a6:	d005      	beq.n	800f3b4 <xTaskNotifyWait+0x74>
 800f3a8:	4b13      	ldr	r3, [pc, #76]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f3aa:	681b      	ldr	r3, [r3, #0]
 800f3ac:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
 800f3b0:	687b      	ldr	r3, [r7, #4]
 800f3b2:	601a      	str	r2, [r3, #0]
 800f3b4:	4b10      	ldr	r3, [pc, #64]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f3b6:	681b      	ldr	r3, [r3, #0]
 800f3b8:	f893 30a4 	ldrb.w	r3, [r3, #164]	@ 0xa4
 800f3bc:	b2db      	uxtb	r3, r3
 800f3be:	2b02      	cmp	r3, #2
 800f3c0:	d002      	beq.n	800f3c8 <xTaskNotifyWait+0x88>
 800f3c2:	2300      	movs	r3, #0
 800f3c4:	617b      	str	r3, [r7, #20]
 800f3c6:	e00a      	b.n	800f3de <xTaskNotifyWait+0x9e>
 800f3c8:	4b0b      	ldr	r3, [pc, #44]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f3ca:	681b      	ldr	r3, [r3, #0]
 800f3cc:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 800f3d0:	68ba      	ldr	r2, [r7, #8]
 800f3d2:	43d2      	mvns	r2, r2
 800f3d4:	400a      	ands	r2, r1
 800f3d6:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f3da:	2301      	movs	r3, #1
 800f3dc:	617b      	str	r3, [r7, #20]
 800f3de:	4b06      	ldr	r3, [pc, #24]	@ (800f3f8 <xTaskNotifyWait+0xb8>)
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	2200      	movs	r2, #0
 800f3e4:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800f3e8:	f000 fe58 	bl	801009c <vPortExitCritical>
 800f3ec:	697b      	ldr	r3, [r7, #20]
 800f3ee:	4618      	mov	r0, r3
 800f3f0:	3718      	adds	r7, #24
 800f3f2:	46bd      	mov	sp, r7
 800f3f4:	bd80      	pop	{r7, pc}
 800f3f6:	bf00      	nop
 800f3f8:	20000f74 	.word	0x20000f74
 800f3fc:	e000ed04 	.word	0xe000ed04

0800f400 <xTaskGenericNotify>:
 800f400:	b580      	push	{r7, lr}
 800f402:	b08a      	sub	sp, #40	@ 0x28
 800f404:	af00      	add	r7, sp, #0
 800f406:	60f8      	str	r0, [r7, #12]
 800f408:	60b9      	str	r1, [r7, #8]
 800f40a:	603b      	str	r3, [r7, #0]
 800f40c:	4613      	mov	r3, r2
 800f40e:	71fb      	strb	r3, [r7, #7]
 800f410:	2301      	movs	r3, #1
 800f412:	627b      	str	r3, [r7, #36]	@ 0x24
 800f414:	68fb      	ldr	r3, [r7, #12]
 800f416:	2b00      	cmp	r3, #0
 800f418:	d10b      	bne.n	800f432 <xTaskGenericNotify+0x32>
 800f41a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f41e:	f383 8811 	msr	BASEPRI, r3
 800f422:	f3bf 8f6f 	isb	sy
 800f426:	f3bf 8f4f 	dsb	sy
 800f42a:	61bb      	str	r3, [r7, #24]
 800f42c:	bf00      	nop
 800f42e:	bf00      	nop
 800f430:	e7fd      	b.n	800f42e <xTaskGenericNotify+0x2e>
 800f432:	68fb      	ldr	r3, [r7, #12]
 800f434:	623b      	str	r3, [r7, #32]
 800f436:	f000 fdff 	bl	8010038 <vPortEnterCritical>
 800f43a:	683b      	ldr	r3, [r7, #0]
 800f43c:	2b00      	cmp	r3, #0
 800f43e:	d004      	beq.n	800f44a <xTaskGenericNotify+0x4a>
 800f440:	6a3b      	ldr	r3, [r7, #32]
 800f442:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
 800f446:	683b      	ldr	r3, [r7, #0]
 800f448:	601a      	str	r2, [r3, #0]
 800f44a:	6a3b      	ldr	r3, [r7, #32]
 800f44c:	f893 30a4 	ldrb.w	r3, [r3, #164]	@ 0xa4
 800f450:	77fb      	strb	r3, [r7, #31]
 800f452:	6a3b      	ldr	r3, [r7, #32]
 800f454:	2202      	movs	r2, #2
 800f456:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800f45a:	79fb      	ldrb	r3, [r7, #7]
 800f45c:	2b04      	cmp	r3, #4
 800f45e:	d82e      	bhi.n	800f4be <xTaskGenericNotify+0xbe>
 800f460:	a201      	add	r2, pc, #4	@ (adr r2, 800f468 <xTaskGenericNotify+0x68>)
 800f462:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f466:	bf00      	nop
 800f468:	0800f4e3 	.word	0x0800f4e3
 800f46c:	0800f47d 	.word	0x0800f47d
 800f470:	0800f48f 	.word	0x0800f48f
 800f474:	0800f49f 	.word	0x0800f49f
 800f478:	0800f4a9 	.word	0x0800f4a9
 800f47c:	6a3b      	ldr	r3, [r7, #32]
 800f47e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
 800f482:	68bb      	ldr	r3, [r7, #8]
 800f484:	431a      	orrs	r2, r3
 800f486:	6a3b      	ldr	r3, [r7, #32]
 800f488:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f48c:	e02c      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f48e:	6a3b      	ldr	r3, [r7, #32]
 800f490:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f494:	1c5a      	adds	r2, r3, #1
 800f496:	6a3b      	ldr	r3, [r7, #32]
 800f498:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f49c:	e024      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f49e:	6a3b      	ldr	r3, [r7, #32]
 800f4a0:	68ba      	ldr	r2, [r7, #8]
 800f4a2:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f4a6:	e01f      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f4a8:	7ffb      	ldrb	r3, [r7, #31]
 800f4aa:	2b02      	cmp	r3, #2
 800f4ac:	d004      	beq.n	800f4b8 <xTaskGenericNotify+0xb8>
 800f4ae:	6a3b      	ldr	r3, [r7, #32]
 800f4b0:	68ba      	ldr	r2, [r7, #8]
 800f4b2:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800f4b6:	e017      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f4b8:	2300      	movs	r3, #0
 800f4ba:	627b      	str	r3, [r7, #36]	@ 0x24
 800f4bc:	e014      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f4be:	6a3b      	ldr	r3, [r7, #32]
 800f4c0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f4c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f4c8:	d00d      	beq.n	800f4e6 <xTaskGenericNotify+0xe6>
 800f4ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f4ce:	f383 8811 	msr	BASEPRI, r3
 800f4d2:	f3bf 8f6f 	isb	sy
 800f4d6:	f3bf 8f4f 	dsb	sy
 800f4da:	617b      	str	r3, [r7, #20]
 800f4dc:	bf00      	nop
 800f4de:	bf00      	nop
 800f4e0:	e7fd      	b.n	800f4de <xTaskGenericNotify+0xde>
 800f4e2:	bf00      	nop
 800f4e4:	e000      	b.n	800f4e8 <xTaskGenericNotify+0xe8>
 800f4e6:	bf00      	nop
 800f4e8:	7ffb      	ldrb	r3, [r7, #31]
 800f4ea:	2b01      	cmp	r3, #1
 800f4ec:	d13b      	bne.n	800f566 <xTaskGenericNotify+0x166>
 800f4ee:	6a3b      	ldr	r3, [r7, #32]
 800f4f0:	3304      	adds	r3, #4
 800f4f2:	4618      	mov	r0, r3
 800f4f4:	f7fd fb08 	bl	800cb08 <uxListRemove>
 800f4f8:	6a3b      	ldr	r3, [r7, #32]
 800f4fa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f4fc:	4b1d      	ldr	r3, [pc, #116]	@ (800f574 <xTaskGenericNotify+0x174>)
 800f4fe:	681b      	ldr	r3, [r3, #0]
 800f500:	429a      	cmp	r2, r3
 800f502:	d903      	bls.n	800f50c <xTaskGenericNotify+0x10c>
 800f504:	6a3b      	ldr	r3, [r7, #32]
 800f506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f508:	4a1a      	ldr	r2, [pc, #104]	@ (800f574 <xTaskGenericNotify+0x174>)
 800f50a:	6013      	str	r3, [r2, #0]
 800f50c:	6a3b      	ldr	r3, [r7, #32]
 800f50e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f510:	4613      	mov	r3, r2
 800f512:	009b      	lsls	r3, r3, #2
 800f514:	4413      	add	r3, r2
 800f516:	009b      	lsls	r3, r3, #2
 800f518:	4a17      	ldr	r2, [pc, #92]	@ (800f578 <xTaskGenericNotify+0x178>)
 800f51a:	441a      	add	r2, r3
 800f51c:	6a3b      	ldr	r3, [r7, #32]
 800f51e:	3304      	adds	r3, #4
 800f520:	4619      	mov	r1, r3
 800f522:	4610      	mov	r0, r2
 800f524:	f7fd fa93 	bl	800ca4e <vListInsertEnd>
 800f528:	6a3b      	ldr	r3, [r7, #32]
 800f52a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f52c:	2b00      	cmp	r3, #0
 800f52e:	d00b      	beq.n	800f548 <xTaskGenericNotify+0x148>
 800f530:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f534:	f383 8811 	msr	BASEPRI, r3
 800f538:	f3bf 8f6f 	isb	sy
 800f53c:	f3bf 8f4f 	dsb	sy
 800f540:	613b      	str	r3, [r7, #16]
 800f542:	bf00      	nop
 800f544:	bf00      	nop
 800f546:	e7fd      	b.n	800f544 <xTaskGenericNotify+0x144>
 800f548:	6a3b      	ldr	r3, [r7, #32]
 800f54a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f54c:	4b0b      	ldr	r3, [pc, #44]	@ (800f57c <xTaskGenericNotify+0x17c>)
 800f54e:	681b      	ldr	r3, [r3, #0]
 800f550:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f552:	429a      	cmp	r2, r3
 800f554:	d907      	bls.n	800f566 <xTaskGenericNotify+0x166>
 800f556:	4b0a      	ldr	r3, [pc, #40]	@ (800f580 <xTaskGenericNotify+0x180>)
 800f558:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f55c:	601a      	str	r2, [r3, #0]
 800f55e:	f3bf 8f4f 	dsb	sy
 800f562:	f3bf 8f6f 	isb	sy
 800f566:	f000 fd99 	bl	801009c <vPortExitCritical>
 800f56a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f56c:	4618      	mov	r0, r3
 800f56e:	3728      	adds	r7, #40	@ 0x28
 800f570:	46bd      	mov	sp, r7
 800f572:	bd80      	pop	{r7, pc}
 800f574:	20001450 	.word	0x20001450
 800f578:	20000f78 	.word	0x20000f78
 800f57c:	20000f74 	.word	0x20000f74
 800f580:	e000ed04 	.word	0xe000ed04

0800f584 <prvAddCurrentTaskToDelayedList>:
 800f584:	b580      	push	{r7, lr}
 800f586:	b084      	sub	sp, #16
 800f588:	af00      	add	r7, sp, #0
 800f58a:	6078      	str	r0, [r7, #4]
 800f58c:	6039      	str	r1, [r7, #0]
 800f58e:	4b21      	ldr	r3, [pc, #132]	@ (800f614 <prvAddCurrentTaskToDelayedList+0x90>)
 800f590:	681b      	ldr	r3, [r3, #0]
 800f592:	60fb      	str	r3, [r7, #12]
 800f594:	4b20      	ldr	r3, [pc, #128]	@ (800f618 <prvAddCurrentTaskToDelayedList+0x94>)
 800f596:	681b      	ldr	r3, [r3, #0]
 800f598:	3304      	adds	r3, #4
 800f59a:	4618      	mov	r0, r3
 800f59c:	f7fd fab4 	bl	800cb08 <uxListRemove>
 800f5a0:	687b      	ldr	r3, [r7, #4]
 800f5a2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f5a6:	d10a      	bne.n	800f5be <prvAddCurrentTaskToDelayedList+0x3a>
 800f5a8:	683b      	ldr	r3, [r7, #0]
 800f5aa:	2b00      	cmp	r3, #0
 800f5ac:	d007      	beq.n	800f5be <prvAddCurrentTaskToDelayedList+0x3a>
 800f5ae:	4b1a      	ldr	r3, [pc, #104]	@ (800f618 <prvAddCurrentTaskToDelayedList+0x94>)
 800f5b0:	681b      	ldr	r3, [r3, #0]
 800f5b2:	3304      	adds	r3, #4
 800f5b4:	4619      	mov	r1, r3
 800f5b6:	4819      	ldr	r0, [pc, #100]	@ (800f61c <prvAddCurrentTaskToDelayedList+0x98>)
 800f5b8:	f7fd fa49 	bl	800ca4e <vListInsertEnd>
 800f5bc:	e026      	b.n	800f60c <prvAddCurrentTaskToDelayedList+0x88>
 800f5be:	68fa      	ldr	r2, [r7, #12]
 800f5c0:	687b      	ldr	r3, [r7, #4]
 800f5c2:	4413      	add	r3, r2
 800f5c4:	60bb      	str	r3, [r7, #8]
 800f5c6:	4b14      	ldr	r3, [pc, #80]	@ (800f618 <prvAddCurrentTaskToDelayedList+0x94>)
 800f5c8:	681b      	ldr	r3, [r3, #0]
 800f5ca:	68ba      	ldr	r2, [r7, #8]
 800f5cc:	605a      	str	r2, [r3, #4]
 800f5ce:	68ba      	ldr	r2, [r7, #8]
 800f5d0:	68fb      	ldr	r3, [r7, #12]
 800f5d2:	429a      	cmp	r2, r3
 800f5d4:	d209      	bcs.n	800f5ea <prvAddCurrentTaskToDelayedList+0x66>
 800f5d6:	4b12      	ldr	r3, [pc, #72]	@ (800f620 <prvAddCurrentTaskToDelayedList+0x9c>)
 800f5d8:	681a      	ldr	r2, [r3, #0]
 800f5da:	4b0f      	ldr	r3, [pc, #60]	@ (800f618 <prvAddCurrentTaskToDelayedList+0x94>)
 800f5dc:	681b      	ldr	r3, [r3, #0]
 800f5de:	3304      	adds	r3, #4
 800f5e0:	4619      	mov	r1, r3
 800f5e2:	4610      	mov	r0, r2
 800f5e4:	f7fd fa57 	bl	800ca96 <vListInsert>
 800f5e8:	e010      	b.n	800f60c <prvAddCurrentTaskToDelayedList+0x88>
 800f5ea:	4b0e      	ldr	r3, [pc, #56]	@ (800f624 <prvAddCurrentTaskToDelayedList+0xa0>)
 800f5ec:	681a      	ldr	r2, [r3, #0]
 800f5ee:	4b0a      	ldr	r3, [pc, #40]	@ (800f618 <prvAddCurrentTaskToDelayedList+0x94>)
 800f5f0:	681b      	ldr	r3, [r3, #0]
 800f5f2:	3304      	adds	r3, #4
 800f5f4:	4619      	mov	r1, r3
 800f5f6:	4610      	mov	r0, r2
 800f5f8:	f7fd fa4d 	bl	800ca96 <vListInsert>
 800f5fc:	4b0a      	ldr	r3, [pc, #40]	@ (800f628 <prvAddCurrentTaskToDelayedList+0xa4>)
 800f5fe:	681b      	ldr	r3, [r3, #0]
 800f600:	68ba      	ldr	r2, [r7, #8]
 800f602:	429a      	cmp	r2, r3
 800f604:	d202      	bcs.n	800f60c <prvAddCurrentTaskToDelayedList+0x88>
 800f606:	4a08      	ldr	r2, [pc, #32]	@ (800f628 <prvAddCurrentTaskToDelayedList+0xa4>)
 800f608:	68bb      	ldr	r3, [r7, #8]
 800f60a:	6013      	str	r3, [r2, #0]
 800f60c:	bf00      	nop
 800f60e:	3710      	adds	r7, #16
 800f610:	46bd      	mov	sp, r7
 800f612:	bd80      	pop	{r7, pc}
 800f614:	2000144c 	.word	0x2000144c
 800f618:	20000f74 	.word	0x20000f74
 800f61c:	20001434 	.word	0x20001434
 800f620:	20001404 	.word	0x20001404
 800f624:	20001400 	.word	0x20001400
 800f628:	20001468 	.word	0x20001468

0800f62c <xTimerCreateTimerTask>:
 800f62c:	b580      	push	{r7, lr}
 800f62e:	b08a      	sub	sp, #40	@ 0x28
 800f630:	af04      	add	r7, sp, #16
 800f632:	2300      	movs	r3, #0
 800f634:	617b      	str	r3, [r7, #20]
 800f636:	f000 fb71 	bl	800fd1c <prvCheckForValidListAndQueue>
 800f63a:	4b1d      	ldr	r3, [pc, #116]	@ (800f6b0 <xTimerCreateTimerTask+0x84>)
 800f63c:	681b      	ldr	r3, [r3, #0]
 800f63e:	2b00      	cmp	r3, #0
 800f640:	d021      	beq.n	800f686 <xTimerCreateTimerTask+0x5a>
 800f642:	2300      	movs	r3, #0
 800f644:	60fb      	str	r3, [r7, #12]
 800f646:	2300      	movs	r3, #0
 800f648:	60bb      	str	r3, [r7, #8]
 800f64a:	1d3a      	adds	r2, r7, #4
 800f64c:	f107 0108 	add.w	r1, r7, #8
 800f650:	f107 030c 	add.w	r3, r7, #12
 800f654:	4618      	mov	r0, r3
 800f656:	f7fc fff7 	bl	800c648 <vApplicationGetTimerTaskMemory>
 800f65a:	6879      	ldr	r1, [r7, #4]
 800f65c:	68bb      	ldr	r3, [r7, #8]
 800f65e:	68fa      	ldr	r2, [r7, #12]
 800f660:	9202      	str	r2, [sp, #8]
 800f662:	9301      	str	r3, [sp, #4]
 800f664:	2302      	movs	r3, #2
 800f666:	9300      	str	r3, [sp, #0]
 800f668:	2300      	movs	r3, #0
 800f66a:	460a      	mov	r2, r1
 800f66c:	4911      	ldr	r1, [pc, #68]	@ (800f6b4 <xTimerCreateTimerTask+0x88>)
 800f66e:	4812      	ldr	r0, [pc, #72]	@ (800f6b8 <xTimerCreateTimerTask+0x8c>)
 800f670:	f7fe f986 	bl	800d980 <xTaskCreateStatic>
 800f674:	4603      	mov	r3, r0
 800f676:	4a11      	ldr	r2, [pc, #68]	@ (800f6bc <xTimerCreateTimerTask+0x90>)
 800f678:	6013      	str	r3, [r2, #0]
 800f67a:	4b10      	ldr	r3, [pc, #64]	@ (800f6bc <xTimerCreateTimerTask+0x90>)
 800f67c:	681b      	ldr	r3, [r3, #0]
 800f67e:	2b00      	cmp	r3, #0
 800f680:	d001      	beq.n	800f686 <xTimerCreateTimerTask+0x5a>
 800f682:	2301      	movs	r3, #1
 800f684:	617b      	str	r3, [r7, #20]
 800f686:	697b      	ldr	r3, [r7, #20]
 800f688:	2b00      	cmp	r3, #0
 800f68a:	d10b      	bne.n	800f6a4 <xTimerCreateTimerTask+0x78>
 800f68c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f690:	f383 8811 	msr	BASEPRI, r3
 800f694:	f3bf 8f6f 	isb	sy
 800f698:	f3bf 8f4f 	dsb	sy
 800f69c:	613b      	str	r3, [r7, #16]
 800f69e:	bf00      	nop
 800f6a0:	bf00      	nop
 800f6a2:	e7fd      	b.n	800f6a0 <xTimerCreateTimerTask+0x74>
 800f6a4:	697b      	ldr	r3, [r7, #20]
 800f6a6:	4618      	mov	r0, r3
 800f6a8:	3718      	adds	r7, #24
 800f6aa:	46bd      	mov	sp, r7
 800f6ac:	bd80      	pop	{r7, pc}
 800f6ae:	bf00      	nop
 800f6b0:	200014a4 	.word	0x200014a4
 800f6b4:	08015d24 	.word	0x08015d24
 800f6b8:	0800f8b5 	.word	0x0800f8b5
 800f6bc:	200014a8 	.word	0x200014a8

0800f6c0 <xTimerCreate>:
 800f6c0:	b580      	push	{r7, lr}
 800f6c2:	b088      	sub	sp, #32
 800f6c4:	af02      	add	r7, sp, #8
 800f6c6:	60f8      	str	r0, [r7, #12]
 800f6c8:	60b9      	str	r1, [r7, #8]
 800f6ca:	607a      	str	r2, [r7, #4]
 800f6cc:	603b      	str	r3, [r7, #0]
 800f6ce:	202c      	movs	r0, #44	@ 0x2c
 800f6d0:	f000 fdd4 	bl	801027c <pvPortMalloc>
 800f6d4:	6178      	str	r0, [r7, #20]
 800f6d6:	697b      	ldr	r3, [r7, #20]
 800f6d8:	2b00      	cmp	r3, #0
 800f6da:	d00d      	beq.n	800f6f8 <xTimerCreate+0x38>
 800f6dc:	697b      	ldr	r3, [r7, #20]
 800f6de:	2200      	movs	r2, #0
 800f6e0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800f6e4:	697b      	ldr	r3, [r7, #20]
 800f6e6:	9301      	str	r3, [sp, #4]
 800f6e8:	6a3b      	ldr	r3, [r7, #32]
 800f6ea:	9300      	str	r3, [sp, #0]
 800f6ec:	683b      	ldr	r3, [r7, #0]
 800f6ee:	687a      	ldr	r2, [r7, #4]
 800f6f0:	68b9      	ldr	r1, [r7, #8]
 800f6f2:	68f8      	ldr	r0, [r7, #12]
 800f6f4:	f000 f805 	bl	800f702 <prvInitialiseNewTimer>
 800f6f8:	697b      	ldr	r3, [r7, #20]
 800f6fa:	4618      	mov	r0, r3
 800f6fc:	3718      	adds	r7, #24
 800f6fe:	46bd      	mov	sp, r7
 800f700:	bd80      	pop	{r7, pc}

0800f702 <prvInitialiseNewTimer>:
 800f702:	b580      	push	{r7, lr}
 800f704:	b086      	sub	sp, #24
 800f706:	af00      	add	r7, sp, #0
 800f708:	60f8      	str	r0, [r7, #12]
 800f70a:	60b9      	str	r1, [r7, #8]
 800f70c:	607a      	str	r2, [r7, #4]
 800f70e:	603b      	str	r3, [r7, #0]
 800f710:	68bb      	ldr	r3, [r7, #8]
 800f712:	2b00      	cmp	r3, #0
 800f714:	d10b      	bne.n	800f72e <prvInitialiseNewTimer+0x2c>
 800f716:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f71a:	f383 8811 	msr	BASEPRI, r3
 800f71e:	f3bf 8f6f 	isb	sy
 800f722:	f3bf 8f4f 	dsb	sy
 800f726:	617b      	str	r3, [r7, #20]
 800f728:	bf00      	nop
 800f72a:	bf00      	nop
 800f72c:	e7fd      	b.n	800f72a <prvInitialiseNewTimer+0x28>
 800f72e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f730:	2b00      	cmp	r3, #0
 800f732:	d01e      	beq.n	800f772 <prvInitialiseNewTimer+0x70>
 800f734:	f000 faf2 	bl	800fd1c <prvCheckForValidListAndQueue>
 800f738:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f73a:	68fa      	ldr	r2, [r7, #12]
 800f73c:	601a      	str	r2, [r3, #0]
 800f73e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f740:	68ba      	ldr	r2, [r7, #8]
 800f742:	619a      	str	r2, [r3, #24]
 800f744:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f746:	683a      	ldr	r2, [r7, #0]
 800f748:	61da      	str	r2, [r3, #28]
 800f74a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f74c:	6a3a      	ldr	r2, [r7, #32]
 800f74e:	621a      	str	r2, [r3, #32]
 800f750:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f752:	3304      	adds	r3, #4
 800f754:	4618      	mov	r0, r3
 800f756:	f7fd f96d 	bl	800ca34 <vListInitialiseItem>
 800f75a:	687b      	ldr	r3, [r7, #4]
 800f75c:	2b00      	cmp	r3, #0
 800f75e:	d008      	beq.n	800f772 <prvInitialiseNewTimer+0x70>
 800f760:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f762:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800f766:	f043 0304 	orr.w	r3, r3, #4
 800f76a:	b2da      	uxtb	r2, r3
 800f76c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f76e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800f772:	bf00      	nop
 800f774:	3718      	adds	r7, #24
 800f776:	46bd      	mov	sp, r7
 800f778:	bd80      	pop	{r7, pc}
	...

0800f77c <xTimerGenericCommand>:
 800f77c:	b580      	push	{r7, lr}
 800f77e:	b08a      	sub	sp, #40	@ 0x28
 800f780:	af00      	add	r7, sp, #0
 800f782:	60f8      	str	r0, [r7, #12]
 800f784:	60b9      	str	r1, [r7, #8]
 800f786:	607a      	str	r2, [r7, #4]
 800f788:	603b      	str	r3, [r7, #0]
 800f78a:	2300      	movs	r3, #0
 800f78c:	627b      	str	r3, [r7, #36]	@ 0x24
 800f78e:	68fb      	ldr	r3, [r7, #12]
 800f790:	2b00      	cmp	r3, #0
 800f792:	d10b      	bne.n	800f7ac <xTimerGenericCommand+0x30>
 800f794:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f798:	f383 8811 	msr	BASEPRI, r3
 800f79c:	f3bf 8f6f 	isb	sy
 800f7a0:	f3bf 8f4f 	dsb	sy
 800f7a4:	623b      	str	r3, [r7, #32]
 800f7a6:	bf00      	nop
 800f7a8:	bf00      	nop
 800f7aa:	e7fd      	b.n	800f7a8 <xTimerGenericCommand+0x2c>
 800f7ac:	4b19      	ldr	r3, [pc, #100]	@ (800f814 <xTimerGenericCommand+0x98>)
 800f7ae:	681b      	ldr	r3, [r3, #0]
 800f7b0:	2b00      	cmp	r3, #0
 800f7b2:	d02a      	beq.n	800f80a <xTimerGenericCommand+0x8e>
 800f7b4:	68bb      	ldr	r3, [r7, #8]
 800f7b6:	613b      	str	r3, [r7, #16]
 800f7b8:	687b      	ldr	r3, [r7, #4]
 800f7ba:	617b      	str	r3, [r7, #20]
 800f7bc:	68fb      	ldr	r3, [r7, #12]
 800f7be:	61bb      	str	r3, [r7, #24]
 800f7c0:	68bb      	ldr	r3, [r7, #8]
 800f7c2:	2b05      	cmp	r3, #5
 800f7c4:	dc18      	bgt.n	800f7f8 <xTimerGenericCommand+0x7c>
 800f7c6:	f7ff fbc9 	bl	800ef5c <xTaskGetSchedulerState>
 800f7ca:	4603      	mov	r3, r0
 800f7cc:	2b02      	cmp	r3, #2
 800f7ce:	d109      	bne.n	800f7e4 <xTimerGenericCommand+0x68>
 800f7d0:	4b10      	ldr	r3, [pc, #64]	@ (800f814 <xTimerGenericCommand+0x98>)
 800f7d2:	6818      	ldr	r0, [r3, #0]
 800f7d4:	f107 0110 	add.w	r1, r7, #16
 800f7d8:	2300      	movs	r3, #0
 800f7da:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800f7dc:	f7fd fb36 	bl	800ce4c <xQueueGenericSend>
 800f7e0:	6278      	str	r0, [r7, #36]	@ 0x24
 800f7e2:	e012      	b.n	800f80a <xTimerGenericCommand+0x8e>
 800f7e4:	4b0b      	ldr	r3, [pc, #44]	@ (800f814 <xTimerGenericCommand+0x98>)
 800f7e6:	6818      	ldr	r0, [r3, #0]
 800f7e8:	f107 0110 	add.w	r1, r7, #16
 800f7ec:	2300      	movs	r3, #0
 800f7ee:	2200      	movs	r2, #0
 800f7f0:	f7fd fb2c 	bl	800ce4c <xQueueGenericSend>
 800f7f4:	6278      	str	r0, [r7, #36]	@ 0x24
 800f7f6:	e008      	b.n	800f80a <xTimerGenericCommand+0x8e>
 800f7f8:	4b06      	ldr	r3, [pc, #24]	@ (800f814 <xTimerGenericCommand+0x98>)
 800f7fa:	6818      	ldr	r0, [r3, #0]
 800f7fc:	f107 0110 	add.w	r1, r7, #16
 800f800:	2300      	movs	r3, #0
 800f802:	683a      	ldr	r2, [r7, #0]
 800f804:	f7fd fc24 	bl	800d050 <xQueueGenericSendFromISR>
 800f808:	6278      	str	r0, [r7, #36]	@ 0x24
 800f80a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f80c:	4618      	mov	r0, r3
 800f80e:	3728      	adds	r7, #40	@ 0x28
 800f810:	46bd      	mov	sp, r7
 800f812:	bd80      	pop	{r7, pc}
 800f814:	200014a4 	.word	0x200014a4

0800f818 <prvProcessExpiredTimer>:
 800f818:	b580      	push	{r7, lr}
 800f81a:	b088      	sub	sp, #32
 800f81c:	af02      	add	r7, sp, #8
 800f81e:	6078      	str	r0, [r7, #4]
 800f820:	6039      	str	r1, [r7, #0]
 800f822:	4b23      	ldr	r3, [pc, #140]	@ (800f8b0 <prvProcessExpiredTimer+0x98>)
 800f824:	681b      	ldr	r3, [r3, #0]
 800f826:	68db      	ldr	r3, [r3, #12]
 800f828:	68db      	ldr	r3, [r3, #12]
 800f82a:	617b      	str	r3, [r7, #20]
 800f82c:	697b      	ldr	r3, [r7, #20]
 800f82e:	3304      	adds	r3, #4
 800f830:	4618      	mov	r0, r3
 800f832:	f7fd f969 	bl	800cb08 <uxListRemove>
 800f836:	697b      	ldr	r3, [r7, #20]
 800f838:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800f83c:	f003 0304 	and.w	r3, r3, #4
 800f840:	2b00      	cmp	r3, #0
 800f842:	d023      	beq.n	800f88c <prvProcessExpiredTimer+0x74>
 800f844:	697b      	ldr	r3, [r7, #20]
 800f846:	699a      	ldr	r2, [r3, #24]
 800f848:	687b      	ldr	r3, [r7, #4]
 800f84a:	18d1      	adds	r1, r2, r3
 800f84c:	687b      	ldr	r3, [r7, #4]
 800f84e:	683a      	ldr	r2, [r7, #0]
 800f850:	6978      	ldr	r0, [r7, #20]
 800f852:	f000 f8d5 	bl	800fa00 <prvInsertTimerInActiveList>
 800f856:	4603      	mov	r3, r0
 800f858:	2b00      	cmp	r3, #0
 800f85a:	d020      	beq.n	800f89e <prvProcessExpiredTimer+0x86>
 800f85c:	2300      	movs	r3, #0
 800f85e:	9300      	str	r3, [sp, #0]
 800f860:	2300      	movs	r3, #0
 800f862:	687a      	ldr	r2, [r7, #4]
 800f864:	2100      	movs	r1, #0
 800f866:	6978      	ldr	r0, [r7, #20]
 800f868:	f7ff ff88 	bl	800f77c <xTimerGenericCommand>
 800f86c:	6138      	str	r0, [r7, #16]
 800f86e:	693b      	ldr	r3, [r7, #16]
 800f870:	2b00      	cmp	r3, #0
 800f872:	d114      	bne.n	800f89e <prvProcessExpiredTimer+0x86>
 800f874:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f878:	f383 8811 	msr	BASEPRI, r3
 800f87c:	f3bf 8f6f 	isb	sy
 800f880:	f3bf 8f4f 	dsb	sy
 800f884:	60fb      	str	r3, [r7, #12]
 800f886:	bf00      	nop
 800f888:	bf00      	nop
 800f88a:	e7fd      	b.n	800f888 <prvProcessExpiredTimer+0x70>
 800f88c:	697b      	ldr	r3, [r7, #20]
 800f88e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800f892:	f023 0301 	bic.w	r3, r3, #1
 800f896:	b2da      	uxtb	r2, r3
 800f898:	697b      	ldr	r3, [r7, #20]
 800f89a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800f89e:	697b      	ldr	r3, [r7, #20]
 800f8a0:	6a1b      	ldr	r3, [r3, #32]
 800f8a2:	6978      	ldr	r0, [r7, #20]
 800f8a4:	4798      	blx	r3
 800f8a6:	bf00      	nop
 800f8a8:	3718      	adds	r7, #24
 800f8aa:	46bd      	mov	sp, r7
 800f8ac:	bd80      	pop	{r7, pc}
 800f8ae:	bf00      	nop
 800f8b0:	2000149c 	.word	0x2000149c

0800f8b4 <prvTimerTask>:
 800f8b4:	b580      	push	{r7, lr}
 800f8b6:	b084      	sub	sp, #16
 800f8b8:	af00      	add	r7, sp, #0
 800f8ba:	6078      	str	r0, [r7, #4]
 800f8bc:	f107 0308 	add.w	r3, r7, #8
 800f8c0:	4618      	mov	r0, r3
 800f8c2:	f000 f859 	bl	800f978 <prvGetNextExpireTime>
 800f8c6:	60f8      	str	r0, [r7, #12]
 800f8c8:	68bb      	ldr	r3, [r7, #8]
 800f8ca:	4619      	mov	r1, r3
 800f8cc:	68f8      	ldr	r0, [r7, #12]
 800f8ce:	f000 f805 	bl	800f8dc <prvProcessTimerOrBlockTask>
 800f8d2:	f000 f8d7 	bl	800fa84 <prvProcessReceivedCommands>
 800f8d6:	bf00      	nop
 800f8d8:	e7f0      	b.n	800f8bc <prvTimerTask+0x8>
	...

0800f8dc <prvProcessTimerOrBlockTask>:
 800f8dc:	b580      	push	{r7, lr}
 800f8de:	b084      	sub	sp, #16
 800f8e0:	af00      	add	r7, sp, #0
 800f8e2:	6078      	str	r0, [r7, #4]
 800f8e4:	6039      	str	r1, [r7, #0]
 800f8e6:	f7fe fd31 	bl	800e34c <vTaskSuspendAll>
 800f8ea:	f107 0308 	add.w	r3, r7, #8
 800f8ee:	4618      	mov	r0, r3
 800f8f0:	f000 f866 	bl	800f9c0 <prvSampleTimeNow>
 800f8f4:	60f8      	str	r0, [r7, #12]
 800f8f6:	68bb      	ldr	r3, [r7, #8]
 800f8f8:	2b00      	cmp	r3, #0
 800f8fa:	d130      	bne.n	800f95e <prvProcessTimerOrBlockTask+0x82>
 800f8fc:	683b      	ldr	r3, [r7, #0]
 800f8fe:	2b00      	cmp	r3, #0
 800f900:	d10a      	bne.n	800f918 <prvProcessTimerOrBlockTask+0x3c>
 800f902:	687a      	ldr	r2, [r7, #4]
 800f904:	68fb      	ldr	r3, [r7, #12]
 800f906:	429a      	cmp	r2, r3
 800f908:	d806      	bhi.n	800f918 <prvProcessTimerOrBlockTask+0x3c>
 800f90a:	f7fe fd2d 	bl	800e368 <xTaskResumeAll>
 800f90e:	68f9      	ldr	r1, [r7, #12]
 800f910:	6878      	ldr	r0, [r7, #4]
 800f912:	f7ff ff81 	bl	800f818 <prvProcessExpiredTimer>
 800f916:	e024      	b.n	800f962 <prvProcessTimerOrBlockTask+0x86>
 800f918:	683b      	ldr	r3, [r7, #0]
 800f91a:	2b00      	cmp	r3, #0
 800f91c:	d008      	beq.n	800f930 <prvProcessTimerOrBlockTask+0x54>
 800f91e:	4b13      	ldr	r3, [pc, #76]	@ (800f96c <prvProcessTimerOrBlockTask+0x90>)
 800f920:	681b      	ldr	r3, [r3, #0]
 800f922:	681b      	ldr	r3, [r3, #0]
 800f924:	2b00      	cmp	r3, #0
 800f926:	d101      	bne.n	800f92c <prvProcessTimerOrBlockTask+0x50>
 800f928:	2301      	movs	r3, #1
 800f92a:	e000      	b.n	800f92e <prvProcessTimerOrBlockTask+0x52>
 800f92c:	2300      	movs	r3, #0
 800f92e:	603b      	str	r3, [r7, #0]
 800f930:	4b0f      	ldr	r3, [pc, #60]	@ (800f970 <prvProcessTimerOrBlockTask+0x94>)
 800f932:	6818      	ldr	r0, [r3, #0]
 800f934:	687a      	ldr	r2, [r7, #4]
 800f936:	68fb      	ldr	r3, [r7, #12]
 800f938:	1ad3      	subs	r3, r2, r3
 800f93a:	683a      	ldr	r2, [r7, #0]
 800f93c:	4619      	mov	r1, r3
 800f93e:	f7fd ffeb 	bl	800d918 <vQueueWaitForMessageRestricted>
 800f942:	f7fe fd11 	bl	800e368 <xTaskResumeAll>
 800f946:	4603      	mov	r3, r0
 800f948:	2b00      	cmp	r3, #0
 800f94a:	d10a      	bne.n	800f962 <prvProcessTimerOrBlockTask+0x86>
 800f94c:	4b09      	ldr	r3, [pc, #36]	@ (800f974 <prvProcessTimerOrBlockTask+0x98>)
 800f94e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f952:	601a      	str	r2, [r3, #0]
 800f954:	f3bf 8f4f 	dsb	sy
 800f958:	f3bf 8f6f 	isb	sy
 800f95c:	e001      	b.n	800f962 <prvProcessTimerOrBlockTask+0x86>
 800f95e:	f7fe fd03 	bl	800e368 <xTaskResumeAll>
 800f962:	bf00      	nop
 800f964:	3710      	adds	r7, #16
 800f966:	46bd      	mov	sp, r7
 800f968:	bd80      	pop	{r7, pc}
 800f96a:	bf00      	nop
 800f96c:	200014a0 	.word	0x200014a0
 800f970:	200014a4 	.word	0x200014a4
 800f974:	e000ed04 	.word	0xe000ed04

0800f978 <prvGetNextExpireTime>:
 800f978:	b480      	push	{r7}
 800f97a:	b085      	sub	sp, #20
 800f97c:	af00      	add	r7, sp, #0
 800f97e:	6078      	str	r0, [r7, #4]
 800f980:	4b0e      	ldr	r3, [pc, #56]	@ (800f9bc <prvGetNextExpireTime+0x44>)
 800f982:	681b      	ldr	r3, [r3, #0]
 800f984:	681b      	ldr	r3, [r3, #0]
 800f986:	2b00      	cmp	r3, #0
 800f988:	d101      	bne.n	800f98e <prvGetNextExpireTime+0x16>
 800f98a:	2201      	movs	r2, #1
 800f98c:	e000      	b.n	800f990 <prvGetNextExpireTime+0x18>
 800f98e:	2200      	movs	r2, #0
 800f990:	687b      	ldr	r3, [r7, #4]
 800f992:	601a      	str	r2, [r3, #0]
 800f994:	687b      	ldr	r3, [r7, #4]
 800f996:	681b      	ldr	r3, [r3, #0]
 800f998:	2b00      	cmp	r3, #0
 800f99a:	d105      	bne.n	800f9a8 <prvGetNextExpireTime+0x30>
 800f99c:	4b07      	ldr	r3, [pc, #28]	@ (800f9bc <prvGetNextExpireTime+0x44>)
 800f99e:	681b      	ldr	r3, [r3, #0]
 800f9a0:	68db      	ldr	r3, [r3, #12]
 800f9a2:	681b      	ldr	r3, [r3, #0]
 800f9a4:	60fb      	str	r3, [r7, #12]
 800f9a6:	e001      	b.n	800f9ac <prvGetNextExpireTime+0x34>
 800f9a8:	2300      	movs	r3, #0
 800f9aa:	60fb      	str	r3, [r7, #12]
 800f9ac:	68fb      	ldr	r3, [r7, #12]
 800f9ae:	4618      	mov	r0, r3
 800f9b0:	3714      	adds	r7, #20
 800f9b2:	46bd      	mov	sp, r7
 800f9b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9b8:	4770      	bx	lr
 800f9ba:	bf00      	nop
 800f9bc:	2000149c 	.word	0x2000149c

0800f9c0 <prvSampleTimeNow>:
 800f9c0:	b580      	push	{r7, lr}
 800f9c2:	b084      	sub	sp, #16
 800f9c4:	af00      	add	r7, sp, #0
 800f9c6:	6078      	str	r0, [r7, #4]
 800f9c8:	f7fe fd6c 	bl	800e4a4 <xTaskGetTickCount>
 800f9cc:	60f8      	str	r0, [r7, #12]
 800f9ce:	4b0b      	ldr	r3, [pc, #44]	@ (800f9fc <prvSampleTimeNow+0x3c>)
 800f9d0:	681b      	ldr	r3, [r3, #0]
 800f9d2:	68fa      	ldr	r2, [r7, #12]
 800f9d4:	429a      	cmp	r2, r3
 800f9d6:	d205      	bcs.n	800f9e4 <prvSampleTimeNow+0x24>
 800f9d8:	f000 f93a 	bl	800fc50 <prvSwitchTimerLists>
 800f9dc:	687b      	ldr	r3, [r7, #4]
 800f9de:	2201      	movs	r2, #1
 800f9e0:	601a      	str	r2, [r3, #0]
 800f9e2:	e002      	b.n	800f9ea <prvSampleTimeNow+0x2a>
 800f9e4:	687b      	ldr	r3, [r7, #4]
 800f9e6:	2200      	movs	r2, #0
 800f9e8:	601a      	str	r2, [r3, #0]
 800f9ea:	4a04      	ldr	r2, [pc, #16]	@ (800f9fc <prvSampleTimeNow+0x3c>)
 800f9ec:	68fb      	ldr	r3, [r7, #12]
 800f9ee:	6013      	str	r3, [r2, #0]
 800f9f0:	68fb      	ldr	r3, [r7, #12]
 800f9f2:	4618      	mov	r0, r3
 800f9f4:	3710      	adds	r7, #16
 800f9f6:	46bd      	mov	sp, r7
 800f9f8:	bd80      	pop	{r7, pc}
 800f9fa:	bf00      	nop
 800f9fc:	200014ac 	.word	0x200014ac

0800fa00 <prvInsertTimerInActiveList>:
 800fa00:	b580      	push	{r7, lr}
 800fa02:	b086      	sub	sp, #24
 800fa04:	af00      	add	r7, sp, #0
 800fa06:	60f8      	str	r0, [r7, #12]
 800fa08:	60b9      	str	r1, [r7, #8]
 800fa0a:	607a      	str	r2, [r7, #4]
 800fa0c:	603b      	str	r3, [r7, #0]
 800fa0e:	2300      	movs	r3, #0
 800fa10:	617b      	str	r3, [r7, #20]
 800fa12:	68fb      	ldr	r3, [r7, #12]
 800fa14:	68ba      	ldr	r2, [r7, #8]
 800fa16:	605a      	str	r2, [r3, #4]
 800fa18:	68fb      	ldr	r3, [r7, #12]
 800fa1a:	68fa      	ldr	r2, [r7, #12]
 800fa1c:	611a      	str	r2, [r3, #16]
 800fa1e:	68ba      	ldr	r2, [r7, #8]
 800fa20:	687b      	ldr	r3, [r7, #4]
 800fa22:	429a      	cmp	r2, r3
 800fa24:	d812      	bhi.n	800fa4c <prvInsertTimerInActiveList+0x4c>
 800fa26:	687a      	ldr	r2, [r7, #4]
 800fa28:	683b      	ldr	r3, [r7, #0]
 800fa2a:	1ad2      	subs	r2, r2, r3
 800fa2c:	68fb      	ldr	r3, [r7, #12]
 800fa2e:	699b      	ldr	r3, [r3, #24]
 800fa30:	429a      	cmp	r2, r3
 800fa32:	d302      	bcc.n	800fa3a <prvInsertTimerInActiveList+0x3a>
 800fa34:	2301      	movs	r3, #1
 800fa36:	617b      	str	r3, [r7, #20]
 800fa38:	e01b      	b.n	800fa72 <prvInsertTimerInActiveList+0x72>
 800fa3a:	4b10      	ldr	r3, [pc, #64]	@ (800fa7c <prvInsertTimerInActiveList+0x7c>)
 800fa3c:	681a      	ldr	r2, [r3, #0]
 800fa3e:	68fb      	ldr	r3, [r7, #12]
 800fa40:	3304      	adds	r3, #4
 800fa42:	4619      	mov	r1, r3
 800fa44:	4610      	mov	r0, r2
 800fa46:	f7fd f826 	bl	800ca96 <vListInsert>
 800fa4a:	e012      	b.n	800fa72 <prvInsertTimerInActiveList+0x72>
 800fa4c:	687a      	ldr	r2, [r7, #4]
 800fa4e:	683b      	ldr	r3, [r7, #0]
 800fa50:	429a      	cmp	r2, r3
 800fa52:	d206      	bcs.n	800fa62 <prvInsertTimerInActiveList+0x62>
 800fa54:	68ba      	ldr	r2, [r7, #8]
 800fa56:	683b      	ldr	r3, [r7, #0]
 800fa58:	429a      	cmp	r2, r3
 800fa5a:	d302      	bcc.n	800fa62 <prvInsertTimerInActiveList+0x62>
 800fa5c:	2301      	movs	r3, #1
 800fa5e:	617b      	str	r3, [r7, #20]
 800fa60:	e007      	b.n	800fa72 <prvInsertTimerInActiveList+0x72>
 800fa62:	4b07      	ldr	r3, [pc, #28]	@ (800fa80 <prvInsertTimerInActiveList+0x80>)
 800fa64:	681a      	ldr	r2, [r3, #0]
 800fa66:	68fb      	ldr	r3, [r7, #12]
 800fa68:	3304      	adds	r3, #4
 800fa6a:	4619      	mov	r1, r3
 800fa6c:	4610      	mov	r0, r2
 800fa6e:	f7fd f812 	bl	800ca96 <vListInsert>
 800fa72:	697b      	ldr	r3, [r7, #20]
 800fa74:	4618      	mov	r0, r3
 800fa76:	3718      	adds	r7, #24
 800fa78:	46bd      	mov	sp, r7
 800fa7a:	bd80      	pop	{r7, pc}
 800fa7c:	200014a0 	.word	0x200014a0
 800fa80:	2000149c 	.word	0x2000149c

0800fa84 <prvProcessReceivedCommands>:
 800fa84:	b580      	push	{r7, lr}
 800fa86:	b08e      	sub	sp, #56	@ 0x38
 800fa88:	af02      	add	r7, sp, #8
 800fa8a:	e0ce      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fa8c:	687b      	ldr	r3, [r7, #4]
 800fa8e:	2b00      	cmp	r3, #0
 800fa90:	da19      	bge.n	800fac6 <prvProcessReceivedCommands+0x42>
 800fa92:	1d3b      	adds	r3, r7, #4
 800fa94:	3304      	adds	r3, #4
 800fa96:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fa98:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fa9a:	2b00      	cmp	r3, #0
 800fa9c:	d10b      	bne.n	800fab6 <prvProcessReceivedCommands+0x32>
 800fa9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800faa2:	f383 8811 	msr	BASEPRI, r3
 800faa6:	f3bf 8f6f 	isb	sy
 800faaa:	f3bf 8f4f 	dsb	sy
 800faae:	61fb      	str	r3, [r7, #28]
 800fab0:	bf00      	nop
 800fab2:	bf00      	nop
 800fab4:	e7fd      	b.n	800fab2 <prvProcessReceivedCommands+0x2e>
 800fab6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fab8:	681b      	ldr	r3, [r3, #0]
 800faba:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fabc:	6850      	ldr	r0, [r2, #4]
 800fabe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fac0:	6892      	ldr	r2, [r2, #8]
 800fac2:	4611      	mov	r1, r2
 800fac4:	4798      	blx	r3
 800fac6:	687b      	ldr	r3, [r7, #4]
 800fac8:	2b00      	cmp	r3, #0
 800faca:	f2c0 80ae 	blt.w	800fc2a <prvProcessReceivedCommands+0x1a6>
 800face:	68fb      	ldr	r3, [r7, #12]
 800fad0:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fad2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fad4:	695b      	ldr	r3, [r3, #20]
 800fad6:	2b00      	cmp	r3, #0
 800fad8:	d004      	beq.n	800fae4 <prvProcessReceivedCommands+0x60>
 800fada:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fadc:	3304      	adds	r3, #4
 800fade:	4618      	mov	r0, r3
 800fae0:	f7fd f812 	bl	800cb08 <uxListRemove>
 800fae4:	463b      	mov	r3, r7
 800fae6:	4618      	mov	r0, r3
 800fae8:	f7ff ff6a 	bl	800f9c0 <prvSampleTimeNow>
 800faec:	6278      	str	r0, [r7, #36]	@ 0x24
 800faee:	687b      	ldr	r3, [r7, #4]
 800faf0:	2b09      	cmp	r3, #9
 800faf2:	f200 8097 	bhi.w	800fc24 <prvProcessReceivedCommands+0x1a0>
 800faf6:	a201      	add	r2, pc, #4	@ (adr r2, 800fafc <prvProcessReceivedCommands+0x78>)
 800faf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fafc:	0800fb25 	.word	0x0800fb25
 800fb00:	0800fb25 	.word	0x0800fb25
 800fb04:	0800fb25 	.word	0x0800fb25
 800fb08:	0800fb9b 	.word	0x0800fb9b
 800fb0c:	0800fbaf 	.word	0x0800fbaf
 800fb10:	0800fbfb 	.word	0x0800fbfb
 800fb14:	0800fb25 	.word	0x0800fb25
 800fb18:	0800fb25 	.word	0x0800fb25
 800fb1c:	0800fb9b 	.word	0x0800fb9b
 800fb20:	0800fbaf 	.word	0x0800fbaf
 800fb24:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb26:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fb2a:	f043 0301 	orr.w	r3, r3, #1
 800fb2e:	b2da      	uxtb	r2, r3
 800fb30:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb32:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800fb36:	68ba      	ldr	r2, [r7, #8]
 800fb38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb3a:	699b      	ldr	r3, [r3, #24]
 800fb3c:	18d1      	adds	r1, r2, r3
 800fb3e:	68bb      	ldr	r3, [r7, #8]
 800fb40:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800fb42:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800fb44:	f7ff ff5c 	bl	800fa00 <prvInsertTimerInActiveList>
 800fb48:	4603      	mov	r3, r0
 800fb4a:	2b00      	cmp	r3, #0
 800fb4c:	d06c      	beq.n	800fc28 <prvProcessReceivedCommands+0x1a4>
 800fb4e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb50:	6a1b      	ldr	r3, [r3, #32]
 800fb52:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800fb54:	4798      	blx	r3
 800fb56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb58:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fb5c:	f003 0304 	and.w	r3, r3, #4
 800fb60:	2b00      	cmp	r3, #0
 800fb62:	d061      	beq.n	800fc28 <prvProcessReceivedCommands+0x1a4>
 800fb64:	68ba      	ldr	r2, [r7, #8]
 800fb66:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb68:	699b      	ldr	r3, [r3, #24]
 800fb6a:	441a      	add	r2, r3
 800fb6c:	2300      	movs	r3, #0
 800fb6e:	9300      	str	r3, [sp, #0]
 800fb70:	2300      	movs	r3, #0
 800fb72:	2100      	movs	r1, #0
 800fb74:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800fb76:	f7ff fe01 	bl	800f77c <xTimerGenericCommand>
 800fb7a:	6238      	str	r0, [r7, #32]
 800fb7c:	6a3b      	ldr	r3, [r7, #32]
 800fb7e:	2b00      	cmp	r3, #0
 800fb80:	d152      	bne.n	800fc28 <prvProcessReceivedCommands+0x1a4>
 800fb82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb86:	f383 8811 	msr	BASEPRI, r3
 800fb8a:	f3bf 8f6f 	isb	sy
 800fb8e:	f3bf 8f4f 	dsb	sy
 800fb92:	61bb      	str	r3, [r7, #24]
 800fb94:	bf00      	nop
 800fb96:	bf00      	nop
 800fb98:	e7fd      	b.n	800fb96 <prvProcessReceivedCommands+0x112>
 800fb9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fb9c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fba0:	f023 0301 	bic.w	r3, r3, #1
 800fba4:	b2da      	uxtb	r2, r3
 800fba6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fba8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800fbac:	e03d      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fbae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbb0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fbb4:	f043 0301 	orr.w	r3, r3, #1
 800fbb8:	b2da      	uxtb	r2, r3
 800fbba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbbc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800fbc0:	68ba      	ldr	r2, [r7, #8]
 800fbc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbc4:	619a      	str	r2, [r3, #24]
 800fbc6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbc8:	699b      	ldr	r3, [r3, #24]
 800fbca:	2b00      	cmp	r3, #0
 800fbcc:	d10b      	bne.n	800fbe6 <prvProcessReceivedCommands+0x162>
 800fbce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fbd2:	f383 8811 	msr	BASEPRI, r3
 800fbd6:	f3bf 8f6f 	isb	sy
 800fbda:	f3bf 8f4f 	dsb	sy
 800fbde:	617b      	str	r3, [r7, #20]
 800fbe0:	bf00      	nop
 800fbe2:	bf00      	nop
 800fbe4:	e7fd      	b.n	800fbe2 <prvProcessReceivedCommands+0x15e>
 800fbe6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbe8:	699a      	ldr	r2, [r3, #24]
 800fbea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fbec:	18d1      	adds	r1, r2, r3
 800fbee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fbf0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800fbf2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800fbf4:	f7ff ff04 	bl	800fa00 <prvInsertTimerInActiveList>
 800fbf8:	e017      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fbfa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fbfc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fc00:	f003 0302 	and.w	r3, r3, #2
 800fc04:	2b00      	cmp	r3, #0
 800fc06:	d103      	bne.n	800fc10 <prvProcessReceivedCommands+0x18c>
 800fc08:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800fc0a:	f000 fc05 	bl	8010418 <vPortFree>
 800fc0e:	e00c      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fc10:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fc12:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fc16:	f023 0301 	bic.w	r3, r3, #1
 800fc1a:	b2da      	uxtb	r2, r3
 800fc1c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fc1e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800fc22:	e002      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fc24:	bf00      	nop
 800fc26:	e000      	b.n	800fc2a <prvProcessReceivedCommands+0x1a6>
 800fc28:	bf00      	nop
 800fc2a:	4b08      	ldr	r3, [pc, #32]	@ (800fc4c <prvProcessReceivedCommands+0x1c8>)
 800fc2c:	681b      	ldr	r3, [r3, #0]
 800fc2e:	1d39      	adds	r1, r7, #4
 800fc30:	2200      	movs	r2, #0
 800fc32:	4618      	mov	r0, r3
 800fc34:	f7fd faaa 	bl	800d18c <xQueueReceive>
 800fc38:	4603      	mov	r3, r0
 800fc3a:	2b00      	cmp	r3, #0
 800fc3c:	f47f af26 	bne.w	800fa8c <prvProcessReceivedCommands+0x8>
 800fc40:	bf00      	nop
 800fc42:	bf00      	nop
 800fc44:	3730      	adds	r7, #48	@ 0x30
 800fc46:	46bd      	mov	sp, r7
 800fc48:	bd80      	pop	{r7, pc}
 800fc4a:	bf00      	nop
 800fc4c:	200014a4 	.word	0x200014a4

0800fc50 <prvSwitchTimerLists>:
 800fc50:	b580      	push	{r7, lr}
 800fc52:	b088      	sub	sp, #32
 800fc54:	af02      	add	r7, sp, #8
 800fc56:	e049      	b.n	800fcec <prvSwitchTimerLists+0x9c>
 800fc58:	4b2e      	ldr	r3, [pc, #184]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fc5a:	681b      	ldr	r3, [r3, #0]
 800fc5c:	68db      	ldr	r3, [r3, #12]
 800fc5e:	681b      	ldr	r3, [r3, #0]
 800fc60:	613b      	str	r3, [r7, #16]
 800fc62:	4b2c      	ldr	r3, [pc, #176]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fc64:	681b      	ldr	r3, [r3, #0]
 800fc66:	68db      	ldr	r3, [r3, #12]
 800fc68:	68db      	ldr	r3, [r3, #12]
 800fc6a:	60fb      	str	r3, [r7, #12]
 800fc6c:	68fb      	ldr	r3, [r7, #12]
 800fc6e:	3304      	adds	r3, #4
 800fc70:	4618      	mov	r0, r3
 800fc72:	f7fc ff49 	bl	800cb08 <uxListRemove>
 800fc76:	68fb      	ldr	r3, [r7, #12]
 800fc78:	6a1b      	ldr	r3, [r3, #32]
 800fc7a:	68f8      	ldr	r0, [r7, #12]
 800fc7c:	4798      	blx	r3
 800fc7e:	68fb      	ldr	r3, [r7, #12]
 800fc80:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800fc84:	f003 0304 	and.w	r3, r3, #4
 800fc88:	2b00      	cmp	r3, #0
 800fc8a:	d02f      	beq.n	800fcec <prvSwitchTimerLists+0x9c>
 800fc8c:	68fb      	ldr	r3, [r7, #12]
 800fc8e:	699b      	ldr	r3, [r3, #24]
 800fc90:	693a      	ldr	r2, [r7, #16]
 800fc92:	4413      	add	r3, r2
 800fc94:	60bb      	str	r3, [r7, #8]
 800fc96:	68ba      	ldr	r2, [r7, #8]
 800fc98:	693b      	ldr	r3, [r7, #16]
 800fc9a:	429a      	cmp	r2, r3
 800fc9c:	d90e      	bls.n	800fcbc <prvSwitchTimerLists+0x6c>
 800fc9e:	68fb      	ldr	r3, [r7, #12]
 800fca0:	68ba      	ldr	r2, [r7, #8]
 800fca2:	605a      	str	r2, [r3, #4]
 800fca4:	68fb      	ldr	r3, [r7, #12]
 800fca6:	68fa      	ldr	r2, [r7, #12]
 800fca8:	611a      	str	r2, [r3, #16]
 800fcaa:	4b1a      	ldr	r3, [pc, #104]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fcac:	681a      	ldr	r2, [r3, #0]
 800fcae:	68fb      	ldr	r3, [r7, #12]
 800fcb0:	3304      	adds	r3, #4
 800fcb2:	4619      	mov	r1, r3
 800fcb4:	4610      	mov	r0, r2
 800fcb6:	f7fc feee 	bl	800ca96 <vListInsert>
 800fcba:	e017      	b.n	800fcec <prvSwitchTimerLists+0x9c>
 800fcbc:	2300      	movs	r3, #0
 800fcbe:	9300      	str	r3, [sp, #0]
 800fcc0:	2300      	movs	r3, #0
 800fcc2:	693a      	ldr	r2, [r7, #16]
 800fcc4:	2100      	movs	r1, #0
 800fcc6:	68f8      	ldr	r0, [r7, #12]
 800fcc8:	f7ff fd58 	bl	800f77c <xTimerGenericCommand>
 800fccc:	6078      	str	r0, [r7, #4]
 800fcce:	687b      	ldr	r3, [r7, #4]
 800fcd0:	2b00      	cmp	r3, #0
 800fcd2:	d10b      	bne.n	800fcec <prvSwitchTimerLists+0x9c>
 800fcd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fcd8:	f383 8811 	msr	BASEPRI, r3
 800fcdc:	f3bf 8f6f 	isb	sy
 800fce0:	f3bf 8f4f 	dsb	sy
 800fce4:	603b      	str	r3, [r7, #0]
 800fce6:	bf00      	nop
 800fce8:	bf00      	nop
 800fcea:	e7fd      	b.n	800fce8 <prvSwitchTimerLists+0x98>
 800fcec:	4b09      	ldr	r3, [pc, #36]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fcee:	681b      	ldr	r3, [r3, #0]
 800fcf0:	681b      	ldr	r3, [r3, #0]
 800fcf2:	2b00      	cmp	r3, #0
 800fcf4:	d1b0      	bne.n	800fc58 <prvSwitchTimerLists+0x8>
 800fcf6:	4b07      	ldr	r3, [pc, #28]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fcf8:	681b      	ldr	r3, [r3, #0]
 800fcfa:	617b      	str	r3, [r7, #20]
 800fcfc:	4b06      	ldr	r3, [pc, #24]	@ (800fd18 <prvSwitchTimerLists+0xc8>)
 800fcfe:	681b      	ldr	r3, [r3, #0]
 800fd00:	4a04      	ldr	r2, [pc, #16]	@ (800fd14 <prvSwitchTimerLists+0xc4>)
 800fd02:	6013      	str	r3, [r2, #0]
 800fd04:	4a04      	ldr	r2, [pc, #16]	@ (800fd18 <prvSwitchTimerLists+0xc8>)
 800fd06:	697b      	ldr	r3, [r7, #20]
 800fd08:	6013      	str	r3, [r2, #0]
 800fd0a:	bf00      	nop
 800fd0c:	3718      	adds	r7, #24
 800fd0e:	46bd      	mov	sp, r7
 800fd10:	bd80      	pop	{r7, pc}
 800fd12:	bf00      	nop
 800fd14:	2000149c 	.word	0x2000149c
 800fd18:	200014a0 	.word	0x200014a0

0800fd1c <prvCheckForValidListAndQueue>:
 800fd1c:	b580      	push	{r7, lr}
 800fd1e:	b082      	sub	sp, #8
 800fd20:	af02      	add	r7, sp, #8
 800fd22:	f000 f989 	bl	8010038 <vPortEnterCritical>
 800fd26:	4b15      	ldr	r3, [pc, #84]	@ (800fd7c <prvCheckForValidListAndQueue+0x60>)
 800fd28:	681b      	ldr	r3, [r3, #0]
 800fd2a:	2b00      	cmp	r3, #0
 800fd2c:	d120      	bne.n	800fd70 <prvCheckForValidListAndQueue+0x54>
 800fd2e:	4814      	ldr	r0, [pc, #80]	@ (800fd80 <prvCheckForValidListAndQueue+0x64>)
 800fd30:	f7fc fe60 	bl	800c9f4 <vListInitialise>
 800fd34:	4813      	ldr	r0, [pc, #76]	@ (800fd84 <prvCheckForValidListAndQueue+0x68>)
 800fd36:	f7fc fe5d 	bl	800c9f4 <vListInitialise>
 800fd3a:	4b13      	ldr	r3, [pc, #76]	@ (800fd88 <prvCheckForValidListAndQueue+0x6c>)
 800fd3c:	4a10      	ldr	r2, [pc, #64]	@ (800fd80 <prvCheckForValidListAndQueue+0x64>)
 800fd3e:	601a      	str	r2, [r3, #0]
 800fd40:	4b12      	ldr	r3, [pc, #72]	@ (800fd8c <prvCheckForValidListAndQueue+0x70>)
 800fd42:	4a10      	ldr	r2, [pc, #64]	@ (800fd84 <prvCheckForValidListAndQueue+0x68>)
 800fd44:	601a      	str	r2, [r3, #0]
 800fd46:	2300      	movs	r3, #0
 800fd48:	9300      	str	r3, [sp, #0]
 800fd4a:	4b11      	ldr	r3, [pc, #68]	@ (800fd90 <prvCheckForValidListAndQueue+0x74>)
 800fd4c:	4a11      	ldr	r2, [pc, #68]	@ (800fd94 <prvCheckForValidListAndQueue+0x78>)
 800fd4e:	2110      	movs	r1, #16
 800fd50:	200a      	movs	r0, #10
 800fd52:	f7fc ff6d 	bl	800cc30 <xQueueGenericCreateStatic>
 800fd56:	4603      	mov	r3, r0
 800fd58:	4a08      	ldr	r2, [pc, #32]	@ (800fd7c <prvCheckForValidListAndQueue+0x60>)
 800fd5a:	6013      	str	r3, [r2, #0]
 800fd5c:	4b07      	ldr	r3, [pc, #28]	@ (800fd7c <prvCheckForValidListAndQueue+0x60>)
 800fd5e:	681b      	ldr	r3, [r3, #0]
 800fd60:	2b00      	cmp	r3, #0
 800fd62:	d005      	beq.n	800fd70 <prvCheckForValidListAndQueue+0x54>
 800fd64:	4b05      	ldr	r3, [pc, #20]	@ (800fd7c <prvCheckForValidListAndQueue+0x60>)
 800fd66:	681b      	ldr	r3, [r3, #0]
 800fd68:	490b      	ldr	r1, [pc, #44]	@ (800fd98 <prvCheckForValidListAndQueue+0x7c>)
 800fd6a:	4618      	mov	r0, r3
 800fd6c:	f7fd fdaa 	bl	800d8c4 <vQueueAddToRegistry>
 800fd70:	f000 f994 	bl	801009c <vPortExitCritical>
 800fd74:	bf00      	nop
 800fd76:	46bd      	mov	sp, r7
 800fd78:	bd80      	pop	{r7, pc}
 800fd7a:	bf00      	nop
 800fd7c:	200014a4 	.word	0x200014a4
 800fd80:	20001474 	.word	0x20001474
 800fd84:	20001488 	.word	0x20001488
 800fd88:	2000149c 	.word	0x2000149c
 800fd8c:	200014a0 	.word	0x200014a0
 800fd90:	20001550 	.word	0x20001550
 800fd94:	200014b0 	.word	0x200014b0
 800fd98:	08015d2c 	.word	0x08015d2c

0800fd9c <xTimerPendFunctionCallFromISR>:
 800fd9c:	b580      	push	{r7, lr}
 800fd9e:	b08a      	sub	sp, #40	@ 0x28
 800fda0:	af00      	add	r7, sp, #0
 800fda2:	60f8      	str	r0, [r7, #12]
 800fda4:	60b9      	str	r1, [r7, #8]
 800fda6:	607a      	str	r2, [r7, #4]
 800fda8:	603b      	str	r3, [r7, #0]
 800fdaa:	f06f 0301 	mvn.w	r3, #1
 800fdae:	617b      	str	r3, [r7, #20]
 800fdb0:	68fb      	ldr	r3, [r7, #12]
 800fdb2:	61bb      	str	r3, [r7, #24]
 800fdb4:	68bb      	ldr	r3, [r7, #8]
 800fdb6:	61fb      	str	r3, [r7, #28]
 800fdb8:	687b      	ldr	r3, [r7, #4]
 800fdba:	623b      	str	r3, [r7, #32]
 800fdbc:	4b06      	ldr	r3, [pc, #24]	@ (800fdd8 <xTimerPendFunctionCallFromISR+0x3c>)
 800fdbe:	6818      	ldr	r0, [r3, #0]
 800fdc0:	f107 0114 	add.w	r1, r7, #20
 800fdc4:	2300      	movs	r3, #0
 800fdc6:	683a      	ldr	r2, [r7, #0]
 800fdc8:	f7fd f942 	bl	800d050 <xQueueGenericSendFromISR>
 800fdcc:	6278      	str	r0, [r7, #36]	@ 0x24
 800fdce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fdd0:	4618      	mov	r0, r3
 800fdd2:	3728      	adds	r7, #40	@ 0x28
 800fdd4:	46bd      	mov	sp, r7
 800fdd6:	bd80      	pop	{r7, pc}
 800fdd8:	200014a4 	.word	0x200014a4

0800fddc <pxPortInitialiseStack>:
 800fddc:	b480      	push	{r7}
 800fdde:	b085      	sub	sp, #20
 800fde0:	af00      	add	r7, sp, #0
 800fde2:	60f8      	str	r0, [r7, #12]
 800fde4:	60b9      	str	r1, [r7, #8]
 800fde6:	607a      	str	r2, [r7, #4]
 800fde8:	68fb      	ldr	r3, [r7, #12]
 800fdea:	3b04      	subs	r3, #4
 800fdec:	60fb      	str	r3, [r7, #12]
 800fdee:	68fb      	ldr	r3, [r7, #12]
 800fdf0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800fdf4:	601a      	str	r2, [r3, #0]
 800fdf6:	68fb      	ldr	r3, [r7, #12]
 800fdf8:	3b04      	subs	r3, #4
 800fdfa:	60fb      	str	r3, [r7, #12]
 800fdfc:	68bb      	ldr	r3, [r7, #8]
 800fdfe:	f023 0201 	bic.w	r2, r3, #1
 800fe02:	68fb      	ldr	r3, [r7, #12]
 800fe04:	601a      	str	r2, [r3, #0]
 800fe06:	68fb      	ldr	r3, [r7, #12]
 800fe08:	3b04      	subs	r3, #4
 800fe0a:	60fb      	str	r3, [r7, #12]
 800fe0c:	4a0c      	ldr	r2, [pc, #48]	@ (800fe40 <pxPortInitialiseStack+0x64>)
 800fe0e:	68fb      	ldr	r3, [r7, #12]
 800fe10:	601a      	str	r2, [r3, #0]
 800fe12:	68fb      	ldr	r3, [r7, #12]
 800fe14:	3b14      	subs	r3, #20
 800fe16:	60fb      	str	r3, [r7, #12]
 800fe18:	687a      	ldr	r2, [r7, #4]
 800fe1a:	68fb      	ldr	r3, [r7, #12]
 800fe1c:	601a      	str	r2, [r3, #0]
 800fe1e:	68fb      	ldr	r3, [r7, #12]
 800fe20:	3b04      	subs	r3, #4
 800fe22:	60fb      	str	r3, [r7, #12]
 800fe24:	68fb      	ldr	r3, [r7, #12]
 800fe26:	f06f 0202 	mvn.w	r2, #2
 800fe2a:	601a      	str	r2, [r3, #0]
 800fe2c:	68fb      	ldr	r3, [r7, #12]
 800fe2e:	3b20      	subs	r3, #32
 800fe30:	60fb      	str	r3, [r7, #12]
 800fe32:	68fb      	ldr	r3, [r7, #12]
 800fe34:	4618      	mov	r0, r3
 800fe36:	3714      	adds	r7, #20
 800fe38:	46bd      	mov	sp, r7
 800fe3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe3e:	4770      	bx	lr
 800fe40:	0800fe45 	.word	0x0800fe45

0800fe44 <prvTaskExitError>:
 800fe44:	b480      	push	{r7}
 800fe46:	b085      	sub	sp, #20
 800fe48:	af00      	add	r7, sp, #0
 800fe4a:	2300      	movs	r3, #0
 800fe4c:	607b      	str	r3, [r7, #4]
 800fe4e:	4b13      	ldr	r3, [pc, #76]	@ (800fe9c <prvTaskExitError+0x58>)
 800fe50:	681b      	ldr	r3, [r3, #0]
 800fe52:	f1b3 3fff 	cmp.w	r3, #4294967295
 800fe56:	d00b      	beq.n	800fe70 <prvTaskExitError+0x2c>
 800fe58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fe5c:	f383 8811 	msr	BASEPRI, r3
 800fe60:	f3bf 8f6f 	isb	sy
 800fe64:	f3bf 8f4f 	dsb	sy
 800fe68:	60fb      	str	r3, [r7, #12]
 800fe6a:	bf00      	nop
 800fe6c:	bf00      	nop
 800fe6e:	e7fd      	b.n	800fe6c <prvTaskExitError+0x28>
 800fe70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fe74:	f383 8811 	msr	BASEPRI, r3
 800fe78:	f3bf 8f6f 	isb	sy
 800fe7c:	f3bf 8f4f 	dsb	sy
 800fe80:	60bb      	str	r3, [r7, #8]
 800fe82:	bf00      	nop
 800fe84:	bf00      	nop
 800fe86:	687b      	ldr	r3, [r7, #4]
 800fe88:	2b00      	cmp	r3, #0
 800fe8a:	d0fc      	beq.n	800fe86 <prvTaskExitError+0x42>
 800fe8c:	bf00      	nop
 800fe8e:	bf00      	nop
 800fe90:	3714      	adds	r7, #20
 800fe92:	46bd      	mov	sp, r7
 800fe94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe98:	4770      	bx	lr
 800fe9a:	bf00      	nop
 800fe9c:	20000288 	.word	0x20000288

0800fea0 <SVC_Handler>:
 800fea0:	4b07      	ldr	r3, [pc, #28]	@ (800fec0 <pxCurrentTCBConst2>)
 800fea2:	6819      	ldr	r1, [r3, #0]
 800fea4:	6808      	ldr	r0, [r1, #0]
 800fea6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feaa:	f380 8809 	msr	PSP, r0
 800feae:	f3bf 8f6f 	isb	sy
 800feb2:	f04f 0000 	mov.w	r0, #0
 800feb6:	f380 8811 	msr	BASEPRI, r0
 800feba:	4770      	bx	lr
 800febc:	f3af 8000 	nop.w

0800fec0 <pxCurrentTCBConst2>:
 800fec0:	20000f74 	.word	0x20000f74
 800fec4:	bf00      	nop
 800fec6:	bf00      	nop

0800fec8 <prvPortStartFirstTask>:
 800fec8:	4808      	ldr	r0, [pc, #32]	@ (800feec <prvPortStartFirstTask+0x24>)
 800feca:	6800      	ldr	r0, [r0, #0]
 800fecc:	6800      	ldr	r0, [r0, #0]
 800fece:	f380 8808 	msr	MSP, r0
 800fed2:	f04f 0000 	mov.w	r0, #0
 800fed6:	f380 8814 	msr	CONTROL, r0
 800feda:	b662      	cpsie	i
 800fedc:	b661      	cpsie	f
 800fede:	f3bf 8f4f 	dsb	sy
 800fee2:	f3bf 8f6f 	isb	sy
 800fee6:	df00      	svc	0
 800fee8:	bf00      	nop
 800feea:	bf00      	nop
 800feec:	e000ed08 	.word	0xe000ed08

0800fef0 <xPortStartScheduler>:
 800fef0:	b580      	push	{r7, lr}
 800fef2:	b086      	sub	sp, #24
 800fef4:	af00      	add	r7, sp, #0
 800fef6:	4b47      	ldr	r3, [pc, #284]	@ (8010014 <xPortStartScheduler+0x124>)
 800fef8:	681b      	ldr	r3, [r3, #0]
 800fefa:	4a47      	ldr	r2, [pc, #284]	@ (8010018 <xPortStartScheduler+0x128>)
 800fefc:	4293      	cmp	r3, r2
 800fefe:	d10b      	bne.n	800ff18 <xPortStartScheduler+0x28>
 800ff00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff04:	f383 8811 	msr	BASEPRI, r3
 800ff08:	f3bf 8f6f 	isb	sy
 800ff0c:	f3bf 8f4f 	dsb	sy
 800ff10:	60fb      	str	r3, [r7, #12]
 800ff12:	bf00      	nop
 800ff14:	bf00      	nop
 800ff16:	e7fd      	b.n	800ff14 <xPortStartScheduler+0x24>
 800ff18:	4b3e      	ldr	r3, [pc, #248]	@ (8010014 <xPortStartScheduler+0x124>)
 800ff1a:	681b      	ldr	r3, [r3, #0]
 800ff1c:	4a3f      	ldr	r2, [pc, #252]	@ (801001c <xPortStartScheduler+0x12c>)
 800ff1e:	4293      	cmp	r3, r2
 800ff20:	d10b      	bne.n	800ff3a <xPortStartScheduler+0x4a>
 800ff22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff26:	f383 8811 	msr	BASEPRI, r3
 800ff2a:	f3bf 8f6f 	isb	sy
 800ff2e:	f3bf 8f4f 	dsb	sy
 800ff32:	613b      	str	r3, [r7, #16]
 800ff34:	bf00      	nop
 800ff36:	bf00      	nop
 800ff38:	e7fd      	b.n	800ff36 <xPortStartScheduler+0x46>
 800ff3a:	4b39      	ldr	r3, [pc, #228]	@ (8010020 <xPortStartScheduler+0x130>)
 800ff3c:	617b      	str	r3, [r7, #20]
 800ff3e:	697b      	ldr	r3, [r7, #20]
 800ff40:	781b      	ldrb	r3, [r3, #0]
 800ff42:	b2db      	uxtb	r3, r3
 800ff44:	607b      	str	r3, [r7, #4]
 800ff46:	697b      	ldr	r3, [r7, #20]
 800ff48:	22ff      	movs	r2, #255	@ 0xff
 800ff4a:	701a      	strb	r2, [r3, #0]
 800ff4c:	697b      	ldr	r3, [r7, #20]
 800ff4e:	781b      	ldrb	r3, [r3, #0]
 800ff50:	b2db      	uxtb	r3, r3
 800ff52:	70fb      	strb	r3, [r7, #3]
 800ff54:	78fb      	ldrb	r3, [r7, #3]
 800ff56:	b2db      	uxtb	r3, r3
 800ff58:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800ff5c:	b2da      	uxtb	r2, r3
 800ff5e:	4b31      	ldr	r3, [pc, #196]	@ (8010024 <xPortStartScheduler+0x134>)
 800ff60:	701a      	strb	r2, [r3, #0]
 800ff62:	4b31      	ldr	r3, [pc, #196]	@ (8010028 <xPortStartScheduler+0x138>)
 800ff64:	2207      	movs	r2, #7
 800ff66:	601a      	str	r2, [r3, #0]
 800ff68:	e009      	b.n	800ff7e <xPortStartScheduler+0x8e>
 800ff6a:	4b2f      	ldr	r3, [pc, #188]	@ (8010028 <xPortStartScheduler+0x138>)
 800ff6c:	681b      	ldr	r3, [r3, #0]
 800ff6e:	3b01      	subs	r3, #1
 800ff70:	4a2d      	ldr	r2, [pc, #180]	@ (8010028 <xPortStartScheduler+0x138>)
 800ff72:	6013      	str	r3, [r2, #0]
 800ff74:	78fb      	ldrb	r3, [r7, #3]
 800ff76:	b2db      	uxtb	r3, r3
 800ff78:	005b      	lsls	r3, r3, #1
 800ff7a:	b2db      	uxtb	r3, r3
 800ff7c:	70fb      	strb	r3, [r7, #3]
 800ff7e:	78fb      	ldrb	r3, [r7, #3]
 800ff80:	b2db      	uxtb	r3, r3
 800ff82:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ff86:	2b80      	cmp	r3, #128	@ 0x80
 800ff88:	d0ef      	beq.n	800ff6a <xPortStartScheduler+0x7a>
 800ff8a:	4b27      	ldr	r3, [pc, #156]	@ (8010028 <xPortStartScheduler+0x138>)
 800ff8c:	681b      	ldr	r3, [r3, #0]
 800ff8e:	f1c3 0307 	rsb	r3, r3, #7
 800ff92:	2b04      	cmp	r3, #4
 800ff94:	d00b      	beq.n	800ffae <xPortStartScheduler+0xbe>
 800ff96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff9a:	f383 8811 	msr	BASEPRI, r3
 800ff9e:	f3bf 8f6f 	isb	sy
 800ffa2:	f3bf 8f4f 	dsb	sy
 800ffa6:	60bb      	str	r3, [r7, #8]
 800ffa8:	bf00      	nop
 800ffaa:	bf00      	nop
 800ffac:	e7fd      	b.n	800ffaa <xPortStartScheduler+0xba>
 800ffae:	4b1e      	ldr	r3, [pc, #120]	@ (8010028 <xPortStartScheduler+0x138>)
 800ffb0:	681b      	ldr	r3, [r3, #0]
 800ffb2:	021b      	lsls	r3, r3, #8
 800ffb4:	4a1c      	ldr	r2, [pc, #112]	@ (8010028 <xPortStartScheduler+0x138>)
 800ffb6:	6013      	str	r3, [r2, #0]
 800ffb8:	4b1b      	ldr	r3, [pc, #108]	@ (8010028 <xPortStartScheduler+0x138>)
 800ffba:	681b      	ldr	r3, [r3, #0]
 800ffbc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800ffc0:	4a19      	ldr	r2, [pc, #100]	@ (8010028 <xPortStartScheduler+0x138>)
 800ffc2:	6013      	str	r3, [r2, #0]
 800ffc4:	687b      	ldr	r3, [r7, #4]
 800ffc6:	b2da      	uxtb	r2, r3
 800ffc8:	697b      	ldr	r3, [r7, #20]
 800ffca:	701a      	strb	r2, [r3, #0]
 800ffcc:	4b17      	ldr	r3, [pc, #92]	@ (801002c <xPortStartScheduler+0x13c>)
 800ffce:	681b      	ldr	r3, [r3, #0]
 800ffd0:	4a16      	ldr	r2, [pc, #88]	@ (801002c <xPortStartScheduler+0x13c>)
 800ffd2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800ffd6:	6013      	str	r3, [r2, #0]
 800ffd8:	4b14      	ldr	r3, [pc, #80]	@ (801002c <xPortStartScheduler+0x13c>)
 800ffda:	681b      	ldr	r3, [r3, #0]
 800ffdc:	4a13      	ldr	r2, [pc, #76]	@ (801002c <xPortStartScheduler+0x13c>)
 800ffde:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800ffe2:	6013      	str	r3, [r2, #0]
 800ffe4:	f000 f8da 	bl	801019c <vPortSetupTimerInterrupt>
 800ffe8:	4b11      	ldr	r3, [pc, #68]	@ (8010030 <xPortStartScheduler+0x140>)
 800ffea:	2200      	movs	r2, #0
 800ffec:	601a      	str	r2, [r3, #0]
 800ffee:	f000 f8f9 	bl	80101e4 <vPortEnableVFP>
 800fff2:	4b10      	ldr	r3, [pc, #64]	@ (8010034 <xPortStartScheduler+0x144>)
 800fff4:	681b      	ldr	r3, [r3, #0]
 800fff6:	4a0f      	ldr	r2, [pc, #60]	@ (8010034 <xPortStartScheduler+0x144>)
 800fff8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800fffc:	6013      	str	r3, [r2, #0]
 800fffe:	f7ff ff63 	bl	800fec8 <prvPortStartFirstTask>
 8010002:	f7fe fbed 	bl	800e7e0 <vTaskSwitchContext>
 8010006:	f7ff ff1d 	bl	800fe44 <prvTaskExitError>
 801000a:	2300      	movs	r3, #0
 801000c:	4618      	mov	r0, r3
 801000e:	3718      	adds	r7, #24
 8010010:	46bd      	mov	sp, r7
 8010012:	bd80      	pop	{r7, pc}
 8010014:	e000ed00 	.word	0xe000ed00
 8010018:	410fc271 	.word	0x410fc271
 801001c:	410fc270 	.word	0x410fc270
 8010020:	e000e400 	.word	0xe000e400
 8010024:	200015a0 	.word	0x200015a0
 8010028:	200015a4 	.word	0x200015a4
 801002c:	e000ed20 	.word	0xe000ed20
 8010030:	20000288 	.word	0x20000288
 8010034:	e000ef34 	.word	0xe000ef34

08010038 <vPortEnterCritical>:
 8010038:	b480      	push	{r7}
 801003a:	b083      	sub	sp, #12
 801003c:	af00      	add	r7, sp, #0
 801003e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010042:	f383 8811 	msr	BASEPRI, r3
 8010046:	f3bf 8f6f 	isb	sy
 801004a:	f3bf 8f4f 	dsb	sy
 801004e:	607b      	str	r3, [r7, #4]
 8010050:	bf00      	nop
 8010052:	4b10      	ldr	r3, [pc, #64]	@ (8010094 <vPortEnterCritical+0x5c>)
 8010054:	681b      	ldr	r3, [r3, #0]
 8010056:	3301      	adds	r3, #1
 8010058:	4a0e      	ldr	r2, [pc, #56]	@ (8010094 <vPortEnterCritical+0x5c>)
 801005a:	6013      	str	r3, [r2, #0]
 801005c:	4b0d      	ldr	r3, [pc, #52]	@ (8010094 <vPortEnterCritical+0x5c>)
 801005e:	681b      	ldr	r3, [r3, #0]
 8010060:	2b01      	cmp	r3, #1
 8010062:	d110      	bne.n	8010086 <vPortEnterCritical+0x4e>
 8010064:	4b0c      	ldr	r3, [pc, #48]	@ (8010098 <vPortEnterCritical+0x60>)
 8010066:	681b      	ldr	r3, [r3, #0]
 8010068:	b2db      	uxtb	r3, r3
 801006a:	2b00      	cmp	r3, #0
 801006c:	d00b      	beq.n	8010086 <vPortEnterCritical+0x4e>
 801006e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010072:	f383 8811 	msr	BASEPRI, r3
 8010076:	f3bf 8f6f 	isb	sy
 801007a:	f3bf 8f4f 	dsb	sy
 801007e:	603b      	str	r3, [r7, #0]
 8010080:	bf00      	nop
 8010082:	bf00      	nop
 8010084:	e7fd      	b.n	8010082 <vPortEnterCritical+0x4a>
 8010086:	bf00      	nop
 8010088:	370c      	adds	r7, #12
 801008a:	46bd      	mov	sp, r7
 801008c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010090:	4770      	bx	lr
 8010092:	bf00      	nop
 8010094:	20000288 	.word	0x20000288
 8010098:	e000ed04 	.word	0xe000ed04

0801009c <vPortExitCritical>:
 801009c:	b480      	push	{r7}
 801009e:	b083      	sub	sp, #12
 80100a0:	af00      	add	r7, sp, #0
 80100a2:	4b12      	ldr	r3, [pc, #72]	@ (80100ec <vPortExitCritical+0x50>)
 80100a4:	681b      	ldr	r3, [r3, #0]
 80100a6:	2b00      	cmp	r3, #0
 80100a8:	d10b      	bne.n	80100c2 <vPortExitCritical+0x26>
 80100aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80100ae:	f383 8811 	msr	BASEPRI, r3
 80100b2:	f3bf 8f6f 	isb	sy
 80100b6:	f3bf 8f4f 	dsb	sy
 80100ba:	607b      	str	r3, [r7, #4]
 80100bc:	bf00      	nop
 80100be:	bf00      	nop
 80100c0:	e7fd      	b.n	80100be <vPortExitCritical+0x22>
 80100c2:	4b0a      	ldr	r3, [pc, #40]	@ (80100ec <vPortExitCritical+0x50>)
 80100c4:	681b      	ldr	r3, [r3, #0]
 80100c6:	3b01      	subs	r3, #1
 80100c8:	4a08      	ldr	r2, [pc, #32]	@ (80100ec <vPortExitCritical+0x50>)
 80100ca:	6013      	str	r3, [r2, #0]
 80100cc:	4b07      	ldr	r3, [pc, #28]	@ (80100ec <vPortExitCritical+0x50>)
 80100ce:	681b      	ldr	r3, [r3, #0]
 80100d0:	2b00      	cmp	r3, #0
 80100d2:	d105      	bne.n	80100e0 <vPortExitCritical+0x44>
 80100d4:	2300      	movs	r3, #0
 80100d6:	603b      	str	r3, [r7, #0]
 80100d8:	683b      	ldr	r3, [r7, #0]
 80100da:	f383 8811 	msr	BASEPRI, r3
 80100de:	bf00      	nop
 80100e0:	bf00      	nop
 80100e2:	370c      	adds	r7, #12
 80100e4:	46bd      	mov	sp, r7
 80100e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100ea:	4770      	bx	lr
 80100ec:	20000288 	.word	0x20000288

080100f0 <PendSV_Handler>:
 80100f0:	f3ef 8009 	mrs	r0, PSP
 80100f4:	f3bf 8f6f 	isb	sy
 80100f8:	4b15      	ldr	r3, [pc, #84]	@ (8010150 <pxCurrentTCBConst>)
 80100fa:	681a      	ldr	r2, [r3, #0]
 80100fc:	f01e 0f10 	tst.w	lr, #16
 8010100:	bf08      	it	eq
 8010102:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010106:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801010a:	6010      	str	r0, [r2, #0]
 801010c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010110:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8010114:	f380 8811 	msr	BASEPRI, r0
 8010118:	f3bf 8f4f 	dsb	sy
 801011c:	f3bf 8f6f 	isb	sy
 8010120:	f7fe fb5e 	bl	800e7e0 <vTaskSwitchContext>
 8010124:	f04f 0000 	mov.w	r0, #0
 8010128:	f380 8811 	msr	BASEPRI, r0
 801012c:	bc09      	pop	{r0, r3}
 801012e:	6819      	ldr	r1, [r3, #0]
 8010130:	6808      	ldr	r0, [r1, #0]
 8010132:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010136:	f01e 0f10 	tst.w	lr, #16
 801013a:	bf08      	it	eq
 801013c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8010140:	f380 8809 	msr	PSP, r0
 8010144:	f3bf 8f6f 	isb	sy
 8010148:	4770      	bx	lr
 801014a:	bf00      	nop
 801014c:	f3af 8000 	nop.w

08010150 <pxCurrentTCBConst>:
 8010150:	20000f74 	.word	0x20000f74
 8010154:	bf00      	nop
 8010156:	bf00      	nop

08010158 <xPortSysTickHandler>:
 8010158:	b580      	push	{r7, lr}
 801015a:	b082      	sub	sp, #8
 801015c:	af00      	add	r7, sp, #0
 801015e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010162:	f383 8811 	msr	BASEPRI, r3
 8010166:	f3bf 8f6f 	isb	sy
 801016a:	f3bf 8f4f 	dsb	sy
 801016e:	607b      	str	r3, [r7, #4]
 8010170:	bf00      	nop
 8010172:	f7fe fa7b 	bl	800e66c <xTaskIncrementTick>
 8010176:	4603      	mov	r3, r0
 8010178:	2b00      	cmp	r3, #0
 801017a:	d003      	beq.n	8010184 <xPortSysTickHandler+0x2c>
 801017c:	4b06      	ldr	r3, [pc, #24]	@ (8010198 <xPortSysTickHandler+0x40>)
 801017e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8010182:	601a      	str	r2, [r3, #0]
 8010184:	2300      	movs	r3, #0
 8010186:	603b      	str	r3, [r7, #0]
 8010188:	683b      	ldr	r3, [r7, #0]
 801018a:	f383 8811 	msr	BASEPRI, r3
 801018e:	bf00      	nop
 8010190:	bf00      	nop
 8010192:	3708      	adds	r7, #8
 8010194:	46bd      	mov	sp, r7
 8010196:	bd80      	pop	{r7, pc}
 8010198:	e000ed04 	.word	0xe000ed04

0801019c <vPortSetupTimerInterrupt>:
 801019c:	b480      	push	{r7}
 801019e:	af00      	add	r7, sp, #0
 80101a0:	4b0b      	ldr	r3, [pc, #44]	@ (80101d0 <vPortSetupTimerInterrupt+0x34>)
 80101a2:	2200      	movs	r2, #0
 80101a4:	601a      	str	r2, [r3, #0]
 80101a6:	4b0b      	ldr	r3, [pc, #44]	@ (80101d4 <vPortSetupTimerInterrupt+0x38>)
 80101a8:	2200      	movs	r2, #0
 80101aa:	601a      	str	r2, [r3, #0]
 80101ac:	4b0a      	ldr	r3, [pc, #40]	@ (80101d8 <vPortSetupTimerInterrupt+0x3c>)
 80101ae:	681b      	ldr	r3, [r3, #0]
 80101b0:	4a0a      	ldr	r2, [pc, #40]	@ (80101dc <vPortSetupTimerInterrupt+0x40>)
 80101b2:	fba2 2303 	umull	r2, r3, r2, r3
 80101b6:	099b      	lsrs	r3, r3, #6
 80101b8:	4a09      	ldr	r2, [pc, #36]	@ (80101e0 <vPortSetupTimerInterrupt+0x44>)
 80101ba:	3b01      	subs	r3, #1
 80101bc:	6013      	str	r3, [r2, #0]
 80101be:	4b04      	ldr	r3, [pc, #16]	@ (80101d0 <vPortSetupTimerInterrupt+0x34>)
 80101c0:	2207      	movs	r2, #7
 80101c2:	601a      	str	r2, [r3, #0]
 80101c4:	bf00      	nop
 80101c6:	46bd      	mov	sp, r7
 80101c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101cc:	4770      	bx	lr
 80101ce:	bf00      	nop
 80101d0:	e000e010 	.word	0xe000e010
 80101d4:	e000e018 	.word	0xe000e018
 80101d8:	2000025c 	.word	0x2000025c
 80101dc:	10624dd3 	.word	0x10624dd3
 80101e0:	e000e014 	.word	0xe000e014

080101e4 <vPortEnableVFP>:
 80101e4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80101f4 <vPortEnableVFP+0x10>
 80101e8:	6801      	ldr	r1, [r0, #0]
 80101ea:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80101ee:	6001      	str	r1, [r0, #0]
 80101f0:	4770      	bx	lr
 80101f2:	bf00      	nop
 80101f4:	e000ed88 	.word	0xe000ed88

080101f8 <vPortValidateInterruptPriority>:
 80101f8:	b480      	push	{r7}
 80101fa:	b085      	sub	sp, #20
 80101fc:	af00      	add	r7, sp, #0
 80101fe:	f3ef 8305 	mrs	r3, IPSR
 8010202:	60fb      	str	r3, [r7, #12]
 8010204:	68fb      	ldr	r3, [r7, #12]
 8010206:	2b0f      	cmp	r3, #15
 8010208:	d915      	bls.n	8010236 <vPortValidateInterruptPriority+0x3e>
 801020a:	4a18      	ldr	r2, [pc, #96]	@ (801026c <vPortValidateInterruptPriority+0x74>)
 801020c:	68fb      	ldr	r3, [r7, #12]
 801020e:	4413      	add	r3, r2
 8010210:	781b      	ldrb	r3, [r3, #0]
 8010212:	72fb      	strb	r3, [r7, #11]
 8010214:	4b16      	ldr	r3, [pc, #88]	@ (8010270 <vPortValidateInterruptPriority+0x78>)
 8010216:	781b      	ldrb	r3, [r3, #0]
 8010218:	7afa      	ldrb	r2, [r7, #11]
 801021a:	429a      	cmp	r2, r3
 801021c:	d20b      	bcs.n	8010236 <vPortValidateInterruptPriority+0x3e>
 801021e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010222:	f383 8811 	msr	BASEPRI, r3
 8010226:	f3bf 8f6f 	isb	sy
 801022a:	f3bf 8f4f 	dsb	sy
 801022e:	607b      	str	r3, [r7, #4]
 8010230:	bf00      	nop
 8010232:	bf00      	nop
 8010234:	e7fd      	b.n	8010232 <vPortValidateInterruptPriority+0x3a>
 8010236:	4b0f      	ldr	r3, [pc, #60]	@ (8010274 <vPortValidateInterruptPriority+0x7c>)
 8010238:	681b      	ldr	r3, [r3, #0]
 801023a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 801023e:	4b0e      	ldr	r3, [pc, #56]	@ (8010278 <vPortValidateInterruptPriority+0x80>)
 8010240:	681b      	ldr	r3, [r3, #0]
 8010242:	429a      	cmp	r2, r3
 8010244:	d90b      	bls.n	801025e <vPortValidateInterruptPriority+0x66>
 8010246:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801024a:	f383 8811 	msr	BASEPRI, r3
 801024e:	f3bf 8f6f 	isb	sy
 8010252:	f3bf 8f4f 	dsb	sy
 8010256:	603b      	str	r3, [r7, #0]
 8010258:	bf00      	nop
 801025a:	bf00      	nop
 801025c:	e7fd      	b.n	801025a <vPortValidateInterruptPriority+0x62>
 801025e:	bf00      	nop
 8010260:	3714      	adds	r7, #20
 8010262:	46bd      	mov	sp, r7
 8010264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010268:	4770      	bx	lr
 801026a:	bf00      	nop
 801026c:	e000e3f0 	.word	0xe000e3f0
 8010270:	200015a0 	.word	0x200015a0
 8010274:	e000ed0c 	.word	0xe000ed0c
 8010278:	200015a4 	.word	0x200015a4

0801027c <pvPortMalloc>:
 801027c:	b580      	push	{r7, lr}
 801027e:	b08a      	sub	sp, #40	@ 0x28
 8010280:	af00      	add	r7, sp, #0
 8010282:	6078      	str	r0, [r7, #4]
 8010284:	2300      	movs	r3, #0
 8010286:	61fb      	str	r3, [r7, #28]
 8010288:	f7fe f860 	bl	800e34c <vTaskSuspendAll>
 801028c:	4b5c      	ldr	r3, [pc, #368]	@ (8010400 <pvPortMalloc+0x184>)
 801028e:	681b      	ldr	r3, [r3, #0]
 8010290:	2b00      	cmp	r3, #0
 8010292:	d101      	bne.n	8010298 <pvPortMalloc+0x1c>
 8010294:	f000 f924 	bl	80104e0 <prvHeapInit>
 8010298:	4b5a      	ldr	r3, [pc, #360]	@ (8010404 <pvPortMalloc+0x188>)
 801029a:	681a      	ldr	r2, [r3, #0]
 801029c:	687b      	ldr	r3, [r7, #4]
 801029e:	4013      	ands	r3, r2
 80102a0:	2b00      	cmp	r3, #0
 80102a2:	f040 8095 	bne.w	80103d0 <pvPortMalloc+0x154>
 80102a6:	687b      	ldr	r3, [r7, #4]
 80102a8:	2b00      	cmp	r3, #0
 80102aa:	d01e      	beq.n	80102ea <pvPortMalloc+0x6e>
 80102ac:	2208      	movs	r2, #8
 80102ae:	687b      	ldr	r3, [r7, #4]
 80102b0:	4413      	add	r3, r2
 80102b2:	607b      	str	r3, [r7, #4]
 80102b4:	687b      	ldr	r3, [r7, #4]
 80102b6:	f003 0307 	and.w	r3, r3, #7
 80102ba:	2b00      	cmp	r3, #0
 80102bc:	d015      	beq.n	80102ea <pvPortMalloc+0x6e>
 80102be:	687b      	ldr	r3, [r7, #4]
 80102c0:	f023 0307 	bic.w	r3, r3, #7
 80102c4:	3308      	adds	r3, #8
 80102c6:	607b      	str	r3, [r7, #4]
 80102c8:	687b      	ldr	r3, [r7, #4]
 80102ca:	f003 0307 	and.w	r3, r3, #7
 80102ce:	2b00      	cmp	r3, #0
 80102d0:	d00b      	beq.n	80102ea <pvPortMalloc+0x6e>
 80102d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80102d6:	f383 8811 	msr	BASEPRI, r3
 80102da:	f3bf 8f6f 	isb	sy
 80102de:	f3bf 8f4f 	dsb	sy
 80102e2:	617b      	str	r3, [r7, #20]
 80102e4:	bf00      	nop
 80102e6:	bf00      	nop
 80102e8:	e7fd      	b.n	80102e6 <pvPortMalloc+0x6a>
 80102ea:	687b      	ldr	r3, [r7, #4]
 80102ec:	2b00      	cmp	r3, #0
 80102ee:	d06f      	beq.n	80103d0 <pvPortMalloc+0x154>
 80102f0:	4b45      	ldr	r3, [pc, #276]	@ (8010408 <pvPortMalloc+0x18c>)
 80102f2:	681b      	ldr	r3, [r3, #0]
 80102f4:	687a      	ldr	r2, [r7, #4]
 80102f6:	429a      	cmp	r2, r3
 80102f8:	d86a      	bhi.n	80103d0 <pvPortMalloc+0x154>
 80102fa:	4b44      	ldr	r3, [pc, #272]	@ (801040c <pvPortMalloc+0x190>)
 80102fc:	623b      	str	r3, [r7, #32]
 80102fe:	4b43      	ldr	r3, [pc, #268]	@ (801040c <pvPortMalloc+0x190>)
 8010300:	681b      	ldr	r3, [r3, #0]
 8010302:	627b      	str	r3, [r7, #36]	@ 0x24
 8010304:	e004      	b.n	8010310 <pvPortMalloc+0x94>
 8010306:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010308:	623b      	str	r3, [r7, #32]
 801030a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801030c:	681b      	ldr	r3, [r3, #0]
 801030e:	627b      	str	r3, [r7, #36]	@ 0x24
 8010310:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010312:	685b      	ldr	r3, [r3, #4]
 8010314:	687a      	ldr	r2, [r7, #4]
 8010316:	429a      	cmp	r2, r3
 8010318:	d903      	bls.n	8010322 <pvPortMalloc+0xa6>
 801031a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801031c:	681b      	ldr	r3, [r3, #0]
 801031e:	2b00      	cmp	r3, #0
 8010320:	d1f1      	bne.n	8010306 <pvPortMalloc+0x8a>
 8010322:	4b37      	ldr	r3, [pc, #220]	@ (8010400 <pvPortMalloc+0x184>)
 8010324:	681b      	ldr	r3, [r3, #0]
 8010326:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010328:	429a      	cmp	r2, r3
 801032a:	d051      	beq.n	80103d0 <pvPortMalloc+0x154>
 801032c:	6a3b      	ldr	r3, [r7, #32]
 801032e:	681b      	ldr	r3, [r3, #0]
 8010330:	2208      	movs	r2, #8
 8010332:	4413      	add	r3, r2
 8010334:	61fb      	str	r3, [r7, #28]
 8010336:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010338:	681a      	ldr	r2, [r3, #0]
 801033a:	6a3b      	ldr	r3, [r7, #32]
 801033c:	601a      	str	r2, [r3, #0]
 801033e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010340:	685a      	ldr	r2, [r3, #4]
 8010342:	687b      	ldr	r3, [r7, #4]
 8010344:	1ad2      	subs	r2, r2, r3
 8010346:	2308      	movs	r3, #8
 8010348:	005b      	lsls	r3, r3, #1
 801034a:	429a      	cmp	r2, r3
 801034c:	d920      	bls.n	8010390 <pvPortMalloc+0x114>
 801034e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010350:	687b      	ldr	r3, [r7, #4]
 8010352:	4413      	add	r3, r2
 8010354:	61bb      	str	r3, [r7, #24]
 8010356:	69bb      	ldr	r3, [r7, #24]
 8010358:	f003 0307 	and.w	r3, r3, #7
 801035c:	2b00      	cmp	r3, #0
 801035e:	d00b      	beq.n	8010378 <pvPortMalloc+0xfc>
 8010360:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010364:	f383 8811 	msr	BASEPRI, r3
 8010368:	f3bf 8f6f 	isb	sy
 801036c:	f3bf 8f4f 	dsb	sy
 8010370:	613b      	str	r3, [r7, #16]
 8010372:	bf00      	nop
 8010374:	bf00      	nop
 8010376:	e7fd      	b.n	8010374 <pvPortMalloc+0xf8>
 8010378:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801037a:	685a      	ldr	r2, [r3, #4]
 801037c:	687b      	ldr	r3, [r7, #4]
 801037e:	1ad2      	subs	r2, r2, r3
 8010380:	69bb      	ldr	r3, [r7, #24]
 8010382:	605a      	str	r2, [r3, #4]
 8010384:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010386:	687a      	ldr	r2, [r7, #4]
 8010388:	605a      	str	r2, [r3, #4]
 801038a:	69b8      	ldr	r0, [r7, #24]
 801038c:	f000 f90a 	bl	80105a4 <prvInsertBlockIntoFreeList>
 8010390:	4b1d      	ldr	r3, [pc, #116]	@ (8010408 <pvPortMalloc+0x18c>)
 8010392:	681a      	ldr	r2, [r3, #0]
 8010394:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010396:	685b      	ldr	r3, [r3, #4]
 8010398:	1ad3      	subs	r3, r2, r3
 801039a:	4a1b      	ldr	r2, [pc, #108]	@ (8010408 <pvPortMalloc+0x18c>)
 801039c:	6013      	str	r3, [r2, #0]
 801039e:	4b1a      	ldr	r3, [pc, #104]	@ (8010408 <pvPortMalloc+0x18c>)
 80103a0:	681a      	ldr	r2, [r3, #0]
 80103a2:	4b1b      	ldr	r3, [pc, #108]	@ (8010410 <pvPortMalloc+0x194>)
 80103a4:	681b      	ldr	r3, [r3, #0]
 80103a6:	429a      	cmp	r2, r3
 80103a8:	d203      	bcs.n	80103b2 <pvPortMalloc+0x136>
 80103aa:	4b17      	ldr	r3, [pc, #92]	@ (8010408 <pvPortMalloc+0x18c>)
 80103ac:	681b      	ldr	r3, [r3, #0]
 80103ae:	4a18      	ldr	r2, [pc, #96]	@ (8010410 <pvPortMalloc+0x194>)
 80103b0:	6013      	str	r3, [r2, #0]
 80103b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80103b4:	685a      	ldr	r2, [r3, #4]
 80103b6:	4b13      	ldr	r3, [pc, #76]	@ (8010404 <pvPortMalloc+0x188>)
 80103b8:	681b      	ldr	r3, [r3, #0]
 80103ba:	431a      	orrs	r2, r3
 80103bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80103be:	605a      	str	r2, [r3, #4]
 80103c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80103c2:	2200      	movs	r2, #0
 80103c4:	601a      	str	r2, [r3, #0]
 80103c6:	4b13      	ldr	r3, [pc, #76]	@ (8010414 <pvPortMalloc+0x198>)
 80103c8:	681b      	ldr	r3, [r3, #0]
 80103ca:	3301      	adds	r3, #1
 80103cc:	4a11      	ldr	r2, [pc, #68]	@ (8010414 <pvPortMalloc+0x198>)
 80103ce:	6013      	str	r3, [r2, #0]
 80103d0:	f7fd ffca 	bl	800e368 <xTaskResumeAll>
 80103d4:	69fb      	ldr	r3, [r7, #28]
 80103d6:	f003 0307 	and.w	r3, r3, #7
 80103da:	2b00      	cmp	r3, #0
 80103dc:	d00b      	beq.n	80103f6 <pvPortMalloc+0x17a>
 80103de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80103e2:	f383 8811 	msr	BASEPRI, r3
 80103e6:	f3bf 8f6f 	isb	sy
 80103ea:	f3bf 8f4f 	dsb	sy
 80103ee:	60fb      	str	r3, [r7, #12]
 80103f0:	bf00      	nop
 80103f2:	bf00      	nop
 80103f4:	e7fd      	b.n	80103f2 <pvPortMalloc+0x176>
 80103f6:	69fb      	ldr	r3, [r7, #28]
 80103f8:	4618      	mov	r0, r3
 80103fa:	3728      	adds	r7, #40	@ 0x28
 80103fc:	46bd      	mov	sp, r7
 80103fe:	bd80      	pop	{r7, pc}
 8010400:	20010fb0 	.word	0x20010fb0
 8010404:	20010fc4 	.word	0x20010fc4
 8010408:	20010fb4 	.word	0x20010fb4
 801040c:	20010fa8 	.word	0x20010fa8
 8010410:	20010fb8 	.word	0x20010fb8
 8010414:	20010fbc 	.word	0x20010fbc

08010418 <vPortFree>:
 8010418:	b580      	push	{r7, lr}
 801041a:	b086      	sub	sp, #24
 801041c:	af00      	add	r7, sp, #0
 801041e:	6078      	str	r0, [r7, #4]
 8010420:	687b      	ldr	r3, [r7, #4]
 8010422:	617b      	str	r3, [r7, #20]
 8010424:	687b      	ldr	r3, [r7, #4]
 8010426:	2b00      	cmp	r3, #0
 8010428:	d04f      	beq.n	80104ca <vPortFree+0xb2>
 801042a:	2308      	movs	r3, #8
 801042c:	425b      	negs	r3, r3
 801042e:	697a      	ldr	r2, [r7, #20]
 8010430:	4413      	add	r3, r2
 8010432:	617b      	str	r3, [r7, #20]
 8010434:	697b      	ldr	r3, [r7, #20]
 8010436:	613b      	str	r3, [r7, #16]
 8010438:	693b      	ldr	r3, [r7, #16]
 801043a:	685a      	ldr	r2, [r3, #4]
 801043c:	4b25      	ldr	r3, [pc, #148]	@ (80104d4 <vPortFree+0xbc>)
 801043e:	681b      	ldr	r3, [r3, #0]
 8010440:	4013      	ands	r3, r2
 8010442:	2b00      	cmp	r3, #0
 8010444:	d10b      	bne.n	801045e <vPortFree+0x46>
 8010446:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801044a:	f383 8811 	msr	BASEPRI, r3
 801044e:	f3bf 8f6f 	isb	sy
 8010452:	f3bf 8f4f 	dsb	sy
 8010456:	60fb      	str	r3, [r7, #12]
 8010458:	bf00      	nop
 801045a:	bf00      	nop
 801045c:	e7fd      	b.n	801045a <vPortFree+0x42>
 801045e:	693b      	ldr	r3, [r7, #16]
 8010460:	681b      	ldr	r3, [r3, #0]
 8010462:	2b00      	cmp	r3, #0
 8010464:	d00b      	beq.n	801047e <vPortFree+0x66>
 8010466:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801046a:	f383 8811 	msr	BASEPRI, r3
 801046e:	f3bf 8f6f 	isb	sy
 8010472:	f3bf 8f4f 	dsb	sy
 8010476:	60bb      	str	r3, [r7, #8]
 8010478:	bf00      	nop
 801047a:	bf00      	nop
 801047c:	e7fd      	b.n	801047a <vPortFree+0x62>
 801047e:	693b      	ldr	r3, [r7, #16]
 8010480:	685a      	ldr	r2, [r3, #4]
 8010482:	4b14      	ldr	r3, [pc, #80]	@ (80104d4 <vPortFree+0xbc>)
 8010484:	681b      	ldr	r3, [r3, #0]
 8010486:	4013      	ands	r3, r2
 8010488:	2b00      	cmp	r3, #0
 801048a:	d01e      	beq.n	80104ca <vPortFree+0xb2>
 801048c:	693b      	ldr	r3, [r7, #16]
 801048e:	681b      	ldr	r3, [r3, #0]
 8010490:	2b00      	cmp	r3, #0
 8010492:	d11a      	bne.n	80104ca <vPortFree+0xb2>
 8010494:	693b      	ldr	r3, [r7, #16]
 8010496:	685a      	ldr	r2, [r3, #4]
 8010498:	4b0e      	ldr	r3, [pc, #56]	@ (80104d4 <vPortFree+0xbc>)
 801049a:	681b      	ldr	r3, [r3, #0]
 801049c:	43db      	mvns	r3, r3
 801049e:	401a      	ands	r2, r3
 80104a0:	693b      	ldr	r3, [r7, #16]
 80104a2:	605a      	str	r2, [r3, #4]
 80104a4:	f7fd ff52 	bl	800e34c <vTaskSuspendAll>
 80104a8:	693b      	ldr	r3, [r7, #16]
 80104aa:	685a      	ldr	r2, [r3, #4]
 80104ac:	4b0a      	ldr	r3, [pc, #40]	@ (80104d8 <vPortFree+0xc0>)
 80104ae:	681b      	ldr	r3, [r3, #0]
 80104b0:	4413      	add	r3, r2
 80104b2:	4a09      	ldr	r2, [pc, #36]	@ (80104d8 <vPortFree+0xc0>)
 80104b4:	6013      	str	r3, [r2, #0]
 80104b6:	6938      	ldr	r0, [r7, #16]
 80104b8:	f000 f874 	bl	80105a4 <prvInsertBlockIntoFreeList>
 80104bc:	4b07      	ldr	r3, [pc, #28]	@ (80104dc <vPortFree+0xc4>)
 80104be:	681b      	ldr	r3, [r3, #0]
 80104c0:	3301      	adds	r3, #1
 80104c2:	4a06      	ldr	r2, [pc, #24]	@ (80104dc <vPortFree+0xc4>)
 80104c4:	6013      	str	r3, [r2, #0]
 80104c6:	f7fd ff4f 	bl	800e368 <xTaskResumeAll>
 80104ca:	bf00      	nop
 80104cc:	3718      	adds	r7, #24
 80104ce:	46bd      	mov	sp, r7
 80104d0:	bd80      	pop	{r7, pc}
 80104d2:	bf00      	nop
 80104d4:	20010fc4 	.word	0x20010fc4
 80104d8:	20010fb4 	.word	0x20010fb4
 80104dc:	20010fc0 	.word	0x20010fc0

080104e0 <prvHeapInit>:
 80104e0:	b480      	push	{r7}
 80104e2:	b085      	sub	sp, #20
 80104e4:	af00      	add	r7, sp, #0
 80104e6:	f44f 437a 	mov.w	r3, #64000	@ 0xfa00
 80104ea:	60bb      	str	r3, [r7, #8]
 80104ec:	4b27      	ldr	r3, [pc, #156]	@ (801058c <prvHeapInit+0xac>)
 80104ee:	60fb      	str	r3, [r7, #12]
 80104f0:	68fb      	ldr	r3, [r7, #12]
 80104f2:	f003 0307 	and.w	r3, r3, #7
 80104f6:	2b00      	cmp	r3, #0
 80104f8:	d00c      	beq.n	8010514 <prvHeapInit+0x34>
 80104fa:	68fb      	ldr	r3, [r7, #12]
 80104fc:	3307      	adds	r3, #7
 80104fe:	60fb      	str	r3, [r7, #12]
 8010500:	68fb      	ldr	r3, [r7, #12]
 8010502:	f023 0307 	bic.w	r3, r3, #7
 8010506:	60fb      	str	r3, [r7, #12]
 8010508:	68ba      	ldr	r2, [r7, #8]
 801050a:	68fb      	ldr	r3, [r7, #12]
 801050c:	1ad3      	subs	r3, r2, r3
 801050e:	4a1f      	ldr	r2, [pc, #124]	@ (801058c <prvHeapInit+0xac>)
 8010510:	4413      	add	r3, r2
 8010512:	60bb      	str	r3, [r7, #8]
 8010514:	68fb      	ldr	r3, [r7, #12]
 8010516:	607b      	str	r3, [r7, #4]
 8010518:	4a1d      	ldr	r2, [pc, #116]	@ (8010590 <prvHeapInit+0xb0>)
 801051a:	687b      	ldr	r3, [r7, #4]
 801051c:	6013      	str	r3, [r2, #0]
 801051e:	4b1c      	ldr	r3, [pc, #112]	@ (8010590 <prvHeapInit+0xb0>)
 8010520:	2200      	movs	r2, #0
 8010522:	605a      	str	r2, [r3, #4]
 8010524:	687b      	ldr	r3, [r7, #4]
 8010526:	68ba      	ldr	r2, [r7, #8]
 8010528:	4413      	add	r3, r2
 801052a:	60fb      	str	r3, [r7, #12]
 801052c:	2208      	movs	r2, #8
 801052e:	68fb      	ldr	r3, [r7, #12]
 8010530:	1a9b      	subs	r3, r3, r2
 8010532:	60fb      	str	r3, [r7, #12]
 8010534:	68fb      	ldr	r3, [r7, #12]
 8010536:	f023 0307 	bic.w	r3, r3, #7
 801053a:	60fb      	str	r3, [r7, #12]
 801053c:	68fb      	ldr	r3, [r7, #12]
 801053e:	4a15      	ldr	r2, [pc, #84]	@ (8010594 <prvHeapInit+0xb4>)
 8010540:	6013      	str	r3, [r2, #0]
 8010542:	4b14      	ldr	r3, [pc, #80]	@ (8010594 <prvHeapInit+0xb4>)
 8010544:	681b      	ldr	r3, [r3, #0]
 8010546:	2200      	movs	r2, #0
 8010548:	605a      	str	r2, [r3, #4]
 801054a:	4b12      	ldr	r3, [pc, #72]	@ (8010594 <prvHeapInit+0xb4>)
 801054c:	681b      	ldr	r3, [r3, #0]
 801054e:	2200      	movs	r2, #0
 8010550:	601a      	str	r2, [r3, #0]
 8010552:	687b      	ldr	r3, [r7, #4]
 8010554:	603b      	str	r3, [r7, #0]
 8010556:	683b      	ldr	r3, [r7, #0]
 8010558:	68fa      	ldr	r2, [r7, #12]
 801055a:	1ad2      	subs	r2, r2, r3
 801055c:	683b      	ldr	r3, [r7, #0]
 801055e:	605a      	str	r2, [r3, #4]
 8010560:	4b0c      	ldr	r3, [pc, #48]	@ (8010594 <prvHeapInit+0xb4>)
 8010562:	681a      	ldr	r2, [r3, #0]
 8010564:	683b      	ldr	r3, [r7, #0]
 8010566:	601a      	str	r2, [r3, #0]
 8010568:	683b      	ldr	r3, [r7, #0]
 801056a:	685b      	ldr	r3, [r3, #4]
 801056c:	4a0a      	ldr	r2, [pc, #40]	@ (8010598 <prvHeapInit+0xb8>)
 801056e:	6013      	str	r3, [r2, #0]
 8010570:	683b      	ldr	r3, [r7, #0]
 8010572:	685b      	ldr	r3, [r3, #4]
 8010574:	4a09      	ldr	r2, [pc, #36]	@ (801059c <prvHeapInit+0xbc>)
 8010576:	6013      	str	r3, [r2, #0]
 8010578:	4b09      	ldr	r3, [pc, #36]	@ (80105a0 <prvHeapInit+0xc0>)
 801057a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 801057e:	601a      	str	r2, [r3, #0]
 8010580:	bf00      	nop
 8010582:	3714      	adds	r7, #20
 8010584:	46bd      	mov	sp, r7
 8010586:	f85d 7b04 	ldr.w	r7, [sp], #4
 801058a:	4770      	bx	lr
 801058c:	200015a8 	.word	0x200015a8
 8010590:	20010fa8 	.word	0x20010fa8
 8010594:	20010fb0 	.word	0x20010fb0
 8010598:	20010fb8 	.word	0x20010fb8
 801059c:	20010fb4 	.word	0x20010fb4
 80105a0:	20010fc4 	.word	0x20010fc4

080105a4 <prvInsertBlockIntoFreeList>:
 80105a4:	b480      	push	{r7}
 80105a6:	b085      	sub	sp, #20
 80105a8:	af00      	add	r7, sp, #0
 80105aa:	6078      	str	r0, [r7, #4]
 80105ac:	4b28      	ldr	r3, [pc, #160]	@ (8010650 <prvInsertBlockIntoFreeList+0xac>)
 80105ae:	60fb      	str	r3, [r7, #12]
 80105b0:	e002      	b.n	80105b8 <prvInsertBlockIntoFreeList+0x14>
 80105b2:	68fb      	ldr	r3, [r7, #12]
 80105b4:	681b      	ldr	r3, [r3, #0]
 80105b6:	60fb      	str	r3, [r7, #12]
 80105b8:	68fb      	ldr	r3, [r7, #12]
 80105ba:	681b      	ldr	r3, [r3, #0]
 80105bc:	687a      	ldr	r2, [r7, #4]
 80105be:	429a      	cmp	r2, r3
 80105c0:	d8f7      	bhi.n	80105b2 <prvInsertBlockIntoFreeList+0xe>
 80105c2:	68fb      	ldr	r3, [r7, #12]
 80105c4:	60bb      	str	r3, [r7, #8]
 80105c6:	68fb      	ldr	r3, [r7, #12]
 80105c8:	685b      	ldr	r3, [r3, #4]
 80105ca:	68ba      	ldr	r2, [r7, #8]
 80105cc:	4413      	add	r3, r2
 80105ce:	687a      	ldr	r2, [r7, #4]
 80105d0:	429a      	cmp	r2, r3
 80105d2:	d108      	bne.n	80105e6 <prvInsertBlockIntoFreeList+0x42>
 80105d4:	68fb      	ldr	r3, [r7, #12]
 80105d6:	685a      	ldr	r2, [r3, #4]
 80105d8:	687b      	ldr	r3, [r7, #4]
 80105da:	685b      	ldr	r3, [r3, #4]
 80105dc:	441a      	add	r2, r3
 80105de:	68fb      	ldr	r3, [r7, #12]
 80105e0:	605a      	str	r2, [r3, #4]
 80105e2:	68fb      	ldr	r3, [r7, #12]
 80105e4:	607b      	str	r3, [r7, #4]
 80105e6:	687b      	ldr	r3, [r7, #4]
 80105e8:	60bb      	str	r3, [r7, #8]
 80105ea:	687b      	ldr	r3, [r7, #4]
 80105ec:	685b      	ldr	r3, [r3, #4]
 80105ee:	68ba      	ldr	r2, [r7, #8]
 80105f0:	441a      	add	r2, r3
 80105f2:	68fb      	ldr	r3, [r7, #12]
 80105f4:	681b      	ldr	r3, [r3, #0]
 80105f6:	429a      	cmp	r2, r3
 80105f8:	d118      	bne.n	801062c <prvInsertBlockIntoFreeList+0x88>
 80105fa:	68fb      	ldr	r3, [r7, #12]
 80105fc:	681a      	ldr	r2, [r3, #0]
 80105fe:	4b15      	ldr	r3, [pc, #84]	@ (8010654 <prvInsertBlockIntoFreeList+0xb0>)
 8010600:	681b      	ldr	r3, [r3, #0]
 8010602:	429a      	cmp	r2, r3
 8010604:	d00d      	beq.n	8010622 <prvInsertBlockIntoFreeList+0x7e>
 8010606:	687b      	ldr	r3, [r7, #4]
 8010608:	685a      	ldr	r2, [r3, #4]
 801060a:	68fb      	ldr	r3, [r7, #12]
 801060c:	681b      	ldr	r3, [r3, #0]
 801060e:	685b      	ldr	r3, [r3, #4]
 8010610:	441a      	add	r2, r3
 8010612:	687b      	ldr	r3, [r7, #4]
 8010614:	605a      	str	r2, [r3, #4]
 8010616:	68fb      	ldr	r3, [r7, #12]
 8010618:	681b      	ldr	r3, [r3, #0]
 801061a:	681a      	ldr	r2, [r3, #0]
 801061c:	687b      	ldr	r3, [r7, #4]
 801061e:	601a      	str	r2, [r3, #0]
 8010620:	e008      	b.n	8010634 <prvInsertBlockIntoFreeList+0x90>
 8010622:	4b0c      	ldr	r3, [pc, #48]	@ (8010654 <prvInsertBlockIntoFreeList+0xb0>)
 8010624:	681a      	ldr	r2, [r3, #0]
 8010626:	687b      	ldr	r3, [r7, #4]
 8010628:	601a      	str	r2, [r3, #0]
 801062a:	e003      	b.n	8010634 <prvInsertBlockIntoFreeList+0x90>
 801062c:	68fb      	ldr	r3, [r7, #12]
 801062e:	681a      	ldr	r2, [r3, #0]
 8010630:	687b      	ldr	r3, [r7, #4]
 8010632:	601a      	str	r2, [r3, #0]
 8010634:	68fa      	ldr	r2, [r7, #12]
 8010636:	687b      	ldr	r3, [r7, #4]
 8010638:	429a      	cmp	r2, r3
 801063a:	d002      	beq.n	8010642 <prvInsertBlockIntoFreeList+0x9e>
 801063c:	68fb      	ldr	r3, [r7, #12]
 801063e:	687a      	ldr	r2, [r7, #4]
 8010640:	601a      	str	r2, [r3, #0]
 8010642:	bf00      	nop
 8010644:	3714      	adds	r7, #20
 8010646:	46bd      	mov	sp, r7
 8010648:	f85d 7b04 	ldr.w	r7, [sp], #4
 801064c:	4770      	bx	lr
 801064e:	bf00      	nop
 8010650:	20010fa8 	.word	0x20010fa8
 8010654:	20010fb0 	.word	0x20010fb0

08010658 <MX_USB_HOST_Init>:
 8010658:	b580      	push	{r7, lr}
 801065a:	af00      	add	r7, sp, #0
 801065c:	2201      	movs	r2, #1
 801065e:	490e      	ldr	r1, [pc, #56]	@ (8010698 <MX_USB_HOST_Init+0x40>)
 8010660:	480e      	ldr	r0, [pc, #56]	@ (801069c <MX_USB_HOST_Init+0x44>)
 8010662:	f7f9 febb 	bl	800a3dc <USBH_Init>
 8010666:	4603      	mov	r3, r0
 8010668:	2b00      	cmp	r3, #0
 801066a:	d001      	beq.n	8010670 <MX_USB_HOST_Init+0x18>
 801066c:	f7f2 ffd8 	bl	8003620 <Error_Handler>
 8010670:	490b      	ldr	r1, [pc, #44]	@ (80106a0 <MX_USB_HOST_Init+0x48>)
 8010672:	480a      	ldr	r0, [pc, #40]	@ (801069c <MX_USB_HOST_Init+0x44>)
 8010674:	f7f9 ff62 	bl	800a53c <USBH_RegisterClass>
 8010678:	4603      	mov	r3, r0
 801067a:	2b00      	cmp	r3, #0
 801067c:	d001      	beq.n	8010682 <MX_USB_HOST_Init+0x2a>
 801067e:	f7f2 ffcf 	bl	8003620 <Error_Handler>
 8010682:	4806      	ldr	r0, [pc, #24]	@ (801069c <MX_USB_HOST_Init+0x44>)
 8010684:	f7f9 ffe6 	bl	800a654 <USBH_Start>
 8010688:	4603      	mov	r3, r0
 801068a:	2b00      	cmp	r3, #0
 801068c:	d001      	beq.n	8010692 <MX_USB_HOST_Init+0x3a>
 801068e:	f7f2 ffc7 	bl	8003620 <Error_Handler>
 8010692:	bf00      	nop
 8010694:	bd80      	pop	{r7, pc}
 8010696:	bf00      	nop
 8010698:	080106a5 	.word	0x080106a5
 801069c:	20010fc8 	.word	0x20010fc8
 80106a0:	20000268 	.word	0x20000268

080106a4 <USBH_UserProcess>:
 80106a4:	b480      	push	{r7}
 80106a6:	b083      	sub	sp, #12
 80106a8:	af00      	add	r7, sp, #0
 80106aa:	6078      	str	r0, [r7, #4]
 80106ac:	460b      	mov	r3, r1
 80106ae:	70fb      	strb	r3, [r7, #3]
 80106b0:	78fb      	ldrb	r3, [r7, #3]
 80106b2:	3b01      	subs	r3, #1
 80106b4:	2b04      	cmp	r3, #4
 80106b6:	d819      	bhi.n	80106ec <USBH_UserProcess+0x48>
 80106b8:	a201      	add	r2, pc, #4	@ (adr r2, 80106c0 <USBH_UserProcess+0x1c>)
 80106ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80106be:	bf00      	nop
 80106c0:	080106ed 	.word	0x080106ed
 80106c4:	080106dd 	.word	0x080106dd
 80106c8:	080106ed 	.word	0x080106ed
 80106cc:	080106e5 	.word	0x080106e5
 80106d0:	080106d5 	.word	0x080106d5
 80106d4:	4b09      	ldr	r3, [pc, #36]	@ (80106fc <USBH_UserProcess+0x58>)
 80106d6:	2203      	movs	r2, #3
 80106d8:	701a      	strb	r2, [r3, #0]
 80106da:	e008      	b.n	80106ee <USBH_UserProcess+0x4a>
 80106dc:	4b07      	ldr	r3, [pc, #28]	@ (80106fc <USBH_UserProcess+0x58>)
 80106de:	2202      	movs	r2, #2
 80106e0:	701a      	strb	r2, [r3, #0]
 80106e2:	e004      	b.n	80106ee <USBH_UserProcess+0x4a>
 80106e4:	4b05      	ldr	r3, [pc, #20]	@ (80106fc <USBH_UserProcess+0x58>)
 80106e6:	2201      	movs	r2, #1
 80106e8:	701a      	strb	r2, [r3, #0]
 80106ea:	e000      	b.n	80106ee <USBH_UserProcess+0x4a>
 80106ec:	bf00      	nop
 80106ee:	bf00      	nop
 80106f0:	370c      	adds	r7, #12
 80106f2:	46bd      	mov	sp, r7
 80106f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106f8:	4770      	bx	lr
 80106fa:	bf00      	nop
 80106fc:	200113ac 	.word	0x200113ac

08010700 <HAL_HCD_MspInit>:
 8010700:	b580      	push	{r7, lr}
 8010702:	b08a      	sub	sp, #40	@ 0x28
 8010704:	af00      	add	r7, sp, #0
 8010706:	6078      	str	r0, [r7, #4]
 8010708:	f107 0314 	add.w	r3, r7, #20
 801070c:	2200      	movs	r2, #0
 801070e:	601a      	str	r2, [r3, #0]
 8010710:	605a      	str	r2, [r3, #4]
 8010712:	609a      	str	r2, [r3, #8]
 8010714:	60da      	str	r2, [r3, #12]
 8010716:	611a      	str	r2, [r3, #16]
 8010718:	687b      	ldr	r3, [r7, #4]
 801071a:	681b      	ldr	r3, [r3, #0]
 801071c:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8010720:	d147      	bne.n	80107b2 <HAL_HCD_MspInit+0xb2>
 8010722:	2300      	movs	r3, #0
 8010724:	613b      	str	r3, [r7, #16]
 8010726:	4b25      	ldr	r3, [pc, #148]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 8010728:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801072a:	4a24      	ldr	r2, [pc, #144]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 801072c:	f043 0301 	orr.w	r3, r3, #1
 8010730:	6313      	str	r3, [r2, #48]	@ 0x30
 8010732:	4b22      	ldr	r3, [pc, #136]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 8010734:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010736:	f003 0301 	and.w	r3, r3, #1
 801073a:	613b      	str	r3, [r7, #16]
 801073c:	693b      	ldr	r3, [r7, #16]
 801073e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8010742:	617b      	str	r3, [r7, #20]
 8010744:	2300      	movs	r3, #0
 8010746:	61bb      	str	r3, [r7, #24]
 8010748:	2300      	movs	r3, #0
 801074a:	61fb      	str	r3, [r7, #28]
 801074c:	f107 0314 	add.w	r3, r7, #20
 8010750:	4619      	mov	r1, r3
 8010752:	481b      	ldr	r0, [pc, #108]	@ (80107c0 <HAL_HCD_MspInit+0xc0>)
 8010754:	f7f3 fce4 	bl	8004120 <HAL_GPIO_Init>
 8010758:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 801075c:	617b      	str	r3, [r7, #20]
 801075e:	2302      	movs	r3, #2
 8010760:	61bb      	str	r3, [r7, #24]
 8010762:	2300      	movs	r3, #0
 8010764:	61fb      	str	r3, [r7, #28]
 8010766:	2300      	movs	r3, #0
 8010768:	623b      	str	r3, [r7, #32]
 801076a:	230a      	movs	r3, #10
 801076c:	627b      	str	r3, [r7, #36]	@ 0x24
 801076e:	f107 0314 	add.w	r3, r7, #20
 8010772:	4619      	mov	r1, r3
 8010774:	4812      	ldr	r0, [pc, #72]	@ (80107c0 <HAL_HCD_MspInit+0xc0>)
 8010776:	f7f3 fcd3 	bl	8004120 <HAL_GPIO_Init>
 801077a:	4b10      	ldr	r3, [pc, #64]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 801077c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801077e:	4a0f      	ldr	r2, [pc, #60]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 8010780:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8010784:	6353      	str	r3, [r2, #52]	@ 0x34
 8010786:	2300      	movs	r3, #0
 8010788:	60fb      	str	r3, [r7, #12]
 801078a:	4b0c      	ldr	r3, [pc, #48]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 801078c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801078e:	4a0b      	ldr	r2, [pc, #44]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 8010790:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8010794:	6453      	str	r3, [r2, #68]	@ 0x44
 8010796:	4b09      	ldr	r3, [pc, #36]	@ (80107bc <HAL_HCD_MspInit+0xbc>)
 8010798:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801079a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 801079e:	60fb      	str	r3, [r7, #12]
 80107a0:	68fb      	ldr	r3, [r7, #12]
 80107a2:	2200      	movs	r2, #0
 80107a4:	2105      	movs	r1, #5
 80107a6:	2043      	movs	r0, #67	@ 0x43
 80107a8:	f7f3 fbfe 	bl	8003fa8 <HAL_NVIC_SetPriority>
 80107ac:	2043      	movs	r0, #67	@ 0x43
 80107ae:	f7f3 fc17 	bl	8003fe0 <HAL_NVIC_EnableIRQ>
 80107b2:	bf00      	nop
 80107b4:	3728      	adds	r7, #40	@ 0x28
 80107b6:	46bd      	mov	sp, r7
 80107b8:	bd80      	pop	{r7, pc}
 80107ba:	bf00      	nop
 80107bc:	40023800 	.word	0x40023800
 80107c0:	40020000 	.word	0x40020000

080107c4 <HAL_HCD_SOF_Callback>:
 80107c4:	b580      	push	{r7, lr}
 80107c6:	b082      	sub	sp, #8
 80107c8:	af00      	add	r7, sp, #0
 80107ca:	6078      	str	r0, [r7, #4]
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 80107d2:	4618      	mov	r0, r3
 80107d4:	f7fa fbef 	bl	800afb6 <USBH_LL_IncTimer>
 80107d8:	bf00      	nop
 80107da:	3708      	adds	r7, #8
 80107dc:	46bd      	mov	sp, r7
 80107de:	bd80      	pop	{r7, pc}

080107e0 <HAL_HCD_Connect_Callback>:
 80107e0:	b580      	push	{r7, lr}
 80107e2:	b082      	sub	sp, #8
 80107e4:	af00      	add	r7, sp, #0
 80107e6:	6078      	str	r0, [r7, #4]
 80107e8:	687b      	ldr	r3, [r7, #4]
 80107ea:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 80107ee:	4618      	mov	r0, r3
 80107f0:	f7fa fc33 	bl	800b05a <USBH_LL_Connect>
 80107f4:	bf00      	nop
 80107f6:	3708      	adds	r7, #8
 80107f8:	46bd      	mov	sp, r7
 80107fa:	bd80      	pop	{r7, pc}

080107fc <HAL_HCD_Disconnect_Callback>:
 80107fc:	b580      	push	{r7, lr}
 80107fe:	b082      	sub	sp, #8
 8010800:	af00      	add	r7, sp, #0
 8010802:	6078      	str	r0, [r7, #4]
 8010804:	687b      	ldr	r3, [r7, #4]
 8010806:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 801080a:	4618      	mov	r0, r3
 801080c:	f7fa fc48 	bl	800b0a0 <USBH_LL_Disconnect>
 8010810:	bf00      	nop
 8010812:	3708      	adds	r7, #8
 8010814:	46bd      	mov	sp, r7
 8010816:	bd80      	pop	{r7, pc}

08010818 <HAL_HCD_HC_NotifyURBChange_Callback>:
 8010818:	b580      	push	{r7, lr}
 801081a:	b082      	sub	sp, #8
 801081c:	af00      	add	r7, sp, #0
 801081e:	6078      	str	r0, [r7, #4]
 8010820:	460b      	mov	r3, r1
 8010822:	70fb      	strb	r3, [r7, #3]
 8010824:	4613      	mov	r3, r2
 8010826:	70bb      	strb	r3, [r7, #2]
 8010828:	687b      	ldr	r3, [r7, #4]
 801082a:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 801082e:	4618      	mov	r0, r3
 8010830:	f7fa fc7f 	bl	800b132 <USBH_LL_NotifyURBChange>
 8010834:	bf00      	nop
 8010836:	3708      	adds	r7, #8
 8010838:	46bd      	mov	sp, r7
 801083a:	bd80      	pop	{r7, pc}

0801083c <HAL_HCD_PortEnabled_Callback>:
 801083c:	b580      	push	{r7, lr}
 801083e:	b082      	sub	sp, #8
 8010840:	af00      	add	r7, sp, #0
 8010842:	6078      	str	r0, [r7, #4]
 8010844:	687b      	ldr	r3, [r7, #4]
 8010846:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 801084a:	4618      	mov	r0, r3
 801084c:	f7fa fbdd 	bl	800b00a <USBH_LL_PortEnabled>
 8010850:	bf00      	nop
 8010852:	3708      	adds	r7, #8
 8010854:	46bd      	mov	sp, r7
 8010856:	bd80      	pop	{r7, pc}

08010858 <HAL_HCD_PortDisabled_Callback>:
 8010858:	b580      	push	{r7, lr}
 801085a:	b082      	sub	sp, #8
 801085c:	af00      	add	r7, sp, #0
 801085e:	6078      	str	r0, [r7, #4]
 8010860:	687b      	ldr	r3, [r7, #4]
 8010862:	f8d3 3300 	ldr.w	r3, [r3, #768]	@ 0x300
 8010866:	4618      	mov	r0, r3
 8010868:	f7fa fbe9 	bl	800b03e <USBH_LL_PortDisabled>
 801086c:	bf00      	nop
 801086e:	3708      	adds	r7, #8
 8010870:	46bd      	mov	sp, r7
 8010872:	bd80      	pop	{r7, pc}

08010874 <USBH_LL_Init>:
 8010874:	b580      	push	{r7, lr}
 8010876:	b082      	sub	sp, #8
 8010878:	af00      	add	r7, sp, #0
 801087a:	6078      	str	r0, [r7, #4]
 801087c:	687b      	ldr	r3, [r7, #4]
 801087e:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 8010882:	2b01      	cmp	r3, #1
 8010884:	d12a      	bne.n	80108dc <USBH_LL_Init+0x68>
 8010886:	4a18      	ldr	r2, [pc, #96]	@ (80108e8 <USBH_LL_Init+0x74>)
 8010888:	687b      	ldr	r3, [r7, #4]
 801088a:	f8c2 3300 	str.w	r3, [r2, #768]	@ 0x300
 801088e:	687b      	ldr	r3, [r7, #4]
 8010890:	4a15      	ldr	r2, [pc, #84]	@ (80108e8 <USBH_LL_Init+0x74>)
 8010892:	f8c3 23d0 	str.w	r2, [r3, #976]	@ 0x3d0
 8010896:	4b14      	ldr	r3, [pc, #80]	@ (80108e8 <USBH_LL_Init+0x74>)
 8010898:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 801089c:	601a      	str	r2, [r3, #0]
 801089e:	4b12      	ldr	r3, [pc, #72]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108a0:	2208      	movs	r2, #8
 80108a2:	609a      	str	r2, [r3, #8]
 80108a4:	4b10      	ldr	r3, [pc, #64]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108a6:	2201      	movs	r2, #1
 80108a8:	60da      	str	r2, [r3, #12]
 80108aa:	4b0f      	ldr	r3, [pc, #60]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108ac:	2200      	movs	r2, #0
 80108ae:	611a      	str	r2, [r3, #16]
 80108b0:	4b0d      	ldr	r3, [pc, #52]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108b2:	2202      	movs	r2, #2
 80108b4:	619a      	str	r2, [r3, #24]
 80108b6:	4b0c      	ldr	r3, [pc, #48]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108b8:	2200      	movs	r2, #0
 80108ba:	61da      	str	r2, [r3, #28]
 80108bc:	480a      	ldr	r0, [pc, #40]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108be:	f7f3 fe3a 	bl	8004536 <HAL_HCD_Init>
 80108c2:	4603      	mov	r3, r0
 80108c4:	2b00      	cmp	r3, #0
 80108c6:	d001      	beq.n	80108cc <USBH_LL_Init+0x58>
 80108c8:	f7f2 feaa 	bl	8003620 <Error_Handler>
 80108cc:	4806      	ldr	r0, [pc, #24]	@ (80108e8 <USBH_LL_Init+0x74>)
 80108ce:	f7f4 fa1e 	bl	8004d0e <HAL_HCD_GetCurrentFrame>
 80108d2:	4603      	mov	r3, r0
 80108d4:	4619      	mov	r1, r3
 80108d6:	6878      	ldr	r0, [r7, #4]
 80108d8:	f7fa fb5e 	bl	800af98 <USBH_LL_SetTimer>
 80108dc:	2300      	movs	r3, #0
 80108de:	4618      	mov	r0, r3
 80108e0:	3708      	adds	r7, #8
 80108e2:	46bd      	mov	sp, r7
 80108e4:	bd80      	pop	{r7, pc}
 80108e6:	bf00      	nop
 80108e8:	200113b0 	.word	0x200113b0

080108ec <USBH_LL_Start>:
 80108ec:	b580      	push	{r7, lr}
 80108ee:	b084      	sub	sp, #16
 80108f0:	af00      	add	r7, sp, #0
 80108f2:	6078      	str	r0, [r7, #4]
 80108f4:	2300      	movs	r3, #0
 80108f6:	73fb      	strb	r3, [r7, #15]
 80108f8:	2300      	movs	r3, #0
 80108fa:	73bb      	strb	r3, [r7, #14]
 80108fc:	687b      	ldr	r3, [r7, #4]
 80108fe:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 8010902:	4618      	mov	r0, r3
 8010904:	f7f4 f98d 	bl	8004c22 <HAL_HCD_Start>
 8010908:	4603      	mov	r3, r0
 801090a:	73fb      	strb	r3, [r7, #15]
 801090c:	7bfb      	ldrb	r3, [r7, #15]
 801090e:	4618      	mov	r0, r3
 8010910:	f000 f95c 	bl	8010bcc <USBH_Get_USB_Status>
 8010914:	4603      	mov	r3, r0
 8010916:	73bb      	strb	r3, [r7, #14]
 8010918:	7bbb      	ldrb	r3, [r7, #14]
 801091a:	4618      	mov	r0, r3
 801091c:	3710      	adds	r7, #16
 801091e:	46bd      	mov	sp, r7
 8010920:	bd80      	pop	{r7, pc}

08010922 <USBH_LL_Stop>:
 8010922:	b580      	push	{r7, lr}
 8010924:	b084      	sub	sp, #16
 8010926:	af00      	add	r7, sp, #0
 8010928:	6078      	str	r0, [r7, #4]
 801092a:	2300      	movs	r3, #0
 801092c:	73fb      	strb	r3, [r7, #15]
 801092e:	2300      	movs	r3, #0
 8010930:	73bb      	strb	r3, [r7, #14]
 8010932:	687b      	ldr	r3, [r7, #4]
 8010934:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 8010938:	4618      	mov	r0, r3
 801093a:	f7f4 f995 	bl	8004c68 <HAL_HCD_Stop>
 801093e:	4603      	mov	r3, r0
 8010940:	73fb      	strb	r3, [r7, #15]
 8010942:	7bfb      	ldrb	r3, [r7, #15]
 8010944:	4618      	mov	r0, r3
 8010946:	f000 f941 	bl	8010bcc <USBH_Get_USB_Status>
 801094a:	4603      	mov	r3, r0
 801094c:	73bb      	strb	r3, [r7, #14]
 801094e:	7bbb      	ldrb	r3, [r7, #14]
 8010950:	4618      	mov	r0, r3
 8010952:	3710      	adds	r7, #16
 8010954:	46bd      	mov	sp, r7
 8010956:	bd80      	pop	{r7, pc}

08010958 <USBH_LL_GetSpeed>:
 8010958:	b580      	push	{r7, lr}
 801095a:	b084      	sub	sp, #16
 801095c:	af00      	add	r7, sp, #0
 801095e:	6078      	str	r0, [r7, #4]
 8010960:	2301      	movs	r3, #1
 8010962:	73fb      	strb	r3, [r7, #15]
 8010964:	687b      	ldr	r3, [r7, #4]
 8010966:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 801096a:	4618      	mov	r0, r3
 801096c:	f7f4 f9dd 	bl	8004d2a <HAL_HCD_GetCurrentSpeed>
 8010970:	4603      	mov	r3, r0
 8010972:	2b02      	cmp	r3, #2
 8010974:	d00c      	beq.n	8010990 <USBH_LL_GetSpeed+0x38>
 8010976:	2b02      	cmp	r3, #2
 8010978:	d80d      	bhi.n	8010996 <USBH_LL_GetSpeed+0x3e>
 801097a:	2b00      	cmp	r3, #0
 801097c:	d002      	beq.n	8010984 <USBH_LL_GetSpeed+0x2c>
 801097e:	2b01      	cmp	r3, #1
 8010980:	d003      	beq.n	801098a <USBH_LL_GetSpeed+0x32>
 8010982:	e008      	b.n	8010996 <USBH_LL_GetSpeed+0x3e>
 8010984:	2300      	movs	r3, #0
 8010986:	73fb      	strb	r3, [r7, #15]
 8010988:	e008      	b.n	801099c <USBH_LL_GetSpeed+0x44>
 801098a:	2301      	movs	r3, #1
 801098c:	73fb      	strb	r3, [r7, #15]
 801098e:	e005      	b.n	801099c <USBH_LL_GetSpeed+0x44>
 8010990:	2302      	movs	r3, #2
 8010992:	73fb      	strb	r3, [r7, #15]
 8010994:	e002      	b.n	801099c <USBH_LL_GetSpeed+0x44>
 8010996:	2301      	movs	r3, #1
 8010998:	73fb      	strb	r3, [r7, #15]
 801099a:	bf00      	nop
 801099c:	7bfb      	ldrb	r3, [r7, #15]
 801099e:	4618      	mov	r0, r3
 80109a0:	3710      	adds	r7, #16
 80109a2:	46bd      	mov	sp, r7
 80109a4:	bd80      	pop	{r7, pc}

080109a6 <USBH_LL_ResetPort>:
 80109a6:	b580      	push	{r7, lr}
 80109a8:	b084      	sub	sp, #16
 80109aa:	af00      	add	r7, sp, #0
 80109ac:	6078      	str	r0, [r7, #4]
 80109ae:	2300      	movs	r3, #0
 80109b0:	73fb      	strb	r3, [r7, #15]
 80109b2:	2300      	movs	r3, #0
 80109b4:	73bb      	strb	r3, [r7, #14]
 80109b6:	687b      	ldr	r3, [r7, #4]
 80109b8:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 80109bc:	4618      	mov	r0, r3
 80109be:	f7f4 f970 	bl	8004ca2 <HAL_HCD_ResetPort>
 80109c2:	4603      	mov	r3, r0
 80109c4:	73fb      	strb	r3, [r7, #15]
 80109c6:	7bfb      	ldrb	r3, [r7, #15]
 80109c8:	4618      	mov	r0, r3
 80109ca:	f000 f8ff 	bl	8010bcc <USBH_Get_USB_Status>
 80109ce:	4603      	mov	r3, r0
 80109d0:	73bb      	strb	r3, [r7, #14]
 80109d2:	7bbb      	ldrb	r3, [r7, #14]
 80109d4:	4618      	mov	r0, r3
 80109d6:	3710      	adds	r7, #16
 80109d8:	46bd      	mov	sp, r7
 80109da:	bd80      	pop	{r7, pc}

080109dc <USBH_LL_GetLastXferSize>:
 80109dc:	b580      	push	{r7, lr}
 80109de:	b082      	sub	sp, #8
 80109e0:	af00      	add	r7, sp, #0
 80109e2:	6078      	str	r0, [r7, #4]
 80109e4:	460b      	mov	r3, r1
 80109e6:	70fb      	strb	r3, [r7, #3]
 80109e8:	687b      	ldr	r3, [r7, #4]
 80109ea:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 80109ee:	78fa      	ldrb	r2, [r7, #3]
 80109f0:	4611      	mov	r1, r2
 80109f2:	4618      	mov	r0, r3
 80109f4:	f7f4 f977 	bl	8004ce6 <HAL_HCD_HC_GetXferCount>
 80109f8:	4603      	mov	r3, r0
 80109fa:	4618      	mov	r0, r3
 80109fc:	3708      	adds	r7, #8
 80109fe:	46bd      	mov	sp, r7
 8010a00:	bd80      	pop	{r7, pc}

08010a02 <USBH_LL_OpenPipe>:
 8010a02:	b590      	push	{r4, r7, lr}
 8010a04:	b089      	sub	sp, #36	@ 0x24
 8010a06:	af04      	add	r7, sp, #16
 8010a08:	6078      	str	r0, [r7, #4]
 8010a0a:	4608      	mov	r0, r1
 8010a0c:	4611      	mov	r1, r2
 8010a0e:	461a      	mov	r2, r3
 8010a10:	4603      	mov	r3, r0
 8010a12:	70fb      	strb	r3, [r7, #3]
 8010a14:	460b      	mov	r3, r1
 8010a16:	70bb      	strb	r3, [r7, #2]
 8010a18:	4613      	mov	r3, r2
 8010a1a:	707b      	strb	r3, [r7, #1]
 8010a1c:	2300      	movs	r3, #0
 8010a1e:	73fb      	strb	r3, [r7, #15]
 8010a20:	2300      	movs	r3, #0
 8010a22:	73bb      	strb	r3, [r7, #14]
 8010a24:	687b      	ldr	r3, [r7, #4]
 8010a26:	f8d3 03d0 	ldr.w	r0, [r3, #976]	@ 0x3d0
 8010a2a:	787c      	ldrb	r4, [r7, #1]
 8010a2c:	78ba      	ldrb	r2, [r7, #2]
 8010a2e:	78f9      	ldrb	r1, [r7, #3]
 8010a30:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8010a32:	9302      	str	r3, [sp, #8]
 8010a34:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8010a38:	9301      	str	r3, [sp, #4]
 8010a3a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8010a3e:	9300      	str	r3, [sp, #0]
 8010a40:	4623      	mov	r3, r4
 8010a42:	f7f3 fdda 	bl	80045fa <HAL_HCD_HC_Init>
 8010a46:	4603      	mov	r3, r0
 8010a48:	73fb      	strb	r3, [r7, #15]
 8010a4a:	7bfb      	ldrb	r3, [r7, #15]
 8010a4c:	4618      	mov	r0, r3
 8010a4e:	f000 f8bd 	bl	8010bcc <USBH_Get_USB_Status>
 8010a52:	4603      	mov	r3, r0
 8010a54:	73bb      	strb	r3, [r7, #14]
 8010a56:	7bbb      	ldrb	r3, [r7, #14]
 8010a58:	4618      	mov	r0, r3
 8010a5a:	3714      	adds	r7, #20
 8010a5c:	46bd      	mov	sp, r7
 8010a5e:	bd90      	pop	{r4, r7, pc}

08010a60 <USBH_LL_ClosePipe>:
 8010a60:	b580      	push	{r7, lr}
 8010a62:	b084      	sub	sp, #16
 8010a64:	af00      	add	r7, sp, #0
 8010a66:	6078      	str	r0, [r7, #4]
 8010a68:	460b      	mov	r3, r1
 8010a6a:	70fb      	strb	r3, [r7, #3]
 8010a6c:	2300      	movs	r3, #0
 8010a6e:	73fb      	strb	r3, [r7, #15]
 8010a70:	2300      	movs	r3, #0
 8010a72:	73bb      	strb	r3, [r7, #14]
 8010a74:	687b      	ldr	r3, [r7, #4]
 8010a76:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 8010a7a:	78fa      	ldrb	r2, [r7, #3]
 8010a7c:	4611      	mov	r1, r2
 8010a7e:	4618      	mov	r0, r3
 8010a80:	f7f3 fe4a 	bl	8004718 <HAL_HCD_HC_Halt>
 8010a84:	4603      	mov	r3, r0
 8010a86:	73fb      	strb	r3, [r7, #15]
 8010a88:	7bfb      	ldrb	r3, [r7, #15]
 8010a8a:	4618      	mov	r0, r3
 8010a8c:	f000 f89e 	bl	8010bcc <USBH_Get_USB_Status>
 8010a90:	4603      	mov	r3, r0
 8010a92:	73bb      	strb	r3, [r7, #14]
 8010a94:	7bbb      	ldrb	r3, [r7, #14]
 8010a96:	4618      	mov	r0, r3
 8010a98:	3710      	adds	r7, #16
 8010a9a:	46bd      	mov	sp, r7
 8010a9c:	bd80      	pop	{r7, pc}

08010a9e <USBH_LL_SubmitURB>:
 8010a9e:	b590      	push	{r4, r7, lr}
 8010aa0:	b089      	sub	sp, #36	@ 0x24
 8010aa2:	af04      	add	r7, sp, #16
 8010aa4:	6078      	str	r0, [r7, #4]
 8010aa6:	4608      	mov	r0, r1
 8010aa8:	4611      	mov	r1, r2
 8010aaa:	461a      	mov	r2, r3
 8010aac:	4603      	mov	r3, r0
 8010aae:	70fb      	strb	r3, [r7, #3]
 8010ab0:	460b      	mov	r3, r1
 8010ab2:	70bb      	strb	r3, [r7, #2]
 8010ab4:	4613      	mov	r3, r2
 8010ab6:	707b      	strb	r3, [r7, #1]
 8010ab8:	2300      	movs	r3, #0
 8010aba:	73fb      	strb	r3, [r7, #15]
 8010abc:	2300      	movs	r3, #0
 8010abe:	73bb      	strb	r3, [r7, #14]
 8010ac0:	687b      	ldr	r3, [r7, #4]
 8010ac2:	f8d3 03d0 	ldr.w	r0, [r3, #976]	@ 0x3d0
 8010ac6:	787c      	ldrb	r4, [r7, #1]
 8010ac8:	78ba      	ldrb	r2, [r7, #2]
 8010aca:	78f9      	ldrb	r1, [r7, #3]
 8010acc:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8010ad0:	9303      	str	r3, [sp, #12]
 8010ad2:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8010ad4:	9302      	str	r3, [sp, #8]
 8010ad6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010ad8:	9301      	str	r3, [sp, #4]
 8010ada:	f897 3020 	ldrb.w	r3, [r7, #32]
 8010ade:	9300      	str	r3, [sp, #0]
 8010ae0:	4623      	mov	r3, r4
 8010ae2:	f7f3 fe3d 	bl	8004760 <HAL_HCD_HC_SubmitRequest>
 8010ae6:	4603      	mov	r3, r0
 8010ae8:	73fb      	strb	r3, [r7, #15]
 8010aea:	7bfb      	ldrb	r3, [r7, #15]
 8010aec:	4618      	mov	r0, r3
 8010aee:	f000 f86d 	bl	8010bcc <USBH_Get_USB_Status>
 8010af2:	4603      	mov	r3, r0
 8010af4:	73bb      	strb	r3, [r7, #14]
 8010af6:	7bbb      	ldrb	r3, [r7, #14]
 8010af8:	4618      	mov	r0, r3
 8010afa:	3714      	adds	r7, #20
 8010afc:	46bd      	mov	sp, r7
 8010afe:	bd90      	pop	{r4, r7, pc}

08010b00 <USBH_LL_GetURBState>:
 8010b00:	b580      	push	{r7, lr}
 8010b02:	b082      	sub	sp, #8
 8010b04:	af00      	add	r7, sp, #0
 8010b06:	6078      	str	r0, [r7, #4]
 8010b08:	460b      	mov	r3, r1
 8010b0a:	70fb      	strb	r3, [r7, #3]
 8010b0c:	687b      	ldr	r3, [r7, #4]
 8010b0e:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 8010b12:	78fa      	ldrb	r2, [r7, #3]
 8010b14:	4611      	mov	r1, r2
 8010b16:	4618      	mov	r0, r3
 8010b18:	f7f4 f8d1 	bl	8004cbe <HAL_HCD_HC_GetURBState>
 8010b1c:	4603      	mov	r3, r0
 8010b1e:	4618      	mov	r0, r3
 8010b20:	3708      	adds	r7, #8
 8010b22:	46bd      	mov	sp, r7
 8010b24:	bd80      	pop	{r7, pc}

08010b26 <USBH_LL_DriverVBUS>:
 8010b26:	b580      	push	{r7, lr}
 8010b28:	b082      	sub	sp, #8
 8010b2a:	af00      	add	r7, sp, #0
 8010b2c:	6078      	str	r0, [r7, #4]
 8010b2e:	460b      	mov	r3, r1
 8010b30:	70fb      	strb	r3, [r7, #3]
 8010b32:	687b      	ldr	r3, [r7, #4]
 8010b34:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 8010b38:	2b01      	cmp	r3, #1
 8010b3a:	d103      	bne.n	8010b44 <USBH_LL_DriverVBUS+0x1e>
 8010b3c:	78fb      	ldrb	r3, [r7, #3]
 8010b3e:	4618      	mov	r0, r3
 8010b40:	f000 f870 	bl	8010c24 <MX_DriverVbusFS>
 8010b44:	20c8      	movs	r0, #200	@ 0xc8
 8010b46:	f7f3 f953 	bl	8003df0 <HAL_Delay>
 8010b4a:	2300      	movs	r3, #0
 8010b4c:	4618      	mov	r0, r3
 8010b4e:	3708      	adds	r7, #8
 8010b50:	46bd      	mov	sp, r7
 8010b52:	bd80      	pop	{r7, pc}

08010b54 <USBH_LL_SetToggle>:
 8010b54:	b480      	push	{r7}
 8010b56:	b085      	sub	sp, #20
 8010b58:	af00      	add	r7, sp, #0
 8010b5a:	6078      	str	r0, [r7, #4]
 8010b5c:	460b      	mov	r3, r1
 8010b5e:	70fb      	strb	r3, [r7, #3]
 8010b60:	4613      	mov	r3, r2
 8010b62:	70bb      	strb	r3, [r7, #2]
 8010b64:	687b      	ldr	r3, [r7, #4]
 8010b66:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 8010b6a:	60fb      	str	r3, [r7, #12]
 8010b6c:	78fb      	ldrb	r3, [r7, #3]
 8010b6e:	68fa      	ldr	r2, [r7, #12]
 8010b70:	212c      	movs	r1, #44	@ 0x2c
 8010b72:	fb01 f303 	mul.w	r3, r1, r3
 8010b76:	4413      	add	r3, r2
 8010b78:	333b      	adds	r3, #59	@ 0x3b
 8010b7a:	781b      	ldrb	r3, [r3, #0]
 8010b7c:	2b00      	cmp	r3, #0
 8010b7e:	d009      	beq.n	8010b94 <USBH_LL_SetToggle+0x40>
 8010b80:	78fb      	ldrb	r3, [r7, #3]
 8010b82:	68fa      	ldr	r2, [r7, #12]
 8010b84:	212c      	movs	r1, #44	@ 0x2c
 8010b86:	fb01 f303 	mul.w	r3, r1, r3
 8010b8a:	4413      	add	r3, r2
 8010b8c:	3354      	adds	r3, #84	@ 0x54
 8010b8e:	78ba      	ldrb	r2, [r7, #2]
 8010b90:	701a      	strb	r2, [r3, #0]
 8010b92:	e008      	b.n	8010ba6 <USBH_LL_SetToggle+0x52>
 8010b94:	78fb      	ldrb	r3, [r7, #3]
 8010b96:	68fa      	ldr	r2, [r7, #12]
 8010b98:	212c      	movs	r1, #44	@ 0x2c
 8010b9a:	fb01 f303 	mul.w	r3, r1, r3
 8010b9e:	4413      	add	r3, r2
 8010ba0:	3355      	adds	r3, #85	@ 0x55
 8010ba2:	78ba      	ldrb	r2, [r7, #2]
 8010ba4:	701a      	strb	r2, [r3, #0]
 8010ba6:	2300      	movs	r3, #0
 8010ba8:	4618      	mov	r0, r3
 8010baa:	3714      	adds	r7, #20
 8010bac:	46bd      	mov	sp, r7
 8010bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bb2:	4770      	bx	lr

08010bb4 <USBH_Delay>:
 8010bb4:	b580      	push	{r7, lr}
 8010bb6:	b082      	sub	sp, #8
 8010bb8:	af00      	add	r7, sp, #0
 8010bba:	6078      	str	r0, [r7, #4]
 8010bbc:	6878      	ldr	r0, [r7, #4]
 8010bbe:	f7f3 f917 	bl	8003df0 <HAL_Delay>
 8010bc2:	bf00      	nop
 8010bc4:	3708      	adds	r7, #8
 8010bc6:	46bd      	mov	sp, r7
 8010bc8:	bd80      	pop	{r7, pc}
	...

08010bcc <USBH_Get_USB_Status>:
 8010bcc:	b480      	push	{r7}
 8010bce:	b085      	sub	sp, #20
 8010bd0:	af00      	add	r7, sp, #0
 8010bd2:	4603      	mov	r3, r0
 8010bd4:	71fb      	strb	r3, [r7, #7]
 8010bd6:	2300      	movs	r3, #0
 8010bd8:	73fb      	strb	r3, [r7, #15]
 8010bda:	79fb      	ldrb	r3, [r7, #7]
 8010bdc:	2b03      	cmp	r3, #3
 8010bde:	d817      	bhi.n	8010c10 <USBH_Get_USB_Status+0x44>
 8010be0:	a201      	add	r2, pc, #4	@ (adr r2, 8010be8 <USBH_Get_USB_Status+0x1c>)
 8010be2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010be6:	bf00      	nop
 8010be8:	08010bf9 	.word	0x08010bf9
 8010bec:	08010bff 	.word	0x08010bff
 8010bf0:	08010c05 	.word	0x08010c05
 8010bf4:	08010c0b 	.word	0x08010c0b
 8010bf8:	2300      	movs	r3, #0
 8010bfa:	73fb      	strb	r3, [r7, #15]
 8010bfc:	e00b      	b.n	8010c16 <USBH_Get_USB_Status+0x4a>
 8010bfe:	2302      	movs	r3, #2
 8010c00:	73fb      	strb	r3, [r7, #15]
 8010c02:	e008      	b.n	8010c16 <USBH_Get_USB_Status+0x4a>
 8010c04:	2301      	movs	r3, #1
 8010c06:	73fb      	strb	r3, [r7, #15]
 8010c08:	e005      	b.n	8010c16 <USBH_Get_USB_Status+0x4a>
 8010c0a:	2302      	movs	r3, #2
 8010c0c:	73fb      	strb	r3, [r7, #15]
 8010c0e:	e002      	b.n	8010c16 <USBH_Get_USB_Status+0x4a>
 8010c10:	2302      	movs	r3, #2
 8010c12:	73fb      	strb	r3, [r7, #15]
 8010c14:	bf00      	nop
 8010c16:	7bfb      	ldrb	r3, [r7, #15]
 8010c18:	4618      	mov	r0, r3
 8010c1a:	3714      	adds	r7, #20
 8010c1c:	46bd      	mov	sp, r7
 8010c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c22:	4770      	bx	lr

08010c24 <MX_DriverVbusFS>:
 8010c24:	b580      	push	{r7, lr}
 8010c26:	b084      	sub	sp, #16
 8010c28:	af00      	add	r7, sp, #0
 8010c2a:	4603      	mov	r3, r0
 8010c2c:	71fb      	strb	r3, [r7, #7]
 8010c2e:	79fb      	ldrb	r3, [r7, #7]
 8010c30:	73fb      	strb	r3, [r7, #15]
 8010c32:	79fb      	ldrb	r3, [r7, #7]
 8010c34:	2b00      	cmp	r3, #0
 8010c36:	d102      	bne.n	8010c3e <MX_DriverVbusFS+0x1a>
 8010c38:	2301      	movs	r3, #1
 8010c3a:	73fb      	strb	r3, [r7, #15]
 8010c3c:	e001      	b.n	8010c42 <MX_DriverVbusFS+0x1e>
 8010c3e:	2300      	movs	r3, #0
 8010c40:	73fb      	strb	r3, [r7, #15]
 8010c42:	7bfb      	ldrb	r3, [r7, #15]
 8010c44:	461a      	mov	r2, r3
 8010c46:	2101      	movs	r1, #1
 8010c48:	4803      	ldr	r0, [pc, #12]	@ (8010c58 <MX_DriverVbusFS+0x34>)
 8010c4a:	f7f3 fc1d 	bl	8004488 <HAL_GPIO_WritePin>
 8010c4e:	bf00      	nop
 8010c50:	3710      	adds	r7, #16
 8010c52:	46bd      	mov	sp, r7
 8010c54:	bd80      	pop	{r7, pc}
 8010c56:	bf00      	nop
 8010c58:	40020800 	.word	0x40020800

08010c5c <atof>:
 8010c5c:	2100      	movs	r1, #0
 8010c5e:	f000 bec7 	b.w	80119f0 <strtod>

08010c62 <atoi>:
 8010c62:	220a      	movs	r2, #10
 8010c64:	2100      	movs	r1, #0
 8010c66:	f000 bf49 	b.w	8011afc <strtol>
	...

08010c6c <malloc>:
 8010c6c:	4b02      	ldr	r3, [pc, #8]	@ (8010c78 <malloc+0xc>)
 8010c6e:	4601      	mov	r1, r0
 8010c70:	6818      	ldr	r0, [r3, #0]
 8010c72:	f000 b82d 	b.w	8010cd0 <_malloc_r>
 8010c76:	bf00      	nop
 8010c78:	20000404 	.word	0x20000404

08010c7c <free>:
 8010c7c:	4b02      	ldr	r3, [pc, #8]	@ (8010c88 <free+0xc>)
 8010c7e:	4601      	mov	r1, r0
 8010c80:	6818      	ldr	r0, [r3, #0]
 8010c82:	f002 bd11 	b.w	80136a8 <_free_r>
 8010c86:	bf00      	nop
 8010c88:	20000404 	.word	0x20000404

08010c8c <sbrk_aligned>:
 8010c8c:	b570      	push	{r4, r5, r6, lr}
 8010c8e:	4e0f      	ldr	r6, [pc, #60]	@ (8010ccc <sbrk_aligned+0x40>)
 8010c90:	460c      	mov	r4, r1
 8010c92:	6831      	ldr	r1, [r6, #0]
 8010c94:	4605      	mov	r5, r0
 8010c96:	b911      	cbnz	r1, 8010c9e <sbrk_aligned+0x12>
 8010c98:	f001 fe20 	bl	80128dc <_sbrk_r>
 8010c9c:	6030      	str	r0, [r6, #0]
 8010c9e:	4621      	mov	r1, r4
 8010ca0:	4628      	mov	r0, r5
 8010ca2:	f001 fe1b 	bl	80128dc <_sbrk_r>
 8010ca6:	1c43      	adds	r3, r0, #1
 8010ca8:	d103      	bne.n	8010cb2 <sbrk_aligned+0x26>
 8010caa:	f04f 34ff 	mov.w	r4, #4294967295
 8010cae:	4620      	mov	r0, r4
 8010cb0:	bd70      	pop	{r4, r5, r6, pc}
 8010cb2:	1cc4      	adds	r4, r0, #3
 8010cb4:	f024 0403 	bic.w	r4, r4, #3
 8010cb8:	42a0      	cmp	r0, r4
 8010cba:	d0f8      	beq.n	8010cae <sbrk_aligned+0x22>
 8010cbc:	1a21      	subs	r1, r4, r0
 8010cbe:	4628      	mov	r0, r5
 8010cc0:	f001 fe0c 	bl	80128dc <_sbrk_r>
 8010cc4:	3001      	adds	r0, #1
 8010cc6:	d1f2      	bne.n	8010cae <sbrk_aligned+0x22>
 8010cc8:	e7ef      	b.n	8010caa <sbrk_aligned+0x1e>
 8010cca:	bf00      	nop
 8010ccc:	200116b4 	.word	0x200116b4

08010cd0 <_malloc_r>:
 8010cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010cd4:	1ccd      	adds	r5, r1, #3
 8010cd6:	f025 0503 	bic.w	r5, r5, #3
 8010cda:	3508      	adds	r5, #8
 8010cdc:	2d0c      	cmp	r5, #12
 8010cde:	bf38      	it	cc
 8010ce0:	250c      	movcc	r5, #12
 8010ce2:	2d00      	cmp	r5, #0
 8010ce4:	4606      	mov	r6, r0
 8010ce6:	db01      	blt.n	8010cec <_malloc_r+0x1c>
 8010ce8:	42a9      	cmp	r1, r5
 8010cea:	d904      	bls.n	8010cf6 <_malloc_r+0x26>
 8010cec:	230c      	movs	r3, #12
 8010cee:	6033      	str	r3, [r6, #0]
 8010cf0:	2000      	movs	r0, #0
 8010cf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010cf6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8010dcc <_malloc_r+0xfc>
 8010cfa:	f000 f869 	bl	8010dd0 <__malloc_lock>
 8010cfe:	f8d8 3000 	ldr.w	r3, [r8]
 8010d02:	461c      	mov	r4, r3
 8010d04:	bb44      	cbnz	r4, 8010d58 <_malloc_r+0x88>
 8010d06:	4629      	mov	r1, r5
 8010d08:	4630      	mov	r0, r6
 8010d0a:	f7ff ffbf 	bl	8010c8c <sbrk_aligned>
 8010d0e:	1c43      	adds	r3, r0, #1
 8010d10:	4604      	mov	r4, r0
 8010d12:	d158      	bne.n	8010dc6 <_malloc_r+0xf6>
 8010d14:	f8d8 4000 	ldr.w	r4, [r8]
 8010d18:	4627      	mov	r7, r4
 8010d1a:	2f00      	cmp	r7, #0
 8010d1c:	d143      	bne.n	8010da6 <_malloc_r+0xd6>
 8010d1e:	2c00      	cmp	r4, #0
 8010d20:	d04b      	beq.n	8010dba <_malloc_r+0xea>
 8010d22:	6823      	ldr	r3, [r4, #0]
 8010d24:	4639      	mov	r1, r7
 8010d26:	4630      	mov	r0, r6
 8010d28:	eb04 0903 	add.w	r9, r4, r3
 8010d2c:	f001 fdd6 	bl	80128dc <_sbrk_r>
 8010d30:	4581      	cmp	r9, r0
 8010d32:	d142      	bne.n	8010dba <_malloc_r+0xea>
 8010d34:	6821      	ldr	r1, [r4, #0]
 8010d36:	1a6d      	subs	r5, r5, r1
 8010d38:	4629      	mov	r1, r5
 8010d3a:	4630      	mov	r0, r6
 8010d3c:	f7ff ffa6 	bl	8010c8c <sbrk_aligned>
 8010d40:	3001      	adds	r0, #1
 8010d42:	d03a      	beq.n	8010dba <_malloc_r+0xea>
 8010d44:	6823      	ldr	r3, [r4, #0]
 8010d46:	442b      	add	r3, r5
 8010d48:	6023      	str	r3, [r4, #0]
 8010d4a:	f8d8 3000 	ldr.w	r3, [r8]
 8010d4e:	685a      	ldr	r2, [r3, #4]
 8010d50:	bb62      	cbnz	r2, 8010dac <_malloc_r+0xdc>
 8010d52:	f8c8 7000 	str.w	r7, [r8]
 8010d56:	e00f      	b.n	8010d78 <_malloc_r+0xa8>
 8010d58:	6822      	ldr	r2, [r4, #0]
 8010d5a:	1b52      	subs	r2, r2, r5
 8010d5c:	d420      	bmi.n	8010da0 <_malloc_r+0xd0>
 8010d5e:	2a0b      	cmp	r2, #11
 8010d60:	d917      	bls.n	8010d92 <_malloc_r+0xc2>
 8010d62:	1961      	adds	r1, r4, r5
 8010d64:	42a3      	cmp	r3, r4
 8010d66:	6025      	str	r5, [r4, #0]
 8010d68:	bf18      	it	ne
 8010d6a:	6059      	strne	r1, [r3, #4]
 8010d6c:	6863      	ldr	r3, [r4, #4]
 8010d6e:	bf08      	it	eq
 8010d70:	f8c8 1000 	streq.w	r1, [r8]
 8010d74:	5162      	str	r2, [r4, r5]
 8010d76:	604b      	str	r3, [r1, #4]
 8010d78:	4630      	mov	r0, r6
 8010d7a:	f000 f82f 	bl	8010ddc <__malloc_unlock>
 8010d7e:	f104 000b 	add.w	r0, r4, #11
 8010d82:	1d23      	adds	r3, r4, #4
 8010d84:	f020 0007 	bic.w	r0, r0, #7
 8010d88:	1ac2      	subs	r2, r0, r3
 8010d8a:	bf1c      	itt	ne
 8010d8c:	1a1b      	subne	r3, r3, r0
 8010d8e:	50a3      	strne	r3, [r4, r2]
 8010d90:	e7af      	b.n	8010cf2 <_malloc_r+0x22>
 8010d92:	6862      	ldr	r2, [r4, #4]
 8010d94:	42a3      	cmp	r3, r4
 8010d96:	bf0c      	ite	eq
 8010d98:	f8c8 2000 	streq.w	r2, [r8]
 8010d9c:	605a      	strne	r2, [r3, #4]
 8010d9e:	e7eb      	b.n	8010d78 <_malloc_r+0xa8>
 8010da0:	4623      	mov	r3, r4
 8010da2:	6864      	ldr	r4, [r4, #4]
 8010da4:	e7ae      	b.n	8010d04 <_malloc_r+0x34>
 8010da6:	463c      	mov	r4, r7
 8010da8:	687f      	ldr	r7, [r7, #4]
 8010daa:	e7b6      	b.n	8010d1a <_malloc_r+0x4a>
 8010dac:	461a      	mov	r2, r3
 8010dae:	685b      	ldr	r3, [r3, #4]
 8010db0:	42a3      	cmp	r3, r4
 8010db2:	d1fb      	bne.n	8010dac <_malloc_r+0xdc>
 8010db4:	2300      	movs	r3, #0
 8010db6:	6053      	str	r3, [r2, #4]
 8010db8:	e7de      	b.n	8010d78 <_malloc_r+0xa8>
 8010dba:	230c      	movs	r3, #12
 8010dbc:	6033      	str	r3, [r6, #0]
 8010dbe:	4630      	mov	r0, r6
 8010dc0:	f000 f80c 	bl	8010ddc <__malloc_unlock>
 8010dc4:	e794      	b.n	8010cf0 <_malloc_r+0x20>
 8010dc6:	6005      	str	r5, [r0, #0]
 8010dc8:	e7d6      	b.n	8010d78 <_malloc_r+0xa8>
 8010dca:	bf00      	nop
 8010dcc:	200116b8 	.word	0x200116b8

08010dd0 <__malloc_lock>:
 8010dd0:	4801      	ldr	r0, [pc, #4]	@ (8010dd8 <__malloc_lock+0x8>)
 8010dd2:	f001 bdd0 	b.w	8012976 <__retarget_lock_acquire_recursive>
 8010dd6:	bf00      	nop
 8010dd8:	200117fc 	.word	0x200117fc

08010ddc <__malloc_unlock>:
 8010ddc:	4801      	ldr	r0, [pc, #4]	@ (8010de4 <__malloc_unlock+0x8>)
 8010dde:	f001 bdcb 	b.w	8012978 <__retarget_lock_release_recursive>
 8010de2:	bf00      	nop
 8010de4:	200117fc 	.word	0x200117fc

08010de8 <sulp>:
 8010de8:	b570      	push	{r4, r5, r6, lr}
 8010dea:	4604      	mov	r4, r0
 8010dec:	460d      	mov	r5, r1
 8010dee:	ec45 4b10 	vmov	d0, r4, r5
 8010df2:	4616      	mov	r6, r2
 8010df4:	f003 fb5a 	bl	80144ac <__ulp>
 8010df8:	ec51 0b10 	vmov	r0, r1, d0
 8010dfc:	b17e      	cbz	r6, 8010e1e <sulp+0x36>
 8010dfe:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8010e02:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8010e06:	2b00      	cmp	r3, #0
 8010e08:	dd09      	ble.n	8010e1e <sulp+0x36>
 8010e0a:	051b      	lsls	r3, r3, #20
 8010e0c:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8010e10:	2400      	movs	r4, #0
 8010e12:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8010e16:	4622      	mov	r2, r4
 8010e18:	462b      	mov	r3, r5
 8010e1a:	f7ef fbed 	bl	80005f8 <__aeabi_dmul>
 8010e1e:	ec41 0b10 	vmov	d0, r0, r1
 8010e22:	bd70      	pop	{r4, r5, r6, pc}
 8010e24:	0000      	movs	r0, r0
	...

08010e28 <_strtod_l>:
 8010e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e2c:	b09f      	sub	sp, #124	@ 0x7c
 8010e2e:	460c      	mov	r4, r1
 8010e30:	9217      	str	r2, [sp, #92]	@ 0x5c
 8010e32:	2200      	movs	r2, #0
 8010e34:	921a      	str	r2, [sp, #104]	@ 0x68
 8010e36:	9005      	str	r0, [sp, #20]
 8010e38:	f04f 0a00 	mov.w	sl, #0
 8010e3c:	f04f 0b00 	mov.w	fp, #0
 8010e40:	460a      	mov	r2, r1
 8010e42:	9219      	str	r2, [sp, #100]	@ 0x64
 8010e44:	7811      	ldrb	r1, [r2, #0]
 8010e46:	292b      	cmp	r1, #43	@ 0x2b
 8010e48:	d04a      	beq.n	8010ee0 <_strtod_l+0xb8>
 8010e4a:	d838      	bhi.n	8010ebe <_strtod_l+0x96>
 8010e4c:	290d      	cmp	r1, #13
 8010e4e:	d832      	bhi.n	8010eb6 <_strtod_l+0x8e>
 8010e50:	2908      	cmp	r1, #8
 8010e52:	d832      	bhi.n	8010eba <_strtod_l+0x92>
 8010e54:	2900      	cmp	r1, #0
 8010e56:	d03b      	beq.n	8010ed0 <_strtod_l+0xa8>
 8010e58:	2200      	movs	r2, #0
 8010e5a:	920e      	str	r2, [sp, #56]	@ 0x38
 8010e5c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8010e5e:	782a      	ldrb	r2, [r5, #0]
 8010e60:	2a30      	cmp	r2, #48	@ 0x30
 8010e62:	f040 80b2 	bne.w	8010fca <_strtod_l+0x1a2>
 8010e66:	786a      	ldrb	r2, [r5, #1]
 8010e68:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8010e6c:	2a58      	cmp	r2, #88	@ 0x58
 8010e6e:	d16e      	bne.n	8010f4e <_strtod_l+0x126>
 8010e70:	9302      	str	r3, [sp, #8]
 8010e72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010e74:	9301      	str	r3, [sp, #4]
 8010e76:	ab1a      	add	r3, sp, #104	@ 0x68
 8010e78:	9300      	str	r3, [sp, #0]
 8010e7a:	4a8f      	ldr	r2, [pc, #572]	@ (80110b8 <_strtod_l+0x290>)
 8010e7c:	9805      	ldr	r0, [sp, #20]
 8010e7e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8010e80:	a919      	add	r1, sp, #100	@ 0x64
 8010e82:	f002 fcc3 	bl	801380c <__gethex>
 8010e86:	f010 060f 	ands.w	r6, r0, #15
 8010e8a:	4604      	mov	r4, r0
 8010e8c:	d005      	beq.n	8010e9a <_strtod_l+0x72>
 8010e8e:	2e06      	cmp	r6, #6
 8010e90:	d128      	bne.n	8010ee4 <_strtod_l+0xbc>
 8010e92:	3501      	adds	r5, #1
 8010e94:	2300      	movs	r3, #0
 8010e96:	9519      	str	r5, [sp, #100]	@ 0x64
 8010e98:	930e      	str	r3, [sp, #56]	@ 0x38
 8010e9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8010e9c:	2b00      	cmp	r3, #0
 8010e9e:	f040 858e 	bne.w	80119be <_strtod_l+0xb96>
 8010ea2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ea4:	b1cb      	cbz	r3, 8010eda <_strtod_l+0xb2>
 8010ea6:	4652      	mov	r2, sl
 8010ea8:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8010eac:	ec43 2b10 	vmov	d0, r2, r3
 8010eb0:	b01f      	add	sp, #124	@ 0x7c
 8010eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010eb6:	2920      	cmp	r1, #32
 8010eb8:	d1ce      	bne.n	8010e58 <_strtod_l+0x30>
 8010eba:	3201      	adds	r2, #1
 8010ebc:	e7c1      	b.n	8010e42 <_strtod_l+0x1a>
 8010ebe:	292d      	cmp	r1, #45	@ 0x2d
 8010ec0:	d1ca      	bne.n	8010e58 <_strtod_l+0x30>
 8010ec2:	2101      	movs	r1, #1
 8010ec4:	910e      	str	r1, [sp, #56]	@ 0x38
 8010ec6:	1c51      	adds	r1, r2, #1
 8010ec8:	9119      	str	r1, [sp, #100]	@ 0x64
 8010eca:	7852      	ldrb	r2, [r2, #1]
 8010ecc:	2a00      	cmp	r2, #0
 8010ece:	d1c5      	bne.n	8010e5c <_strtod_l+0x34>
 8010ed0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8010ed2:	9419      	str	r4, [sp, #100]	@ 0x64
 8010ed4:	2b00      	cmp	r3, #0
 8010ed6:	f040 8570 	bne.w	80119ba <_strtod_l+0xb92>
 8010eda:	4652      	mov	r2, sl
 8010edc:	465b      	mov	r3, fp
 8010ede:	e7e5      	b.n	8010eac <_strtod_l+0x84>
 8010ee0:	2100      	movs	r1, #0
 8010ee2:	e7ef      	b.n	8010ec4 <_strtod_l+0x9c>
 8010ee4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8010ee6:	b13a      	cbz	r2, 8010ef8 <_strtod_l+0xd0>
 8010ee8:	2135      	movs	r1, #53	@ 0x35
 8010eea:	a81c      	add	r0, sp, #112	@ 0x70
 8010eec:	f003 fbd8 	bl	80146a0 <__copybits>
 8010ef0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8010ef2:	9805      	ldr	r0, [sp, #20]
 8010ef4:	f002 ffae 	bl	8013e54 <_Bfree>
 8010ef8:	3e01      	subs	r6, #1
 8010efa:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010efc:	2e04      	cmp	r6, #4
 8010efe:	d806      	bhi.n	8010f0e <_strtod_l+0xe6>
 8010f00:	e8df f006 	tbb	[pc, r6]
 8010f04:	201d0314 	.word	0x201d0314
 8010f08:	14          	.byte	0x14
 8010f09:	00          	.byte	0x00
 8010f0a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8010f0e:	05e1      	lsls	r1, r4, #23
 8010f10:	bf48      	it	mi
 8010f12:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8010f16:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8010f1a:	0d1b      	lsrs	r3, r3, #20
 8010f1c:	051b      	lsls	r3, r3, #20
 8010f1e:	2b00      	cmp	r3, #0
 8010f20:	d1bb      	bne.n	8010e9a <_strtod_l+0x72>
 8010f22:	f001 fcfd 	bl	8012920 <__errno>
 8010f26:	2322      	movs	r3, #34	@ 0x22
 8010f28:	6003      	str	r3, [r0, #0]
 8010f2a:	e7b6      	b.n	8010e9a <_strtod_l+0x72>
 8010f2c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8010f30:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8010f34:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8010f38:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8010f3c:	e7e7      	b.n	8010f0e <_strtod_l+0xe6>
 8010f3e:	f8df b180 	ldr.w	fp, [pc, #384]	@ 80110c0 <_strtod_l+0x298>
 8010f42:	e7e4      	b.n	8010f0e <_strtod_l+0xe6>
 8010f44:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8010f48:	f04f 3aff 	mov.w	sl, #4294967295
 8010f4c:	e7df      	b.n	8010f0e <_strtod_l+0xe6>
 8010f4e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8010f50:	1c5a      	adds	r2, r3, #1
 8010f52:	9219      	str	r2, [sp, #100]	@ 0x64
 8010f54:	785b      	ldrb	r3, [r3, #1]
 8010f56:	2b30      	cmp	r3, #48	@ 0x30
 8010f58:	d0f9      	beq.n	8010f4e <_strtod_l+0x126>
 8010f5a:	2b00      	cmp	r3, #0
 8010f5c:	d09d      	beq.n	8010e9a <_strtod_l+0x72>
 8010f5e:	2301      	movs	r3, #1
 8010f60:	2700      	movs	r7, #0
 8010f62:	9308      	str	r3, [sp, #32]
 8010f64:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8010f66:	930c      	str	r3, [sp, #48]	@ 0x30
 8010f68:	970b      	str	r7, [sp, #44]	@ 0x2c
 8010f6a:	46b9      	mov	r9, r7
 8010f6c:	220a      	movs	r2, #10
 8010f6e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8010f70:	7805      	ldrb	r5, [r0, #0]
 8010f72:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8010f76:	b2d9      	uxtb	r1, r3
 8010f78:	2909      	cmp	r1, #9
 8010f7a:	d928      	bls.n	8010fce <_strtod_l+0x1a6>
 8010f7c:	494f      	ldr	r1, [pc, #316]	@ (80110bc <_strtod_l+0x294>)
 8010f7e:	2201      	movs	r2, #1
 8010f80:	f001 fb95 	bl	80126ae <strncmp>
 8010f84:	2800      	cmp	r0, #0
 8010f86:	d032      	beq.n	8010fee <_strtod_l+0x1c6>
 8010f88:	2000      	movs	r0, #0
 8010f8a:	462a      	mov	r2, r5
 8010f8c:	900a      	str	r0, [sp, #40]	@ 0x28
 8010f8e:	464d      	mov	r5, r9
 8010f90:	4603      	mov	r3, r0
 8010f92:	2a65      	cmp	r2, #101	@ 0x65
 8010f94:	d001      	beq.n	8010f9a <_strtod_l+0x172>
 8010f96:	2a45      	cmp	r2, #69	@ 0x45
 8010f98:	d114      	bne.n	8010fc4 <_strtod_l+0x19c>
 8010f9a:	b91d      	cbnz	r5, 8010fa4 <_strtod_l+0x17c>
 8010f9c:	9a08      	ldr	r2, [sp, #32]
 8010f9e:	4302      	orrs	r2, r0
 8010fa0:	d096      	beq.n	8010ed0 <_strtod_l+0xa8>
 8010fa2:	2500      	movs	r5, #0
 8010fa4:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8010fa6:	1c62      	adds	r2, r4, #1
 8010fa8:	9219      	str	r2, [sp, #100]	@ 0x64
 8010faa:	7862      	ldrb	r2, [r4, #1]
 8010fac:	2a2b      	cmp	r2, #43	@ 0x2b
 8010fae:	d07a      	beq.n	80110a6 <_strtod_l+0x27e>
 8010fb0:	2a2d      	cmp	r2, #45	@ 0x2d
 8010fb2:	d07e      	beq.n	80110b2 <_strtod_l+0x28a>
 8010fb4:	f04f 0c00 	mov.w	ip, #0
 8010fb8:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8010fbc:	2909      	cmp	r1, #9
 8010fbe:	f240 8085 	bls.w	80110cc <_strtod_l+0x2a4>
 8010fc2:	9419      	str	r4, [sp, #100]	@ 0x64
 8010fc4:	f04f 0800 	mov.w	r8, #0
 8010fc8:	e0a5      	b.n	8011116 <_strtod_l+0x2ee>
 8010fca:	2300      	movs	r3, #0
 8010fcc:	e7c8      	b.n	8010f60 <_strtod_l+0x138>
 8010fce:	f1b9 0f08 	cmp.w	r9, #8
 8010fd2:	bfd8      	it	le
 8010fd4:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8010fd6:	f100 0001 	add.w	r0, r0, #1
 8010fda:	bfda      	itte	le
 8010fdc:	fb02 3301 	mlale	r3, r2, r1, r3
 8010fe0:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8010fe2:	fb02 3707 	mlagt	r7, r2, r7, r3
 8010fe6:	f109 0901 	add.w	r9, r9, #1
 8010fea:	9019      	str	r0, [sp, #100]	@ 0x64
 8010fec:	e7bf      	b.n	8010f6e <_strtod_l+0x146>
 8010fee:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8010ff0:	1c5a      	adds	r2, r3, #1
 8010ff2:	9219      	str	r2, [sp, #100]	@ 0x64
 8010ff4:	785a      	ldrb	r2, [r3, #1]
 8010ff6:	f1b9 0f00 	cmp.w	r9, #0
 8010ffa:	d03b      	beq.n	8011074 <_strtod_l+0x24c>
 8010ffc:	900a      	str	r0, [sp, #40]	@ 0x28
 8010ffe:	464d      	mov	r5, r9
 8011000:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8011004:	2b09      	cmp	r3, #9
 8011006:	d912      	bls.n	801102e <_strtod_l+0x206>
 8011008:	2301      	movs	r3, #1
 801100a:	e7c2      	b.n	8010f92 <_strtod_l+0x16a>
 801100c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801100e:	1c5a      	adds	r2, r3, #1
 8011010:	9219      	str	r2, [sp, #100]	@ 0x64
 8011012:	785a      	ldrb	r2, [r3, #1]
 8011014:	3001      	adds	r0, #1
 8011016:	2a30      	cmp	r2, #48	@ 0x30
 8011018:	d0f8      	beq.n	801100c <_strtod_l+0x1e4>
 801101a:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 801101e:	2b08      	cmp	r3, #8
 8011020:	f200 84d2 	bhi.w	80119c8 <_strtod_l+0xba0>
 8011024:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011026:	900a      	str	r0, [sp, #40]	@ 0x28
 8011028:	2000      	movs	r0, #0
 801102a:	930c      	str	r3, [sp, #48]	@ 0x30
 801102c:	4605      	mov	r5, r0
 801102e:	3a30      	subs	r2, #48	@ 0x30
 8011030:	f100 0301 	add.w	r3, r0, #1
 8011034:	d018      	beq.n	8011068 <_strtod_l+0x240>
 8011036:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8011038:	4419      	add	r1, r3
 801103a:	910a      	str	r1, [sp, #40]	@ 0x28
 801103c:	462e      	mov	r6, r5
 801103e:	f04f 0e0a 	mov.w	lr, #10
 8011042:	1c71      	adds	r1, r6, #1
 8011044:	eba1 0c05 	sub.w	ip, r1, r5
 8011048:	4563      	cmp	r3, ip
 801104a:	dc15      	bgt.n	8011078 <_strtod_l+0x250>
 801104c:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8011050:	182b      	adds	r3, r5, r0
 8011052:	2b08      	cmp	r3, #8
 8011054:	f105 0501 	add.w	r5, r5, #1
 8011058:	4405      	add	r5, r0
 801105a:	dc1a      	bgt.n	8011092 <_strtod_l+0x26a>
 801105c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801105e:	230a      	movs	r3, #10
 8011060:	fb03 2301 	mla	r3, r3, r1, r2
 8011064:	930b      	str	r3, [sp, #44]	@ 0x2c
 8011066:	2300      	movs	r3, #0
 8011068:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801106a:	1c51      	adds	r1, r2, #1
 801106c:	9119      	str	r1, [sp, #100]	@ 0x64
 801106e:	7852      	ldrb	r2, [r2, #1]
 8011070:	4618      	mov	r0, r3
 8011072:	e7c5      	b.n	8011000 <_strtod_l+0x1d8>
 8011074:	4648      	mov	r0, r9
 8011076:	e7ce      	b.n	8011016 <_strtod_l+0x1ee>
 8011078:	2e08      	cmp	r6, #8
 801107a:	dc05      	bgt.n	8011088 <_strtod_l+0x260>
 801107c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 801107e:	fb0e f606 	mul.w	r6, lr, r6
 8011082:	960b      	str	r6, [sp, #44]	@ 0x2c
 8011084:	460e      	mov	r6, r1
 8011086:	e7dc      	b.n	8011042 <_strtod_l+0x21a>
 8011088:	2910      	cmp	r1, #16
 801108a:	bfd8      	it	le
 801108c:	fb0e f707 	mulle.w	r7, lr, r7
 8011090:	e7f8      	b.n	8011084 <_strtod_l+0x25c>
 8011092:	2b0f      	cmp	r3, #15
 8011094:	bfdc      	itt	le
 8011096:	230a      	movle	r3, #10
 8011098:	fb03 2707 	mlale	r7, r3, r7, r2
 801109c:	e7e3      	b.n	8011066 <_strtod_l+0x23e>
 801109e:	2300      	movs	r3, #0
 80110a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80110a2:	2301      	movs	r3, #1
 80110a4:	e77a      	b.n	8010f9c <_strtod_l+0x174>
 80110a6:	f04f 0c00 	mov.w	ip, #0
 80110aa:	1ca2      	adds	r2, r4, #2
 80110ac:	9219      	str	r2, [sp, #100]	@ 0x64
 80110ae:	78a2      	ldrb	r2, [r4, #2]
 80110b0:	e782      	b.n	8010fb8 <_strtod_l+0x190>
 80110b2:	f04f 0c01 	mov.w	ip, #1
 80110b6:	e7f8      	b.n	80110aa <_strtod_l+0x282>
 80110b8:	08016028 	.word	0x08016028
 80110bc:	08015de8 	.word	0x08015de8
 80110c0:	7ff00000 	.word	0x7ff00000
 80110c4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80110c6:	1c51      	adds	r1, r2, #1
 80110c8:	9119      	str	r1, [sp, #100]	@ 0x64
 80110ca:	7852      	ldrb	r2, [r2, #1]
 80110cc:	2a30      	cmp	r2, #48	@ 0x30
 80110ce:	d0f9      	beq.n	80110c4 <_strtod_l+0x29c>
 80110d0:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80110d4:	2908      	cmp	r1, #8
 80110d6:	f63f af75 	bhi.w	8010fc4 <_strtod_l+0x19c>
 80110da:	3a30      	subs	r2, #48	@ 0x30
 80110dc:	9209      	str	r2, [sp, #36]	@ 0x24
 80110de:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80110e0:	920f      	str	r2, [sp, #60]	@ 0x3c
 80110e2:	f04f 080a 	mov.w	r8, #10
 80110e6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80110e8:	1c56      	adds	r6, r2, #1
 80110ea:	9619      	str	r6, [sp, #100]	@ 0x64
 80110ec:	7852      	ldrb	r2, [r2, #1]
 80110ee:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80110f2:	f1be 0f09 	cmp.w	lr, #9
 80110f6:	d939      	bls.n	801116c <_strtod_l+0x344>
 80110f8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80110fa:	1a76      	subs	r6, r6, r1
 80110fc:	2e08      	cmp	r6, #8
 80110fe:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8011102:	dc03      	bgt.n	801110c <_strtod_l+0x2e4>
 8011104:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011106:	4588      	cmp	r8, r1
 8011108:	bfa8      	it	ge
 801110a:	4688      	movge	r8, r1
 801110c:	f1bc 0f00 	cmp.w	ip, #0
 8011110:	d001      	beq.n	8011116 <_strtod_l+0x2ee>
 8011112:	f1c8 0800 	rsb	r8, r8, #0
 8011116:	2d00      	cmp	r5, #0
 8011118:	d14e      	bne.n	80111b8 <_strtod_l+0x390>
 801111a:	9908      	ldr	r1, [sp, #32]
 801111c:	4308      	orrs	r0, r1
 801111e:	f47f aebc 	bne.w	8010e9a <_strtod_l+0x72>
 8011122:	2b00      	cmp	r3, #0
 8011124:	f47f aed4 	bne.w	8010ed0 <_strtod_l+0xa8>
 8011128:	2a69      	cmp	r2, #105	@ 0x69
 801112a:	d028      	beq.n	801117e <_strtod_l+0x356>
 801112c:	dc25      	bgt.n	801117a <_strtod_l+0x352>
 801112e:	2a49      	cmp	r2, #73	@ 0x49
 8011130:	d025      	beq.n	801117e <_strtod_l+0x356>
 8011132:	2a4e      	cmp	r2, #78	@ 0x4e
 8011134:	f47f aecc 	bne.w	8010ed0 <_strtod_l+0xa8>
 8011138:	499a      	ldr	r1, [pc, #616]	@ (80113a4 <_strtod_l+0x57c>)
 801113a:	a819      	add	r0, sp, #100	@ 0x64
 801113c:	f002 fd88 	bl	8013c50 <__match>
 8011140:	2800      	cmp	r0, #0
 8011142:	f43f aec5 	beq.w	8010ed0 <_strtod_l+0xa8>
 8011146:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011148:	781b      	ldrb	r3, [r3, #0]
 801114a:	2b28      	cmp	r3, #40	@ 0x28
 801114c:	d12e      	bne.n	80111ac <_strtod_l+0x384>
 801114e:	4996      	ldr	r1, [pc, #600]	@ (80113a8 <_strtod_l+0x580>)
 8011150:	aa1c      	add	r2, sp, #112	@ 0x70
 8011152:	a819      	add	r0, sp, #100	@ 0x64
 8011154:	f002 fd90 	bl	8013c78 <__hexnan>
 8011158:	2805      	cmp	r0, #5
 801115a:	d127      	bne.n	80111ac <_strtod_l+0x384>
 801115c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801115e:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8011162:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8011166:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 801116a:	e696      	b.n	8010e9a <_strtod_l+0x72>
 801116c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801116e:	fb08 2101 	mla	r1, r8, r1, r2
 8011172:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8011176:	9209      	str	r2, [sp, #36]	@ 0x24
 8011178:	e7b5      	b.n	80110e6 <_strtod_l+0x2be>
 801117a:	2a6e      	cmp	r2, #110	@ 0x6e
 801117c:	e7da      	b.n	8011134 <_strtod_l+0x30c>
 801117e:	498b      	ldr	r1, [pc, #556]	@ (80113ac <_strtod_l+0x584>)
 8011180:	a819      	add	r0, sp, #100	@ 0x64
 8011182:	f002 fd65 	bl	8013c50 <__match>
 8011186:	2800      	cmp	r0, #0
 8011188:	f43f aea2 	beq.w	8010ed0 <_strtod_l+0xa8>
 801118c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801118e:	4988      	ldr	r1, [pc, #544]	@ (80113b0 <_strtod_l+0x588>)
 8011190:	3b01      	subs	r3, #1
 8011192:	a819      	add	r0, sp, #100	@ 0x64
 8011194:	9319      	str	r3, [sp, #100]	@ 0x64
 8011196:	f002 fd5b 	bl	8013c50 <__match>
 801119a:	b910      	cbnz	r0, 80111a2 <_strtod_l+0x37a>
 801119c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801119e:	3301      	adds	r3, #1
 80111a0:	9319      	str	r3, [sp, #100]	@ 0x64
 80111a2:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 80113c0 <_strtod_l+0x598>
 80111a6:	f04f 0a00 	mov.w	sl, #0
 80111aa:	e676      	b.n	8010e9a <_strtod_l+0x72>
 80111ac:	4881      	ldr	r0, [pc, #516]	@ (80113b4 <_strtod_l+0x58c>)
 80111ae:	f001 fbfb 	bl	80129a8 <nan>
 80111b2:	ec5b ab10 	vmov	sl, fp, d0
 80111b6:	e670      	b.n	8010e9a <_strtod_l+0x72>
 80111b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80111ba:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80111bc:	eba8 0303 	sub.w	r3, r8, r3
 80111c0:	f1b9 0f00 	cmp.w	r9, #0
 80111c4:	bf08      	it	eq
 80111c6:	46a9      	moveq	r9, r5
 80111c8:	2d10      	cmp	r5, #16
 80111ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80111cc:	462c      	mov	r4, r5
 80111ce:	bfa8      	it	ge
 80111d0:	2410      	movge	r4, #16
 80111d2:	f7ef f997 	bl	8000504 <__aeabi_ui2d>
 80111d6:	2d09      	cmp	r5, #9
 80111d8:	4682      	mov	sl, r0
 80111da:	468b      	mov	fp, r1
 80111dc:	dc13      	bgt.n	8011206 <_strtod_l+0x3de>
 80111de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80111e0:	2b00      	cmp	r3, #0
 80111e2:	f43f ae5a 	beq.w	8010e9a <_strtod_l+0x72>
 80111e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80111e8:	dd78      	ble.n	80112dc <_strtod_l+0x4b4>
 80111ea:	2b16      	cmp	r3, #22
 80111ec:	dc5f      	bgt.n	80112ae <_strtod_l+0x486>
 80111ee:	4972      	ldr	r1, [pc, #456]	@ (80113b8 <_strtod_l+0x590>)
 80111f0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80111f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80111f8:	4652      	mov	r2, sl
 80111fa:	465b      	mov	r3, fp
 80111fc:	f7ef f9fc 	bl	80005f8 <__aeabi_dmul>
 8011200:	4682      	mov	sl, r0
 8011202:	468b      	mov	fp, r1
 8011204:	e649      	b.n	8010e9a <_strtod_l+0x72>
 8011206:	4b6c      	ldr	r3, [pc, #432]	@ (80113b8 <_strtod_l+0x590>)
 8011208:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801120c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8011210:	f7ef f9f2 	bl	80005f8 <__aeabi_dmul>
 8011214:	4682      	mov	sl, r0
 8011216:	4638      	mov	r0, r7
 8011218:	468b      	mov	fp, r1
 801121a:	f7ef f973 	bl	8000504 <__aeabi_ui2d>
 801121e:	4602      	mov	r2, r0
 8011220:	460b      	mov	r3, r1
 8011222:	4650      	mov	r0, sl
 8011224:	4659      	mov	r1, fp
 8011226:	f7ef f831 	bl	800028c <__adddf3>
 801122a:	2d0f      	cmp	r5, #15
 801122c:	4682      	mov	sl, r0
 801122e:	468b      	mov	fp, r1
 8011230:	ddd5      	ble.n	80111de <_strtod_l+0x3b6>
 8011232:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011234:	1b2c      	subs	r4, r5, r4
 8011236:	441c      	add	r4, r3
 8011238:	2c00      	cmp	r4, #0
 801123a:	f340 8093 	ble.w	8011364 <_strtod_l+0x53c>
 801123e:	f014 030f 	ands.w	r3, r4, #15
 8011242:	d00a      	beq.n	801125a <_strtod_l+0x432>
 8011244:	495c      	ldr	r1, [pc, #368]	@ (80113b8 <_strtod_l+0x590>)
 8011246:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 801124a:	4652      	mov	r2, sl
 801124c:	465b      	mov	r3, fp
 801124e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011252:	f7ef f9d1 	bl	80005f8 <__aeabi_dmul>
 8011256:	4682      	mov	sl, r0
 8011258:	468b      	mov	fp, r1
 801125a:	f034 040f 	bics.w	r4, r4, #15
 801125e:	d073      	beq.n	8011348 <_strtod_l+0x520>
 8011260:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8011264:	dd49      	ble.n	80112fa <_strtod_l+0x4d2>
 8011266:	2400      	movs	r4, #0
 8011268:	46a0      	mov	r8, r4
 801126a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801126c:	46a1      	mov	r9, r4
 801126e:	9a05      	ldr	r2, [sp, #20]
 8011270:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 80113c0 <_strtod_l+0x598>
 8011274:	2322      	movs	r3, #34	@ 0x22
 8011276:	6013      	str	r3, [r2, #0]
 8011278:	f04f 0a00 	mov.w	sl, #0
 801127c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801127e:	2b00      	cmp	r3, #0
 8011280:	f43f ae0b 	beq.w	8010e9a <_strtod_l+0x72>
 8011284:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011286:	9805      	ldr	r0, [sp, #20]
 8011288:	f002 fde4 	bl	8013e54 <_Bfree>
 801128c:	9805      	ldr	r0, [sp, #20]
 801128e:	4649      	mov	r1, r9
 8011290:	f002 fde0 	bl	8013e54 <_Bfree>
 8011294:	9805      	ldr	r0, [sp, #20]
 8011296:	4641      	mov	r1, r8
 8011298:	f002 fddc 	bl	8013e54 <_Bfree>
 801129c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801129e:	9805      	ldr	r0, [sp, #20]
 80112a0:	f002 fdd8 	bl	8013e54 <_Bfree>
 80112a4:	9805      	ldr	r0, [sp, #20]
 80112a6:	4621      	mov	r1, r4
 80112a8:	f002 fdd4 	bl	8013e54 <_Bfree>
 80112ac:	e5f5      	b.n	8010e9a <_strtod_l+0x72>
 80112ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80112b0:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80112b4:	4293      	cmp	r3, r2
 80112b6:	dbbc      	blt.n	8011232 <_strtod_l+0x40a>
 80112b8:	4c3f      	ldr	r4, [pc, #252]	@ (80113b8 <_strtod_l+0x590>)
 80112ba:	f1c5 050f 	rsb	r5, r5, #15
 80112be:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80112c2:	4652      	mov	r2, sl
 80112c4:	465b      	mov	r3, fp
 80112c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80112ca:	f7ef f995 	bl	80005f8 <__aeabi_dmul>
 80112ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80112d0:	1b5d      	subs	r5, r3, r5
 80112d2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80112d6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80112da:	e78f      	b.n	80111fc <_strtod_l+0x3d4>
 80112dc:	3316      	adds	r3, #22
 80112de:	dba8      	blt.n	8011232 <_strtod_l+0x40a>
 80112e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80112e2:	eba3 0808 	sub.w	r8, r3, r8
 80112e6:	4b34      	ldr	r3, [pc, #208]	@ (80113b8 <_strtod_l+0x590>)
 80112e8:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80112ec:	e9d8 2300 	ldrd	r2, r3, [r8]
 80112f0:	4650      	mov	r0, sl
 80112f2:	4659      	mov	r1, fp
 80112f4:	f7ef faaa 	bl	800084c <__aeabi_ddiv>
 80112f8:	e782      	b.n	8011200 <_strtod_l+0x3d8>
 80112fa:	2300      	movs	r3, #0
 80112fc:	4f2f      	ldr	r7, [pc, #188]	@ (80113bc <_strtod_l+0x594>)
 80112fe:	1124      	asrs	r4, r4, #4
 8011300:	4650      	mov	r0, sl
 8011302:	4659      	mov	r1, fp
 8011304:	461e      	mov	r6, r3
 8011306:	2c01      	cmp	r4, #1
 8011308:	dc21      	bgt.n	801134e <_strtod_l+0x526>
 801130a:	b10b      	cbz	r3, 8011310 <_strtod_l+0x4e8>
 801130c:	4682      	mov	sl, r0
 801130e:	468b      	mov	fp, r1
 8011310:	492a      	ldr	r1, [pc, #168]	@ (80113bc <_strtod_l+0x594>)
 8011312:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8011316:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 801131a:	4652      	mov	r2, sl
 801131c:	465b      	mov	r3, fp
 801131e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011322:	f7ef f969 	bl	80005f8 <__aeabi_dmul>
 8011326:	4b26      	ldr	r3, [pc, #152]	@ (80113c0 <_strtod_l+0x598>)
 8011328:	460a      	mov	r2, r1
 801132a:	400b      	ands	r3, r1
 801132c:	4925      	ldr	r1, [pc, #148]	@ (80113c4 <_strtod_l+0x59c>)
 801132e:	428b      	cmp	r3, r1
 8011330:	4682      	mov	sl, r0
 8011332:	d898      	bhi.n	8011266 <_strtod_l+0x43e>
 8011334:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8011338:	428b      	cmp	r3, r1
 801133a:	bf86      	itte	hi
 801133c:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 80113c8 <_strtod_l+0x5a0>
 8011340:	f04f 3aff 	movhi.w	sl, #4294967295
 8011344:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8011348:	2300      	movs	r3, #0
 801134a:	9308      	str	r3, [sp, #32]
 801134c:	e076      	b.n	801143c <_strtod_l+0x614>
 801134e:	07e2      	lsls	r2, r4, #31
 8011350:	d504      	bpl.n	801135c <_strtod_l+0x534>
 8011352:	e9d7 2300 	ldrd	r2, r3, [r7]
 8011356:	f7ef f94f 	bl	80005f8 <__aeabi_dmul>
 801135a:	2301      	movs	r3, #1
 801135c:	3601      	adds	r6, #1
 801135e:	1064      	asrs	r4, r4, #1
 8011360:	3708      	adds	r7, #8
 8011362:	e7d0      	b.n	8011306 <_strtod_l+0x4de>
 8011364:	d0f0      	beq.n	8011348 <_strtod_l+0x520>
 8011366:	4264      	negs	r4, r4
 8011368:	f014 020f 	ands.w	r2, r4, #15
 801136c:	d00a      	beq.n	8011384 <_strtod_l+0x55c>
 801136e:	4b12      	ldr	r3, [pc, #72]	@ (80113b8 <_strtod_l+0x590>)
 8011370:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011374:	4650      	mov	r0, sl
 8011376:	4659      	mov	r1, fp
 8011378:	e9d3 2300 	ldrd	r2, r3, [r3]
 801137c:	f7ef fa66 	bl	800084c <__aeabi_ddiv>
 8011380:	4682      	mov	sl, r0
 8011382:	468b      	mov	fp, r1
 8011384:	1124      	asrs	r4, r4, #4
 8011386:	d0df      	beq.n	8011348 <_strtod_l+0x520>
 8011388:	2c1f      	cmp	r4, #31
 801138a:	dd1f      	ble.n	80113cc <_strtod_l+0x5a4>
 801138c:	2400      	movs	r4, #0
 801138e:	46a0      	mov	r8, r4
 8011390:	940b      	str	r4, [sp, #44]	@ 0x2c
 8011392:	46a1      	mov	r9, r4
 8011394:	9a05      	ldr	r2, [sp, #20]
 8011396:	2322      	movs	r3, #34	@ 0x22
 8011398:	f04f 0a00 	mov.w	sl, #0
 801139c:	f04f 0b00 	mov.w	fp, #0
 80113a0:	6013      	str	r3, [r2, #0]
 80113a2:	e76b      	b.n	801127c <_strtod_l+0x454>
 80113a4:	08015df7 	.word	0x08015df7
 80113a8:	08016014 	.word	0x08016014
 80113ac:	08015def 	.word	0x08015def
 80113b0:	08015ed6 	.word	0x08015ed6
 80113b4:	08015ed2 	.word	0x08015ed2
 80113b8:	080161a0 	.word	0x080161a0
 80113bc:	08016178 	.word	0x08016178
 80113c0:	7ff00000 	.word	0x7ff00000
 80113c4:	7ca00000 	.word	0x7ca00000
 80113c8:	7fefffff 	.word	0x7fefffff
 80113cc:	f014 0310 	ands.w	r3, r4, #16
 80113d0:	bf18      	it	ne
 80113d2:	236a      	movne	r3, #106	@ 0x6a
 80113d4:	4ea9      	ldr	r6, [pc, #676]	@ (801167c <_strtod_l+0x854>)
 80113d6:	9308      	str	r3, [sp, #32]
 80113d8:	4650      	mov	r0, sl
 80113da:	4659      	mov	r1, fp
 80113dc:	2300      	movs	r3, #0
 80113de:	07e7      	lsls	r7, r4, #31
 80113e0:	d504      	bpl.n	80113ec <_strtod_l+0x5c4>
 80113e2:	e9d6 2300 	ldrd	r2, r3, [r6]
 80113e6:	f7ef f907 	bl	80005f8 <__aeabi_dmul>
 80113ea:	2301      	movs	r3, #1
 80113ec:	1064      	asrs	r4, r4, #1
 80113ee:	f106 0608 	add.w	r6, r6, #8
 80113f2:	d1f4      	bne.n	80113de <_strtod_l+0x5b6>
 80113f4:	b10b      	cbz	r3, 80113fa <_strtod_l+0x5d2>
 80113f6:	4682      	mov	sl, r0
 80113f8:	468b      	mov	fp, r1
 80113fa:	9b08      	ldr	r3, [sp, #32]
 80113fc:	b1b3      	cbz	r3, 801142c <_strtod_l+0x604>
 80113fe:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8011402:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8011406:	2b00      	cmp	r3, #0
 8011408:	4659      	mov	r1, fp
 801140a:	dd0f      	ble.n	801142c <_strtod_l+0x604>
 801140c:	2b1f      	cmp	r3, #31
 801140e:	dd56      	ble.n	80114be <_strtod_l+0x696>
 8011410:	2b34      	cmp	r3, #52	@ 0x34
 8011412:	bfde      	ittt	le
 8011414:	f04f 33ff 	movle.w	r3, #4294967295
 8011418:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 801141c:	4093      	lslle	r3, r2
 801141e:	f04f 0a00 	mov.w	sl, #0
 8011422:	bfcc      	ite	gt
 8011424:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8011428:	ea03 0b01 	andle.w	fp, r3, r1
 801142c:	2200      	movs	r2, #0
 801142e:	2300      	movs	r3, #0
 8011430:	4650      	mov	r0, sl
 8011432:	4659      	mov	r1, fp
 8011434:	f7ef fb48 	bl	8000ac8 <__aeabi_dcmpeq>
 8011438:	2800      	cmp	r0, #0
 801143a:	d1a7      	bne.n	801138c <_strtod_l+0x564>
 801143c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801143e:	9300      	str	r3, [sp, #0]
 8011440:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8011442:	9805      	ldr	r0, [sp, #20]
 8011444:	462b      	mov	r3, r5
 8011446:	464a      	mov	r2, r9
 8011448:	f002 fd6c 	bl	8013f24 <__s2b>
 801144c:	900b      	str	r0, [sp, #44]	@ 0x2c
 801144e:	2800      	cmp	r0, #0
 8011450:	f43f af09 	beq.w	8011266 <_strtod_l+0x43e>
 8011454:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011456:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011458:	2a00      	cmp	r2, #0
 801145a:	eba3 0308 	sub.w	r3, r3, r8
 801145e:	bfa8      	it	ge
 8011460:	2300      	movge	r3, #0
 8011462:	9312      	str	r3, [sp, #72]	@ 0x48
 8011464:	2400      	movs	r4, #0
 8011466:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 801146a:	9316      	str	r3, [sp, #88]	@ 0x58
 801146c:	46a0      	mov	r8, r4
 801146e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011470:	9805      	ldr	r0, [sp, #20]
 8011472:	6859      	ldr	r1, [r3, #4]
 8011474:	f002 fcae 	bl	8013dd4 <_Balloc>
 8011478:	4681      	mov	r9, r0
 801147a:	2800      	cmp	r0, #0
 801147c:	f43f aef7 	beq.w	801126e <_strtod_l+0x446>
 8011480:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011482:	691a      	ldr	r2, [r3, #16]
 8011484:	3202      	adds	r2, #2
 8011486:	f103 010c 	add.w	r1, r3, #12
 801148a:	0092      	lsls	r2, r2, #2
 801148c:	300c      	adds	r0, #12
 801148e:	f001 fa7c 	bl	801298a <memcpy>
 8011492:	ec4b ab10 	vmov	d0, sl, fp
 8011496:	9805      	ldr	r0, [sp, #20]
 8011498:	aa1c      	add	r2, sp, #112	@ 0x70
 801149a:	a91b      	add	r1, sp, #108	@ 0x6c
 801149c:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80114a0:	f003 f874 	bl	801458c <__d2b>
 80114a4:	901a      	str	r0, [sp, #104]	@ 0x68
 80114a6:	2800      	cmp	r0, #0
 80114a8:	f43f aee1 	beq.w	801126e <_strtod_l+0x446>
 80114ac:	9805      	ldr	r0, [sp, #20]
 80114ae:	2101      	movs	r1, #1
 80114b0:	f002 fdce 	bl	8014050 <__i2b>
 80114b4:	4680      	mov	r8, r0
 80114b6:	b948      	cbnz	r0, 80114cc <_strtod_l+0x6a4>
 80114b8:	f04f 0800 	mov.w	r8, #0
 80114bc:	e6d7      	b.n	801126e <_strtod_l+0x446>
 80114be:	f04f 32ff 	mov.w	r2, #4294967295
 80114c2:	fa02 f303 	lsl.w	r3, r2, r3
 80114c6:	ea03 0a0a 	and.w	sl, r3, sl
 80114ca:	e7af      	b.n	801142c <_strtod_l+0x604>
 80114cc:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80114ce:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80114d0:	2d00      	cmp	r5, #0
 80114d2:	bfab      	itete	ge
 80114d4:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80114d6:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80114d8:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80114da:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80114dc:	bfac      	ite	ge
 80114de:	18ef      	addge	r7, r5, r3
 80114e0:	1b5e      	sublt	r6, r3, r5
 80114e2:	9b08      	ldr	r3, [sp, #32]
 80114e4:	1aed      	subs	r5, r5, r3
 80114e6:	4415      	add	r5, r2
 80114e8:	4b65      	ldr	r3, [pc, #404]	@ (8011680 <_strtod_l+0x858>)
 80114ea:	3d01      	subs	r5, #1
 80114ec:	429d      	cmp	r5, r3
 80114ee:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80114f2:	da50      	bge.n	8011596 <_strtod_l+0x76e>
 80114f4:	1b5b      	subs	r3, r3, r5
 80114f6:	2b1f      	cmp	r3, #31
 80114f8:	eba2 0203 	sub.w	r2, r2, r3
 80114fc:	f04f 0101 	mov.w	r1, #1
 8011500:	dc3d      	bgt.n	801157e <_strtod_l+0x756>
 8011502:	fa01 f303 	lsl.w	r3, r1, r3
 8011506:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011508:	2300      	movs	r3, #0
 801150a:	9310      	str	r3, [sp, #64]	@ 0x40
 801150c:	18bd      	adds	r5, r7, r2
 801150e:	9b08      	ldr	r3, [sp, #32]
 8011510:	42af      	cmp	r7, r5
 8011512:	4416      	add	r6, r2
 8011514:	441e      	add	r6, r3
 8011516:	463b      	mov	r3, r7
 8011518:	bfa8      	it	ge
 801151a:	462b      	movge	r3, r5
 801151c:	42b3      	cmp	r3, r6
 801151e:	bfa8      	it	ge
 8011520:	4633      	movge	r3, r6
 8011522:	2b00      	cmp	r3, #0
 8011524:	bfc2      	ittt	gt
 8011526:	1aed      	subgt	r5, r5, r3
 8011528:	1af6      	subgt	r6, r6, r3
 801152a:	1aff      	subgt	r7, r7, r3
 801152c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801152e:	2b00      	cmp	r3, #0
 8011530:	dd16      	ble.n	8011560 <_strtod_l+0x738>
 8011532:	4641      	mov	r1, r8
 8011534:	9805      	ldr	r0, [sp, #20]
 8011536:	461a      	mov	r2, r3
 8011538:	f002 fe42 	bl	80141c0 <__pow5mult>
 801153c:	4680      	mov	r8, r0
 801153e:	2800      	cmp	r0, #0
 8011540:	d0ba      	beq.n	80114b8 <_strtod_l+0x690>
 8011542:	4601      	mov	r1, r0
 8011544:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8011546:	9805      	ldr	r0, [sp, #20]
 8011548:	f002 fd98 	bl	801407c <__multiply>
 801154c:	900a      	str	r0, [sp, #40]	@ 0x28
 801154e:	2800      	cmp	r0, #0
 8011550:	f43f ae8d 	beq.w	801126e <_strtod_l+0x446>
 8011554:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011556:	9805      	ldr	r0, [sp, #20]
 8011558:	f002 fc7c 	bl	8013e54 <_Bfree>
 801155c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801155e:	931a      	str	r3, [sp, #104]	@ 0x68
 8011560:	2d00      	cmp	r5, #0
 8011562:	dc1d      	bgt.n	80115a0 <_strtod_l+0x778>
 8011564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011566:	2b00      	cmp	r3, #0
 8011568:	dd23      	ble.n	80115b2 <_strtod_l+0x78a>
 801156a:	4649      	mov	r1, r9
 801156c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801156e:	9805      	ldr	r0, [sp, #20]
 8011570:	f002 fe26 	bl	80141c0 <__pow5mult>
 8011574:	4681      	mov	r9, r0
 8011576:	b9e0      	cbnz	r0, 80115b2 <_strtod_l+0x78a>
 8011578:	f04f 0900 	mov.w	r9, #0
 801157c:	e677      	b.n	801126e <_strtod_l+0x446>
 801157e:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8011582:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8011586:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 801158a:	35e2      	adds	r5, #226	@ 0xe2
 801158c:	fa01 f305 	lsl.w	r3, r1, r5
 8011590:	9310      	str	r3, [sp, #64]	@ 0x40
 8011592:	9113      	str	r1, [sp, #76]	@ 0x4c
 8011594:	e7ba      	b.n	801150c <_strtod_l+0x6e4>
 8011596:	2300      	movs	r3, #0
 8011598:	9310      	str	r3, [sp, #64]	@ 0x40
 801159a:	2301      	movs	r3, #1
 801159c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801159e:	e7b5      	b.n	801150c <_strtod_l+0x6e4>
 80115a0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80115a2:	9805      	ldr	r0, [sp, #20]
 80115a4:	462a      	mov	r2, r5
 80115a6:	f002 fe65 	bl	8014274 <__lshift>
 80115aa:	901a      	str	r0, [sp, #104]	@ 0x68
 80115ac:	2800      	cmp	r0, #0
 80115ae:	d1d9      	bne.n	8011564 <_strtod_l+0x73c>
 80115b0:	e65d      	b.n	801126e <_strtod_l+0x446>
 80115b2:	2e00      	cmp	r6, #0
 80115b4:	dd07      	ble.n	80115c6 <_strtod_l+0x79e>
 80115b6:	4649      	mov	r1, r9
 80115b8:	9805      	ldr	r0, [sp, #20]
 80115ba:	4632      	mov	r2, r6
 80115bc:	f002 fe5a 	bl	8014274 <__lshift>
 80115c0:	4681      	mov	r9, r0
 80115c2:	2800      	cmp	r0, #0
 80115c4:	d0d8      	beq.n	8011578 <_strtod_l+0x750>
 80115c6:	2f00      	cmp	r7, #0
 80115c8:	dd08      	ble.n	80115dc <_strtod_l+0x7b4>
 80115ca:	4641      	mov	r1, r8
 80115cc:	9805      	ldr	r0, [sp, #20]
 80115ce:	463a      	mov	r2, r7
 80115d0:	f002 fe50 	bl	8014274 <__lshift>
 80115d4:	4680      	mov	r8, r0
 80115d6:	2800      	cmp	r0, #0
 80115d8:	f43f ae49 	beq.w	801126e <_strtod_l+0x446>
 80115dc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80115de:	9805      	ldr	r0, [sp, #20]
 80115e0:	464a      	mov	r2, r9
 80115e2:	f002 fecf 	bl	8014384 <__mdiff>
 80115e6:	4604      	mov	r4, r0
 80115e8:	2800      	cmp	r0, #0
 80115ea:	f43f ae40 	beq.w	801126e <_strtod_l+0x446>
 80115ee:	68c3      	ldr	r3, [r0, #12]
 80115f0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80115f2:	2300      	movs	r3, #0
 80115f4:	60c3      	str	r3, [r0, #12]
 80115f6:	4641      	mov	r1, r8
 80115f8:	f002 fea8 	bl	801434c <__mcmp>
 80115fc:	2800      	cmp	r0, #0
 80115fe:	da45      	bge.n	801168c <_strtod_l+0x864>
 8011600:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011602:	ea53 030a 	orrs.w	r3, r3, sl
 8011606:	d16b      	bne.n	80116e0 <_strtod_l+0x8b8>
 8011608:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801160c:	2b00      	cmp	r3, #0
 801160e:	d167      	bne.n	80116e0 <_strtod_l+0x8b8>
 8011610:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011614:	0d1b      	lsrs	r3, r3, #20
 8011616:	051b      	lsls	r3, r3, #20
 8011618:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 801161c:	d960      	bls.n	80116e0 <_strtod_l+0x8b8>
 801161e:	6963      	ldr	r3, [r4, #20]
 8011620:	b913      	cbnz	r3, 8011628 <_strtod_l+0x800>
 8011622:	6923      	ldr	r3, [r4, #16]
 8011624:	2b01      	cmp	r3, #1
 8011626:	dd5b      	ble.n	80116e0 <_strtod_l+0x8b8>
 8011628:	4621      	mov	r1, r4
 801162a:	2201      	movs	r2, #1
 801162c:	9805      	ldr	r0, [sp, #20]
 801162e:	f002 fe21 	bl	8014274 <__lshift>
 8011632:	4641      	mov	r1, r8
 8011634:	4604      	mov	r4, r0
 8011636:	f002 fe89 	bl	801434c <__mcmp>
 801163a:	2800      	cmp	r0, #0
 801163c:	dd50      	ble.n	80116e0 <_strtod_l+0x8b8>
 801163e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011642:	9a08      	ldr	r2, [sp, #32]
 8011644:	0d1b      	lsrs	r3, r3, #20
 8011646:	051b      	lsls	r3, r3, #20
 8011648:	2a00      	cmp	r2, #0
 801164a:	d06a      	beq.n	8011722 <_strtod_l+0x8fa>
 801164c:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8011650:	d867      	bhi.n	8011722 <_strtod_l+0x8fa>
 8011652:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8011656:	f67f ae9d 	bls.w	8011394 <_strtod_l+0x56c>
 801165a:	4b0a      	ldr	r3, [pc, #40]	@ (8011684 <_strtod_l+0x85c>)
 801165c:	4650      	mov	r0, sl
 801165e:	4659      	mov	r1, fp
 8011660:	2200      	movs	r2, #0
 8011662:	f7ee ffc9 	bl	80005f8 <__aeabi_dmul>
 8011666:	4b08      	ldr	r3, [pc, #32]	@ (8011688 <_strtod_l+0x860>)
 8011668:	400b      	ands	r3, r1
 801166a:	4682      	mov	sl, r0
 801166c:	468b      	mov	fp, r1
 801166e:	2b00      	cmp	r3, #0
 8011670:	f47f ae08 	bne.w	8011284 <_strtod_l+0x45c>
 8011674:	9a05      	ldr	r2, [sp, #20]
 8011676:	2322      	movs	r3, #34	@ 0x22
 8011678:	6013      	str	r3, [r2, #0]
 801167a:	e603      	b.n	8011284 <_strtod_l+0x45c>
 801167c:	08016040 	.word	0x08016040
 8011680:	fffffc02 	.word	0xfffffc02
 8011684:	39500000 	.word	0x39500000
 8011688:	7ff00000 	.word	0x7ff00000
 801168c:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8011690:	d165      	bne.n	801175e <_strtod_l+0x936>
 8011692:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011694:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8011698:	b35a      	cbz	r2, 80116f2 <_strtod_l+0x8ca>
 801169a:	4a9f      	ldr	r2, [pc, #636]	@ (8011918 <_strtod_l+0xaf0>)
 801169c:	4293      	cmp	r3, r2
 801169e:	d12b      	bne.n	80116f8 <_strtod_l+0x8d0>
 80116a0:	9b08      	ldr	r3, [sp, #32]
 80116a2:	4651      	mov	r1, sl
 80116a4:	b303      	cbz	r3, 80116e8 <_strtod_l+0x8c0>
 80116a6:	4b9d      	ldr	r3, [pc, #628]	@ (801191c <_strtod_l+0xaf4>)
 80116a8:	465a      	mov	r2, fp
 80116aa:	4013      	ands	r3, r2
 80116ac:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80116b0:	f04f 32ff 	mov.w	r2, #4294967295
 80116b4:	d81b      	bhi.n	80116ee <_strtod_l+0x8c6>
 80116b6:	0d1b      	lsrs	r3, r3, #20
 80116b8:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80116bc:	fa02 f303 	lsl.w	r3, r2, r3
 80116c0:	4299      	cmp	r1, r3
 80116c2:	d119      	bne.n	80116f8 <_strtod_l+0x8d0>
 80116c4:	4b96      	ldr	r3, [pc, #600]	@ (8011920 <_strtod_l+0xaf8>)
 80116c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80116c8:	429a      	cmp	r2, r3
 80116ca:	d102      	bne.n	80116d2 <_strtod_l+0x8aa>
 80116cc:	3101      	adds	r1, #1
 80116ce:	f43f adce 	beq.w	801126e <_strtod_l+0x446>
 80116d2:	4b92      	ldr	r3, [pc, #584]	@ (801191c <_strtod_l+0xaf4>)
 80116d4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80116d6:	401a      	ands	r2, r3
 80116d8:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80116dc:	f04f 0a00 	mov.w	sl, #0
 80116e0:	9b08      	ldr	r3, [sp, #32]
 80116e2:	2b00      	cmp	r3, #0
 80116e4:	d1b9      	bne.n	801165a <_strtod_l+0x832>
 80116e6:	e5cd      	b.n	8011284 <_strtod_l+0x45c>
 80116e8:	f04f 33ff 	mov.w	r3, #4294967295
 80116ec:	e7e8      	b.n	80116c0 <_strtod_l+0x898>
 80116ee:	4613      	mov	r3, r2
 80116f0:	e7e6      	b.n	80116c0 <_strtod_l+0x898>
 80116f2:	ea53 030a 	orrs.w	r3, r3, sl
 80116f6:	d0a2      	beq.n	801163e <_strtod_l+0x816>
 80116f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80116fa:	b1db      	cbz	r3, 8011734 <_strtod_l+0x90c>
 80116fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80116fe:	4213      	tst	r3, r2
 8011700:	d0ee      	beq.n	80116e0 <_strtod_l+0x8b8>
 8011702:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011704:	9a08      	ldr	r2, [sp, #32]
 8011706:	4650      	mov	r0, sl
 8011708:	4659      	mov	r1, fp
 801170a:	b1bb      	cbz	r3, 801173c <_strtod_l+0x914>
 801170c:	f7ff fb6c 	bl	8010de8 <sulp>
 8011710:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8011714:	ec53 2b10 	vmov	r2, r3, d0
 8011718:	f7ee fdb8 	bl	800028c <__adddf3>
 801171c:	4682      	mov	sl, r0
 801171e:	468b      	mov	fp, r1
 8011720:	e7de      	b.n	80116e0 <_strtod_l+0x8b8>
 8011722:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8011726:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 801172a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 801172e:	f04f 3aff 	mov.w	sl, #4294967295
 8011732:	e7d5      	b.n	80116e0 <_strtod_l+0x8b8>
 8011734:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8011736:	ea13 0f0a 	tst.w	r3, sl
 801173a:	e7e1      	b.n	8011700 <_strtod_l+0x8d8>
 801173c:	f7ff fb54 	bl	8010de8 <sulp>
 8011740:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8011744:	ec53 2b10 	vmov	r2, r3, d0
 8011748:	f7ee fd9e 	bl	8000288 <__aeabi_dsub>
 801174c:	2200      	movs	r2, #0
 801174e:	2300      	movs	r3, #0
 8011750:	4682      	mov	sl, r0
 8011752:	468b      	mov	fp, r1
 8011754:	f7ef f9b8 	bl	8000ac8 <__aeabi_dcmpeq>
 8011758:	2800      	cmp	r0, #0
 801175a:	d0c1      	beq.n	80116e0 <_strtod_l+0x8b8>
 801175c:	e61a      	b.n	8011394 <_strtod_l+0x56c>
 801175e:	4641      	mov	r1, r8
 8011760:	4620      	mov	r0, r4
 8011762:	f002 ff6b 	bl	801463c <__ratio>
 8011766:	ec57 6b10 	vmov	r6, r7, d0
 801176a:	2200      	movs	r2, #0
 801176c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011770:	4630      	mov	r0, r6
 8011772:	4639      	mov	r1, r7
 8011774:	f7ef f9bc 	bl	8000af0 <__aeabi_dcmple>
 8011778:	2800      	cmp	r0, #0
 801177a:	d06f      	beq.n	801185c <_strtod_l+0xa34>
 801177c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801177e:	2b00      	cmp	r3, #0
 8011780:	d17a      	bne.n	8011878 <_strtod_l+0xa50>
 8011782:	f1ba 0f00 	cmp.w	sl, #0
 8011786:	d158      	bne.n	801183a <_strtod_l+0xa12>
 8011788:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801178a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801178e:	2b00      	cmp	r3, #0
 8011790:	d15a      	bne.n	8011848 <_strtod_l+0xa20>
 8011792:	4b64      	ldr	r3, [pc, #400]	@ (8011924 <_strtod_l+0xafc>)
 8011794:	2200      	movs	r2, #0
 8011796:	4630      	mov	r0, r6
 8011798:	4639      	mov	r1, r7
 801179a:	f7ef f99f 	bl	8000adc <__aeabi_dcmplt>
 801179e:	2800      	cmp	r0, #0
 80117a0:	d159      	bne.n	8011856 <_strtod_l+0xa2e>
 80117a2:	4630      	mov	r0, r6
 80117a4:	4639      	mov	r1, r7
 80117a6:	4b60      	ldr	r3, [pc, #384]	@ (8011928 <_strtod_l+0xb00>)
 80117a8:	2200      	movs	r2, #0
 80117aa:	f7ee ff25 	bl	80005f8 <__aeabi_dmul>
 80117ae:	4606      	mov	r6, r0
 80117b0:	460f      	mov	r7, r1
 80117b2:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80117b6:	9606      	str	r6, [sp, #24]
 80117b8:	9307      	str	r3, [sp, #28]
 80117ba:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80117be:	4d57      	ldr	r5, [pc, #348]	@ (801191c <_strtod_l+0xaf4>)
 80117c0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80117c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80117c6:	401d      	ands	r5, r3
 80117c8:	4b58      	ldr	r3, [pc, #352]	@ (801192c <_strtod_l+0xb04>)
 80117ca:	429d      	cmp	r5, r3
 80117cc:	f040 80b2 	bne.w	8011934 <_strtod_l+0xb0c>
 80117d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80117d2:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80117d6:	ec4b ab10 	vmov	d0, sl, fp
 80117da:	f002 fe67 	bl	80144ac <__ulp>
 80117de:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80117e2:	ec51 0b10 	vmov	r0, r1, d0
 80117e6:	f7ee ff07 	bl	80005f8 <__aeabi_dmul>
 80117ea:	4652      	mov	r2, sl
 80117ec:	465b      	mov	r3, fp
 80117ee:	f7ee fd4d 	bl	800028c <__adddf3>
 80117f2:	460b      	mov	r3, r1
 80117f4:	4949      	ldr	r1, [pc, #292]	@ (801191c <_strtod_l+0xaf4>)
 80117f6:	4a4e      	ldr	r2, [pc, #312]	@ (8011930 <_strtod_l+0xb08>)
 80117f8:	4019      	ands	r1, r3
 80117fa:	4291      	cmp	r1, r2
 80117fc:	4682      	mov	sl, r0
 80117fe:	d942      	bls.n	8011886 <_strtod_l+0xa5e>
 8011800:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8011802:	4b47      	ldr	r3, [pc, #284]	@ (8011920 <_strtod_l+0xaf8>)
 8011804:	429a      	cmp	r2, r3
 8011806:	d103      	bne.n	8011810 <_strtod_l+0x9e8>
 8011808:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801180a:	3301      	adds	r3, #1
 801180c:	f43f ad2f 	beq.w	801126e <_strtod_l+0x446>
 8011810:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8011920 <_strtod_l+0xaf8>
 8011814:	f04f 3aff 	mov.w	sl, #4294967295
 8011818:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801181a:	9805      	ldr	r0, [sp, #20]
 801181c:	f002 fb1a 	bl	8013e54 <_Bfree>
 8011820:	9805      	ldr	r0, [sp, #20]
 8011822:	4649      	mov	r1, r9
 8011824:	f002 fb16 	bl	8013e54 <_Bfree>
 8011828:	9805      	ldr	r0, [sp, #20]
 801182a:	4641      	mov	r1, r8
 801182c:	f002 fb12 	bl	8013e54 <_Bfree>
 8011830:	9805      	ldr	r0, [sp, #20]
 8011832:	4621      	mov	r1, r4
 8011834:	f002 fb0e 	bl	8013e54 <_Bfree>
 8011838:	e619      	b.n	801146e <_strtod_l+0x646>
 801183a:	f1ba 0f01 	cmp.w	sl, #1
 801183e:	d103      	bne.n	8011848 <_strtod_l+0xa20>
 8011840:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011842:	2b00      	cmp	r3, #0
 8011844:	f43f ada6 	beq.w	8011394 <_strtod_l+0x56c>
 8011848:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80118f8 <_strtod_l+0xad0>
 801184c:	4f35      	ldr	r7, [pc, #212]	@ (8011924 <_strtod_l+0xafc>)
 801184e:	ed8d 7b06 	vstr	d7, [sp, #24]
 8011852:	2600      	movs	r6, #0
 8011854:	e7b1      	b.n	80117ba <_strtod_l+0x992>
 8011856:	4f34      	ldr	r7, [pc, #208]	@ (8011928 <_strtod_l+0xb00>)
 8011858:	2600      	movs	r6, #0
 801185a:	e7aa      	b.n	80117b2 <_strtod_l+0x98a>
 801185c:	4b32      	ldr	r3, [pc, #200]	@ (8011928 <_strtod_l+0xb00>)
 801185e:	4630      	mov	r0, r6
 8011860:	4639      	mov	r1, r7
 8011862:	2200      	movs	r2, #0
 8011864:	f7ee fec8 	bl	80005f8 <__aeabi_dmul>
 8011868:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801186a:	4606      	mov	r6, r0
 801186c:	460f      	mov	r7, r1
 801186e:	2b00      	cmp	r3, #0
 8011870:	d09f      	beq.n	80117b2 <_strtod_l+0x98a>
 8011872:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8011876:	e7a0      	b.n	80117ba <_strtod_l+0x992>
 8011878:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8011900 <_strtod_l+0xad8>
 801187c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8011880:	ec57 6b17 	vmov	r6, r7, d7
 8011884:	e799      	b.n	80117ba <_strtod_l+0x992>
 8011886:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 801188a:	9b08      	ldr	r3, [sp, #32]
 801188c:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8011890:	2b00      	cmp	r3, #0
 8011892:	d1c1      	bne.n	8011818 <_strtod_l+0x9f0>
 8011894:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011898:	0d1b      	lsrs	r3, r3, #20
 801189a:	051b      	lsls	r3, r3, #20
 801189c:	429d      	cmp	r5, r3
 801189e:	d1bb      	bne.n	8011818 <_strtod_l+0x9f0>
 80118a0:	4630      	mov	r0, r6
 80118a2:	4639      	mov	r1, r7
 80118a4:	f7ef fa08 	bl	8000cb8 <__aeabi_d2lz>
 80118a8:	f7ee fe78 	bl	800059c <__aeabi_l2d>
 80118ac:	4602      	mov	r2, r0
 80118ae:	460b      	mov	r3, r1
 80118b0:	4630      	mov	r0, r6
 80118b2:	4639      	mov	r1, r7
 80118b4:	f7ee fce8 	bl	8000288 <__aeabi_dsub>
 80118b8:	460b      	mov	r3, r1
 80118ba:	4602      	mov	r2, r0
 80118bc:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80118c0:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80118c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80118c6:	ea46 060a 	orr.w	r6, r6, sl
 80118ca:	431e      	orrs	r6, r3
 80118cc:	d06f      	beq.n	80119ae <_strtod_l+0xb86>
 80118ce:	a30e      	add	r3, pc, #56	@ (adr r3, 8011908 <_strtod_l+0xae0>)
 80118d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80118d4:	f7ef f902 	bl	8000adc <__aeabi_dcmplt>
 80118d8:	2800      	cmp	r0, #0
 80118da:	f47f acd3 	bne.w	8011284 <_strtod_l+0x45c>
 80118de:	a30c      	add	r3, pc, #48	@ (adr r3, 8011910 <_strtod_l+0xae8>)
 80118e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80118e4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80118e8:	f7ef f916 	bl	8000b18 <__aeabi_dcmpgt>
 80118ec:	2800      	cmp	r0, #0
 80118ee:	d093      	beq.n	8011818 <_strtod_l+0x9f0>
 80118f0:	e4c8      	b.n	8011284 <_strtod_l+0x45c>
 80118f2:	bf00      	nop
 80118f4:	f3af 8000 	nop.w
 80118f8:	00000000 	.word	0x00000000
 80118fc:	bff00000 	.word	0xbff00000
 8011900:	00000000 	.word	0x00000000
 8011904:	3ff00000 	.word	0x3ff00000
 8011908:	94a03595 	.word	0x94a03595
 801190c:	3fdfffff 	.word	0x3fdfffff
 8011910:	35afe535 	.word	0x35afe535
 8011914:	3fe00000 	.word	0x3fe00000
 8011918:	000fffff 	.word	0x000fffff
 801191c:	7ff00000 	.word	0x7ff00000
 8011920:	7fefffff 	.word	0x7fefffff
 8011924:	3ff00000 	.word	0x3ff00000
 8011928:	3fe00000 	.word	0x3fe00000
 801192c:	7fe00000 	.word	0x7fe00000
 8011930:	7c9fffff 	.word	0x7c9fffff
 8011934:	9b08      	ldr	r3, [sp, #32]
 8011936:	b323      	cbz	r3, 8011982 <_strtod_l+0xb5a>
 8011938:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 801193c:	d821      	bhi.n	8011982 <_strtod_l+0xb5a>
 801193e:	a328      	add	r3, pc, #160	@ (adr r3, 80119e0 <_strtod_l+0xbb8>)
 8011940:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011944:	4630      	mov	r0, r6
 8011946:	4639      	mov	r1, r7
 8011948:	f7ef f8d2 	bl	8000af0 <__aeabi_dcmple>
 801194c:	b1a0      	cbz	r0, 8011978 <_strtod_l+0xb50>
 801194e:	4639      	mov	r1, r7
 8011950:	4630      	mov	r0, r6
 8011952:	f7ef f929 	bl	8000ba8 <__aeabi_d2uiz>
 8011956:	2801      	cmp	r0, #1
 8011958:	bf38      	it	cc
 801195a:	2001      	movcc	r0, #1
 801195c:	f7ee fdd2 	bl	8000504 <__aeabi_ui2d>
 8011960:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011962:	4606      	mov	r6, r0
 8011964:	460f      	mov	r7, r1
 8011966:	b9fb      	cbnz	r3, 80119a8 <_strtod_l+0xb80>
 8011968:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801196c:	9014      	str	r0, [sp, #80]	@ 0x50
 801196e:	9315      	str	r3, [sp, #84]	@ 0x54
 8011970:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8011974:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8011978:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801197a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 801197e:	1b5b      	subs	r3, r3, r5
 8011980:	9311      	str	r3, [sp, #68]	@ 0x44
 8011982:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8011986:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 801198a:	f002 fd8f 	bl	80144ac <__ulp>
 801198e:	4650      	mov	r0, sl
 8011990:	ec53 2b10 	vmov	r2, r3, d0
 8011994:	4659      	mov	r1, fp
 8011996:	f7ee fe2f 	bl	80005f8 <__aeabi_dmul>
 801199a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 801199e:	f7ee fc75 	bl	800028c <__adddf3>
 80119a2:	4682      	mov	sl, r0
 80119a4:	468b      	mov	fp, r1
 80119a6:	e770      	b.n	801188a <_strtod_l+0xa62>
 80119a8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80119ac:	e7e0      	b.n	8011970 <_strtod_l+0xb48>
 80119ae:	a30e      	add	r3, pc, #56	@ (adr r3, 80119e8 <_strtod_l+0xbc0>)
 80119b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80119b4:	f7ef f892 	bl	8000adc <__aeabi_dcmplt>
 80119b8:	e798      	b.n	80118ec <_strtod_l+0xac4>
 80119ba:	2300      	movs	r3, #0
 80119bc:	930e      	str	r3, [sp, #56]	@ 0x38
 80119be:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80119c0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80119c2:	6013      	str	r3, [r2, #0]
 80119c4:	f7ff ba6d 	b.w	8010ea2 <_strtod_l+0x7a>
 80119c8:	2a65      	cmp	r2, #101	@ 0x65
 80119ca:	f43f ab68 	beq.w	801109e <_strtod_l+0x276>
 80119ce:	2a45      	cmp	r2, #69	@ 0x45
 80119d0:	f43f ab65 	beq.w	801109e <_strtod_l+0x276>
 80119d4:	2301      	movs	r3, #1
 80119d6:	f7ff bba0 	b.w	801111a <_strtod_l+0x2f2>
 80119da:	bf00      	nop
 80119dc:	f3af 8000 	nop.w
 80119e0:	ffc00000 	.word	0xffc00000
 80119e4:	41dfffff 	.word	0x41dfffff
 80119e8:	94a03595 	.word	0x94a03595
 80119ec:	3fcfffff 	.word	0x3fcfffff

080119f0 <strtod>:
 80119f0:	460a      	mov	r2, r1
 80119f2:	4601      	mov	r1, r0
 80119f4:	4802      	ldr	r0, [pc, #8]	@ (8011a00 <strtod+0x10>)
 80119f6:	4b03      	ldr	r3, [pc, #12]	@ (8011a04 <strtod+0x14>)
 80119f8:	6800      	ldr	r0, [r0, #0]
 80119fa:	f7ff ba15 	b.w	8010e28 <_strtod_l>
 80119fe:	bf00      	nop
 8011a00:	20000404 	.word	0x20000404
 8011a04:	20000298 	.word	0x20000298

08011a08 <_strtol_l.isra.0>:
 8011a08:	2b24      	cmp	r3, #36	@ 0x24
 8011a0a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a0e:	4686      	mov	lr, r0
 8011a10:	4690      	mov	r8, r2
 8011a12:	d801      	bhi.n	8011a18 <_strtol_l.isra.0+0x10>
 8011a14:	2b01      	cmp	r3, #1
 8011a16:	d106      	bne.n	8011a26 <_strtol_l.isra.0+0x1e>
 8011a18:	f000 ff82 	bl	8012920 <__errno>
 8011a1c:	2316      	movs	r3, #22
 8011a1e:	6003      	str	r3, [r0, #0]
 8011a20:	2000      	movs	r0, #0
 8011a22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011a26:	4834      	ldr	r0, [pc, #208]	@ (8011af8 <_strtol_l.isra.0+0xf0>)
 8011a28:	460d      	mov	r5, r1
 8011a2a:	462a      	mov	r2, r5
 8011a2c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011a30:	5d06      	ldrb	r6, [r0, r4]
 8011a32:	f016 0608 	ands.w	r6, r6, #8
 8011a36:	d1f8      	bne.n	8011a2a <_strtol_l.isra.0+0x22>
 8011a38:	2c2d      	cmp	r4, #45	@ 0x2d
 8011a3a:	d110      	bne.n	8011a5e <_strtol_l.isra.0+0x56>
 8011a3c:	782c      	ldrb	r4, [r5, #0]
 8011a3e:	2601      	movs	r6, #1
 8011a40:	1c95      	adds	r5, r2, #2
 8011a42:	f033 0210 	bics.w	r2, r3, #16
 8011a46:	d115      	bne.n	8011a74 <_strtol_l.isra.0+0x6c>
 8011a48:	2c30      	cmp	r4, #48	@ 0x30
 8011a4a:	d10d      	bne.n	8011a68 <_strtol_l.isra.0+0x60>
 8011a4c:	782a      	ldrb	r2, [r5, #0]
 8011a4e:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8011a52:	2a58      	cmp	r2, #88	@ 0x58
 8011a54:	d108      	bne.n	8011a68 <_strtol_l.isra.0+0x60>
 8011a56:	786c      	ldrb	r4, [r5, #1]
 8011a58:	3502      	adds	r5, #2
 8011a5a:	2310      	movs	r3, #16
 8011a5c:	e00a      	b.n	8011a74 <_strtol_l.isra.0+0x6c>
 8011a5e:	2c2b      	cmp	r4, #43	@ 0x2b
 8011a60:	bf04      	itt	eq
 8011a62:	782c      	ldrbeq	r4, [r5, #0]
 8011a64:	1c95      	addeq	r5, r2, #2
 8011a66:	e7ec      	b.n	8011a42 <_strtol_l.isra.0+0x3a>
 8011a68:	2b00      	cmp	r3, #0
 8011a6a:	d1f6      	bne.n	8011a5a <_strtol_l.isra.0+0x52>
 8011a6c:	2c30      	cmp	r4, #48	@ 0x30
 8011a6e:	bf14      	ite	ne
 8011a70:	230a      	movne	r3, #10
 8011a72:	2308      	moveq	r3, #8
 8011a74:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8011a78:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011a7c:	2200      	movs	r2, #0
 8011a7e:	fbbc f9f3 	udiv	r9, ip, r3
 8011a82:	4610      	mov	r0, r2
 8011a84:	fb03 ca19 	mls	sl, r3, r9, ip
 8011a88:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8011a8c:	2f09      	cmp	r7, #9
 8011a8e:	d80f      	bhi.n	8011ab0 <_strtol_l.isra.0+0xa8>
 8011a90:	463c      	mov	r4, r7
 8011a92:	42a3      	cmp	r3, r4
 8011a94:	dd1b      	ble.n	8011ace <_strtol_l.isra.0+0xc6>
 8011a96:	1c57      	adds	r7, r2, #1
 8011a98:	d007      	beq.n	8011aaa <_strtol_l.isra.0+0xa2>
 8011a9a:	4581      	cmp	r9, r0
 8011a9c:	d314      	bcc.n	8011ac8 <_strtol_l.isra.0+0xc0>
 8011a9e:	d101      	bne.n	8011aa4 <_strtol_l.isra.0+0x9c>
 8011aa0:	45a2      	cmp	sl, r4
 8011aa2:	db11      	blt.n	8011ac8 <_strtol_l.isra.0+0xc0>
 8011aa4:	fb00 4003 	mla	r0, r0, r3, r4
 8011aa8:	2201      	movs	r2, #1
 8011aaa:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011aae:	e7eb      	b.n	8011a88 <_strtol_l.isra.0+0x80>
 8011ab0:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8011ab4:	2f19      	cmp	r7, #25
 8011ab6:	d801      	bhi.n	8011abc <_strtol_l.isra.0+0xb4>
 8011ab8:	3c37      	subs	r4, #55	@ 0x37
 8011aba:	e7ea      	b.n	8011a92 <_strtol_l.isra.0+0x8a>
 8011abc:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8011ac0:	2f19      	cmp	r7, #25
 8011ac2:	d804      	bhi.n	8011ace <_strtol_l.isra.0+0xc6>
 8011ac4:	3c57      	subs	r4, #87	@ 0x57
 8011ac6:	e7e4      	b.n	8011a92 <_strtol_l.isra.0+0x8a>
 8011ac8:	f04f 32ff 	mov.w	r2, #4294967295
 8011acc:	e7ed      	b.n	8011aaa <_strtol_l.isra.0+0xa2>
 8011ace:	1c53      	adds	r3, r2, #1
 8011ad0:	d108      	bne.n	8011ae4 <_strtol_l.isra.0+0xdc>
 8011ad2:	2322      	movs	r3, #34	@ 0x22
 8011ad4:	f8ce 3000 	str.w	r3, [lr]
 8011ad8:	4660      	mov	r0, ip
 8011ada:	f1b8 0f00 	cmp.w	r8, #0
 8011ade:	d0a0      	beq.n	8011a22 <_strtol_l.isra.0+0x1a>
 8011ae0:	1e69      	subs	r1, r5, #1
 8011ae2:	e006      	b.n	8011af2 <_strtol_l.isra.0+0xea>
 8011ae4:	b106      	cbz	r6, 8011ae8 <_strtol_l.isra.0+0xe0>
 8011ae6:	4240      	negs	r0, r0
 8011ae8:	f1b8 0f00 	cmp.w	r8, #0
 8011aec:	d099      	beq.n	8011a22 <_strtol_l.isra.0+0x1a>
 8011aee:	2a00      	cmp	r2, #0
 8011af0:	d1f6      	bne.n	8011ae0 <_strtol_l.isra.0+0xd8>
 8011af2:	f8c8 1000 	str.w	r1, [r8]
 8011af6:	e794      	b.n	8011a22 <_strtol_l.isra.0+0x1a>
 8011af8:	08016069 	.word	0x08016069

08011afc <strtol>:
 8011afc:	4613      	mov	r3, r2
 8011afe:	460a      	mov	r2, r1
 8011b00:	4601      	mov	r1, r0
 8011b02:	4802      	ldr	r0, [pc, #8]	@ (8011b0c <strtol+0x10>)
 8011b04:	6800      	ldr	r0, [r0, #0]
 8011b06:	f7ff bf7f 	b.w	8011a08 <_strtol_l.isra.0>
 8011b0a:	bf00      	nop
 8011b0c:	20000404 	.word	0x20000404

08011b10 <__cvt>:
 8011b10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011b14:	ec57 6b10 	vmov	r6, r7, d0
 8011b18:	2f00      	cmp	r7, #0
 8011b1a:	460c      	mov	r4, r1
 8011b1c:	4619      	mov	r1, r3
 8011b1e:	463b      	mov	r3, r7
 8011b20:	bfbb      	ittet	lt
 8011b22:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8011b26:	461f      	movlt	r7, r3
 8011b28:	2300      	movge	r3, #0
 8011b2a:	232d      	movlt	r3, #45	@ 0x2d
 8011b2c:	700b      	strb	r3, [r1, #0]
 8011b2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011b30:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8011b34:	4691      	mov	r9, r2
 8011b36:	f023 0820 	bic.w	r8, r3, #32
 8011b3a:	bfbc      	itt	lt
 8011b3c:	4632      	movlt	r2, r6
 8011b3e:	4616      	movlt	r6, r2
 8011b40:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8011b44:	d005      	beq.n	8011b52 <__cvt+0x42>
 8011b46:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8011b4a:	d100      	bne.n	8011b4e <__cvt+0x3e>
 8011b4c:	3401      	adds	r4, #1
 8011b4e:	2102      	movs	r1, #2
 8011b50:	e000      	b.n	8011b54 <__cvt+0x44>
 8011b52:	2103      	movs	r1, #3
 8011b54:	ab03      	add	r3, sp, #12
 8011b56:	9301      	str	r3, [sp, #4]
 8011b58:	ab02      	add	r3, sp, #8
 8011b5a:	9300      	str	r3, [sp, #0]
 8011b5c:	ec47 6b10 	vmov	d0, r6, r7
 8011b60:	4653      	mov	r3, sl
 8011b62:	4622      	mov	r2, r4
 8011b64:	f000 ffd0 	bl	8012b08 <_dtoa_r>
 8011b68:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8011b6c:	4605      	mov	r5, r0
 8011b6e:	d119      	bne.n	8011ba4 <__cvt+0x94>
 8011b70:	f019 0f01 	tst.w	r9, #1
 8011b74:	d00e      	beq.n	8011b94 <__cvt+0x84>
 8011b76:	eb00 0904 	add.w	r9, r0, r4
 8011b7a:	2200      	movs	r2, #0
 8011b7c:	2300      	movs	r3, #0
 8011b7e:	4630      	mov	r0, r6
 8011b80:	4639      	mov	r1, r7
 8011b82:	f7ee ffa1 	bl	8000ac8 <__aeabi_dcmpeq>
 8011b86:	b108      	cbz	r0, 8011b8c <__cvt+0x7c>
 8011b88:	f8cd 900c 	str.w	r9, [sp, #12]
 8011b8c:	2230      	movs	r2, #48	@ 0x30
 8011b8e:	9b03      	ldr	r3, [sp, #12]
 8011b90:	454b      	cmp	r3, r9
 8011b92:	d31e      	bcc.n	8011bd2 <__cvt+0xc2>
 8011b94:	9b03      	ldr	r3, [sp, #12]
 8011b96:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8011b98:	1b5b      	subs	r3, r3, r5
 8011b9a:	4628      	mov	r0, r5
 8011b9c:	6013      	str	r3, [r2, #0]
 8011b9e:	b004      	add	sp, #16
 8011ba0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011ba4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8011ba8:	eb00 0904 	add.w	r9, r0, r4
 8011bac:	d1e5      	bne.n	8011b7a <__cvt+0x6a>
 8011bae:	7803      	ldrb	r3, [r0, #0]
 8011bb0:	2b30      	cmp	r3, #48	@ 0x30
 8011bb2:	d10a      	bne.n	8011bca <__cvt+0xba>
 8011bb4:	2200      	movs	r2, #0
 8011bb6:	2300      	movs	r3, #0
 8011bb8:	4630      	mov	r0, r6
 8011bba:	4639      	mov	r1, r7
 8011bbc:	f7ee ff84 	bl	8000ac8 <__aeabi_dcmpeq>
 8011bc0:	b918      	cbnz	r0, 8011bca <__cvt+0xba>
 8011bc2:	f1c4 0401 	rsb	r4, r4, #1
 8011bc6:	f8ca 4000 	str.w	r4, [sl]
 8011bca:	f8da 3000 	ldr.w	r3, [sl]
 8011bce:	4499      	add	r9, r3
 8011bd0:	e7d3      	b.n	8011b7a <__cvt+0x6a>
 8011bd2:	1c59      	adds	r1, r3, #1
 8011bd4:	9103      	str	r1, [sp, #12]
 8011bd6:	701a      	strb	r2, [r3, #0]
 8011bd8:	e7d9      	b.n	8011b8e <__cvt+0x7e>

08011bda <__exponent>:
 8011bda:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011bdc:	2900      	cmp	r1, #0
 8011bde:	bfba      	itte	lt
 8011be0:	4249      	neglt	r1, r1
 8011be2:	232d      	movlt	r3, #45	@ 0x2d
 8011be4:	232b      	movge	r3, #43	@ 0x2b
 8011be6:	2909      	cmp	r1, #9
 8011be8:	7002      	strb	r2, [r0, #0]
 8011bea:	7043      	strb	r3, [r0, #1]
 8011bec:	dd29      	ble.n	8011c42 <__exponent+0x68>
 8011bee:	f10d 0307 	add.w	r3, sp, #7
 8011bf2:	461d      	mov	r5, r3
 8011bf4:	270a      	movs	r7, #10
 8011bf6:	461a      	mov	r2, r3
 8011bf8:	fbb1 f6f7 	udiv	r6, r1, r7
 8011bfc:	fb07 1416 	mls	r4, r7, r6, r1
 8011c00:	3430      	adds	r4, #48	@ 0x30
 8011c02:	f802 4c01 	strb.w	r4, [r2, #-1]
 8011c06:	460c      	mov	r4, r1
 8011c08:	2c63      	cmp	r4, #99	@ 0x63
 8011c0a:	f103 33ff 	add.w	r3, r3, #4294967295
 8011c0e:	4631      	mov	r1, r6
 8011c10:	dcf1      	bgt.n	8011bf6 <__exponent+0x1c>
 8011c12:	3130      	adds	r1, #48	@ 0x30
 8011c14:	1e94      	subs	r4, r2, #2
 8011c16:	f803 1c01 	strb.w	r1, [r3, #-1]
 8011c1a:	1c41      	adds	r1, r0, #1
 8011c1c:	4623      	mov	r3, r4
 8011c1e:	42ab      	cmp	r3, r5
 8011c20:	d30a      	bcc.n	8011c38 <__exponent+0x5e>
 8011c22:	f10d 0309 	add.w	r3, sp, #9
 8011c26:	1a9b      	subs	r3, r3, r2
 8011c28:	42ac      	cmp	r4, r5
 8011c2a:	bf88      	it	hi
 8011c2c:	2300      	movhi	r3, #0
 8011c2e:	3302      	adds	r3, #2
 8011c30:	4403      	add	r3, r0
 8011c32:	1a18      	subs	r0, r3, r0
 8011c34:	b003      	add	sp, #12
 8011c36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c38:	f813 6b01 	ldrb.w	r6, [r3], #1
 8011c3c:	f801 6f01 	strb.w	r6, [r1, #1]!
 8011c40:	e7ed      	b.n	8011c1e <__exponent+0x44>
 8011c42:	2330      	movs	r3, #48	@ 0x30
 8011c44:	3130      	adds	r1, #48	@ 0x30
 8011c46:	7083      	strb	r3, [r0, #2]
 8011c48:	70c1      	strb	r1, [r0, #3]
 8011c4a:	1d03      	adds	r3, r0, #4
 8011c4c:	e7f1      	b.n	8011c32 <__exponent+0x58>
	...

08011c50 <_printf_float>:
 8011c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c54:	b08d      	sub	sp, #52	@ 0x34
 8011c56:	460c      	mov	r4, r1
 8011c58:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8011c5c:	4616      	mov	r6, r2
 8011c5e:	461f      	mov	r7, r3
 8011c60:	4605      	mov	r5, r0
 8011c62:	f000 fda5 	bl	80127b0 <_localeconv_r>
 8011c66:	6803      	ldr	r3, [r0, #0]
 8011c68:	9304      	str	r3, [sp, #16]
 8011c6a:	4618      	mov	r0, r3
 8011c6c:	f7ee fb00 	bl	8000270 <strlen>
 8011c70:	2300      	movs	r3, #0
 8011c72:	930a      	str	r3, [sp, #40]	@ 0x28
 8011c74:	f8d8 3000 	ldr.w	r3, [r8]
 8011c78:	9005      	str	r0, [sp, #20]
 8011c7a:	3307      	adds	r3, #7
 8011c7c:	f023 0307 	bic.w	r3, r3, #7
 8011c80:	f103 0208 	add.w	r2, r3, #8
 8011c84:	f894 a018 	ldrb.w	sl, [r4, #24]
 8011c88:	f8d4 b000 	ldr.w	fp, [r4]
 8011c8c:	f8c8 2000 	str.w	r2, [r8]
 8011c90:	e9d3 8900 	ldrd	r8, r9, [r3]
 8011c94:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8011c98:	9307      	str	r3, [sp, #28]
 8011c9a:	f8cd 8018 	str.w	r8, [sp, #24]
 8011c9e:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8011ca2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8011ca6:	4b9c      	ldr	r3, [pc, #624]	@ (8011f18 <_printf_float+0x2c8>)
 8011ca8:	f04f 32ff 	mov.w	r2, #4294967295
 8011cac:	f7ee ff3e 	bl	8000b2c <__aeabi_dcmpun>
 8011cb0:	bb70      	cbnz	r0, 8011d10 <_printf_float+0xc0>
 8011cb2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8011cb6:	4b98      	ldr	r3, [pc, #608]	@ (8011f18 <_printf_float+0x2c8>)
 8011cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8011cbc:	f7ee ff18 	bl	8000af0 <__aeabi_dcmple>
 8011cc0:	bb30      	cbnz	r0, 8011d10 <_printf_float+0xc0>
 8011cc2:	2200      	movs	r2, #0
 8011cc4:	2300      	movs	r3, #0
 8011cc6:	4640      	mov	r0, r8
 8011cc8:	4649      	mov	r1, r9
 8011cca:	f7ee ff07 	bl	8000adc <__aeabi_dcmplt>
 8011cce:	b110      	cbz	r0, 8011cd6 <_printf_float+0x86>
 8011cd0:	232d      	movs	r3, #45	@ 0x2d
 8011cd2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8011cd6:	4a91      	ldr	r2, [pc, #580]	@ (8011f1c <_printf_float+0x2cc>)
 8011cd8:	4b91      	ldr	r3, [pc, #580]	@ (8011f20 <_printf_float+0x2d0>)
 8011cda:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8011cde:	bf8c      	ite	hi
 8011ce0:	4690      	movhi	r8, r2
 8011ce2:	4698      	movls	r8, r3
 8011ce4:	2303      	movs	r3, #3
 8011ce6:	6123      	str	r3, [r4, #16]
 8011ce8:	f02b 0304 	bic.w	r3, fp, #4
 8011cec:	6023      	str	r3, [r4, #0]
 8011cee:	f04f 0900 	mov.w	r9, #0
 8011cf2:	9700      	str	r7, [sp, #0]
 8011cf4:	4633      	mov	r3, r6
 8011cf6:	aa0b      	add	r2, sp, #44	@ 0x2c
 8011cf8:	4621      	mov	r1, r4
 8011cfa:	4628      	mov	r0, r5
 8011cfc:	f000 f9d2 	bl	80120a4 <_printf_common>
 8011d00:	3001      	adds	r0, #1
 8011d02:	f040 808d 	bne.w	8011e20 <_printf_float+0x1d0>
 8011d06:	f04f 30ff 	mov.w	r0, #4294967295
 8011d0a:	b00d      	add	sp, #52	@ 0x34
 8011d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d10:	4642      	mov	r2, r8
 8011d12:	464b      	mov	r3, r9
 8011d14:	4640      	mov	r0, r8
 8011d16:	4649      	mov	r1, r9
 8011d18:	f7ee ff08 	bl	8000b2c <__aeabi_dcmpun>
 8011d1c:	b140      	cbz	r0, 8011d30 <_printf_float+0xe0>
 8011d1e:	464b      	mov	r3, r9
 8011d20:	2b00      	cmp	r3, #0
 8011d22:	bfbc      	itt	lt
 8011d24:	232d      	movlt	r3, #45	@ 0x2d
 8011d26:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8011d2a:	4a7e      	ldr	r2, [pc, #504]	@ (8011f24 <_printf_float+0x2d4>)
 8011d2c:	4b7e      	ldr	r3, [pc, #504]	@ (8011f28 <_printf_float+0x2d8>)
 8011d2e:	e7d4      	b.n	8011cda <_printf_float+0x8a>
 8011d30:	6863      	ldr	r3, [r4, #4]
 8011d32:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8011d36:	9206      	str	r2, [sp, #24]
 8011d38:	1c5a      	adds	r2, r3, #1
 8011d3a:	d13b      	bne.n	8011db4 <_printf_float+0x164>
 8011d3c:	2306      	movs	r3, #6
 8011d3e:	6063      	str	r3, [r4, #4]
 8011d40:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8011d44:	2300      	movs	r3, #0
 8011d46:	6022      	str	r2, [r4, #0]
 8011d48:	9303      	str	r3, [sp, #12]
 8011d4a:	ab0a      	add	r3, sp, #40	@ 0x28
 8011d4c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8011d50:	ab09      	add	r3, sp, #36	@ 0x24
 8011d52:	9300      	str	r3, [sp, #0]
 8011d54:	6861      	ldr	r1, [r4, #4]
 8011d56:	ec49 8b10 	vmov	d0, r8, r9
 8011d5a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8011d5e:	4628      	mov	r0, r5
 8011d60:	f7ff fed6 	bl	8011b10 <__cvt>
 8011d64:	9b06      	ldr	r3, [sp, #24]
 8011d66:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011d68:	2b47      	cmp	r3, #71	@ 0x47
 8011d6a:	4680      	mov	r8, r0
 8011d6c:	d129      	bne.n	8011dc2 <_printf_float+0x172>
 8011d6e:	1cc8      	adds	r0, r1, #3
 8011d70:	db02      	blt.n	8011d78 <_printf_float+0x128>
 8011d72:	6863      	ldr	r3, [r4, #4]
 8011d74:	4299      	cmp	r1, r3
 8011d76:	dd41      	ble.n	8011dfc <_printf_float+0x1ac>
 8011d78:	f1aa 0a02 	sub.w	sl, sl, #2
 8011d7c:	fa5f fa8a 	uxtb.w	sl, sl
 8011d80:	3901      	subs	r1, #1
 8011d82:	4652      	mov	r2, sl
 8011d84:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8011d88:	9109      	str	r1, [sp, #36]	@ 0x24
 8011d8a:	f7ff ff26 	bl	8011bda <__exponent>
 8011d8e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011d90:	1813      	adds	r3, r2, r0
 8011d92:	2a01      	cmp	r2, #1
 8011d94:	4681      	mov	r9, r0
 8011d96:	6123      	str	r3, [r4, #16]
 8011d98:	dc02      	bgt.n	8011da0 <_printf_float+0x150>
 8011d9a:	6822      	ldr	r2, [r4, #0]
 8011d9c:	07d2      	lsls	r2, r2, #31
 8011d9e:	d501      	bpl.n	8011da4 <_printf_float+0x154>
 8011da0:	3301      	adds	r3, #1
 8011da2:	6123      	str	r3, [r4, #16]
 8011da4:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8011da8:	2b00      	cmp	r3, #0
 8011daa:	d0a2      	beq.n	8011cf2 <_printf_float+0xa2>
 8011dac:	232d      	movs	r3, #45	@ 0x2d
 8011dae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8011db2:	e79e      	b.n	8011cf2 <_printf_float+0xa2>
 8011db4:	9a06      	ldr	r2, [sp, #24]
 8011db6:	2a47      	cmp	r2, #71	@ 0x47
 8011db8:	d1c2      	bne.n	8011d40 <_printf_float+0xf0>
 8011dba:	2b00      	cmp	r3, #0
 8011dbc:	d1c0      	bne.n	8011d40 <_printf_float+0xf0>
 8011dbe:	2301      	movs	r3, #1
 8011dc0:	e7bd      	b.n	8011d3e <_printf_float+0xee>
 8011dc2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8011dc6:	d9db      	bls.n	8011d80 <_printf_float+0x130>
 8011dc8:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8011dcc:	d118      	bne.n	8011e00 <_printf_float+0x1b0>
 8011dce:	2900      	cmp	r1, #0
 8011dd0:	6863      	ldr	r3, [r4, #4]
 8011dd2:	dd0b      	ble.n	8011dec <_printf_float+0x19c>
 8011dd4:	6121      	str	r1, [r4, #16]
 8011dd6:	b913      	cbnz	r3, 8011dde <_printf_float+0x18e>
 8011dd8:	6822      	ldr	r2, [r4, #0]
 8011dda:	07d0      	lsls	r0, r2, #31
 8011ddc:	d502      	bpl.n	8011de4 <_printf_float+0x194>
 8011dde:	3301      	adds	r3, #1
 8011de0:	440b      	add	r3, r1
 8011de2:	6123      	str	r3, [r4, #16]
 8011de4:	65a1      	str	r1, [r4, #88]	@ 0x58
 8011de6:	f04f 0900 	mov.w	r9, #0
 8011dea:	e7db      	b.n	8011da4 <_printf_float+0x154>
 8011dec:	b913      	cbnz	r3, 8011df4 <_printf_float+0x1a4>
 8011dee:	6822      	ldr	r2, [r4, #0]
 8011df0:	07d2      	lsls	r2, r2, #31
 8011df2:	d501      	bpl.n	8011df8 <_printf_float+0x1a8>
 8011df4:	3302      	adds	r3, #2
 8011df6:	e7f4      	b.n	8011de2 <_printf_float+0x192>
 8011df8:	2301      	movs	r3, #1
 8011dfa:	e7f2      	b.n	8011de2 <_printf_float+0x192>
 8011dfc:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8011e00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011e02:	4299      	cmp	r1, r3
 8011e04:	db05      	blt.n	8011e12 <_printf_float+0x1c2>
 8011e06:	6823      	ldr	r3, [r4, #0]
 8011e08:	6121      	str	r1, [r4, #16]
 8011e0a:	07d8      	lsls	r0, r3, #31
 8011e0c:	d5ea      	bpl.n	8011de4 <_printf_float+0x194>
 8011e0e:	1c4b      	adds	r3, r1, #1
 8011e10:	e7e7      	b.n	8011de2 <_printf_float+0x192>
 8011e12:	2900      	cmp	r1, #0
 8011e14:	bfd4      	ite	le
 8011e16:	f1c1 0202 	rsble	r2, r1, #2
 8011e1a:	2201      	movgt	r2, #1
 8011e1c:	4413      	add	r3, r2
 8011e1e:	e7e0      	b.n	8011de2 <_printf_float+0x192>
 8011e20:	6823      	ldr	r3, [r4, #0]
 8011e22:	055a      	lsls	r2, r3, #21
 8011e24:	d407      	bmi.n	8011e36 <_printf_float+0x1e6>
 8011e26:	6923      	ldr	r3, [r4, #16]
 8011e28:	4642      	mov	r2, r8
 8011e2a:	4631      	mov	r1, r6
 8011e2c:	4628      	mov	r0, r5
 8011e2e:	47b8      	blx	r7
 8011e30:	3001      	adds	r0, #1
 8011e32:	d12b      	bne.n	8011e8c <_printf_float+0x23c>
 8011e34:	e767      	b.n	8011d06 <_printf_float+0xb6>
 8011e36:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8011e3a:	f240 80dd 	bls.w	8011ff8 <_printf_float+0x3a8>
 8011e3e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8011e42:	2200      	movs	r2, #0
 8011e44:	2300      	movs	r3, #0
 8011e46:	f7ee fe3f 	bl	8000ac8 <__aeabi_dcmpeq>
 8011e4a:	2800      	cmp	r0, #0
 8011e4c:	d033      	beq.n	8011eb6 <_printf_float+0x266>
 8011e4e:	4a37      	ldr	r2, [pc, #220]	@ (8011f2c <_printf_float+0x2dc>)
 8011e50:	2301      	movs	r3, #1
 8011e52:	4631      	mov	r1, r6
 8011e54:	4628      	mov	r0, r5
 8011e56:	47b8      	blx	r7
 8011e58:	3001      	adds	r0, #1
 8011e5a:	f43f af54 	beq.w	8011d06 <_printf_float+0xb6>
 8011e5e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8011e62:	4543      	cmp	r3, r8
 8011e64:	db02      	blt.n	8011e6c <_printf_float+0x21c>
 8011e66:	6823      	ldr	r3, [r4, #0]
 8011e68:	07d8      	lsls	r0, r3, #31
 8011e6a:	d50f      	bpl.n	8011e8c <_printf_float+0x23c>
 8011e6c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8011e70:	4631      	mov	r1, r6
 8011e72:	4628      	mov	r0, r5
 8011e74:	47b8      	blx	r7
 8011e76:	3001      	adds	r0, #1
 8011e78:	f43f af45 	beq.w	8011d06 <_printf_float+0xb6>
 8011e7c:	f04f 0900 	mov.w	r9, #0
 8011e80:	f108 38ff 	add.w	r8, r8, #4294967295
 8011e84:	f104 0a1a 	add.w	sl, r4, #26
 8011e88:	45c8      	cmp	r8, r9
 8011e8a:	dc09      	bgt.n	8011ea0 <_printf_float+0x250>
 8011e8c:	6823      	ldr	r3, [r4, #0]
 8011e8e:	079b      	lsls	r3, r3, #30
 8011e90:	f100 8103 	bmi.w	801209a <_printf_float+0x44a>
 8011e94:	68e0      	ldr	r0, [r4, #12]
 8011e96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011e98:	4298      	cmp	r0, r3
 8011e9a:	bfb8      	it	lt
 8011e9c:	4618      	movlt	r0, r3
 8011e9e:	e734      	b.n	8011d0a <_printf_float+0xba>
 8011ea0:	2301      	movs	r3, #1
 8011ea2:	4652      	mov	r2, sl
 8011ea4:	4631      	mov	r1, r6
 8011ea6:	4628      	mov	r0, r5
 8011ea8:	47b8      	blx	r7
 8011eaa:	3001      	adds	r0, #1
 8011eac:	f43f af2b 	beq.w	8011d06 <_printf_float+0xb6>
 8011eb0:	f109 0901 	add.w	r9, r9, #1
 8011eb4:	e7e8      	b.n	8011e88 <_printf_float+0x238>
 8011eb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011eb8:	2b00      	cmp	r3, #0
 8011eba:	dc39      	bgt.n	8011f30 <_printf_float+0x2e0>
 8011ebc:	4a1b      	ldr	r2, [pc, #108]	@ (8011f2c <_printf_float+0x2dc>)
 8011ebe:	2301      	movs	r3, #1
 8011ec0:	4631      	mov	r1, r6
 8011ec2:	4628      	mov	r0, r5
 8011ec4:	47b8      	blx	r7
 8011ec6:	3001      	adds	r0, #1
 8011ec8:	f43f af1d 	beq.w	8011d06 <_printf_float+0xb6>
 8011ecc:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8011ed0:	ea59 0303 	orrs.w	r3, r9, r3
 8011ed4:	d102      	bne.n	8011edc <_printf_float+0x28c>
 8011ed6:	6823      	ldr	r3, [r4, #0]
 8011ed8:	07d9      	lsls	r1, r3, #31
 8011eda:	d5d7      	bpl.n	8011e8c <_printf_float+0x23c>
 8011edc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8011ee0:	4631      	mov	r1, r6
 8011ee2:	4628      	mov	r0, r5
 8011ee4:	47b8      	blx	r7
 8011ee6:	3001      	adds	r0, #1
 8011ee8:	f43f af0d 	beq.w	8011d06 <_printf_float+0xb6>
 8011eec:	f04f 0a00 	mov.w	sl, #0
 8011ef0:	f104 0b1a 	add.w	fp, r4, #26
 8011ef4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011ef6:	425b      	negs	r3, r3
 8011ef8:	4553      	cmp	r3, sl
 8011efa:	dc01      	bgt.n	8011f00 <_printf_float+0x2b0>
 8011efc:	464b      	mov	r3, r9
 8011efe:	e793      	b.n	8011e28 <_printf_float+0x1d8>
 8011f00:	2301      	movs	r3, #1
 8011f02:	465a      	mov	r2, fp
 8011f04:	4631      	mov	r1, r6
 8011f06:	4628      	mov	r0, r5
 8011f08:	47b8      	blx	r7
 8011f0a:	3001      	adds	r0, #1
 8011f0c:	f43f aefb 	beq.w	8011d06 <_printf_float+0xb6>
 8011f10:	f10a 0a01 	add.w	sl, sl, #1
 8011f14:	e7ee      	b.n	8011ef4 <_printf_float+0x2a4>
 8011f16:	bf00      	nop
 8011f18:	7fefffff 	.word	0x7fefffff
 8011f1c:	08015dee 	.word	0x08015dee
 8011f20:	08015dea 	.word	0x08015dea
 8011f24:	08015df6 	.word	0x08015df6
 8011f28:	08015df2 	.word	0x08015df2
 8011f2c:	08015dfa 	.word	0x08015dfa
 8011f30:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8011f32:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8011f36:	4553      	cmp	r3, sl
 8011f38:	bfa8      	it	ge
 8011f3a:	4653      	movge	r3, sl
 8011f3c:	2b00      	cmp	r3, #0
 8011f3e:	4699      	mov	r9, r3
 8011f40:	dc36      	bgt.n	8011fb0 <_printf_float+0x360>
 8011f42:	f04f 0b00 	mov.w	fp, #0
 8011f46:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8011f4a:	f104 021a 	add.w	r2, r4, #26
 8011f4e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8011f50:	9306      	str	r3, [sp, #24]
 8011f52:	eba3 0309 	sub.w	r3, r3, r9
 8011f56:	455b      	cmp	r3, fp
 8011f58:	dc31      	bgt.n	8011fbe <_printf_float+0x36e>
 8011f5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f5c:	459a      	cmp	sl, r3
 8011f5e:	dc3a      	bgt.n	8011fd6 <_printf_float+0x386>
 8011f60:	6823      	ldr	r3, [r4, #0]
 8011f62:	07da      	lsls	r2, r3, #31
 8011f64:	d437      	bmi.n	8011fd6 <_printf_float+0x386>
 8011f66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f68:	ebaa 0903 	sub.w	r9, sl, r3
 8011f6c:	9b06      	ldr	r3, [sp, #24]
 8011f6e:	ebaa 0303 	sub.w	r3, sl, r3
 8011f72:	4599      	cmp	r9, r3
 8011f74:	bfa8      	it	ge
 8011f76:	4699      	movge	r9, r3
 8011f78:	f1b9 0f00 	cmp.w	r9, #0
 8011f7c:	dc33      	bgt.n	8011fe6 <_printf_float+0x396>
 8011f7e:	f04f 0800 	mov.w	r8, #0
 8011f82:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8011f86:	f104 0b1a 	add.w	fp, r4, #26
 8011f8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f8c:	ebaa 0303 	sub.w	r3, sl, r3
 8011f90:	eba3 0309 	sub.w	r3, r3, r9
 8011f94:	4543      	cmp	r3, r8
 8011f96:	f77f af79 	ble.w	8011e8c <_printf_float+0x23c>
 8011f9a:	2301      	movs	r3, #1
 8011f9c:	465a      	mov	r2, fp
 8011f9e:	4631      	mov	r1, r6
 8011fa0:	4628      	mov	r0, r5
 8011fa2:	47b8      	blx	r7
 8011fa4:	3001      	adds	r0, #1
 8011fa6:	f43f aeae 	beq.w	8011d06 <_printf_float+0xb6>
 8011faa:	f108 0801 	add.w	r8, r8, #1
 8011fae:	e7ec      	b.n	8011f8a <_printf_float+0x33a>
 8011fb0:	4642      	mov	r2, r8
 8011fb2:	4631      	mov	r1, r6
 8011fb4:	4628      	mov	r0, r5
 8011fb6:	47b8      	blx	r7
 8011fb8:	3001      	adds	r0, #1
 8011fba:	d1c2      	bne.n	8011f42 <_printf_float+0x2f2>
 8011fbc:	e6a3      	b.n	8011d06 <_printf_float+0xb6>
 8011fbe:	2301      	movs	r3, #1
 8011fc0:	4631      	mov	r1, r6
 8011fc2:	4628      	mov	r0, r5
 8011fc4:	9206      	str	r2, [sp, #24]
 8011fc6:	47b8      	blx	r7
 8011fc8:	3001      	adds	r0, #1
 8011fca:	f43f ae9c 	beq.w	8011d06 <_printf_float+0xb6>
 8011fce:	9a06      	ldr	r2, [sp, #24]
 8011fd0:	f10b 0b01 	add.w	fp, fp, #1
 8011fd4:	e7bb      	b.n	8011f4e <_printf_float+0x2fe>
 8011fd6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8011fda:	4631      	mov	r1, r6
 8011fdc:	4628      	mov	r0, r5
 8011fde:	47b8      	blx	r7
 8011fe0:	3001      	adds	r0, #1
 8011fe2:	d1c0      	bne.n	8011f66 <_printf_float+0x316>
 8011fe4:	e68f      	b.n	8011d06 <_printf_float+0xb6>
 8011fe6:	9a06      	ldr	r2, [sp, #24]
 8011fe8:	464b      	mov	r3, r9
 8011fea:	4442      	add	r2, r8
 8011fec:	4631      	mov	r1, r6
 8011fee:	4628      	mov	r0, r5
 8011ff0:	47b8      	blx	r7
 8011ff2:	3001      	adds	r0, #1
 8011ff4:	d1c3      	bne.n	8011f7e <_printf_float+0x32e>
 8011ff6:	e686      	b.n	8011d06 <_printf_float+0xb6>
 8011ff8:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8011ffc:	f1ba 0f01 	cmp.w	sl, #1
 8012000:	dc01      	bgt.n	8012006 <_printf_float+0x3b6>
 8012002:	07db      	lsls	r3, r3, #31
 8012004:	d536      	bpl.n	8012074 <_printf_float+0x424>
 8012006:	2301      	movs	r3, #1
 8012008:	4642      	mov	r2, r8
 801200a:	4631      	mov	r1, r6
 801200c:	4628      	mov	r0, r5
 801200e:	47b8      	blx	r7
 8012010:	3001      	adds	r0, #1
 8012012:	f43f ae78 	beq.w	8011d06 <_printf_float+0xb6>
 8012016:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801201a:	4631      	mov	r1, r6
 801201c:	4628      	mov	r0, r5
 801201e:	47b8      	blx	r7
 8012020:	3001      	adds	r0, #1
 8012022:	f43f ae70 	beq.w	8011d06 <_printf_float+0xb6>
 8012026:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 801202a:	2200      	movs	r2, #0
 801202c:	2300      	movs	r3, #0
 801202e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012032:	f7ee fd49 	bl	8000ac8 <__aeabi_dcmpeq>
 8012036:	b9c0      	cbnz	r0, 801206a <_printf_float+0x41a>
 8012038:	4653      	mov	r3, sl
 801203a:	f108 0201 	add.w	r2, r8, #1
 801203e:	4631      	mov	r1, r6
 8012040:	4628      	mov	r0, r5
 8012042:	47b8      	blx	r7
 8012044:	3001      	adds	r0, #1
 8012046:	d10c      	bne.n	8012062 <_printf_float+0x412>
 8012048:	e65d      	b.n	8011d06 <_printf_float+0xb6>
 801204a:	2301      	movs	r3, #1
 801204c:	465a      	mov	r2, fp
 801204e:	4631      	mov	r1, r6
 8012050:	4628      	mov	r0, r5
 8012052:	47b8      	blx	r7
 8012054:	3001      	adds	r0, #1
 8012056:	f43f ae56 	beq.w	8011d06 <_printf_float+0xb6>
 801205a:	f108 0801 	add.w	r8, r8, #1
 801205e:	45d0      	cmp	r8, sl
 8012060:	dbf3      	blt.n	801204a <_printf_float+0x3fa>
 8012062:	464b      	mov	r3, r9
 8012064:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8012068:	e6df      	b.n	8011e2a <_printf_float+0x1da>
 801206a:	f04f 0800 	mov.w	r8, #0
 801206e:	f104 0b1a 	add.w	fp, r4, #26
 8012072:	e7f4      	b.n	801205e <_printf_float+0x40e>
 8012074:	2301      	movs	r3, #1
 8012076:	4642      	mov	r2, r8
 8012078:	e7e1      	b.n	801203e <_printf_float+0x3ee>
 801207a:	2301      	movs	r3, #1
 801207c:	464a      	mov	r2, r9
 801207e:	4631      	mov	r1, r6
 8012080:	4628      	mov	r0, r5
 8012082:	47b8      	blx	r7
 8012084:	3001      	adds	r0, #1
 8012086:	f43f ae3e 	beq.w	8011d06 <_printf_float+0xb6>
 801208a:	f108 0801 	add.w	r8, r8, #1
 801208e:	68e3      	ldr	r3, [r4, #12]
 8012090:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012092:	1a5b      	subs	r3, r3, r1
 8012094:	4543      	cmp	r3, r8
 8012096:	dcf0      	bgt.n	801207a <_printf_float+0x42a>
 8012098:	e6fc      	b.n	8011e94 <_printf_float+0x244>
 801209a:	f04f 0800 	mov.w	r8, #0
 801209e:	f104 0919 	add.w	r9, r4, #25
 80120a2:	e7f4      	b.n	801208e <_printf_float+0x43e>

080120a4 <_printf_common>:
 80120a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80120a8:	4616      	mov	r6, r2
 80120aa:	4698      	mov	r8, r3
 80120ac:	688a      	ldr	r2, [r1, #8]
 80120ae:	690b      	ldr	r3, [r1, #16]
 80120b0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80120b4:	4293      	cmp	r3, r2
 80120b6:	bfb8      	it	lt
 80120b8:	4613      	movlt	r3, r2
 80120ba:	6033      	str	r3, [r6, #0]
 80120bc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80120c0:	4607      	mov	r7, r0
 80120c2:	460c      	mov	r4, r1
 80120c4:	b10a      	cbz	r2, 80120ca <_printf_common+0x26>
 80120c6:	3301      	adds	r3, #1
 80120c8:	6033      	str	r3, [r6, #0]
 80120ca:	6823      	ldr	r3, [r4, #0]
 80120cc:	0699      	lsls	r1, r3, #26
 80120ce:	bf42      	ittt	mi
 80120d0:	6833      	ldrmi	r3, [r6, #0]
 80120d2:	3302      	addmi	r3, #2
 80120d4:	6033      	strmi	r3, [r6, #0]
 80120d6:	6825      	ldr	r5, [r4, #0]
 80120d8:	f015 0506 	ands.w	r5, r5, #6
 80120dc:	d106      	bne.n	80120ec <_printf_common+0x48>
 80120de:	f104 0a19 	add.w	sl, r4, #25
 80120e2:	68e3      	ldr	r3, [r4, #12]
 80120e4:	6832      	ldr	r2, [r6, #0]
 80120e6:	1a9b      	subs	r3, r3, r2
 80120e8:	42ab      	cmp	r3, r5
 80120ea:	dc26      	bgt.n	801213a <_printf_common+0x96>
 80120ec:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80120f0:	6822      	ldr	r2, [r4, #0]
 80120f2:	3b00      	subs	r3, #0
 80120f4:	bf18      	it	ne
 80120f6:	2301      	movne	r3, #1
 80120f8:	0692      	lsls	r2, r2, #26
 80120fa:	d42b      	bmi.n	8012154 <_printf_common+0xb0>
 80120fc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8012100:	4641      	mov	r1, r8
 8012102:	4638      	mov	r0, r7
 8012104:	47c8      	blx	r9
 8012106:	3001      	adds	r0, #1
 8012108:	d01e      	beq.n	8012148 <_printf_common+0xa4>
 801210a:	6823      	ldr	r3, [r4, #0]
 801210c:	6922      	ldr	r2, [r4, #16]
 801210e:	f003 0306 	and.w	r3, r3, #6
 8012112:	2b04      	cmp	r3, #4
 8012114:	bf02      	ittt	eq
 8012116:	68e5      	ldreq	r5, [r4, #12]
 8012118:	6833      	ldreq	r3, [r6, #0]
 801211a:	1aed      	subeq	r5, r5, r3
 801211c:	68a3      	ldr	r3, [r4, #8]
 801211e:	bf0c      	ite	eq
 8012120:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8012124:	2500      	movne	r5, #0
 8012126:	4293      	cmp	r3, r2
 8012128:	bfc4      	itt	gt
 801212a:	1a9b      	subgt	r3, r3, r2
 801212c:	18ed      	addgt	r5, r5, r3
 801212e:	2600      	movs	r6, #0
 8012130:	341a      	adds	r4, #26
 8012132:	42b5      	cmp	r5, r6
 8012134:	d11a      	bne.n	801216c <_printf_common+0xc8>
 8012136:	2000      	movs	r0, #0
 8012138:	e008      	b.n	801214c <_printf_common+0xa8>
 801213a:	2301      	movs	r3, #1
 801213c:	4652      	mov	r2, sl
 801213e:	4641      	mov	r1, r8
 8012140:	4638      	mov	r0, r7
 8012142:	47c8      	blx	r9
 8012144:	3001      	adds	r0, #1
 8012146:	d103      	bne.n	8012150 <_printf_common+0xac>
 8012148:	f04f 30ff 	mov.w	r0, #4294967295
 801214c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012150:	3501      	adds	r5, #1
 8012152:	e7c6      	b.n	80120e2 <_printf_common+0x3e>
 8012154:	18e1      	adds	r1, r4, r3
 8012156:	1c5a      	adds	r2, r3, #1
 8012158:	2030      	movs	r0, #48	@ 0x30
 801215a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801215e:	4422      	add	r2, r4
 8012160:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8012164:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8012168:	3302      	adds	r3, #2
 801216a:	e7c7      	b.n	80120fc <_printf_common+0x58>
 801216c:	2301      	movs	r3, #1
 801216e:	4622      	mov	r2, r4
 8012170:	4641      	mov	r1, r8
 8012172:	4638      	mov	r0, r7
 8012174:	47c8      	blx	r9
 8012176:	3001      	adds	r0, #1
 8012178:	d0e6      	beq.n	8012148 <_printf_common+0xa4>
 801217a:	3601      	adds	r6, #1
 801217c:	e7d9      	b.n	8012132 <_printf_common+0x8e>
	...

08012180 <_printf_i>:
 8012180:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012184:	7e0f      	ldrb	r7, [r1, #24]
 8012186:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8012188:	2f78      	cmp	r7, #120	@ 0x78
 801218a:	4691      	mov	r9, r2
 801218c:	4680      	mov	r8, r0
 801218e:	460c      	mov	r4, r1
 8012190:	469a      	mov	sl, r3
 8012192:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8012196:	d807      	bhi.n	80121a8 <_printf_i+0x28>
 8012198:	2f62      	cmp	r7, #98	@ 0x62
 801219a:	d80a      	bhi.n	80121b2 <_printf_i+0x32>
 801219c:	2f00      	cmp	r7, #0
 801219e:	f000 80d1 	beq.w	8012344 <_printf_i+0x1c4>
 80121a2:	2f58      	cmp	r7, #88	@ 0x58
 80121a4:	f000 80b8 	beq.w	8012318 <_printf_i+0x198>
 80121a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80121ac:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80121b0:	e03a      	b.n	8012228 <_printf_i+0xa8>
 80121b2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80121b6:	2b15      	cmp	r3, #21
 80121b8:	d8f6      	bhi.n	80121a8 <_printf_i+0x28>
 80121ba:	a101      	add	r1, pc, #4	@ (adr r1, 80121c0 <_printf_i+0x40>)
 80121bc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80121c0:	08012219 	.word	0x08012219
 80121c4:	0801222d 	.word	0x0801222d
 80121c8:	080121a9 	.word	0x080121a9
 80121cc:	080121a9 	.word	0x080121a9
 80121d0:	080121a9 	.word	0x080121a9
 80121d4:	080121a9 	.word	0x080121a9
 80121d8:	0801222d 	.word	0x0801222d
 80121dc:	080121a9 	.word	0x080121a9
 80121e0:	080121a9 	.word	0x080121a9
 80121e4:	080121a9 	.word	0x080121a9
 80121e8:	080121a9 	.word	0x080121a9
 80121ec:	0801232b 	.word	0x0801232b
 80121f0:	08012257 	.word	0x08012257
 80121f4:	080122e5 	.word	0x080122e5
 80121f8:	080121a9 	.word	0x080121a9
 80121fc:	080121a9 	.word	0x080121a9
 8012200:	0801234d 	.word	0x0801234d
 8012204:	080121a9 	.word	0x080121a9
 8012208:	08012257 	.word	0x08012257
 801220c:	080121a9 	.word	0x080121a9
 8012210:	080121a9 	.word	0x080121a9
 8012214:	080122ed 	.word	0x080122ed
 8012218:	6833      	ldr	r3, [r6, #0]
 801221a:	1d1a      	adds	r2, r3, #4
 801221c:	681b      	ldr	r3, [r3, #0]
 801221e:	6032      	str	r2, [r6, #0]
 8012220:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8012224:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8012228:	2301      	movs	r3, #1
 801222a:	e09c      	b.n	8012366 <_printf_i+0x1e6>
 801222c:	6833      	ldr	r3, [r6, #0]
 801222e:	6820      	ldr	r0, [r4, #0]
 8012230:	1d19      	adds	r1, r3, #4
 8012232:	6031      	str	r1, [r6, #0]
 8012234:	0606      	lsls	r6, r0, #24
 8012236:	d501      	bpl.n	801223c <_printf_i+0xbc>
 8012238:	681d      	ldr	r5, [r3, #0]
 801223a:	e003      	b.n	8012244 <_printf_i+0xc4>
 801223c:	0645      	lsls	r5, r0, #25
 801223e:	d5fb      	bpl.n	8012238 <_printf_i+0xb8>
 8012240:	f9b3 5000 	ldrsh.w	r5, [r3]
 8012244:	2d00      	cmp	r5, #0
 8012246:	da03      	bge.n	8012250 <_printf_i+0xd0>
 8012248:	232d      	movs	r3, #45	@ 0x2d
 801224a:	426d      	negs	r5, r5
 801224c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8012250:	4858      	ldr	r0, [pc, #352]	@ (80123b4 <_printf_i+0x234>)
 8012252:	230a      	movs	r3, #10
 8012254:	e011      	b.n	801227a <_printf_i+0xfa>
 8012256:	6821      	ldr	r1, [r4, #0]
 8012258:	6833      	ldr	r3, [r6, #0]
 801225a:	0608      	lsls	r0, r1, #24
 801225c:	f853 5b04 	ldr.w	r5, [r3], #4
 8012260:	d402      	bmi.n	8012268 <_printf_i+0xe8>
 8012262:	0649      	lsls	r1, r1, #25
 8012264:	bf48      	it	mi
 8012266:	b2ad      	uxthmi	r5, r5
 8012268:	2f6f      	cmp	r7, #111	@ 0x6f
 801226a:	4852      	ldr	r0, [pc, #328]	@ (80123b4 <_printf_i+0x234>)
 801226c:	6033      	str	r3, [r6, #0]
 801226e:	bf14      	ite	ne
 8012270:	230a      	movne	r3, #10
 8012272:	2308      	moveq	r3, #8
 8012274:	2100      	movs	r1, #0
 8012276:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801227a:	6866      	ldr	r6, [r4, #4]
 801227c:	60a6      	str	r6, [r4, #8]
 801227e:	2e00      	cmp	r6, #0
 8012280:	db05      	blt.n	801228e <_printf_i+0x10e>
 8012282:	6821      	ldr	r1, [r4, #0]
 8012284:	432e      	orrs	r6, r5
 8012286:	f021 0104 	bic.w	r1, r1, #4
 801228a:	6021      	str	r1, [r4, #0]
 801228c:	d04b      	beq.n	8012326 <_printf_i+0x1a6>
 801228e:	4616      	mov	r6, r2
 8012290:	fbb5 f1f3 	udiv	r1, r5, r3
 8012294:	fb03 5711 	mls	r7, r3, r1, r5
 8012298:	5dc7      	ldrb	r7, [r0, r7]
 801229a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801229e:	462f      	mov	r7, r5
 80122a0:	42bb      	cmp	r3, r7
 80122a2:	460d      	mov	r5, r1
 80122a4:	d9f4      	bls.n	8012290 <_printf_i+0x110>
 80122a6:	2b08      	cmp	r3, #8
 80122a8:	d10b      	bne.n	80122c2 <_printf_i+0x142>
 80122aa:	6823      	ldr	r3, [r4, #0]
 80122ac:	07df      	lsls	r7, r3, #31
 80122ae:	d508      	bpl.n	80122c2 <_printf_i+0x142>
 80122b0:	6923      	ldr	r3, [r4, #16]
 80122b2:	6861      	ldr	r1, [r4, #4]
 80122b4:	4299      	cmp	r1, r3
 80122b6:	bfde      	ittt	le
 80122b8:	2330      	movle	r3, #48	@ 0x30
 80122ba:	f806 3c01 	strble.w	r3, [r6, #-1]
 80122be:	f106 36ff 	addle.w	r6, r6, #4294967295
 80122c2:	1b92      	subs	r2, r2, r6
 80122c4:	6122      	str	r2, [r4, #16]
 80122c6:	f8cd a000 	str.w	sl, [sp]
 80122ca:	464b      	mov	r3, r9
 80122cc:	aa03      	add	r2, sp, #12
 80122ce:	4621      	mov	r1, r4
 80122d0:	4640      	mov	r0, r8
 80122d2:	f7ff fee7 	bl	80120a4 <_printf_common>
 80122d6:	3001      	adds	r0, #1
 80122d8:	d14a      	bne.n	8012370 <_printf_i+0x1f0>
 80122da:	f04f 30ff 	mov.w	r0, #4294967295
 80122de:	b004      	add	sp, #16
 80122e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80122e4:	6823      	ldr	r3, [r4, #0]
 80122e6:	f043 0320 	orr.w	r3, r3, #32
 80122ea:	6023      	str	r3, [r4, #0]
 80122ec:	4832      	ldr	r0, [pc, #200]	@ (80123b8 <_printf_i+0x238>)
 80122ee:	2778      	movs	r7, #120	@ 0x78
 80122f0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80122f4:	6823      	ldr	r3, [r4, #0]
 80122f6:	6831      	ldr	r1, [r6, #0]
 80122f8:	061f      	lsls	r7, r3, #24
 80122fa:	f851 5b04 	ldr.w	r5, [r1], #4
 80122fe:	d402      	bmi.n	8012306 <_printf_i+0x186>
 8012300:	065f      	lsls	r7, r3, #25
 8012302:	bf48      	it	mi
 8012304:	b2ad      	uxthmi	r5, r5
 8012306:	6031      	str	r1, [r6, #0]
 8012308:	07d9      	lsls	r1, r3, #31
 801230a:	bf44      	itt	mi
 801230c:	f043 0320 	orrmi.w	r3, r3, #32
 8012310:	6023      	strmi	r3, [r4, #0]
 8012312:	b11d      	cbz	r5, 801231c <_printf_i+0x19c>
 8012314:	2310      	movs	r3, #16
 8012316:	e7ad      	b.n	8012274 <_printf_i+0xf4>
 8012318:	4826      	ldr	r0, [pc, #152]	@ (80123b4 <_printf_i+0x234>)
 801231a:	e7e9      	b.n	80122f0 <_printf_i+0x170>
 801231c:	6823      	ldr	r3, [r4, #0]
 801231e:	f023 0320 	bic.w	r3, r3, #32
 8012322:	6023      	str	r3, [r4, #0]
 8012324:	e7f6      	b.n	8012314 <_printf_i+0x194>
 8012326:	4616      	mov	r6, r2
 8012328:	e7bd      	b.n	80122a6 <_printf_i+0x126>
 801232a:	6833      	ldr	r3, [r6, #0]
 801232c:	6825      	ldr	r5, [r4, #0]
 801232e:	6961      	ldr	r1, [r4, #20]
 8012330:	1d18      	adds	r0, r3, #4
 8012332:	6030      	str	r0, [r6, #0]
 8012334:	062e      	lsls	r6, r5, #24
 8012336:	681b      	ldr	r3, [r3, #0]
 8012338:	d501      	bpl.n	801233e <_printf_i+0x1be>
 801233a:	6019      	str	r1, [r3, #0]
 801233c:	e002      	b.n	8012344 <_printf_i+0x1c4>
 801233e:	0668      	lsls	r0, r5, #25
 8012340:	d5fb      	bpl.n	801233a <_printf_i+0x1ba>
 8012342:	8019      	strh	r1, [r3, #0]
 8012344:	2300      	movs	r3, #0
 8012346:	6123      	str	r3, [r4, #16]
 8012348:	4616      	mov	r6, r2
 801234a:	e7bc      	b.n	80122c6 <_printf_i+0x146>
 801234c:	6833      	ldr	r3, [r6, #0]
 801234e:	1d1a      	adds	r2, r3, #4
 8012350:	6032      	str	r2, [r6, #0]
 8012352:	681e      	ldr	r6, [r3, #0]
 8012354:	6862      	ldr	r2, [r4, #4]
 8012356:	2100      	movs	r1, #0
 8012358:	4630      	mov	r0, r6
 801235a:	f7ed ff39 	bl	80001d0 <memchr>
 801235e:	b108      	cbz	r0, 8012364 <_printf_i+0x1e4>
 8012360:	1b80      	subs	r0, r0, r6
 8012362:	6060      	str	r0, [r4, #4]
 8012364:	6863      	ldr	r3, [r4, #4]
 8012366:	6123      	str	r3, [r4, #16]
 8012368:	2300      	movs	r3, #0
 801236a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801236e:	e7aa      	b.n	80122c6 <_printf_i+0x146>
 8012370:	6923      	ldr	r3, [r4, #16]
 8012372:	4632      	mov	r2, r6
 8012374:	4649      	mov	r1, r9
 8012376:	4640      	mov	r0, r8
 8012378:	47d0      	blx	sl
 801237a:	3001      	adds	r0, #1
 801237c:	d0ad      	beq.n	80122da <_printf_i+0x15a>
 801237e:	6823      	ldr	r3, [r4, #0]
 8012380:	079b      	lsls	r3, r3, #30
 8012382:	d413      	bmi.n	80123ac <_printf_i+0x22c>
 8012384:	68e0      	ldr	r0, [r4, #12]
 8012386:	9b03      	ldr	r3, [sp, #12]
 8012388:	4298      	cmp	r0, r3
 801238a:	bfb8      	it	lt
 801238c:	4618      	movlt	r0, r3
 801238e:	e7a6      	b.n	80122de <_printf_i+0x15e>
 8012390:	2301      	movs	r3, #1
 8012392:	4632      	mov	r2, r6
 8012394:	4649      	mov	r1, r9
 8012396:	4640      	mov	r0, r8
 8012398:	47d0      	blx	sl
 801239a:	3001      	adds	r0, #1
 801239c:	d09d      	beq.n	80122da <_printf_i+0x15a>
 801239e:	3501      	adds	r5, #1
 80123a0:	68e3      	ldr	r3, [r4, #12]
 80123a2:	9903      	ldr	r1, [sp, #12]
 80123a4:	1a5b      	subs	r3, r3, r1
 80123a6:	42ab      	cmp	r3, r5
 80123a8:	dcf2      	bgt.n	8012390 <_printf_i+0x210>
 80123aa:	e7eb      	b.n	8012384 <_printf_i+0x204>
 80123ac:	2500      	movs	r5, #0
 80123ae:	f104 0619 	add.w	r6, r4, #25
 80123b2:	e7f5      	b.n	80123a0 <_printf_i+0x220>
 80123b4:	08015dfc 	.word	0x08015dfc
 80123b8:	08015e0d 	.word	0x08015e0d

080123bc <std>:
 80123bc:	2300      	movs	r3, #0
 80123be:	b510      	push	{r4, lr}
 80123c0:	4604      	mov	r4, r0
 80123c2:	e9c0 3300 	strd	r3, r3, [r0]
 80123c6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80123ca:	6083      	str	r3, [r0, #8]
 80123cc:	8181      	strh	r1, [r0, #12]
 80123ce:	6643      	str	r3, [r0, #100]	@ 0x64
 80123d0:	81c2      	strh	r2, [r0, #14]
 80123d2:	6183      	str	r3, [r0, #24]
 80123d4:	4619      	mov	r1, r3
 80123d6:	2208      	movs	r2, #8
 80123d8:	305c      	adds	r0, #92	@ 0x5c
 80123da:	f000 f953 	bl	8012684 <memset>
 80123de:	4b0d      	ldr	r3, [pc, #52]	@ (8012414 <std+0x58>)
 80123e0:	6263      	str	r3, [r4, #36]	@ 0x24
 80123e2:	4b0d      	ldr	r3, [pc, #52]	@ (8012418 <std+0x5c>)
 80123e4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80123e6:	4b0d      	ldr	r3, [pc, #52]	@ (801241c <std+0x60>)
 80123e8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80123ea:	4b0d      	ldr	r3, [pc, #52]	@ (8012420 <std+0x64>)
 80123ec:	6323      	str	r3, [r4, #48]	@ 0x30
 80123ee:	4b0d      	ldr	r3, [pc, #52]	@ (8012424 <std+0x68>)
 80123f0:	6224      	str	r4, [r4, #32]
 80123f2:	429c      	cmp	r4, r3
 80123f4:	d006      	beq.n	8012404 <std+0x48>
 80123f6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80123fa:	4294      	cmp	r4, r2
 80123fc:	d002      	beq.n	8012404 <std+0x48>
 80123fe:	33d0      	adds	r3, #208	@ 0xd0
 8012400:	429c      	cmp	r4, r3
 8012402:	d105      	bne.n	8012410 <std+0x54>
 8012404:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8012408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801240c:	f000 bab2 	b.w	8012974 <__retarget_lock_init_recursive>
 8012410:	bd10      	pop	{r4, pc}
 8012412:	bf00      	nop
 8012414:	08012585 	.word	0x08012585
 8012418:	080125a7 	.word	0x080125a7
 801241c:	080125df 	.word	0x080125df
 8012420:	08012603 	.word	0x08012603
 8012424:	200116bc 	.word	0x200116bc

08012428 <stdio_exit_handler>:
 8012428:	4a02      	ldr	r2, [pc, #8]	@ (8012434 <stdio_exit_handler+0xc>)
 801242a:	4903      	ldr	r1, [pc, #12]	@ (8012438 <stdio_exit_handler+0x10>)
 801242c:	4803      	ldr	r0, [pc, #12]	@ (801243c <stdio_exit_handler+0x14>)
 801242e:	f000 b869 	b.w	8012504 <_fwalk_sglue>
 8012432:	bf00      	nop
 8012434:	2000028c 	.word	0x2000028c
 8012438:	08014af9 	.word	0x08014af9
 801243c:	20000408 	.word	0x20000408

08012440 <cleanup_stdio>:
 8012440:	6841      	ldr	r1, [r0, #4]
 8012442:	4b0c      	ldr	r3, [pc, #48]	@ (8012474 <cleanup_stdio+0x34>)
 8012444:	4299      	cmp	r1, r3
 8012446:	b510      	push	{r4, lr}
 8012448:	4604      	mov	r4, r0
 801244a:	d001      	beq.n	8012450 <cleanup_stdio+0x10>
 801244c:	f002 fb54 	bl	8014af8 <_fflush_r>
 8012450:	68a1      	ldr	r1, [r4, #8]
 8012452:	4b09      	ldr	r3, [pc, #36]	@ (8012478 <cleanup_stdio+0x38>)
 8012454:	4299      	cmp	r1, r3
 8012456:	d002      	beq.n	801245e <cleanup_stdio+0x1e>
 8012458:	4620      	mov	r0, r4
 801245a:	f002 fb4d 	bl	8014af8 <_fflush_r>
 801245e:	68e1      	ldr	r1, [r4, #12]
 8012460:	4b06      	ldr	r3, [pc, #24]	@ (801247c <cleanup_stdio+0x3c>)
 8012462:	4299      	cmp	r1, r3
 8012464:	d004      	beq.n	8012470 <cleanup_stdio+0x30>
 8012466:	4620      	mov	r0, r4
 8012468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801246c:	f002 bb44 	b.w	8014af8 <_fflush_r>
 8012470:	bd10      	pop	{r4, pc}
 8012472:	bf00      	nop
 8012474:	200116bc 	.word	0x200116bc
 8012478:	20011724 	.word	0x20011724
 801247c:	2001178c 	.word	0x2001178c

08012480 <global_stdio_init.part.0>:
 8012480:	b510      	push	{r4, lr}
 8012482:	4b0b      	ldr	r3, [pc, #44]	@ (80124b0 <global_stdio_init.part.0+0x30>)
 8012484:	4c0b      	ldr	r4, [pc, #44]	@ (80124b4 <global_stdio_init.part.0+0x34>)
 8012486:	4a0c      	ldr	r2, [pc, #48]	@ (80124b8 <global_stdio_init.part.0+0x38>)
 8012488:	601a      	str	r2, [r3, #0]
 801248a:	4620      	mov	r0, r4
 801248c:	2200      	movs	r2, #0
 801248e:	2104      	movs	r1, #4
 8012490:	f7ff ff94 	bl	80123bc <std>
 8012494:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8012498:	2201      	movs	r2, #1
 801249a:	2109      	movs	r1, #9
 801249c:	f7ff ff8e 	bl	80123bc <std>
 80124a0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80124a4:	2202      	movs	r2, #2
 80124a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124aa:	2112      	movs	r1, #18
 80124ac:	f7ff bf86 	b.w	80123bc <std>
 80124b0:	200117f4 	.word	0x200117f4
 80124b4:	200116bc 	.word	0x200116bc
 80124b8:	08012429 	.word	0x08012429

080124bc <__sfp_lock_acquire>:
 80124bc:	4801      	ldr	r0, [pc, #4]	@ (80124c4 <__sfp_lock_acquire+0x8>)
 80124be:	f000 ba5a 	b.w	8012976 <__retarget_lock_acquire_recursive>
 80124c2:	bf00      	nop
 80124c4:	200117fd 	.word	0x200117fd

080124c8 <__sfp_lock_release>:
 80124c8:	4801      	ldr	r0, [pc, #4]	@ (80124d0 <__sfp_lock_release+0x8>)
 80124ca:	f000 ba55 	b.w	8012978 <__retarget_lock_release_recursive>
 80124ce:	bf00      	nop
 80124d0:	200117fd 	.word	0x200117fd

080124d4 <__sinit>:
 80124d4:	b510      	push	{r4, lr}
 80124d6:	4604      	mov	r4, r0
 80124d8:	f7ff fff0 	bl	80124bc <__sfp_lock_acquire>
 80124dc:	6a23      	ldr	r3, [r4, #32]
 80124de:	b11b      	cbz	r3, 80124e8 <__sinit+0x14>
 80124e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124e4:	f7ff bff0 	b.w	80124c8 <__sfp_lock_release>
 80124e8:	4b04      	ldr	r3, [pc, #16]	@ (80124fc <__sinit+0x28>)
 80124ea:	6223      	str	r3, [r4, #32]
 80124ec:	4b04      	ldr	r3, [pc, #16]	@ (8012500 <__sinit+0x2c>)
 80124ee:	681b      	ldr	r3, [r3, #0]
 80124f0:	2b00      	cmp	r3, #0
 80124f2:	d1f5      	bne.n	80124e0 <__sinit+0xc>
 80124f4:	f7ff ffc4 	bl	8012480 <global_stdio_init.part.0>
 80124f8:	e7f2      	b.n	80124e0 <__sinit+0xc>
 80124fa:	bf00      	nop
 80124fc:	08012441 	.word	0x08012441
 8012500:	200117f4 	.word	0x200117f4

08012504 <_fwalk_sglue>:
 8012504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012508:	4607      	mov	r7, r0
 801250a:	4688      	mov	r8, r1
 801250c:	4614      	mov	r4, r2
 801250e:	2600      	movs	r6, #0
 8012510:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8012514:	f1b9 0901 	subs.w	r9, r9, #1
 8012518:	d505      	bpl.n	8012526 <_fwalk_sglue+0x22>
 801251a:	6824      	ldr	r4, [r4, #0]
 801251c:	2c00      	cmp	r4, #0
 801251e:	d1f7      	bne.n	8012510 <_fwalk_sglue+0xc>
 8012520:	4630      	mov	r0, r6
 8012522:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012526:	89ab      	ldrh	r3, [r5, #12]
 8012528:	2b01      	cmp	r3, #1
 801252a:	d907      	bls.n	801253c <_fwalk_sglue+0x38>
 801252c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8012530:	3301      	adds	r3, #1
 8012532:	d003      	beq.n	801253c <_fwalk_sglue+0x38>
 8012534:	4629      	mov	r1, r5
 8012536:	4638      	mov	r0, r7
 8012538:	47c0      	blx	r8
 801253a:	4306      	orrs	r6, r0
 801253c:	3568      	adds	r5, #104	@ 0x68
 801253e:	e7e9      	b.n	8012514 <_fwalk_sglue+0x10>

08012540 <siprintf>:
 8012540:	b40e      	push	{r1, r2, r3}
 8012542:	b510      	push	{r4, lr}
 8012544:	b09d      	sub	sp, #116	@ 0x74
 8012546:	ab1f      	add	r3, sp, #124	@ 0x7c
 8012548:	9002      	str	r0, [sp, #8]
 801254a:	9006      	str	r0, [sp, #24]
 801254c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8012550:	480a      	ldr	r0, [pc, #40]	@ (801257c <siprintf+0x3c>)
 8012552:	9107      	str	r1, [sp, #28]
 8012554:	9104      	str	r1, [sp, #16]
 8012556:	490a      	ldr	r1, [pc, #40]	@ (8012580 <siprintf+0x40>)
 8012558:	f853 2b04 	ldr.w	r2, [r3], #4
 801255c:	9105      	str	r1, [sp, #20]
 801255e:	2400      	movs	r4, #0
 8012560:	a902      	add	r1, sp, #8
 8012562:	6800      	ldr	r0, [r0, #0]
 8012564:	9301      	str	r3, [sp, #4]
 8012566:	941b      	str	r4, [sp, #108]	@ 0x6c
 8012568:	f002 f946 	bl	80147f8 <_svfiprintf_r>
 801256c:	9b02      	ldr	r3, [sp, #8]
 801256e:	701c      	strb	r4, [r3, #0]
 8012570:	b01d      	add	sp, #116	@ 0x74
 8012572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012576:	b003      	add	sp, #12
 8012578:	4770      	bx	lr
 801257a:	bf00      	nop
 801257c:	20000404 	.word	0x20000404
 8012580:	ffff0208 	.word	0xffff0208

08012584 <__sread>:
 8012584:	b510      	push	{r4, lr}
 8012586:	460c      	mov	r4, r1
 8012588:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801258c:	f000 f994 	bl	80128b8 <_read_r>
 8012590:	2800      	cmp	r0, #0
 8012592:	bfab      	itete	ge
 8012594:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8012596:	89a3      	ldrhlt	r3, [r4, #12]
 8012598:	181b      	addge	r3, r3, r0
 801259a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801259e:	bfac      	ite	ge
 80125a0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80125a2:	81a3      	strhlt	r3, [r4, #12]
 80125a4:	bd10      	pop	{r4, pc}

080125a6 <__swrite>:
 80125a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125aa:	461f      	mov	r7, r3
 80125ac:	898b      	ldrh	r3, [r1, #12]
 80125ae:	05db      	lsls	r3, r3, #23
 80125b0:	4605      	mov	r5, r0
 80125b2:	460c      	mov	r4, r1
 80125b4:	4616      	mov	r6, r2
 80125b6:	d505      	bpl.n	80125c4 <__swrite+0x1e>
 80125b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80125bc:	2302      	movs	r3, #2
 80125be:	2200      	movs	r2, #0
 80125c0:	f000 f968 	bl	8012894 <_lseek_r>
 80125c4:	89a3      	ldrh	r3, [r4, #12]
 80125c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80125ca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80125ce:	81a3      	strh	r3, [r4, #12]
 80125d0:	4632      	mov	r2, r6
 80125d2:	463b      	mov	r3, r7
 80125d4:	4628      	mov	r0, r5
 80125d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80125da:	f000 b98f 	b.w	80128fc <_write_r>

080125de <__sseek>:
 80125de:	b510      	push	{r4, lr}
 80125e0:	460c      	mov	r4, r1
 80125e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80125e6:	f000 f955 	bl	8012894 <_lseek_r>
 80125ea:	1c43      	adds	r3, r0, #1
 80125ec:	89a3      	ldrh	r3, [r4, #12]
 80125ee:	bf15      	itete	ne
 80125f0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80125f2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80125f6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80125fa:	81a3      	strheq	r3, [r4, #12]
 80125fc:	bf18      	it	ne
 80125fe:	81a3      	strhne	r3, [r4, #12]
 8012600:	bd10      	pop	{r4, pc}

08012602 <__sclose>:
 8012602:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012606:	f000 b8d7 	b.w	80127b8 <_close_r>

0801260a <_vsniprintf_r>:
 801260a:	b530      	push	{r4, r5, lr}
 801260c:	4614      	mov	r4, r2
 801260e:	2c00      	cmp	r4, #0
 8012610:	b09b      	sub	sp, #108	@ 0x6c
 8012612:	4605      	mov	r5, r0
 8012614:	461a      	mov	r2, r3
 8012616:	da05      	bge.n	8012624 <_vsniprintf_r+0x1a>
 8012618:	238b      	movs	r3, #139	@ 0x8b
 801261a:	6003      	str	r3, [r0, #0]
 801261c:	f04f 30ff 	mov.w	r0, #4294967295
 8012620:	b01b      	add	sp, #108	@ 0x6c
 8012622:	bd30      	pop	{r4, r5, pc}
 8012624:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8012628:	f8ad 300c 	strh.w	r3, [sp, #12]
 801262c:	f04f 0300 	mov.w	r3, #0
 8012630:	9319      	str	r3, [sp, #100]	@ 0x64
 8012632:	bf14      	ite	ne
 8012634:	f104 33ff 	addne.w	r3, r4, #4294967295
 8012638:	4623      	moveq	r3, r4
 801263a:	9302      	str	r3, [sp, #8]
 801263c:	9305      	str	r3, [sp, #20]
 801263e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8012642:	9100      	str	r1, [sp, #0]
 8012644:	9104      	str	r1, [sp, #16]
 8012646:	f8ad 300e 	strh.w	r3, [sp, #14]
 801264a:	4669      	mov	r1, sp
 801264c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801264e:	f002 f8d3 	bl	80147f8 <_svfiprintf_r>
 8012652:	1c43      	adds	r3, r0, #1
 8012654:	bfbc      	itt	lt
 8012656:	238b      	movlt	r3, #139	@ 0x8b
 8012658:	602b      	strlt	r3, [r5, #0]
 801265a:	2c00      	cmp	r4, #0
 801265c:	d0e0      	beq.n	8012620 <_vsniprintf_r+0x16>
 801265e:	9b00      	ldr	r3, [sp, #0]
 8012660:	2200      	movs	r2, #0
 8012662:	701a      	strb	r2, [r3, #0]
 8012664:	e7dc      	b.n	8012620 <_vsniprintf_r+0x16>
	...

08012668 <vsniprintf>:
 8012668:	b507      	push	{r0, r1, r2, lr}
 801266a:	9300      	str	r3, [sp, #0]
 801266c:	4613      	mov	r3, r2
 801266e:	460a      	mov	r2, r1
 8012670:	4601      	mov	r1, r0
 8012672:	4803      	ldr	r0, [pc, #12]	@ (8012680 <vsniprintf+0x18>)
 8012674:	6800      	ldr	r0, [r0, #0]
 8012676:	f7ff ffc8 	bl	801260a <_vsniprintf_r>
 801267a:	b003      	add	sp, #12
 801267c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012680:	20000404 	.word	0x20000404

08012684 <memset>:
 8012684:	4402      	add	r2, r0
 8012686:	4603      	mov	r3, r0
 8012688:	4293      	cmp	r3, r2
 801268a:	d100      	bne.n	801268e <memset+0xa>
 801268c:	4770      	bx	lr
 801268e:	f803 1b01 	strb.w	r1, [r3], #1
 8012692:	e7f9      	b.n	8012688 <memset+0x4>

08012694 <strchr>:
 8012694:	b2c9      	uxtb	r1, r1
 8012696:	4603      	mov	r3, r0
 8012698:	4618      	mov	r0, r3
 801269a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801269e:	b112      	cbz	r2, 80126a6 <strchr+0x12>
 80126a0:	428a      	cmp	r2, r1
 80126a2:	d1f9      	bne.n	8012698 <strchr+0x4>
 80126a4:	4770      	bx	lr
 80126a6:	2900      	cmp	r1, #0
 80126a8:	bf18      	it	ne
 80126aa:	2000      	movne	r0, #0
 80126ac:	4770      	bx	lr

080126ae <strncmp>:
 80126ae:	b510      	push	{r4, lr}
 80126b0:	b16a      	cbz	r2, 80126ce <strncmp+0x20>
 80126b2:	3901      	subs	r1, #1
 80126b4:	1884      	adds	r4, r0, r2
 80126b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80126ba:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80126be:	429a      	cmp	r2, r3
 80126c0:	d103      	bne.n	80126ca <strncmp+0x1c>
 80126c2:	42a0      	cmp	r0, r4
 80126c4:	d001      	beq.n	80126ca <strncmp+0x1c>
 80126c6:	2a00      	cmp	r2, #0
 80126c8:	d1f5      	bne.n	80126b6 <strncmp+0x8>
 80126ca:	1ad0      	subs	r0, r2, r3
 80126cc:	bd10      	pop	{r4, pc}
 80126ce:	4610      	mov	r0, r2
 80126d0:	e7fc      	b.n	80126cc <strncmp+0x1e>

080126d2 <strncpy>:
 80126d2:	b510      	push	{r4, lr}
 80126d4:	3901      	subs	r1, #1
 80126d6:	4603      	mov	r3, r0
 80126d8:	b132      	cbz	r2, 80126e8 <strncpy+0x16>
 80126da:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80126de:	f803 4b01 	strb.w	r4, [r3], #1
 80126e2:	3a01      	subs	r2, #1
 80126e4:	2c00      	cmp	r4, #0
 80126e6:	d1f7      	bne.n	80126d8 <strncpy+0x6>
 80126e8:	441a      	add	r2, r3
 80126ea:	2100      	movs	r1, #0
 80126ec:	4293      	cmp	r3, r2
 80126ee:	d100      	bne.n	80126f2 <strncpy+0x20>
 80126f0:	bd10      	pop	{r4, pc}
 80126f2:	f803 1b01 	strb.w	r1, [r3], #1
 80126f6:	e7f9      	b.n	80126ec <strncpy+0x1a>

080126f8 <strtok>:
 80126f8:	4b16      	ldr	r3, [pc, #88]	@ (8012754 <strtok+0x5c>)
 80126fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126fe:	681f      	ldr	r7, [r3, #0]
 8012700:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 8012702:	4605      	mov	r5, r0
 8012704:	460e      	mov	r6, r1
 8012706:	b9ec      	cbnz	r4, 8012744 <strtok+0x4c>
 8012708:	2050      	movs	r0, #80	@ 0x50
 801270a:	f7fe faaf 	bl	8010c6c <malloc>
 801270e:	4602      	mov	r2, r0
 8012710:	6478      	str	r0, [r7, #68]	@ 0x44
 8012712:	b920      	cbnz	r0, 801271e <strtok+0x26>
 8012714:	4b10      	ldr	r3, [pc, #64]	@ (8012758 <strtok+0x60>)
 8012716:	4811      	ldr	r0, [pc, #68]	@ (801275c <strtok+0x64>)
 8012718:	215b      	movs	r1, #91	@ 0x5b
 801271a:	f000 f94d 	bl	80129b8 <__assert_func>
 801271e:	e9c0 4400 	strd	r4, r4, [r0]
 8012722:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8012726:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801272a:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 801272e:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 8012732:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 8012736:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 801273a:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 801273e:	6184      	str	r4, [r0, #24]
 8012740:	7704      	strb	r4, [r0, #28]
 8012742:	6244      	str	r4, [r0, #36]	@ 0x24
 8012744:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012746:	4631      	mov	r1, r6
 8012748:	4628      	mov	r0, r5
 801274a:	2301      	movs	r3, #1
 801274c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012750:	f000 b806 	b.w	8012760 <__strtok_r>
 8012754:	20000404 	.word	0x20000404
 8012758:	08015e1e 	.word	0x08015e1e
 801275c:	08015e35 	.word	0x08015e35

08012760 <__strtok_r>:
 8012760:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012762:	4604      	mov	r4, r0
 8012764:	b908      	cbnz	r0, 801276a <__strtok_r+0xa>
 8012766:	6814      	ldr	r4, [r2, #0]
 8012768:	b144      	cbz	r4, 801277c <__strtok_r+0x1c>
 801276a:	4620      	mov	r0, r4
 801276c:	f814 5b01 	ldrb.w	r5, [r4], #1
 8012770:	460f      	mov	r7, r1
 8012772:	f817 6b01 	ldrb.w	r6, [r7], #1
 8012776:	b91e      	cbnz	r6, 8012780 <__strtok_r+0x20>
 8012778:	b965      	cbnz	r5, 8012794 <__strtok_r+0x34>
 801277a:	6015      	str	r5, [r2, #0]
 801277c:	2000      	movs	r0, #0
 801277e:	e005      	b.n	801278c <__strtok_r+0x2c>
 8012780:	42b5      	cmp	r5, r6
 8012782:	d1f6      	bne.n	8012772 <__strtok_r+0x12>
 8012784:	2b00      	cmp	r3, #0
 8012786:	d1f0      	bne.n	801276a <__strtok_r+0xa>
 8012788:	6014      	str	r4, [r2, #0]
 801278a:	7003      	strb	r3, [r0, #0]
 801278c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801278e:	461c      	mov	r4, r3
 8012790:	e00c      	b.n	80127ac <__strtok_r+0x4c>
 8012792:	b91d      	cbnz	r5, 801279c <__strtok_r+0x3c>
 8012794:	4627      	mov	r7, r4
 8012796:	f814 3b01 	ldrb.w	r3, [r4], #1
 801279a:	460e      	mov	r6, r1
 801279c:	f816 5b01 	ldrb.w	r5, [r6], #1
 80127a0:	42ab      	cmp	r3, r5
 80127a2:	d1f6      	bne.n	8012792 <__strtok_r+0x32>
 80127a4:	2b00      	cmp	r3, #0
 80127a6:	d0f2      	beq.n	801278e <__strtok_r+0x2e>
 80127a8:	2300      	movs	r3, #0
 80127aa:	703b      	strb	r3, [r7, #0]
 80127ac:	6014      	str	r4, [r2, #0]
 80127ae:	e7ed      	b.n	801278c <__strtok_r+0x2c>

080127b0 <_localeconv_r>:
 80127b0:	4800      	ldr	r0, [pc, #0]	@ (80127b4 <_localeconv_r+0x4>)
 80127b2:	4770      	bx	lr
 80127b4:	20000388 	.word	0x20000388

080127b8 <_close_r>:
 80127b8:	b538      	push	{r3, r4, r5, lr}
 80127ba:	4d06      	ldr	r5, [pc, #24]	@ (80127d4 <_close_r+0x1c>)
 80127bc:	2300      	movs	r3, #0
 80127be:	4604      	mov	r4, r0
 80127c0:	4608      	mov	r0, r1
 80127c2:	602b      	str	r3, [r5, #0]
 80127c4:	f7f1 fa2c 	bl	8003c20 <_close>
 80127c8:	1c43      	adds	r3, r0, #1
 80127ca:	d102      	bne.n	80127d2 <_close_r+0x1a>
 80127cc:	682b      	ldr	r3, [r5, #0]
 80127ce:	b103      	cbz	r3, 80127d2 <_close_r+0x1a>
 80127d0:	6023      	str	r3, [r4, #0]
 80127d2:	bd38      	pop	{r3, r4, r5, pc}
 80127d4:	200117f8 	.word	0x200117f8

080127d8 <_reclaim_reent>:
 80127d8:	4b2d      	ldr	r3, [pc, #180]	@ (8012890 <_reclaim_reent+0xb8>)
 80127da:	681b      	ldr	r3, [r3, #0]
 80127dc:	4283      	cmp	r3, r0
 80127de:	b570      	push	{r4, r5, r6, lr}
 80127e0:	4604      	mov	r4, r0
 80127e2:	d053      	beq.n	801288c <_reclaim_reent+0xb4>
 80127e4:	69c3      	ldr	r3, [r0, #28]
 80127e6:	b31b      	cbz	r3, 8012830 <_reclaim_reent+0x58>
 80127e8:	68db      	ldr	r3, [r3, #12]
 80127ea:	b163      	cbz	r3, 8012806 <_reclaim_reent+0x2e>
 80127ec:	2500      	movs	r5, #0
 80127ee:	69e3      	ldr	r3, [r4, #28]
 80127f0:	68db      	ldr	r3, [r3, #12]
 80127f2:	5959      	ldr	r1, [r3, r5]
 80127f4:	b9b1      	cbnz	r1, 8012824 <_reclaim_reent+0x4c>
 80127f6:	3504      	adds	r5, #4
 80127f8:	2d80      	cmp	r5, #128	@ 0x80
 80127fa:	d1f8      	bne.n	80127ee <_reclaim_reent+0x16>
 80127fc:	69e3      	ldr	r3, [r4, #28]
 80127fe:	4620      	mov	r0, r4
 8012800:	68d9      	ldr	r1, [r3, #12]
 8012802:	f000 ff51 	bl	80136a8 <_free_r>
 8012806:	69e3      	ldr	r3, [r4, #28]
 8012808:	6819      	ldr	r1, [r3, #0]
 801280a:	b111      	cbz	r1, 8012812 <_reclaim_reent+0x3a>
 801280c:	4620      	mov	r0, r4
 801280e:	f000 ff4b 	bl	80136a8 <_free_r>
 8012812:	69e3      	ldr	r3, [r4, #28]
 8012814:	689d      	ldr	r5, [r3, #8]
 8012816:	b15d      	cbz	r5, 8012830 <_reclaim_reent+0x58>
 8012818:	4629      	mov	r1, r5
 801281a:	4620      	mov	r0, r4
 801281c:	682d      	ldr	r5, [r5, #0]
 801281e:	f000 ff43 	bl	80136a8 <_free_r>
 8012822:	e7f8      	b.n	8012816 <_reclaim_reent+0x3e>
 8012824:	680e      	ldr	r6, [r1, #0]
 8012826:	4620      	mov	r0, r4
 8012828:	f000 ff3e 	bl	80136a8 <_free_r>
 801282c:	4631      	mov	r1, r6
 801282e:	e7e1      	b.n	80127f4 <_reclaim_reent+0x1c>
 8012830:	6961      	ldr	r1, [r4, #20]
 8012832:	b111      	cbz	r1, 801283a <_reclaim_reent+0x62>
 8012834:	4620      	mov	r0, r4
 8012836:	f000 ff37 	bl	80136a8 <_free_r>
 801283a:	69e1      	ldr	r1, [r4, #28]
 801283c:	b111      	cbz	r1, 8012844 <_reclaim_reent+0x6c>
 801283e:	4620      	mov	r0, r4
 8012840:	f000 ff32 	bl	80136a8 <_free_r>
 8012844:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8012846:	b111      	cbz	r1, 801284e <_reclaim_reent+0x76>
 8012848:	4620      	mov	r0, r4
 801284a:	f000 ff2d 	bl	80136a8 <_free_r>
 801284e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012850:	b111      	cbz	r1, 8012858 <_reclaim_reent+0x80>
 8012852:	4620      	mov	r0, r4
 8012854:	f000 ff28 	bl	80136a8 <_free_r>
 8012858:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801285a:	b111      	cbz	r1, 8012862 <_reclaim_reent+0x8a>
 801285c:	4620      	mov	r0, r4
 801285e:	f000 ff23 	bl	80136a8 <_free_r>
 8012862:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012864:	b111      	cbz	r1, 801286c <_reclaim_reent+0x94>
 8012866:	4620      	mov	r0, r4
 8012868:	f000 ff1e 	bl	80136a8 <_free_r>
 801286c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801286e:	b111      	cbz	r1, 8012876 <_reclaim_reent+0x9e>
 8012870:	4620      	mov	r0, r4
 8012872:	f000 ff19 	bl	80136a8 <_free_r>
 8012876:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8012878:	b111      	cbz	r1, 8012880 <_reclaim_reent+0xa8>
 801287a:	4620      	mov	r0, r4
 801287c:	f000 ff14 	bl	80136a8 <_free_r>
 8012880:	6a23      	ldr	r3, [r4, #32]
 8012882:	b11b      	cbz	r3, 801288c <_reclaim_reent+0xb4>
 8012884:	4620      	mov	r0, r4
 8012886:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801288a:	4718      	bx	r3
 801288c:	bd70      	pop	{r4, r5, r6, pc}
 801288e:	bf00      	nop
 8012890:	20000404 	.word	0x20000404

08012894 <_lseek_r>:
 8012894:	b538      	push	{r3, r4, r5, lr}
 8012896:	4d07      	ldr	r5, [pc, #28]	@ (80128b4 <_lseek_r+0x20>)
 8012898:	4604      	mov	r4, r0
 801289a:	4608      	mov	r0, r1
 801289c:	4611      	mov	r1, r2
 801289e:	2200      	movs	r2, #0
 80128a0:	602a      	str	r2, [r5, #0]
 80128a2:	461a      	mov	r2, r3
 80128a4:	f7f1 f9e3 	bl	8003c6e <_lseek>
 80128a8:	1c43      	adds	r3, r0, #1
 80128aa:	d102      	bne.n	80128b2 <_lseek_r+0x1e>
 80128ac:	682b      	ldr	r3, [r5, #0]
 80128ae:	b103      	cbz	r3, 80128b2 <_lseek_r+0x1e>
 80128b0:	6023      	str	r3, [r4, #0]
 80128b2:	bd38      	pop	{r3, r4, r5, pc}
 80128b4:	200117f8 	.word	0x200117f8

080128b8 <_read_r>:
 80128b8:	b538      	push	{r3, r4, r5, lr}
 80128ba:	4d07      	ldr	r5, [pc, #28]	@ (80128d8 <_read_r+0x20>)
 80128bc:	4604      	mov	r4, r0
 80128be:	4608      	mov	r0, r1
 80128c0:	4611      	mov	r1, r2
 80128c2:	2200      	movs	r2, #0
 80128c4:	602a      	str	r2, [r5, #0]
 80128c6:	461a      	mov	r2, r3
 80128c8:	f7f1 f971 	bl	8003bae <_read>
 80128cc:	1c43      	adds	r3, r0, #1
 80128ce:	d102      	bne.n	80128d6 <_read_r+0x1e>
 80128d0:	682b      	ldr	r3, [r5, #0]
 80128d2:	b103      	cbz	r3, 80128d6 <_read_r+0x1e>
 80128d4:	6023      	str	r3, [r4, #0]
 80128d6:	bd38      	pop	{r3, r4, r5, pc}
 80128d8:	200117f8 	.word	0x200117f8

080128dc <_sbrk_r>:
 80128dc:	b538      	push	{r3, r4, r5, lr}
 80128de:	4d06      	ldr	r5, [pc, #24]	@ (80128f8 <_sbrk_r+0x1c>)
 80128e0:	2300      	movs	r3, #0
 80128e2:	4604      	mov	r4, r0
 80128e4:	4608      	mov	r0, r1
 80128e6:	602b      	str	r3, [r5, #0]
 80128e8:	f7f1 f9ce 	bl	8003c88 <_sbrk>
 80128ec:	1c43      	adds	r3, r0, #1
 80128ee:	d102      	bne.n	80128f6 <_sbrk_r+0x1a>
 80128f0:	682b      	ldr	r3, [r5, #0]
 80128f2:	b103      	cbz	r3, 80128f6 <_sbrk_r+0x1a>
 80128f4:	6023      	str	r3, [r4, #0]
 80128f6:	bd38      	pop	{r3, r4, r5, pc}
 80128f8:	200117f8 	.word	0x200117f8

080128fc <_write_r>:
 80128fc:	b538      	push	{r3, r4, r5, lr}
 80128fe:	4d07      	ldr	r5, [pc, #28]	@ (801291c <_write_r+0x20>)
 8012900:	4604      	mov	r4, r0
 8012902:	4608      	mov	r0, r1
 8012904:	4611      	mov	r1, r2
 8012906:	2200      	movs	r2, #0
 8012908:	602a      	str	r2, [r5, #0]
 801290a:	461a      	mov	r2, r3
 801290c:	f7f1 f96c 	bl	8003be8 <_write>
 8012910:	1c43      	adds	r3, r0, #1
 8012912:	d102      	bne.n	801291a <_write_r+0x1e>
 8012914:	682b      	ldr	r3, [r5, #0]
 8012916:	b103      	cbz	r3, 801291a <_write_r+0x1e>
 8012918:	6023      	str	r3, [r4, #0]
 801291a:	bd38      	pop	{r3, r4, r5, pc}
 801291c:	200117f8 	.word	0x200117f8

08012920 <__errno>:
 8012920:	4b01      	ldr	r3, [pc, #4]	@ (8012928 <__errno+0x8>)
 8012922:	6818      	ldr	r0, [r3, #0]
 8012924:	4770      	bx	lr
 8012926:	bf00      	nop
 8012928:	20000404 	.word	0x20000404

0801292c <__libc_init_array>:
 801292c:	b570      	push	{r4, r5, r6, lr}
 801292e:	4d0d      	ldr	r5, [pc, #52]	@ (8012964 <__libc_init_array+0x38>)
 8012930:	4c0d      	ldr	r4, [pc, #52]	@ (8012968 <__libc_init_array+0x3c>)
 8012932:	1b64      	subs	r4, r4, r5
 8012934:	10a4      	asrs	r4, r4, #2
 8012936:	2600      	movs	r6, #0
 8012938:	42a6      	cmp	r6, r4
 801293a:	d109      	bne.n	8012950 <__libc_init_array+0x24>
 801293c:	4d0b      	ldr	r5, [pc, #44]	@ (801296c <__libc_init_array+0x40>)
 801293e:	4c0c      	ldr	r4, [pc, #48]	@ (8012970 <__libc_init_array+0x44>)
 8012940:	f002 fc1c 	bl	801517c <_init>
 8012944:	1b64      	subs	r4, r4, r5
 8012946:	10a4      	asrs	r4, r4, #2
 8012948:	2600      	movs	r6, #0
 801294a:	42a6      	cmp	r6, r4
 801294c:	d105      	bne.n	801295a <__libc_init_array+0x2e>
 801294e:	bd70      	pop	{r4, r5, r6, pc}
 8012950:	f855 3b04 	ldr.w	r3, [r5], #4
 8012954:	4798      	blx	r3
 8012956:	3601      	adds	r6, #1
 8012958:	e7ee      	b.n	8012938 <__libc_init_array+0xc>
 801295a:	f855 3b04 	ldr.w	r3, [r5], #4
 801295e:	4798      	blx	r3
 8012960:	3601      	adds	r6, #1
 8012962:	e7f2      	b.n	801294a <__libc_init_array+0x1e>
 8012964:	08016270 	.word	0x08016270
 8012968:	08016270 	.word	0x08016270
 801296c:	08016270 	.word	0x08016270
 8012970:	08016274 	.word	0x08016274

08012974 <__retarget_lock_init_recursive>:
 8012974:	4770      	bx	lr

08012976 <__retarget_lock_acquire_recursive>:
 8012976:	4770      	bx	lr

08012978 <__retarget_lock_release_recursive>:
 8012978:	4770      	bx	lr

0801297a <strcpy>:
 801297a:	4603      	mov	r3, r0
 801297c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012980:	f803 2b01 	strb.w	r2, [r3], #1
 8012984:	2a00      	cmp	r2, #0
 8012986:	d1f9      	bne.n	801297c <strcpy+0x2>
 8012988:	4770      	bx	lr

0801298a <memcpy>:
 801298a:	440a      	add	r2, r1
 801298c:	4291      	cmp	r1, r2
 801298e:	f100 33ff 	add.w	r3, r0, #4294967295
 8012992:	d100      	bne.n	8012996 <memcpy+0xc>
 8012994:	4770      	bx	lr
 8012996:	b510      	push	{r4, lr}
 8012998:	f811 4b01 	ldrb.w	r4, [r1], #1
 801299c:	f803 4f01 	strb.w	r4, [r3, #1]!
 80129a0:	4291      	cmp	r1, r2
 80129a2:	d1f9      	bne.n	8012998 <memcpy+0xe>
 80129a4:	bd10      	pop	{r4, pc}
	...

080129a8 <nan>:
 80129a8:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 80129b0 <nan+0x8>
 80129ac:	4770      	bx	lr
 80129ae:	bf00      	nop
 80129b0:	00000000 	.word	0x00000000
 80129b4:	7ff80000 	.word	0x7ff80000

080129b8 <__assert_func>:
 80129b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80129ba:	4614      	mov	r4, r2
 80129bc:	461a      	mov	r2, r3
 80129be:	4b09      	ldr	r3, [pc, #36]	@ (80129e4 <__assert_func+0x2c>)
 80129c0:	681b      	ldr	r3, [r3, #0]
 80129c2:	4605      	mov	r5, r0
 80129c4:	68d8      	ldr	r0, [r3, #12]
 80129c6:	b14c      	cbz	r4, 80129dc <__assert_func+0x24>
 80129c8:	4b07      	ldr	r3, [pc, #28]	@ (80129e8 <__assert_func+0x30>)
 80129ca:	9100      	str	r1, [sp, #0]
 80129cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80129d0:	4906      	ldr	r1, [pc, #24]	@ (80129ec <__assert_func+0x34>)
 80129d2:	462b      	mov	r3, r5
 80129d4:	f002 f8b8 	bl	8014b48 <fiprintf>
 80129d8:	f002 f8e2 	bl	8014ba0 <abort>
 80129dc:	4b04      	ldr	r3, [pc, #16]	@ (80129f0 <__assert_func+0x38>)
 80129de:	461c      	mov	r4, r3
 80129e0:	e7f3      	b.n	80129ca <__assert_func+0x12>
 80129e2:	bf00      	nop
 80129e4:	20000404 	.word	0x20000404
 80129e8:	08015e97 	.word	0x08015e97
 80129ec:	08015ea4 	.word	0x08015ea4
 80129f0:	08015ed2 	.word	0x08015ed2

080129f4 <quorem>:
 80129f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129f8:	6903      	ldr	r3, [r0, #16]
 80129fa:	690c      	ldr	r4, [r1, #16]
 80129fc:	42a3      	cmp	r3, r4
 80129fe:	4607      	mov	r7, r0
 8012a00:	db7e      	blt.n	8012b00 <quorem+0x10c>
 8012a02:	3c01      	subs	r4, #1
 8012a04:	f101 0814 	add.w	r8, r1, #20
 8012a08:	00a3      	lsls	r3, r4, #2
 8012a0a:	f100 0514 	add.w	r5, r0, #20
 8012a0e:	9300      	str	r3, [sp, #0]
 8012a10:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8012a14:	9301      	str	r3, [sp, #4]
 8012a16:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8012a1a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8012a1e:	3301      	adds	r3, #1
 8012a20:	429a      	cmp	r2, r3
 8012a22:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8012a26:	fbb2 f6f3 	udiv	r6, r2, r3
 8012a2a:	d32e      	bcc.n	8012a8a <quorem+0x96>
 8012a2c:	f04f 0a00 	mov.w	sl, #0
 8012a30:	46c4      	mov	ip, r8
 8012a32:	46ae      	mov	lr, r5
 8012a34:	46d3      	mov	fp, sl
 8012a36:	f85c 3b04 	ldr.w	r3, [ip], #4
 8012a3a:	b298      	uxth	r0, r3
 8012a3c:	fb06 a000 	mla	r0, r6, r0, sl
 8012a40:	0c02      	lsrs	r2, r0, #16
 8012a42:	0c1b      	lsrs	r3, r3, #16
 8012a44:	fb06 2303 	mla	r3, r6, r3, r2
 8012a48:	f8de 2000 	ldr.w	r2, [lr]
 8012a4c:	b280      	uxth	r0, r0
 8012a4e:	b292      	uxth	r2, r2
 8012a50:	1a12      	subs	r2, r2, r0
 8012a52:	445a      	add	r2, fp
 8012a54:	f8de 0000 	ldr.w	r0, [lr]
 8012a58:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8012a5c:	b29b      	uxth	r3, r3
 8012a5e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8012a62:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8012a66:	b292      	uxth	r2, r2
 8012a68:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8012a6c:	45e1      	cmp	r9, ip
 8012a6e:	f84e 2b04 	str.w	r2, [lr], #4
 8012a72:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8012a76:	d2de      	bcs.n	8012a36 <quorem+0x42>
 8012a78:	9b00      	ldr	r3, [sp, #0]
 8012a7a:	58eb      	ldr	r3, [r5, r3]
 8012a7c:	b92b      	cbnz	r3, 8012a8a <quorem+0x96>
 8012a7e:	9b01      	ldr	r3, [sp, #4]
 8012a80:	3b04      	subs	r3, #4
 8012a82:	429d      	cmp	r5, r3
 8012a84:	461a      	mov	r2, r3
 8012a86:	d32f      	bcc.n	8012ae8 <quorem+0xf4>
 8012a88:	613c      	str	r4, [r7, #16]
 8012a8a:	4638      	mov	r0, r7
 8012a8c:	f001 fc5e 	bl	801434c <__mcmp>
 8012a90:	2800      	cmp	r0, #0
 8012a92:	db25      	blt.n	8012ae0 <quorem+0xec>
 8012a94:	4629      	mov	r1, r5
 8012a96:	2000      	movs	r0, #0
 8012a98:	f858 2b04 	ldr.w	r2, [r8], #4
 8012a9c:	f8d1 c000 	ldr.w	ip, [r1]
 8012aa0:	fa1f fe82 	uxth.w	lr, r2
 8012aa4:	fa1f f38c 	uxth.w	r3, ip
 8012aa8:	eba3 030e 	sub.w	r3, r3, lr
 8012aac:	4403      	add	r3, r0
 8012aae:	0c12      	lsrs	r2, r2, #16
 8012ab0:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8012ab4:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8012ab8:	b29b      	uxth	r3, r3
 8012aba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8012abe:	45c1      	cmp	r9, r8
 8012ac0:	f841 3b04 	str.w	r3, [r1], #4
 8012ac4:	ea4f 4022 	mov.w	r0, r2, asr #16
 8012ac8:	d2e6      	bcs.n	8012a98 <quorem+0xa4>
 8012aca:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8012ace:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8012ad2:	b922      	cbnz	r2, 8012ade <quorem+0xea>
 8012ad4:	3b04      	subs	r3, #4
 8012ad6:	429d      	cmp	r5, r3
 8012ad8:	461a      	mov	r2, r3
 8012ada:	d30b      	bcc.n	8012af4 <quorem+0x100>
 8012adc:	613c      	str	r4, [r7, #16]
 8012ade:	3601      	adds	r6, #1
 8012ae0:	4630      	mov	r0, r6
 8012ae2:	b003      	add	sp, #12
 8012ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ae8:	6812      	ldr	r2, [r2, #0]
 8012aea:	3b04      	subs	r3, #4
 8012aec:	2a00      	cmp	r2, #0
 8012aee:	d1cb      	bne.n	8012a88 <quorem+0x94>
 8012af0:	3c01      	subs	r4, #1
 8012af2:	e7c6      	b.n	8012a82 <quorem+0x8e>
 8012af4:	6812      	ldr	r2, [r2, #0]
 8012af6:	3b04      	subs	r3, #4
 8012af8:	2a00      	cmp	r2, #0
 8012afa:	d1ef      	bne.n	8012adc <quorem+0xe8>
 8012afc:	3c01      	subs	r4, #1
 8012afe:	e7ea      	b.n	8012ad6 <quorem+0xe2>
 8012b00:	2000      	movs	r0, #0
 8012b02:	e7ee      	b.n	8012ae2 <quorem+0xee>
 8012b04:	0000      	movs	r0, r0
	...

08012b08 <_dtoa_r>:
 8012b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b0c:	69c7      	ldr	r7, [r0, #28]
 8012b0e:	b097      	sub	sp, #92	@ 0x5c
 8012b10:	ed8d 0b04 	vstr	d0, [sp, #16]
 8012b14:	ec55 4b10 	vmov	r4, r5, d0
 8012b18:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8012b1a:	9107      	str	r1, [sp, #28]
 8012b1c:	4681      	mov	r9, r0
 8012b1e:	920c      	str	r2, [sp, #48]	@ 0x30
 8012b20:	9311      	str	r3, [sp, #68]	@ 0x44
 8012b22:	b97f      	cbnz	r7, 8012b44 <_dtoa_r+0x3c>
 8012b24:	2010      	movs	r0, #16
 8012b26:	f7fe f8a1 	bl	8010c6c <malloc>
 8012b2a:	4602      	mov	r2, r0
 8012b2c:	f8c9 001c 	str.w	r0, [r9, #28]
 8012b30:	b920      	cbnz	r0, 8012b3c <_dtoa_r+0x34>
 8012b32:	4ba9      	ldr	r3, [pc, #676]	@ (8012dd8 <_dtoa_r+0x2d0>)
 8012b34:	21ef      	movs	r1, #239	@ 0xef
 8012b36:	48a9      	ldr	r0, [pc, #676]	@ (8012ddc <_dtoa_r+0x2d4>)
 8012b38:	f7ff ff3e 	bl	80129b8 <__assert_func>
 8012b3c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8012b40:	6007      	str	r7, [r0, #0]
 8012b42:	60c7      	str	r7, [r0, #12]
 8012b44:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8012b48:	6819      	ldr	r1, [r3, #0]
 8012b4a:	b159      	cbz	r1, 8012b64 <_dtoa_r+0x5c>
 8012b4c:	685a      	ldr	r2, [r3, #4]
 8012b4e:	604a      	str	r2, [r1, #4]
 8012b50:	2301      	movs	r3, #1
 8012b52:	4093      	lsls	r3, r2
 8012b54:	608b      	str	r3, [r1, #8]
 8012b56:	4648      	mov	r0, r9
 8012b58:	f001 f97c 	bl	8013e54 <_Bfree>
 8012b5c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8012b60:	2200      	movs	r2, #0
 8012b62:	601a      	str	r2, [r3, #0]
 8012b64:	1e2b      	subs	r3, r5, #0
 8012b66:	bfb9      	ittee	lt
 8012b68:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8012b6c:	9305      	strlt	r3, [sp, #20]
 8012b6e:	2300      	movge	r3, #0
 8012b70:	6033      	strge	r3, [r6, #0]
 8012b72:	9f05      	ldr	r7, [sp, #20]
 8012b74:	4b9a      	ldr	r3, [pc, #616]	@ (8012de0 <_dtoa_r+0x2d8>)
 8012b76:	bfbc      	itt	lt
 8012b78:	2201      	movlt	r2, #1
 8012b7a:	6032      	strlt	r2, [r6, #0]
 8012b7c:	43bb      	bics	r3, r7
 8012b7e:	d112      	bne.n	8012ba6 <_dtoa_r+0x9e>
 8012b80:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012b82:	f242 730f 	movw	r3, #9999	@ 0x270f
 8012b86:	6013      	str	r3, [r2, #0]
 8012b88:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8012b8c:	4323      	orrs	r3, r4
 8012b8e:	f000 855a 	beq.w	8013646 <_dtoa_r+0xb3e>
 8012b92:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8012b94:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8012df4 <_dtoa_r+0x2ec>
 8012b98:	2b00      	cmp	r3, #0
 8012b9a:	f000 855c 	beq.w	8013656 <_dtoa_r+0xb4e>
 8012b9e:	f10a 0303 	add.w	r3, sl, #3
 8012ba2:	f000 bd56 	b.w	8013652 <_dtoa_r+0xb4a>
 8012ba6:	ed9d 7b04 	vldr	d7, [sp, #16]
 8012baa:	2200      	movs	r2, #0
 8012bac:	ec51 0b17 	vmov	r0, r1, d7
 8012bb0:	2300      	movs	r3, #0
 8012bb2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8012bb6:	f7ed ff87 	bl	8000ac8 <__aeabi_dcmpeq>
 8012bba:	4680      	mov	r8, r0
 8012bbc:	b158      	cbz	r0, 8012bd6 <_dtoa_r+0xce>
 8012bbe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012bc0:	2301      	movs	r3, #1
 8012bc2:	6013      	str	r3, [r2, #0]
 8012bc4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8012bc6:	b113      	cbz	r3, 8012bce <_dtoa_r+0xc6>
 8012bc8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012bca:	4b86      	ldr	r3, [pc, #536]	@ (8012de4 <_dtoa_r+0x2dc>)
 8012bcc:	6013      	str	r3, [r2, #0]
 8012bce:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8012df8 <_dtoa_r+0x2f0>
 8012bd2:	f000 bd40 	b.w	8013656 <_dtoa_r+0xb4e>
 8012bd6:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8012bda:	aa14      	add	r2, sp, #80	@ 0x50
 8012bdc:	a915      	add	r1, sp, #84	@ 0x54
 8012bde:	4648      	mov	r0, r9
 8012be0:	f001 fcd4 	bl	801458c <__d2b>
 8012be4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8012be8:	9002      	str	r0, [sp, #8]
 8012bea:	2e00      	cmp	r6, #0
 8012bec:	d078      	beq.n	8012ce0 <_dtoa_r+0x1d8>
 8012bee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012bf0:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8012bf4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8012bf8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8012bfc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8012c00:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8012c04:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8012c08:	4619      	mov	r1, r3
 8012c0a:	2200      	movs	r2, #0
 8012c0c:	4b76      	ldr	r3, [pc, #472]	@ (8012de8 <_dtoa_r+0x2e0>)
 8012c0e:	f7ed fb3b 	bl	8000288 <__aeabi_dsub>
 8012c12:	a36b      	add	r3, pc, #428	@ (adr r3, 8012dc0 <_dtoa_r+0x2b8>)
 8012c14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c18:	f7ed fcee 	bl	80005f8 <__aeabi_dmul>
 8012c1c:	a36a      	add	r3, pc, #424	@ (adr r3, 8012dc8 <_dtoa_r+0x2c0>)
 8012c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c22:	f7ed fb33 	bl	800028c <__adddf3>
 8012c26:	4604      	mov	r4, r0
 8012c28:	4630      	mov	r0, r6
 8012c2a:	460d      	mov	r5, r1
 8012c2c:	f7ed fc7a 	bl	8000524 <__aeabi_i2d>
 8012c30:	a367      	add	r3, pc, #412	@ (adr r3, 8012dd0 <_dtoa_r+0x2c8>)
 8012c32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c36:	f7ed fcdf 	bl	80005f8 <__aeabi_dmul>
 8012c3a:	4602      	mov	r2, r0
 8012c3c:	460b      	mov	r3, r1
 8012c3e:	4620      	mov	r0, r4
 8012c40:	4629      	mov	r1, r5
 8012c42:	f7ed fb23 	bl	800028c <__adddf3>
 8012c46:	4604      	mov	r4, r0
 8012c48:	460d      	mov	r5, r1
 8012c4a:	f7ed ff85 	bl	8000b58 <__aeabi_d2iz>
 8012c4e:	2200      	movs	r2, #0
 8012c50:	4607      	mov	r7, r0
 8012c52:	2300      	movs	r3, #0
 8012c54:	4620      	mov	r0, r4
 8012c56:	4629      	mov	r1, r5
 8012c58:	f7ed ff40 	bl	8000adc <__aeabi_dcmplt>
 8012c5c:	b140      	cbz	r0, 8012c70 <_dtoa_r+0x168>
 8012c5e:	4638      	mov	r0, r7
 8012c60:	f7ed fc60 	bl	8000524 <__aeabi_i2d>
 8012c64:	4622      	mov	r2, r4
 8012c66:	462b      	mov	r3, r5
 8012c68:	f7ed ff2e 	bl	8000ac8 <__aeabi_dcmpeq>
 8012c6c:	b900      	cbnz	r0, 8012c70 <_dtoa_r+0x168>
 8012c6e:	3f01      	subs	r7, #1
 8012c70:	2f16      	cmp	r7, #22
 8012c72:	d852      	bhi.n	8012d1a <_dtoa_r+0x212>
 8012c74:	4b5d      	ldr	r3, [pc, #372]	@ (8012dec <_dtoa_r+0x2e4>)
 8012c76:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8012c7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c7e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8012c82:	f7ed ff2b 	bl	8000adc <__aeabi_dcmplt>
 8012c86:	2800      	cmp	r0, #0
 8012c88:	d049      	beq.n	8012d1e <_dtoa_r+0x216>
 8012c8a:	3f01      	subs	r7, #1
 8012c8c:	2300      	movs	r3, #0
 8012c8e:	9310      	str	r3, [sp, #64]	@ 0x40
 8012c90:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8012c92:	1b9b      	subs	r3, r3, r6
 8012c94:	1e5a      	subs	r2, r3, #1
 8012c96:	bf45      	ittet	mi
 8012c98:	f1c3 0301 	rsbmi	r3, r3, #1
 8012c9c:	9300      	strmi	r3, [sp, #0]
 8012c9e:	2300      	movpl	r3, #0
 8012ca0:	2300      	movmi	r3, #0
 8012ca2:	9206      	str	r2, [sp, #24]
 8012ca4:	bf54      	ite	pl
 8012ca6:	9300      	strpl	r3, [sp, #0]
 8012ca8:	9306      	strmi	r3, [sp, #24]
 8012caa:	2f00      	cmp	r7, #0
 8012cac:	db39      	blt.n	8012d22 <_dtoa_r+0x21a>
 8012cae:	9b06      	ldr	r3, [sp, #24]
 8012cb0:	970d      	str	r7, [sp, #52]	@ 0x34
 8012cb2:	443b      	add	r3, r7
 8012cb4:	9306      	str	r3, [sp, #24]
 8012cb6:	2300      	movs	r3, #0
 8012cb8:	9308      	str	r3, [sp, #32]
 8012cba:	9b07      	ldr	r3, [sp, #28]
 8012cbc:	2b09      	cmp	r3, #9
 8012cbe:	d863      	bhi.n	8012d88 <_dtoa_r+0x280>
 8012cc0:	2b05      	cmp	r3, #5
 8012cc2:	bfc4      	itt	gt
 8012cc4:	3b04      	subgt	r3, #4
 8012cc6:	9307      	strgt	r3, [sp, #28]
 8012cc8:	9b07      	ldr	r3, [sp, #28]
 8012cca:	f1a3 0302 	sub.w	r3, r3, #2
 8012cce:	bfcc      	ite	gt
 8012cd0:	2400      	movgt	r4, #0
 8012cd2:	2401      	movle	r4, #1
 8012cd4:	2b03      	cmp	r3, #3
 8012cd6:	d863      	bhi.n	8012da0 <_dtoa_r+0x298>
 8012cd8:	e8df f003 	tbb	[pc, r3]
 8012cdc:	2b375452 	.word	0x2b375452
 8012ce0:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8012ce4:	441e      	add	r6, r3
 8012ce6:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8012cea:	2b20      	cmp	r3, #32
 8012cec:	bfc1      	itttt	gt
 8012cee:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8012cf2:	409f      	lslgt	r7, r3
 8012cf4:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8012cf8:	fa24 f303 	lsrgt.w	r3, r4, r3
 8012cfc:	bfd6      	itet	le
 8012cfe:	f1c3 0320 	rsble	r3, r3, #32
 8012d02:	ea47 0003 	orrgt.w	r0, r7, r3
 8012d06:	fa04 f003 	lslle.w	r0, r4, r3
 8012d0a:	f7ed fbfb 	bl	8000504 <__aeabi_ui2d>
 8012d0e:	2201      	movs	r2, #1
 8012d10:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8012d14:	3e01      	subs	r6, #1
 8012d16:	9212      	str	r2, [sp, #72]	@ 0x48
 8012d18:	e776      	b.n	8012c08 <_dtoa_r+0x100>
 8012d1a:	2301      	movs	r3, #1
 8012d1c:	e7b7      	b.n	8012c8e <_dtoa_r+0x186>
 8012d1e:	9010      	str	r0, [sp, #64]	@ 0x40
 8012d20:	e7b6      	b.n	8012c90 <_dtoa_r+0x188>
 8012d22:	9b00      	ldr	r3, [sp, #0]
 8012d24:	1bdb      	subs	r3, r3, r7
 8012d26:	9300      	str	r3, [sp, #0]
 8012d28:	427b      	negs	r3, r7
 8012d2a:	9308      	str	r3, [sp, #32]
 8012d2c:	2300      	movs	r3, #0
 8012d2e:	930d      	str	r3, [sp, #52]	@ 0x34
 8012d30:	e7c3      	b.n	8012cba <_dtoa_r+0x1b2>
 8012d32:	2301      	movs	r3, #1
 8012d34:	9309      	str	r3, [sp, #36]	@ 0x24
 8012d36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012d38:	eb07 0b03 	add.w	fp, r7, r3
 8012d3c:	f10b 0301 	add.w	r3, fp, #1
 8012d40:	2b01      	cmp	r3, #1
 8012d42:	9303      	str	r3, [sp, #12]
 8012d44:	bfb8      	it	lt
 8012d46:	2301      	movlt	r3, #1
 8012d48:	e006      	b.n	8012d58 <_dtoa_r+0x250>
 8012d4a:	2301      	movs	r3, #1
 8012d4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8012d4e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012d50:	2b00      	cmp	r3, #0
 8012d52:	dd28      	ble.n	8012da6 <_dtoa_r+0x29e>
 8012d54:	469b      	mov	fp, r3
 8012d56:	9303      	str	r3, [sp, #12]
 8012d58:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8012d5c:	2100      	movs	r1, #0
 8012d5e:	2204      	movs	r2, #4
 8012d60:	f102 0514 	add.w	r5, r2, #20
 8012d64:	429d      	cmp	r5, r3
 8012d66:	d926      	bls.n	8012db6 <_dtoa_r+0x2ae>
 8012d68:	6041      	str	r1, [r0, #4]
 8012d6a:	4648      	mov	r0, r9
 8012d6c:	f001 f832 	bl	8013dd4 <_Balloc>
 8012d70:	4682      	mov	sl, r0
 8012d72:	2800      	cmp	r0, #0
 8012d74:	d142      	bne.n	8012dfc <_dtoa_r+0x2f4>
 8012d76:	4b1e      	ldr	r3, [pc, #120]	@ (8012df0 <_dtoa_r+0x2e8>)
 8012d78:	4602      	mov	r2, r0
 8012d7a:	f240 11af 	movw	r1, #431	@ 0x1af
 8012d7e:	e6da      	b.n	8012b36 <_dtoa_r+0x2e>
 8012d80:	2300      	movs	r3, #0
 8012d82:	e7e3      	b.n	8012d4c <_dtoa_r+0x244>
 8012d84:	2300      	movs	r3, #0
 8012d86:	e7d5      	b.n	8012d34 <_dtoa_r+0x22c>
 8012d88:	2401      	movs	r4, #1
 8012d8a:	2300      	movs	r3, #0
 8012d8c:	9307      	str	r3, [sp, #28]
 8012d8e:	9409      	str	r4, [sp, #36]	@ 0x24
 8012d90:	f04f 3bff 	mov.w	fp, #4294967295
 8012d94:	2200      	movs	r2, #0
 8012d96:	f8cd b00c 	str.w	fp, [sp, #12]
 8012d9a:	2312      	movs	r3, #18
 8012d9c:	920c      	str	r2, [sp, #48]	@ 0x30
 8012d9e:	e7db      	b.n	8012d58 <_dtoa_r+0x250>
 8012da0:	2301      	movs	r3, #1
 8012da2:	9309      	str	r3, [sp, #36]	@ 0x24
 8012da4:	e7f4      	b.n	8012d90 <_dtoa_r+0x288>
 8012da6:	f04f 0b01 	mov.w	fp, #1
 8012daa:	f8cd b00c 	str.w	fp, [sp, #12]
 8012dae:	465b      	mov	r3, fp
 8012db0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8012db4:	e7d0      	b.n	8012d58 <_dtoa_r+0x250>
 8012db6:	3101      	adds	r1, #1
 8012db8:	0052      	lsls	r2, r2, #1
 8012dba:	e7d1      	b.n	8012d60 <_dtoa_r+0x258>
 8012dbc:	f3af 8000 	nop.w
 8012dc0:	636f4361 	.word	0x636f4361
 8012dc4:	3fd287a7 	.word	0x3fd287a7
 8012dc8:	8b60c8b3 	.word	0x8b60c8b3
 8012dcc:	3fc68a28 	.word	0x3fc68a28
 8012dd0:	509f79fb 	.word	0x509f79fb
 8012dd4:	3fd34413 	.word	0x3fd34413
 8012dd8:	08015e1e 	.word	0x08015e1e
 8012ddc:	08015ee0 	.word	0x08015ee0
 8012de0:	7ff00000 	.word	0x7ff00000
 8012de4:	08015dfb 	.word	0x08015dfb
 8012de8:	3ff80000 	.word	0x3ff80000
 8012dec:	080161a0 	.word	0x080161a0
 8012df0:	08015f38 	.word	0x08015f38
 8012df4:	08015edc 	.word	0x08015edc
 8012df8:	08015dfa 	.word	0x08015dfa
 8012dfc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8012e00:	6018      	str	r0, [r3, #0]
 8012e02:	9b03      	ldr	r3, [sp, #12]
 8012e04:	2b0e      	cmp	r3, #14
 8012e06:	f200 80a1 	bhi.w	8012f4c <_dtoa_r+0x444>
 8012e0a:	2c00      	cmp	r4, #0
 8012e0c:	f000 809e 	beq.w	8012f4c <_dtoa_r+0x444>
 8012e10:	2f00      	cmp	r7, #0
 8012e12:	dd33      	ble.n	8012e7c <_dtoa_r+0x374>
 8012e14:	4b9c      	ldr	r3, [pc, #624]	@ (8013088 <_dtoa_r+0x580>)
 8012e16:	f007 020f 	and.w	r2, r7, #15
 8012e1a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8012e1e:	ed93 7b00 	vldr	d7, [r3]
 8012e22:	05f8      	lsls	r0, r7, #23
 8012e24:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8012e28:	ea4f 1427 	mov.w	r4, r7, asr #4
 8012e2c:	d516      	bpl.n	8012e5c <_dtoa_r+0x354>
 8012e2e:	4b97      	ldr	r3, [pc, #604]	@ (801308c <_dtoa_r+0x584>)
 8012e30:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8012e34:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8012e38:	f7ed fd08 	bl	800084c <__aeabi_ddiv>
 8012e3c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012e40:	f004 040f 	and.w	r4, r4, #15
 8012e44:	2603      	movs	r6, #3
 8012e46:	4d91      	ldr	r5, [pc, #580]	@ (801308c <_dtoa_r+0x584>)
 8012e48:	b954      	cbnz	r4, 8012e60 <_dtoa_r+0x358>
 8012e4a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8012e4e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8012e52:	f7ed fcfb 	bl	800084c <__aeabi_ddiv>
 8012e56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012e5a:	e028      	b.n	8012eae <_dtoa_r+0x3a6>
 8012e5c:	2602      	movs	r6, #2
 8012e5e:	e7f2      	b.n	8012e46 <_dtoa_r+0x33e>
 8012e60:	07e1      	lsls	r1, r4, #31
 8012e62:	d508      	bpl.n	8012e76 <_dtoa_r+0x36e>
 8012e64:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8012e68:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012e6c:	f7ed fbc4 	bl	80005f8 <__aeabi_dmul>
 8012e70:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8012e74:	3601      	adds	r6, #1
 8012e76:	1064      	asrs	r4, r4, #1
 8012e78:	3508      	adds	r5, #8
 8012e7a:	e7e5      	b.n	8012e48 <_dtoa_r+0x340>
 8012e7c:	f000 80af 	beq.w	8012fde <_dtoa_r+0x4d6>
 8012e80:	427c      	negs	r4, r7
 8012e82:	4b81      	ldr	r3, [pc, #516]	@ (8013088 <_dtoa_r+0x580>)
 8012e84:	4d81      	ldr	r5, [pc, #516]	@ (801308c <_dtoa_r+0x584>)
 8012e86:	f004 020f 	and.w	r2, r4, #15
 8012e8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8012e8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e92:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8012e96:	f7ed fbaf 	bl	80005f8 <__aeabi_dmul>
 8012e9a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012e9e:	1124      	asrs	r4, r4, #4
 8012ea0:	2300      	movs	r3, #0
 8012ea2:	2602      	movs	r6, #2
 8012ea4:	2c00      	cmp	r4, #0
 8012ea6:	f040 808f 	bne.w	8012fc8 <_dtoa_r+0x4c0>
 8012eaa:	2b00      	cmp	r3, #0
 8012eac:	d1d3      	bne.n	8012e56 <_dtoa_r+0x34e>
 8012eae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012eb0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8012eb4:	2b00      	cmp	r3, #0
 8012eb6:	f000 8094 	beq.w	8012fe2 <_dtoa_r+0x4da>
 8012eba:	4b75      	ldr	r3, [pc, #468]	@ (8013090 <_dtoa_r+0x588>)
 8012ebc:	2200      	movs	r2, #0
 8012ebe:	4620      	mov	r0, r4
 8012ec0:	4629      	mov	r1, r5
 8012ec2:	f7ed fe0b 	bl	8000adc <__aeabi_dcmplt>
 8012ec6:	2800      	cmp	r0, #0
 8012ec8:	f000 808b 	beq.w	8012fe2 <_dtoa_r+0x4da>
 8012ecc:	9b03      	ldr	r3, [sp, #12]
 8012ece:	2b00      	cmp	r3, #0
 8012ed0:	f000 8087 	beq.w	8012fe2 <_dtoa_r+0x4da>
 8012ed4:	f1bb 0f00 	cmp.w	fp, #0
 8012ed8:	dd34      	ble.n	8012f44 <_dtoa_r+0x43c>
 8012eda:	4620      	mov	r0, r4
 8012edc:	4b6d      	ldr	r3, [pc, #436]	@ (8013094 <_dtoa_r+0x58c>)
 8012ede:	2200      	movs	r2, #0
 8012ee0:	4629      	mov	r1, r5
 8012ee2:	f7ed fb89 	bl	80005f8 <__aeabi_dmul>
 8012ee6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012eea:	f107 38ff 	add.w	r8, r7, #4294967295
 8012eee:	3601      	adds	r6, #1
 8012ef0:	465c      	mov	r4, fp
 8012ef2:	4630      	mov	r0, r6
 8012ef4:	f7ed fb16 	bl	8000524 <__aeabi_i2d>
 8012ef8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8012efc:	f7ed fb7c 	bl	80005f8 <__aeabi_dmul>
 8012f00:	4b65      	ldr	r3, [pc, #404]	@ (8013098 <_dtoa_r+0x590>)
 8012f02:	2200      	movs	r2, #0
 8012f04:	f7ed f9c2 	bl	800028c <__adddf3>
 8012f08:	4605      	mov	r5, r0
 8012f0a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8012f0e:	2c00      	cmp	r4, #0
 8012f10:	d16a      	bne.n	8012fe8 <_dtoa_r+0x4e0>
 8012f12:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8012f16:	4b61      	ldr	r3, [pc, #388]	@ (801309c <_dtoa_r+0x594>)
 8012f18:	2200      	movs	r2, #0
 8012f1a:	f7ed f9b5 	bl	8000288 <__aeabi_dsub>
 8012f1e:	4602      	mov	r2, r0
 8012f20:	460b      	mov	r3, r1
 8012f22:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8012f26:	462a      	mov	r2, r5
 8012f28:	4633      	mov	r3, r6
 8012f2a:	f7ed fdf5 	bl	8000b18 <__aeabi_dcmpgt>
 8012f2e:	2800      	cmp	r0, #0
 8012f30:	f040 8298 	bne.w	8013464 <_dtoa_r+0x95c>
 8012f34:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8012f38:	462a      	mov	r2, r5
 8012f3a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8012f3e:	f7ed fdcd 	bl	8000adc <__aeabi_dcmplt>
 8012f42:	bb38      	cbnz	r0, 8012f94 <_dtoa_r+0x48c>
 8012f44:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8012f48:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8012f4c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8012f4e:	2b00      	cmp	r3, #0
 8012f50:	f2c0 8157 	blt.w	8013202 <_dtoa_r+0x6fa>
 8012f54:	2f0e      	cmp	r7, #14
 8012f56:	f300 8154 	bgt.w	8013202 <_dtoa_r+0x6fa>
 8012f5a:	4b4b      	ldr	r3, [pc, #300]	@ (8013088 <_dtoa_r+0x580>)
 8012f5c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8012f60:	ed93 7b00 	vldr	d7, [r3]
 8012f64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012f66:	2b00      	cmp	r3, #0
 8012f68:	ed8d 7b00 	vstr	d7, [sp]
 8012f6c:	f280 80e5 	bge.w	801313a <_dtoa_r+0x632>
 8012f70:	9b03      	ldr	r3, [sp, #12]
 8012f72:	2b00      	cmp	r3, #0
 8012f74:	f300 80e1 	bgt.w	801313a <_dtoa_r+0x632>
 8012f78:	d10c      	bne.n	8012f94 <_dtoa_r+0x48c>
 8012f7a:	4b48      	ldr	r3, [pc, #288]	@ (801309c <_dtoa_r+0x594>)
 8012f7c:	2200      	movs	r2, #0
 8012f7e:	ec51 0b17 	vmov	r0, r1, d7
 8012f82:	f7ed fb39 	bl	80005f8 <__aeabi_dmul>
 8012f86:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8012f8a:	f7ed fdbb 	bl	8000b04 <__aeabi_dcmpge>
 8012f8e:	2800      	cmp	r0, #0
 8012f90:	f000 8266 	beq.w	8013460 <_dtoa_r+0x958>
 8012f94:	2400      	movs	r4, #0
 8012f96:	4625      	mov	r5, r4
 8012f98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012f9a:	4656      	mov	r6, sl
 8012f9c:	ea6f 0803 	mvn.w	r8, r3
 8012fa0:	2700      	movs	r7, #0
 8012fa2:	4621      	mov	r1, r4
 8012fa4:	4648      	mov	r0, r9
 8012fa6:	f000 ff55 	bl	8013e54 <_Bfree>
 8012faa:	2d00      	cmp	r5, #0
 8012fac:	f000 80bd 	beq.w	801312a <_dtoa_r+0x622>
 8012fb0:	b12f      	cbz	r7, 8012fbe <_dtoa_r+0x4b6>
 8012fb2:	42af      	cmp	r7, r5
 8012fb4:	d003      	beq.n	8012fbe <_dtoa_r+0x4b6>
 8012fb6:	4639      	mov	r1, r7
 8012fb8:	4648      	mov	r0, r9
 8012fba:	f000 ff4b 	bl	8013e54 <_Bfree>
 8012fbe:	4629      	mov	r1, r5
 8012fc0:	4648      	mov	r0, r9
 8012fc2:	f000 ff47 	bl	8013e54 <_Bfree>
 8012fc6:	e0b0      	b.n	801312a <_dtoa_r+0x622>
 8012fc8:	07e2      	lsls	r2, r4, #31
 8012fca:	d505      	bpl.n	8012fd8 <_dtoa_r+0x4d0>
 8012fcc:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012fd0:	f7ed fb12 	bl	80005f8 <__aeabi_dmul>
 8012fd4:	3601      	adds	r6, #1
 8012fd6:	2301      	movs	r3, #1
 8012fd8:	1064      	asrs	r4, r4, #1
 8012fda:	3508      	adds	r5, #8
 8012fdc:	e762      	b.n	8012ea4 <_dtoa_r+0x39c>
 8012fde:	2602      	movs	r6, #2
 8012fe0:	e765      	b.n	8012eae <_dtoa_r+0x3a6>
 8012fe2:	9c03      	ldr	r4, [sp, #12]
 8012fe4:	46b8      	mov	r8, r7
 8012fe6:	e784      	b.n	8012ef2 <_dtoa_r+0x3ea>
 8012fe8:	4b27      	ldr	r3, [pc, #156]	@ (8013088 <_dtoa_r+0x580>)
 8012fea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8012fec:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8012ff0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8012ff4:	4454      	add	r4, sl
 8012ff6:	2900      	cmp	r1, #0
 8012ff8:	d054      	beq.n	80130a4 <_dtoa_r+0x59c>
 8012ffa:	4929      	ldr	r1, [pc, #164]	@ (80130a0 <_dtoa_r+0x598>)
 8012ffc:	2000      	movs	r0, #0
 8012ffe:	f7ed fc25 	bl	800084c <__aeabi_ddiv>
 8013002:	4633      	mov	r3, r6
 8013004:	462a      	mov	r2, r5
 8013006:	f7ed f93f 	bl	8000288 <__aeabi_dsub>
 801300a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 801300e:	4656      	mov	r6, sl
 8013010:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8013014:	f7ed fda0 	bl	8000b58 <__aeabi_d2iz>
 8013018:	4605      	mov	r5, r0
 801301a:	f7ed fa83 	bl	8000524 <__aeabi_i2d>
 801301e:	4602      	mov	r2, r0
 8013020:	460b      	mov	r3, r1
 8013022:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8013026:	f7ed f92f 	bl	8000288 <__aeabi_dsub>
 801302a:	3530      	adds	r5, #48	@ 0x30
 801302c:	4602      	mov	r2, r0
 801302e:	460b      	mov	r3, r1
 8013030:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8013034:	f806 5b01 	strb.w	r5, [r6], #1
 8013038:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801303c:	f7ed fd4e 	bl	8000adc <__aeabi_dcmplt>
 8013040:	2800      	cmp	r0, #0
 8013042:	d172      	bne.n	801312a <_dtoa_r+0x622>
 8013044:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8013048:	4911      	ldr	r1, [pc, #68]	@ (8013090 <_dtoa_r+0x588>)
 801304a:	2000      	movs	r0, #0
 801304c:	f7ed f91c 	bl	8000288 <__aeabi_dsub>
 8013050:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8013054:	f7ed fd42 	bl	8000adc <__aeabi_dcmplt>
 8013058:	2800      	cmp	r0, #0
 801305a:	f040 80b4 	bne.w	80131c6 <_dtoa_r+0x6be>
 801305e:	42a6      	cmp	r6, r4
 8013060:	f43f af70 	beq.w	8012f44 <_dtoa_r+0x43c>
 8013064:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8013068:	4b0a      	ldr	r3, [pc, #40]	@ (8013094 <_dtoa_r+0x58c>)
 801306a:	2200      	movs	r2, #0
 801306c:	f7ed fac4 	bl	80005f8 <__aeabi_dmul>
 8013070:	4b08      	ldr	r3, [pc, #32]	@ (8013094 <_dtoa_r+0x58c>)
 8013072:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8013076:	2200      	movs	r2, #0
 8013078:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801307c:	f7ed fabc 	bl	80005f8 <__aeabi_dmul>
 8013080:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013084:	e7c4      	b.n	8013010 <_dtoa_r+0x508>
 8013086:	bf00      	nop
 8013088:	080161a0 	.word	0x080161a0
 801308c:	08016178 	.word	0x08016178
 8013090:	3ff00000 	.word	0x3ff00000
 8013094:	40240000 	.word	0x40240000
 8013098:	401c0000 	.word	0x401c0000
 801309c:	40140000 	.word	0x40140000
 80130a0:	3fe00000 	.word	0x3fe00000
 80130a4:	4631      	mov	r1, r6
 80130a6:	4628      	mov	r0, r5
 80130a8:	f7ed faa6 	bl	80005f8 <__aeabi_dmul>
 80130ac:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80130b0:	9413      	str	r4, [sp, #76]	@ 0x4c
 80130b2:	4656      	mov	r6, sl
 80130b4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80130b8:	f7ed fd4e 	bl	8000b58 <__aeabi_d2iz>
 80130bc:	4605      	mov	r5, r0
 80130be:	f7ed fa31 	bl	8000524 <__aeabi_i2d>
 80130c2:	4602      	mov	r2, r0
 80130c4:	460b      	mov	r3, r1
 80130c6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80130ca:	f7ed f8dd 	bl	8000288 <__aeabi_dsub>
 80130ce:	3530      	adds	r5, #48	@ 0x30
 80130d0:	f806 5b01 	strb.w	r5, [r6], #1
 80130d4:	4602      	mov	r2, r0
 80130d6:	460b      	mov	r3, r1
 80130d8:	42a6      	cmp	r6, r4
 80130da:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80130de:	f04f 0200 	mov.w	r2, #0
 80130e2:	d124      	bne.n	801312e <_dtoa_r+0x626>
 80130e4:	4baf      	ldr	r3, [pc, #700]	@ (80133a4 <_dtoa_r+0x89c>)
 80130e6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80130ea:	f7ed f8cf 	bl	800028c <__adddf3>
 80130ee:	4602      	mov	r2, r0
 80130f0:	460b      	mov	r3, r1
 80130f2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80130f6:	f7ed fd0f 	bl	8000b18 <__aeabi_dcmpgt>
 80130fa:	2800      	cmp	r0, #0
 80130fc:	d163      	bne.n	80131c6 <_dtoa_r+0x6be>
 80130fe:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8013102:	49a8      	ldr	r1, [pc, #672]	@ (80133a4 <_dtoa_r+0x89c>)
 8013104:	2000      	movs	r0, #0
 8013106:	f7ed f8bf 	bl	8000288 <__aeabi_dsub>
 801310a:	4602      	mov	r2, r0
 801310c:	460b      	mov	r3, r1
 801310e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8013112:	f7ed fce3 	bl	8000adc <__aeabi_dcmplt>
 8013116:	2800      	cmp	r0, #0
 8013118:	f43f af14 	beq.w	8012f44 <_dtoa_r+0x43c>
 801311c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801311e:	1e73      	subs	r3, r6, #1
 8013120:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013122:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8013126:	2b30      	cmp	r3, #48	@ 0x30
 8013128:	d0f8      	beq.n	801311c <_dtoa_r+0x614>
 801312a:	4647      	mov	r7, r8
 801312c:	e03b      	b.n	80131a6 <_dtoa_r+0x69e>
 801312e:	4b9e      	ldr	r3, [pc, #632]	@ (80133a8 <_dtoa_r+0x8a0>)
 8013130:	f7ed fa62 	bl	80005f8 <__aeabi_dmul>
 8013134:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013138:	e7bc      	b.n	80130b4 <_dtoa_r+0x5ac>
 801313a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801313e:	4656      	mov	r6, sl
 8013140:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013144:	4620      	mov	r0, r4
 8013146:	4629      	mov	r1, r5
 8013148:	f7ed fb80 	bl	800084c <__aeabi_ddiv>
 801314c:	f7ed fd04 	bl	8000b58 <__aeabi_d2iz>
 8013150:	4680      	mov	r8, r0
 8013152:	f7ed f9e7 	bl	8000524 <__aeabi_i2d>
 8013156:	e9dd 2300 	ldrd	r2, r3, [sp]
 801315a:	f7ed fa4d 	bl	80005f8 <__aeabi_dmul>
 801315e:	4602      	mov	r2, r0
 8013160:	460b      	mov	r3, r1
 8013162:	4620      	mov	r0, r4
 8013164:	4629      	mov	r1, r5
 8013166:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801316a:	f7ed f88d 	bl	8000288 <__aeabi_dsub>
 801316e:	f806 4b01 	strb.w	r4, [r6], #1
 8013172:	9d03      	ldr	r5, [sp, #12]
 8013174:	eba6 040a 	sub.w	r4, r6, sl
 8013178:	42a5      	cmp	r5, r4
 801317a:	4602      	mov	r2, r0
 801317c:	460b      	mov	r3, r1
 801317e:	d133      	bne.n	80131e8 <_dtoa_r+0x6e0>
 8013180:	f7ed f884 	bl	800028c <__adddf3>
 8013184:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013188:	4604      	mov	r4, r0
 801318a:	460d      	mov	r5, r1
 801318c:	f7ed fcc4 	bl	8000b18 <__aeabi_dcmpgt>
 8013190:	b9c0      	cbnz	r0, 80131c4 <_dtoa_r+0x6bc>
 8013192:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013196:	4620      	mov	r0, r4
 8013198:	4629      	mov	r1, r5
 801319a:	f7ed fc95 	bl	8000ac8 <__aeabi_dcmpeq>
 801319e:	b110      	cbz	r0, 80131a6 <_dtoa_r+0x69e>
 80131a0:	f018 0f01 	tst.w	r8, #1
 80131a4:	d10e      	bne.n	80131c4 <_dtoa_r+0x6bc>
 80131a6:	9902      	ldr	r1, [sp, #8]
 80131a8:	4648      	mov	r0, r9
 80131aa:	f000 fe53 	bl	8013e54 <_Bfree>
 80131ae:	2300      	movs	r3, #0
 80131b0:	7033      	strb	r3, [r6, #0]
 80131b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80131b4:	3701      	adds	r7, #1
 80131b6:	601f      	str	r7, [r3, #0]
 80131b8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80131ba:	2b00      	cmp	r3, #0
 80131bc:	f000 824b 	beq.w	8013656 <_dtoa_r+0xb4e>
 80131c0:	601e      	str	r6, [r3, #0]
 80131c2:	e248      	b.n	8013656 <_dtoa_r+0xb4e>
 80131c4:	46b8      	mov	r8, r7
 80131c6:	4633      	mov	r3, r6
 80131c8:	461e      	mov	r6, r3
 80131ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80131ce:	2a39      	cmp	r2, #57	@ 0x39
 80131d0:	d106      	bne.n	80131e0 <_dtoa_r+0x6d8>
 80131d2:	459a      	cmp	sl, r3
 80131d4:	d1f8      	bne.n	80131c8 <_dtoa_r+0x6c0>
 80131d6:	2230      	movs	r2, #48	@ 0x30
 80131d8:	f108 0801 	add.w	r8, r8, #1
 80131dc:	f88a 2000 	strb.w	r2, [sl]
 80131e0:	781a      	ldrb	r2, [r3, #0]
 80131e2:	3201      	adds	r2, #1
 80131e4:	701a      	strb	r2, [r3, #0]
 80131e6:	e7a0      	b.n	801312a <_dtoa_r+0x622>
 80131e8:	4b6f      	ldr	r3, [pc, #444]	@ (80133a8 <_dtoa_r+0x8a0>)
 80131ea:	2200      	movs	r2, #0
 80131ec:	f7ed fa04 	bl	80005f8 <__aeabi_dmul>
 80131f0:	2200      	movs	r2, #0
 80131f2:	2300      	movs	r3, #0
 80131f4:	4604      	mov	r4, r0
 80131f6:	460d      	mov	r5, r1
 80131f8:	f7ed fc66 	bl	8000ac8 <__aeabi_dcmpeq>
 80131fc:	2800      	cmp	r0, #0
 80131fe:	d09f      	beq.n	8013140 <_dtoa_r+0x638>
 8013200:	e7d1      	b.n	80131a6 <_dtoa_r+0x69e>
 8013202:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013204:	2a00      	cmp	r2, #0
 8013206:	f000 80ea 	beq.w	80133de <_dtoa_r+0x8d6>
 801320a:	9a07      	ldr	r2, [sp, #28]
 801320c:	2a01      	cmp	r2, #1
 801320e:	f300 80cd 	bgt.w	80133ac <_dtoa_r+0x8a4>
 8013212:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013214:	2a00      	cmp	r2, #0
 8013216:	f000 80c1 	beq.w	801339c <_dtoa_r+0x894>
 801321a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 801321e:	9c08      	ldr	r4, [sp, #32]
 8013220:	9e00      	ldr	r6, [sp, #0]
 8013222:	9a00      	ldr	r2, [sp, #0]
 8013224:	441a      	add	r2, r3
 8013226:	9200      	str	r2, [sp, #0]
 8013228:	9a06      	ldr	r2, [sp, #24]
 801322a:	2101      	movs	r1, #1
 801322c:	441a      	add	r2, r3
 801322e:	4648      	mov	r0, r9
 8013230:	9206      	str	r2, [sp, #24]
 8013232:	f000 ff0d 	bl	8014050 <__i2b>
 8013236:	4605      	mov	r5, r0
 8013238:	b166      	cbz	r6, 8013254 <_dtoa_r+0x74c>
 801323a:	9b06      	ldr	r3, [sp, #24]
 801323c:	2b00      	cmp	r3, #0
 801323e:	dd09      	ble.n	8013254 <_dtoa_r+0x74c>
 8013240:	42b3      	cmp	r3, r6
 8013242:	9a00      	ldr	r2, [sp, #0]
 8013244:	bfa8      	it	ge
 8013246:	4633      	movge	r3, r6
 8013248:	1ad2      	subs	r2, r2, r3
 801324a:	9200      	str	r2, [sp, #0]
 801324c:	9a06      	ldr	r2, [sp, #24]
 801324e:	1af6      	subs	r6, r6, r3
 8013250:	1ad3      	subs	r3, r2, r3
 8013252:	9306      	str	r3, [sp, #24]
 8013254:	9b08      	ldr	r3, [sp, #32]
 8013256:	b30b      	cbz	r3, 801329c <_dtoa_r+0x794>
 8013258:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801325a:	2b00      	cmp	r3, #0
 801325c:	f000 80c6 	beq.w	80133ec <_dtoa_r+0x8e4>
 8013260:	2c00      	cmp	r4, #0
 8013262:	f000 80c0 	beq.w	80133e6 <_dtoa_r+0x8de>
 8013266:	4629      	mov	r1, r5
 8013268:	4622      	mov	r2, r4
 801326a:	4648      	mov	r0, r9
 801326c:	f000 ffa8 	bl	80141c0 <__pow5mult>
 8013270:	9a02      	ldr	r2, [sp, #8]
 8013272:	4601      	mov	r1, r0
 8013274:	4605      	mov	r5, r0
 8013276:	4648      	mov	r0, r9
 8013278:	f000 ff00 	bl	801407c <__multiply>
 801327c:	9902      	ldr	r1, [sp, #8]
 801327e:	4680      	mov	r8, r0
 8013280:	4648      	mov	r0, r9
 8013282:	f000 fde7 	bl	8013e54 <_Bfree>
 8013286:	9b08      	ldr	r3, [sp, #32]
 8013288:	1b1b      	subs	r3, r3, r4
 801328a:	9308      	str	r3, [sp, #32]
 801328c:	f000 80b1 	beq.w	80133f2 <_dtoa_r+0x8ea>
 8013290:	9a08      	ldr	r2, [sp, #32]
 8013292:	4641      	mov	r1, r8
 8013294:	4648      	mov	r0, r9
 8013296:	f000 ff93 	bl	80141c0 <__pow5mult>
 801329a:	9002      	str	r0, [sp, #8]
 801329c:	2101      	movs	r1, #1
 801329e:	4648      	mov	r0, r9
 80132a0:	f000 fed6 	bl	8014050 <__i2b>
 80132a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80132a6:	4604      	mov	r4, r0
 80132a8:	2b00      	cmp	r3, #0
 80132aa:	f000 81d8 	beq.w	801365e <_dtoa_r+0xb56>
 80132ae:	461a      	mov	r2, r3
 80132b0:	4601      	mov	r1, r0
 80132b2:	4648      	mov	r0, r9
 80132b4:	f000 ff84 	bl	80141c0 <__pow5mult>
 80132b8:	9b07      	ldr	r3, [sp, #28]
 80132ba:	2b01      	cmp	r3, #1
 80132bc:	4604      	mov	r4, r0
 80132be:	f300 809f 	bgt.w	8013400 <_dtoa_r+0x8f8>
 80132c2:	9b04      	ldr	r3, [sp, #16]
 80132c4:	2b00      	cmp	r3, #0
 80132c6:	f040 8097 	bne.w	80133f8 <_dtoa_r+0x8f0>
 80132ca:	9b05      	ldr	r3, [sp, #20]
 80132cc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80132d0:	2b00      	cmp	r3, #0
 80132d2:	f040 8093 	bne.w	80133fc <_dtoa_r+0x8f4>
 80132d6:	9b05      	ldr	r3, [sp, #20]
 80132d8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80132dc:	0d1b      	lsrs	r3, r3, #20
 80132de:	051b      	lsls	r3, r3, #20
 80132e0:	b133      	cbz	r3, 80132f0 <_dtoa_r+0x7e8>
 80132e2:	9b00      	ldr	r3, [sp, #0]
 80132e4:	3301      	adds	r3, #1
 80132e6:	9300      	str	r3, [sp, #0]
 80132e8:	9b06      	ldr	r3, [sp, #24]
 80132ea:	3301      	adds	r3, #1
 80132ec:	9306      	str	r3, [sp, #24]
 80132ee:	2301      	movs	r3, #1
 80132f0:	9308      	str	r3, [sp, #32]
 80132f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80132f4:	2b00      	cmp	r3, #0
 80132f6:	f000 81b8 	beq.w	801366a <_dtoa_r+0xb62>
 80132fa:	6923      	ldr	r3, [r4, #16]
 80132fc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013300:	6918      	ldr	r0, [r3, #16]
 8013302:	f000 fe59 	bl	8013fb8 <__hi0bits>
 8013306:	f1c0 0020 	rsb	r0, r0, #32
 801330a:	9b06      	ldr	r3, [sp, #24]
 801330c:	4418      	add	r0, r3
 801330e:	f010 001f 	ands.w	r0, r0, #31
 8013312:	f000 8082 	beq.w	801341a <_dtoa_r+0x912>
 8013316:	f1c0 0320 	rsb	r3, r0, #32
 801331a:	2b04      	cmp	r3, #4
 801331c:	dd73      	ble.n	8013406 <_dtoa_r+0x8fe>
 801331e:	9b00      	ldr	r3, [sp, #0]
 8013320:	f1c0 001c 	rsb	r0, r0, #28
 8013324:	4403      	add	r3, r0
 8013326:	9300      	str	r3, [sp, #0]
 8013328:	9b06      	ldr	r3, [sp, #24]
 801332a:	4403      	add	r3, r0
 801332c:	4406      	add	r6, r0
 801332e:	9306      	str	r3, [sp, #24]
 8013330:	9b00      	ldr	r3, [sp, #0]
 8013332:	2b00      	cmp	r3, #0
 8013334:	dd05      	ble.n	8013342 <_dtoa_r+0x83a>
 8013336:	9902      	ldr	r1, [sp, #8]
 8013338:	461a      	mov	r2, r3
 801333a:	4648      	mov	r0, r9
 801333c:	f000 ff9a 	bl	8014274 <__lshift>
 8013340:	9002      	str	r0, [sp, #8]
 8013342:	9b06      	ldr	r3, [sp, #24]
 8013344:	2b00      	cmp	r3, #0
 8013346:	dd05      	ble.n	8013354 <_dtoa_r+0x84c>
 8013348:	4621      	mov	r1, r4
 801334a:	461a      	mov	r2, r3
 801334c:	4648      	mov	r0, r9
 801334e:	f000 ff91 	bl	8014274 <__lshift>
 8013352:	4604      	mov	r4, r0
 8013354:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013356:	2b00      	cmp	r3, #0
 8013358:	d061      	beq.n	801341e <_dtoa_r+0x916>
 801335a:	9802      	ldr	r0, [sp, #8]
 801335c:	4621      	mov	r1, r4
 801335e:	f000 fff5 	bl	801434c <__mcmp>
 8013362:	2800      	cmp	r0, #0
 8013364:	da5b      	bge.n	801341e <_dtoa_r+0x916>
 8013366:	2300      	movs	r3, #0
 8013368:	9902      	ldr	r1, [sp, #8]
 801336a:	220a      	movs	r2, #10
 801336c:	4648      	mov	r0, r9
 801336e:	f000 fd93 	bl	8013e98 <__multadd>
 8013372:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013374:	9002      	str	r0, [sp, #8]
 8013376:	f107 38ff 	add.w	r8, r7, #4294967295
 801337a:	2b00      	cmp	r3, #0
 801337c:	f000 8177 	beq.w	801366e <_dtoa_r+0xb66>
 8013380:	4629      	mov	r1, r5
 8013382:	2300      	movs	r3, #0
 8013384:	220a      	movs	r2, #10
 8013386:	4648      	mov	r0, r9
 8013388:	f000 fd86 	bl	8013e98 <__multadd>
 801338c:	f1bb 0f00 	cmp.w	fp, #0
 8013390:	4605      	mov	r5, r0
 8013392:	dc6f      	bgt.n	8013474 <_dtoa_r+0x96c>
 8013394:	9b07      	ldr	r3, [sp, #28]
 8013396:	2b02      	cmp	r3, #2
 8013398:	dc49      	bgt.n	801342e <_dtoa_r+0x926>
 801339a:	e06b      	b.n	8013474 <_dtoa_r+0x96c>
 801339c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801339e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80133a2:	e73c      	b.n	801321e <_dtoa_r+0x716>
 80133a4:	3fe00000 	.word	0x3fe00000
 80133a8:	40240000 	.word	0x40240000
 80133ac:	9b03      	ldr	r3, [sp, #12]
 80133ae:	1e5c      	subs	r4, r3, #1
 80133b0:	9b08      	ldr	r3, [sp, #32]
 80133b2:	42a3      	cmp	r3, r4
 80133b4:	db09      	blt.n	80133ca <_dtoa_r+0x8c2>
 80133b6:	1b1c      	subs	r4, r3, r4
 80133b8:	9b03      	ldr	r3, [sp, #12]
 80133ba:	2b00      	cmp	r3, #0
 80133bc:	f6bf af30 	bge.w	8013220 <_dtoa_r+0x718>
 80133c0:	9b00      	ldr	r3, [sp, #0]
 80133c2:	9a03      	ldr	r2, [sp, #12]
 80133c4:	1a9e      	subs	r6, r3, r2
 80133c6:	2300      	movs	r3, #0
 80133c8:	e72b      	b.n	8013222 <_dtoa_r+0x71a>
 80133ca:	9b08      	ldr	r3, [sp, #32]
 80133cc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80133ce:	9408      	str	r4, [sp, #32]
 80133d0:	1ae3      	subs	r3, r4, r3
 80133d2:	441a      	add	r2, r3
 80133d4:	9e00      	ldr	r6, [sp, #0]
 80133d6:	9b03      	ldr	r3, [sp, #12]
 80133d8:	920d      	str	r2, [sp, #52]	@ 0x34
 80133da:	2400      	movs	r4, #0
 80133dc:	e721      	b.n	8013222 <_dtoa_r+0x71a>
 80133de:	9c08      	ldr	r4, [sp, #32]
 80133e0:	9e00      	ldr	r6, [sp, #0]
 80133e2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80133e4:	e728      	b.n	8013238 <_dtoa_r+0x730>
 80133e6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80133ea:	e751      	b.n	8013290 <_dtoa_r+0x788>
 80133ec:	9a08      	ldr	r2, [sp, #32]
 80133ee:	9902      	ldr	r1, [sp, #8]
 80133f0:	e750      	b.n	8013294 <_dtoa_r+0x78c>
 80133f2:	f8cd 8008 	str.w	r8, [sp, #8]
 80133f6:	e751      	b.n	801329c <_dtoa_r+0x794>
 80133f8:	2300      	movs	r3, #0
 80133fa:	e779      	b.n	80132f0 <_dtoa_r+0x7e8>
 80133fc:	9b04      	ldr	r3, [sp, #16]
 80133fe:	e777      	b.n	80132f0 <_dtoa_r+0x7e8>
 8013400:	2300      	movs	r3, #0
 8013402:	9308      	str	r3, [sp, #32]
 8013404:	e779      	b.n	80132fa <_dtoa_r+0x7f2>
 8013406:	d093      	beq.n	8013330 <_dtoa_r+0x828>
 8013408:	9a00      	ldr	r2, [sp, #0]
 801340a:	331c      	adds	r3, #28
 801340c:	441a      	add	r2, r3
 801340e:	9200      	str	r2, [sp, #0]
 8013410:	9a06      	ldr	r2, [sp, #24]
 8013412:	441a      	add	r2, r3
 8013414:	441e      	add	r6, r3
 8013416:	9206      	str	r2, [sp, #24]
 8013418:	e78a      	b.n	8013330 <_dtoa_r+0x828>
 801341a:	4603      	mov	r3, r0
 801341c:	e7f4      	b.n	8013408 <_dtoa_r+0x900>
 801341e:	9b03      	ldr	r3, [sp, #12]
 8013420:	2b00      	cmp	r3, #0
 8013422:	46b8      	mov	r8, r7
 8013424:	dc20      	bgt.n	8013468 <_dtoa_r+0x960>
 8013426:	469b      	mov	fp, r3
 8013428:	9b07      	ldr	r3, [sp, #28]
 801342a:	2b02      	cmp	r3, #2
 801342c:	dd1e      	ble.n	801346c <_dtoa_r+0x964>
 801342e:	f1bb 0f00 	cmp.w	fp, #0
 8013432:	f47f adb1 	bne.w	8012f98 <_dtoa_r+0x490>
 8013436:	4621      	mov	r1, r4
 8013438:	465b      	mov	r3, fp
 801343a:	2205      	movs	r2, #5
 801343c:	4648      	mov	r0, r9
 801343e:	f000 fd2b 	bl	8013e98 <__multadd>
 8013442:	4601      	mov	r1, r0
 8013444:	4604      	mov	r4, r0
 8013446:	9802      	ldr	r0, [sp, #8]
 8013448:	f000 ff80 	bl	801434c <__mcmp>
 801344c:	2800      	cmp	r0, #0
 801344e:	f77f ada3 	ble.w	8012f98 <_dtoa_r+0x490>
 8013452:	4656      	mov	r6, sl
 8013454:	2331      	movs	r3, #49	@ 0x31
 8013456:	f806 3b01 	strb.w	r3, [r6], #1
 801345a:	f108 0801 	add.w	r8, r8, #1
 801345e:	e59f      	b.n	8012fa0 <_dtoa_r+0x498>
 8013460:	9c03      	ldr	r4, [sp, #12]
 8013462:	46b8      	mov	r8, r7
 8013464:	4625      	mov	r5, r4
 8013466:	e7f4      	b.n	8013452 <_dtoa_r+0x94a>
 8013468:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801346c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801346e:	2b00      	cmp	r3, #0
 8013470:	f000 8101 	beq.w	8013676 <_dtoa_r+0xb6e>
 8013474:	2e00      	cmp	r6, #0
 8013476:	dd05      	ble.n	8013484 <_dtoa_r+0x97c>
 8013478:	4629      	mov	r1, r5
 801347a:	4632      	mov	r2, r6
 801347c:	4648      	mov	r0, r9
 801347e:	f000 fef9 	bl	8014274 <__lshift>
 8013482:	4605      	mov	r5, r0
 8013484:	9b08      	ldr	r3, [sp, #32]
 8013486:	2b00      	cmp	r3, #0
 8013488:	d05c      	beq.n	8013544 <_dtoa_r+0xa3c>
 801348a:	6869      	ldr	r1, [r5, #4]
 801348c:	4648      	mov	r0, r9
 801348e:	f000 fca1 	bl	8013dd4 <_Balloc>
 8013492:	4606      	mov	r6, r0
 8013494:	b928      	cbnz	r0, 80134a2 <_dtoa_r+0x99a>
 8013496:	4b82      	ldr	r3, [pc, #520]	@ (80136a0 <_dtoa_r+0xb98>)
 8013498:	4602      	mov	r2, r0
 801349a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 801349e:	f7ff bb4a 	b.w	8012b36 <_dtoa_r+0x2e>
 80134a2:	692a      	ldr	r2, [r5, #16]
 80134a4:	3202      	adds	r2, #2
 80134a6:	0092      	lsls	r2, r2, #2
 80134a8:	f105 010c 	add.w	r1, r5, #12
 80134ac:	300c      	adds	r0, #12
 80134ae:	f7ff fa6c 	bl	801298a <memcpy>
 80134b2:	2201      	movs	r2, #1
 80134b4:	4631      	mov	r1, r6
 80134b6:	4648      	mov	r0, r9
 80134b8:	f000 fedc 	bl	8014274 <__lshift>
 80134bc:	f10a 0301 	add.w	r3, sl, #1
 80134c0:	9300      	str	r3, [sp, #0]
 80134c2:	eb0a 030b 	add.w	r3, sl, fp
 80134c6:	9308      	str	r3, [sp, #32]
 80134c8:	9b04      	ldr	r3, [sp, #16]
 80134ca:	f003 0301 	and.w	r3, r3, #1
 80134ce:	462f      	mov	r7, r5
 80134d0:	9306      	str	r3, [sp, #24]
 80134d2:	4605      	mov	r5, r0
 80134d4:	9b00      	ldr	r3, [sp, #0]
 80134d6:	9802      	ldr	r0, [sp, #8]
 80134d8:	4621      	mov	r1, r4
 80134da:	f103 3bff 	add.w	fp, r3, #4294967295
 80134de:	f7ff fa89 	bl	80129f4 <quorem>
 80134e2:	4603      	mov	r3, r0
 80134e4:	3330      	adds	r3, #48	@ 0x30
 80134e6:	9003      	str	r0, [sp, #12]
 80134e8:	4639      	mov	r1, r7
 80134ea:	9802      	ldr	r0, [sp, #8]
 80134ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80134ee:	f000 ff2d 	bl	801434c <__mcmp>
 80134f2:	462a      	mov	r2, r5
 80134f4:	9004      	str	r0, [sp, #16]
 80134f6:	4621      	mov	r1, r4
 80134f8:	4648      	mov	r0, r9
 80134fa:	f000 ff43 	bl	8014384 <__mdiff>
 80134fe:	68c2      	ldr	r2, [r0, #12]
 8013500:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013502:	4606      	mov	r6, r0
 8013504:	bb02      	cbnz	r2, 8013548 <_dtoa_r+0xa40>
 8013506:	4601      	mov	r1, r0
 8013508:	9802      	ldr	r0, [sp, #8]
 801350a:	f000 ff1f 	bl	801434c <__mcmp>
 801350e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013510:	4602      	mov	r2, r0
 8013512:	4631      	mov	r1, r6
 8013514:	4648      	mov	r0, r9
 8013516:	920c      	str	r2, [sp, #48]	@ 0x30
 8013518:	9309      	str	r3, [sp, #36]	@ 0x24
 801351a:	f000 fc9b 	bl	8013e54 <_Bfree>
 801351e:	9b07      	ldr	r3, [sp, #28]
 8013520:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013522:	9e00      	ldr	r6, [sp, #0]
 8013524:	ea42 0103 	orr.w	r1, r2, r3
 8013528:	9b06      	ldr	r3, [sp, #24]
 801352a:	4319      	orrs	r1, r3
 801352c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801352e:	d10d      	bne.n	801354c <_dtoa_r+0xa44>
 8013530:	2b39      	cmp	r3, #57	@ 0x39
 8013532:	d027      	beq.n	8013584 <_dtoa_r+0xa7c>
 8013534:	9a04      	ldr	r2, [sp, #16]
 8013536:	2a00      	cmp	r2, #0
 8013538:	dd01      	ble.n	801353e <_dtoa_r+0xa36>
 801353a:	9b03      	ldr	r3, [sp, #12]
 801353c:	3331      	adds	r3, #49	@ 0x31
 801353e:	f88b 3000 	strb.w	r3, [fp]
 8013542:	e52e      	b.n	8012fa2 <_dtoa_r+0x49a>
 8013544:	4628      	mov	r0, r5
 8013546:	e7b9      	b.n	80134bc <_dtoa_r+0x9b4>
 8013548:	2201      	movs	r2, #1
 801354a:	e7e2      	b.n	8013512 <_dtoa_r+0xa0a>
 801354c:	9904      	ldr	r1, [sp, #16]
 801354e:	2900      	cmp	r1, #0
 8013550:	db04      	blt.n	801355c <_dtoa_r+0xa54>
 8013552:	9807      	ldr	r0, [sp, #28]
 8013554:	4301      	orrs	r1, r0
 8013556:	9806      	ldr	r0, [sp, #24]
 8013558:	4301      	orrs	r1, r0
 801355a:	d120      	bne.n	801359e <_dtoa_r+0xa96>
 801355c:	2a00      	cmp	r2, #0
 801355e:	ddee      	ble.n	801353e <_dtoa_r+0xa36>
 8013560:	9902      	ldr	r1, [sp, #8]
 8013562:	9300      	str	r3, [sp, #0]
 8013564:	2201      	movs	r2, #1
 8013566:	4648      	mov	r0, r9
 8013568:	f000 fe84 	bl	8014274 <__lshift>
 801356c:	4621      	mov	r1, r4
 801356e:	9002      	str	r0, [sp, #8]
 8013570:	f000 feec 	bl	801434c <__mcmp>
 8013574:	2800      	cmp	r0, #0
 8013576:	9b00      	ldr	r3, [sp, #0]
 8013578:	dc02      	bgt.n	8013580 <_dtoa_r+0xa78>
 801357a:	d1e0      	bne.n	801353e <_dtoa_r+0xa36>
 801357c:	07da      	lsls	r2, r3, #31
 801357e:	d5de      	bpl.n	801353e <_dtoa_r+0xa36>
 8013580:	2b39      	cmp	r3, #57	@ 0x39
 8013582:	d1da      	bne.n	801353a <_dtoa_r+0xa32>
 8013584:	2339      	movs	r3, #57	@ 0x39
 8013586:	f88b 3000 	strb.w	r3, [fp]
 801358a:	4633      	mov	r3, r6
 801358c:	461e      	mov	r6, r3
 801358e:	3b01      	subs	r3, #1
 8013590:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8013594:	2a39      	cmp	r2, #57	@ 0x39
 8013596:	d04e      	beq.n	8013636 <_dtoa_r+0xb2e>
 8013598:	3201      	adds	r2, #1
 801359a:	701a      	strb	r2, [r3, #0]
 801359c:	e501      	b.n	8012fa2 <_dtoa_r+0x49a>
 801359e:	2a00      	cmp	r2, #0
 80135a0:	dd03      	ble.n	80135aa <_dtoa_r+0xaa2>
 80135a2:	2b39      	cmp	r3, #57	@ 0x39
 80135a4:	d0ee      	beq.n	8013584 <_dtoa_r+0xa7c>
 80135a6:	3301      	adds	r3, #1
 80135a8:	e7c9      	b.n	801353e <_dtoa_r+0xa36>
 80135aa:	9a00      	ldr	r2, [sp, #0]
 80135ac:	9908      	ldr	r1, [sp, #32]
 80135ae:	f802 3c01 	strb.w	r3, [r2, #-1]
 80135b2:	428a      	cmp	r2, r1
 80135b4:	d028      	beq.n	8013608 <_dtoa_r+0xb00>
 80135b6:	9902      	ldr	r1, [sp, #8]
 80135b8:	2300      	movs	r3, #0
 80135ba:	220a      	movs	r2, #10
 80135bc:	4648      	mov	r0, r9
 80135be:	f000 fc6b 	bl	8013e98 <__multadd>
 80135c2:	42af      	cmp	r7, r5
 80135c4:	9002      	str	r0, [sp, #8]
 80135c6:	f04f 0300 	mov.w	r3, #0
 80135ca:	f04f 020a 	mov.w	r2, #10
 80135ce:	4639      	mov	r1, r7
 80135d0:	4648      	mov	r0, r9
 80135d2:	d107      	bne.n	80135e4 <_dtoa_r+0xadc>
 80135d4:	f000 fc60 	bl	8013e98 <__multadd>
 80135d8:	4607      	mov	r7, r0
 80135da:	4605      	mov	r5, r0
 80135dc:	9b00      	ldr	r3, [sp, #0]
 80135de:	3301      	adds	r3, #1
 80135e0:	9300      	str	r3, [sp, #0]
 80135e2:	e777      	b.n	80134d4 <_dtoa_r+0x9cc>
 80135e4:	f000 fc58 	bl	8013e98 <__multadd>
 80135e8:	4629      	mov	r1, r5
 80135ea:	4607      	mov	r7, r0
 80135ec:	2300      	movs	r3, #0
 80135ee:	220a      	movs	r2, #10
 80135f0:	4648      	mov	r0, r9
 80135f2:	f000 fc51 	bl	8013e98 <__multadd>
 80135f6:	4605      	mov	r5, r0
 80135f8:	e7f0      	b.n	80135dc <_dtoa_r+0xad4>
 80135fa:	f1bb 0f00 	cmp.w	fp, #0
 80135fe:	bfcc      	ite	gt
 8013600:	465e      	movgt	r6, fp
 8013602:	2601      	movle	r6, #1
 8013604:	4456      	add	r6, sl
 8013606:	2700      	movs	r7, #0
 8013608:	9902      	ldr	r1, [sp, #8]
 801360a:	9300      	str	r3, [sp, #0]
 801360c:	2201      	movs	r2, #1
 801360e:	4648      	mov	r0, r9
 8013610:	f000 fe30 	bl	8014274 <__lshift>
 8013614:	4621      	mov	r1, r4
 8013616:	9002      	str	r0, [sp, #8]
 8013618:	f000 fe98 	bl	801434c <__mcmp>
 801361c:	2800      	cmp	r0, #0
 801361e:	dcb4      	bgt.n	801358a <_dtoa_r+0xa82>
 8013620:	d102      	bne.n	8013628 <_dtoa_r+0xb20>
 8013622:	9b00      	ldr	r3, [sp, #0]
 8013624:	07db      	lsls	r3, r3, #31
 8013626:	d4b0      	bmi.n	801358a <_dtoa_r+0xa82>
 8013628:	4633      	mov	r3, r6
 801362a:	461e      	mov	r6, r3
 801362c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8013630:	2a30      	cmp	r2, #48	@ 0x30
 8013632:	d0fa      	beq.n	801362a <_dtoa_r+0xb22>
 8013634:	e4b5      	b.n	8012fa2 <_dtoa_r+0x49a>
 8013636:	459a      	cmp	sl, r3
 8013638:	d1a8      	bne.n	801358c <_dtoa_r+0xa84>
 801363a:	2331      	movs	r3, #49	@ 0x31
 801363c:	f108 0801 	add.w	r8, r8, #1
 8013640:	f88a 3000 	strb.w	r3, [sl]
 8013644:	e4ad      	b.n	8012fa2 <_dtoa_r+0x49a>
 8013646:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8013648:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80136a4 <_dtoa_r+0xb9c>
 801364c:	b11b      	cbz	r3, 8013656 <_dtoa_r+0xb4e>
 801364e:	f10a 0308 	add.w	r3, sl, #8
 8013652:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8013654:	6013      	str	r3, [r2, #0]
 8013656:	4650      	mov	r0, sl
 8013658:	b017      	add	sp, #92	@ 0x5c
 801365a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801365e:	9b07      	ldr	r3, [sp, #28]
 8013660:	2b01      	cmp	r3, #1
 8013662:	f77f ae2e 	ble.w	80132c2 <_dtoa_r+0x7ba>
 8013666:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013668:	9308      	str	r3, [sp, #32]
 801366a:	2001      	movs	r0, #1
 801366c:	e64d      	b.n	801330a <_dtoa_r+0x802>
 801366e:	f1bb 0f00 	cmp.w	fp, #0
 8013672:	f77f aed9 	ble.w	8013428 <_dtoa_r+0x920>
 8013676:	4656      	mov	r6, sl
 8013678:	9802      	ldr	r0, [sp, #8]
 801367a:	4621      	mov	r1, r4
 801367c:	f7ff f9ba 	bl	80129f4 <quorem>
 8013680:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8013684:	f806 3b01 	strb.w	r3, [r6], #1
 8013688:	eba6 020a 	sub.w	r2, r6, sl
 801368c:	4593      	cmp	fp, r2
 801368e:	ddb4      	ble.n	80135fa <_dtoa_r+0xaf2>
 8013690:	9902      	ldr	r1, [sp, #8]
 8013692:	2300      	movs	r3, #0
 8013694:	220a      	movs	r2, #10
 8013696:	4648      	mov	r0, r9
 8013698:	f000 fbfe 	bl	8013e98 <__multadd>
 801369c:	9002      	str	r0, [sp, #8]
 801369e:	e7eb      	b.n	8013678 <_dtoa_r+0xb70>
 80136a0:	08015f38 	.word	0x08015f38
 80136a4:	08015ed3 	.word	0x08015ed3

080136a8 <_free_r>:
 80136a8:	b538      	push	{r3, r4, r5, lr}
 80136aa:	4605      	mov	r5, r0
 80136ac:	2900      	cmp	r1, #0
 80136ae:	d041      	beq.n	8013734 <_free_r+0x8c>
 80136b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80136b4:	1f0c      	subs	r4, r1, #4
 80136b6:	2b00      	cmp	r3, #0
 80136b8:	bfb8      	it	lt
 80136ba:	18e4      	addlt	r4, r4, r3
 80136bc:	f7fd fb88 	bl	8010dd0 <__malloc_lock>
 80136c0:	4a1d      	ldr	r2, [pc, #116]	@ (8013738 <_free_r+0x90>)
 80136c2:	6813      	ldr	r3, [r2, #0]
 80136c4:	b933      	cbnz	r3, 80136d4 <_free_r+0x2c>
 80136c6:	6063      	str	r3, [r4, #4]
 80136c8:	6014      	str	r4, [r2, #0]
 80136ca:	4628      	mov	r0, r5
 80136cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80136d0:	f7fd bb84 	b.w	8010ddc <__malloc_unlock>
 80136d4:	42a3      	cmp	r3, r4
 80136d6:	d908      	bls.n	80136ea <_free_r+0x42>
 80136d8:	6820      	ldr	r0, [r4, #0]
 80136da:	1821      	adds	r1, r4, r0
 80136dc:	428b      	cmp	r3, r1
 80136de:	bf01      	itttt	eq
 80136e0:	6819      	ldreq	r1, [r3, #0]
 80136e2:	685b      	ldreq	r3, [r3, #4]
 80136e4:	1809      	addeq	r1, r1, r0
 80136e6:	6021      	streq	r1, [r4, #0]
 80136e8:	e7ed      	b.n	80136c6 <_free_r+0x1e>
 80136ea:	461a      	mov	r2, r3
 80136ec:	685b      	ldr	r3, [r3, #4]
 80136ee:	b10b      	cbz	r3, 80136f4 <_free_r+0x4c>
 80136f0:	42a3      	cmp	r3, r4
 80136f2:	d9fa      	bls.n	80136ea <_free_r+0x42>
 80136f4:	6811      	ldr	r1, [r2, #0]
 80136f6:	1850      	adds	r0, r2, r1
 80136f8:	42a0      	cmp	r0, r4
 80136fa:	d10b      	bne.n	8013714 <_free_r+0x6c>
 80136fc:	6820      	ldr	r0, [r4, #0]
 80136fe:	4401      	add	r1, r0
 8013700:	1850      	adds	r0, r2, r1
 8013702:	4283      	cmp	r3, r0
 8013704:	6011      	str	r1, [r2, #0]
 8013706:	d1e0      	bne.n	80136ca <_free_r+0x22>
 8013708:	6818      	ldr	r0, [r3, #0]
 801370a:	685b      	ldr	r3, [r3, #4]
 801370c:	6053      	str	r3, [r2, #4]
 801370e:	4408      	add	r0, r1
 8013710:	6010      	str	r0, [r2, #0]
 8013712:	e7da      	b.n	80136ca <_free_r+0x22>
 8013714:	d902      	bls.n	801371c <_free_r+0x74>
 8013716:	230c      	movs	r3, #12
 8013718:	602b      	str	r3, [r5, #0]
 801371a:	e7d6      	b.n	80136ca <_free_r+0x22>
 801371c:	6820      	ldr	r0, [r4, #0]
 801371e:	1821      	adds	r1, r4, r0
 8013720:	428b      	cmp	r3, r1
 8013722:	bf04      	itt	eq
 8013724:	6819      	ldreq	r1, [r3, #0]
 8013726:	685b      	ldreq	r3, [r3, #4]
 8013728:	6063      	str	r3, [r4, #4]
 801372a:	bf04      	itt	eq
 801372c:	1809      	addeq	r1, r1, r0
 801372e:	6021      	streq	r1, [r4, #0]
 8013730:	6054      	str	r4, [r2, #4]
 8013732:	e7ca      	b.n	80136ca <_free_r+0x22>
 8013734:	bd38      	pop	{r3, r4, r5, pc}
 8013736:	bf00      	nop
 8013738:	200116b8 	.word	0x200116b8

0801373c <rshift>:
 801373c:	6903      	ldr	r3, [r0, #16]
 801373e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8013742:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013746:	ea4f 1261 	mov.w	r2, r1, asr #5
 801374a:	f100 0414 	add.w	r4, r0, #20
 801374e:	dd45      	ble.n	80137dc <rshift+0xa0>
 8013750:	f011 011f 	ands.w	r1, r1, #31
 8013754:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8013758:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 801375c:	d10c      	bne.n	8013778 <rshift+0x3c>
 801375e:	f100 0710 	add.w	r7, r0, #16
 8013762:	4629      	mov	r1, r5
 8013764:	42b1      	cmp	r1, r6
 8013766:	d334      	bcc.n	80137d2 <rshift+0x96>
 8013768:	1a9b      	subs	r3, r3, r2
 801376a:	009b      	lsls	r3, r3, #2
 801376c:	1eea      	subs	r2, r5, #3
 801376e:	4296      	cmp	r6, r2
 8013770:	bf38      	it	cc
 8013772:	2300      	movcc	r3, #0
 8013774:	4423      	add	r3, r4
 8013776:	e015      	b.n	80137a4 <rshift+0x68>
 8013778:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 801377c:	f1c1 0820 	rsb	r8, r1, #32
 8013780:	40cf      	lsrs	r7, r1
 8013782:	f105 0e04 	add.w	lr, r5, #4
 8013786:	46a1      	mov	r9, r4
 8013788:	4576      	cmp	r6, lr
 801378a:	46f4      	mov	ip, lr
 801378c:	d815      	bhi.n	80137ba <rshift+0x7e>
 801378e:	1a9a      	subs	r2, r3, r2
 8013790:	0092      	lsls	r2, r2, #2
 8013792:	3a04      	subs	r2, #4
 8013794:	3501      	adds	r5, #1
 8013796:	42ae      	cmp	r6, r5
 8013798:	bf38      	it	cc
 801379a:	2200      	movcc	r2, #0
 801379c:	18a3      	adds	r3, r4, r2
 801379e:	50a7      	str	r7, [r4, r2]
 80137a0:	b107      	cbz	r7, 80137a4 <rshift+0x68>
 80137a2:	3304      	adds	r3, #4
 80137a4:	1b1a      	subs	r2, r3, r4
 80137a6:	42a3      	cmp	r3, r4
 80137a8:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80137ac:	bf08      	it	eq
 80137ae:	2300      	moveq	r3, #0
 80137b0:	6102      	str	r2, [r0, #16]
 80137b2:	bf08      	it	eq
 80137b4:	6143      	streq	r3, [r0, #20]
 80137b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80137ba:	f8dc c000 	ldr.w	ip, [ip]
 80137be:	fa0c fc08 	lsl.w	ip, ip, r8
 80137c2:	ea4c 0707 	orr.w	r7, ip, r7
 80137c6:	f849 7b04 	str.w	r7, [r9], #4
 80137ca:	f85e 7b04 	ldr.w	r7, [lr], #4
 80137ce:	40cf      	lsrs	r7, r1
 80137d0:	e7da      	b.n	8013788 <rshift+0x4c>
 80137d2:	f851 cb04 	ldr.w	ip, [r1], #4
 80137d6:	f847 cf04 	str.w	ip, [r7, #4]!
 80137da:	e7c3      	b.n	8013764 <rshift+0x28>
 80137dc:	4623      	mov	r3, r4
 80137de:	e7e1      	b.n	80137a4 <rshift+0x68>

080137e0 <__hexdig_fun>:
 80137e0:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 80137e4:	2b09      	cmp	r3, #9
 80137e6:	d802      	bhi.n	80137ee <__hexdig_fun+0xe>
 80137e8:	3820      	subs	r0, #32
 80137ea:	b2c0      	uxtb	r0, r0
 80137ec:	4770      	bx	lr
 80137ee:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 80137f2:	2b05      	cmp	r3, #5
 80137f4:	d801      	bhi.n	80137fa <__hexdig_fun+0x1a>
 80137f6:	3847      	subs	r0, #71	@ 0x47
 80137f8:	e7f7      	b.n	80137ea <__hexdig_fun+0xa>
 80137fa:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 80137fe:	2b05      	cmp	r3, #5
 8013800:	d801      	bhi.n	8013806 <__hexdig_fun+0x26>
 8013802:	3827      	subs	r0, #39	@ 0x27
 8013804:	e7f1      	b.n	80137ea <__hexdig_fun+0xa>
 8013806:	2000      	movs	r0, #0
 8013808:	4770      	bx	lr
	...

0801380c <__gethex>:
 801380c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013810:	b085      	sub	sp, #20
 8013812:	468a      	mov	sl, r1
 8013814:	9302      	str	r3, [sp, #8]
 8013816:	680b      	ldr	r3, [r1, #0]
 8013818:	9001      	str	r0, [sp, #4]
 801381a:	4690      	mov	r8, r2
 801381c:	1c9c      	adds	r4, r3, #2
 801381e:	46a1      	mov	r9, r4
 8013820:	f814 0b01 	ldrb.w	r0, [r4], #1
 8013824:	2830      	cmp	r0, #48	@ 0x30
 8013826:	d0fa      	beq.n	801381e <__gethex+0x12>
 8013828:	eba9 0303 	sub.w	r3, r9, r3
 801382c:	f1a3 0b02 	sub.w	fp, r3, #2
 8013830:	f7ff ffd6 	bl	80137e0 <__hexdig_fun>
 8013834:	4605      	mov	r5, r0
 8013836:	2800      	cmp	r0, #0
 8013838:	d168      	bne.n	801390c <__gethex+0x100>
 801383a:	49a0      	ldr	r1, [pc, #640]	@ (8013abc <__gethex+0x2b0>)
 801383c:	2201      	movs	r2, #1
 801383e:	4648      	mov	r0, r9
 8013840:	f7fe ff35 	bl	80126ae <strncmp>
 8013844:	4607      	mov	r7, r0
 8013846:	2800      	cmp	r0, #0
 8013848:	d167      	bne.n	801391a <__gethex+0x10e>
 801384a:	f899 0001 	ldrb.w	r0, [r9, #1]
 801384e:	4626      	mov	r6, r4
 8013850:	f7ff ffc6 	bl	80137e0 <__hexdig_fun>
 8013854:	2800      	cmp	r0, #0
 8013856:	d062      	beq.n	801391e <__gethex+0x112>
 8013858:	4623      	mov	r3, r4
 801385a:	7818      	ldrb	r0, [r3, #0]
 801385c:	2830      	cmp	r0, #48	@ 0x30
 801385e:	4699      	mov	r9, r3
 8013860:	f103 0301 	add.w	r3, r3, #1
 8013864:	d0f9      	beq.n	801385a <__gethex+0x4e>
 8013866:	f7ff ffbb 	bl	80137e0 <__hexdig_fun>
 801386a:	fab0 f580 	clz	r5, r0
 801386e:	096d      	lsrs	r5, r5, #5
 8013870:	f04f 0b01 	mov.w	fp, #1
 8013874:	464a      	mov	r2, r9
 8013876:	4616      	mov	r6, r2
 8013878:	3201      	adds	r2, #1
 801387a:	7830      	ldrb	r0, [r6, #0]
 801387c:	f7ff ffb0 	bl	80137e0 <__hexdig_fun>
 8013880:	2800      	cmp	r0, #0
 8013882:	d1f8      	bne.n	8013876 <__gethex+0x6a>
 8013884:	498d      	ldr	r1, [pc, #564]	@ (8013abc <__gethex+0x2b0>)
 8013886:	2201      	movs	r2, #1
 8013888:	4630      	mov	r0, r6
 801388a:	f7fe ff10 	bl	80126ae <strncmp>
 801388e:	2800      	cmp	r0, #0
 8013890:	d13f      	bne.n	8013912 <__gethex+0x106>
 8013892:	b944      	cbnz	r4, 80138a6 <__gethex+0x9a>
 8013894:	1c74      	adds	r4, r6, #1
 8013896:	4622      	mov	r2, r4
 8013898:	4616      	mov	r6, r2
 801389a:	3201      	adds	r2, #1
 801389c:	7830      	ldrb	r0, [r6, #0]
 801389e:	f7ff ff9f 	bl	80137e0 <__hexdig_fun>
 80138a2:	2800      	cmp	r0, #0
 80138a4:	d1f8      	bne.n	8013898 <__gethex+0x8c>
 80138a6:	1ba4      	subs	r4, r4, r6
 80138a8:	00a7      	lsls	r7, r4, #2
 80138aa:	7833      	ldrb	r3, [r6, #0]
 80138ac:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80138b0:	2b50      	cmp	r3, #80	@ 0x50
 80138b2:	d13e      	bne.n	8013932 <__gethex+0x126>
 80138b4:	7873      	ldrb	r3, [r6, #1]
 80138b6:	2b2b      	cmp	r3, #43	@ 0x2b
 80138b8:	d033      	beq.n	8013922 <__gethex+0x116>
 80138ba:	2b2d      	cmp	r3, #45	@ 0x2d
 80138bc:	d034      	beq.n	8013928 <__gethex+0x11c>
 80138be:	1c71      	adds	r1, r6, #1
 80138c0:	2400      	movs	r4, #0
 80138c2:	7808      	ldrb	r0, [r1, #0]
 80138c4:	f7ff ff8c 	bl	80137e0 <__hexdig_fun>
 80138c8:	1e43      	subs	r3, r0, #1
 80138ca:	b2db      	uxtb	r3, r3
 80138cc:	2b18      	cmp	r3, #24
 80138ce:	d830      	bhi.n	8013932 <__gethex+0x126>
 80138d0:	f1a0 0210 	sub.w	r2, r0, #16
 80138d4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80138d8:	f7ff ff82 	bl	80137e0 <__hexdig_fun>
 80138dc:	f100 3cff 	add.w	ip, r0, #4294967295
 80138e0:	fa5f fc8c 	uxtb.w	ip, ip
 80138e4:	f1bc 0f18 	cmp.w	ip, #24
 80138e8:	f04f 030a 	mov.w	r3, #10
 80138ec:	d91e      	bls.n	801392c <__gethex+0x120>
 80138ee:	b104      	cbz	r4, 80138f2 <__gethex+0xe6>
 80138f0:	4252      	negs	r2, r2
 80138f2:	4417      	add	r7, r2
 80138f4:	f8ca 1000 	str.w	r1, [sl]
 80138f8:	b1ed      	cbz	r5, 8013936 <__gethex+0x12a>
 80138fa:	f1bb 0f00 	cmp.w	fp, #0
 80138fe:	bf0c      	ite	eq
 8013900:	2506      	moveq	r5, #6
 8013902:	2500      	movne	r5, #0
 8013904:	4628      	mov	r0, r5
 8013906:	b005      	add	sp, #20
 8013908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801390c:	2500      	movs	r5, #0
 801390e:	462c      	mov	r4, r5
 8013910:	e7b0      	b.n	8013874 <__gethex+0x68>
 8013912:	2c00      	cmp	r4, #0
 8013914:	d1c7      	bne.n	80138a6 <__gethex+0x9a>
 8013916:	4627      	mov	r7, r4
 8013918:	e7c7      	b.n	80138aa <__gethex+0x9e>
 801391a:	464e      	mov	r6, r9
 801391c:	462f      	mov	r7, r5
 801391e:	2501      	movs	r5, #1
 8013920:	e7c3      	b.n	80138aa <__gethex+0x9e>
 8013922:	2400      	movs	r4, #0
 8013924:	1cb1      	adds	r1, r6, #2
 8013926:	e7cc      	b.n	80138c2 <__gethex+0xb6>
 8013928:	2401      	movs	r4, #1
 801392a:	e7fb      	b.n	8013924 <__gethex+0x118>
 801392c:	fb03 0002 	mla	r0, r3, r2, r0
 8013930:	e7ce      	b.n	80138d0 <__gethex+0xc4>
 8013932:	4631      	mov	r1, r6
 8013934:	e7de      	b.n	80138f4 <__gethex+0xe8>
 8013936:	eba6 0309 	sub.w	r3, r6, r9
 801393a:	3b01      	subs	r3, #1
 801393c:	4629      	mov	r1, r5
 801393e:	2b07      	cmp	r3, #7
 8013940:	dc0a      	bgt.n	8013958 <__gethex+0x14c>
 8013942:	9801      	ldr	r0, [sp, #4]
 8013944:	f000 fa46 	bl	8013dd4 <_Balloc>
 8013948:	4604      	mov	r4, r0
 801394a:	b940      	cbnz	r0, 801395e <__gethex+0x152>
 801394c:	4b5c      	ldr	r3, [pc, #368]	@ (8013ac0 <__gethex+0x2b4>)
 801394e:	4602      	mov	r2, r0
 8013950:	21e4      	movs	r1, #228	@ 0xe4
 8013952:	485c      	ldr	r0, [pc, #368]	@ (8013ac4 <__gethex+0x2b8>)
 8013954:	f7ff f830 	bl	80129b8 <__assert_func>
 8013958:	3101      	adds	r1, #1
 801395a:	105b      	asrs	r3, r3, #1
 801395c:	e7ef      	b.n	801393e <__gethex+0x132>
 801395e:	f100 0a14 	add.w	sl, r0, #20
 8013962:	2300      	movs	r3, #0
 8013964:	4655      	mov	r5, sl
 8013966:	469b      	mov	fp, r3
 8013968:	45b1      	cmp	r9, r6
 801396a:	d337      	bcc.n	80139dc <__gethex+0x1d0>
 801396c:	f845 bb04 	str.w	fp, [r5], #4
 8013970:	eba5 050a 	sub.w	r5, r5, sl
 8013974:	10ad      	asrs	r5, r5, #2
 8013976:	6125      	str	r5, [r4, #16]
 8013978:	4658      	mov	r0, fp
 801397a:	f000 fb1d 	bl	8013fb8 <__hi0bits>
 801397e:	016d      	lsls	r5, r5, #5
 8013980:	f8d8 6000 	ldr.w	r6, [r8]
 8013984:	1a2d      	subs	r5, r5, r0
 8013986:	42b5      	cmp	r5, r6
 8013988:	dd54      	ble.n	8013a34 <__gethex+0x228>
 801398a:	1bad      	subs	r5, r5, r6
 801398c:	4629      	mov	r1, r5
 801398e:	4620      	mov	r0, r4
 8013990:	f000 fea9 	bl	80146e6 <__any_on>
 8013994:	4681      	mov	r9, r0
 8013996:	b178      	cbz	r0, 80139b8 <__gethex+0x1ac>
 8013998:	1e6b      	subs	r3, r5, #1
 801399a:	1159      	asrs	r1, r3, #5
 801399c:	f003 021f 	and.w	r2, r3, #31
 80139a0:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80139a4:	f04f 0901 	mov.w	r9, #1
 80139a8:	fa09 f202 	lsl.w	r2, r9, r2
 80139ac:	420a      	tst	r2, r1
 80139ae:	d003      	beq.n	80139b8 <__gethex+0x1ac>
 80139b0:	454b      	cmp	r3, r9
 80139b2:	dc36      	bgt.n	8013a22 <__gethex+0x216>
 80139b4:	f04f 0902 	mov.w	r9, #2
 80139b8:	4629      	mov	r1, r5
 80139ba:	4620      	mov	r0, r4
 80139bc:	f7ff febe 	bl	801373c <rshift>
 80139c0:	442f      	add	r7, r5
 80139c2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80139c6:	42bb      	cmp	r3, r7
 80139c8:	da42      	bge.n	8013a50 <__gethex+0x244>
 80139ca:	9801      	ldr	r0, [sp, #4]
 80139cc:	4621      	mov	r1, r4
 80139ce:	f000 fa41 	bl	8013e54 <_Bfree>
 80139d2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80139d4:	2300      	movs	r3, #0
 80139d6:	6013      	str	r3, [r2, #0]
 80139d8:	25a3      	movs	r5, #163	@ 0xa3
 80139da:	e793      	b.n	8013904 <__gethex+0xf8>
 80139dc:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 80139e0:	2a2e      	cmp	r2, #46	@ 0x2e
 80139e2:	d012      	beq.n	8013a0a <__gethex+0x1fe>
 80139e4:	2b20      	cmp	r3, #32
 80139e6:	d104      	bne.n	80139f2 <__gethex+0x1e6>
 80139e8:	f845 bb04 	str.w	fp, [r5], #4
 80139ec:	f04f 0b00 	mov.w	fp, #0
 80139f0:	465b      	mov	r3, fp
 80139f2:	7830      	ldrb	r0, [r6, #0]
 80139f4:	9303      	str	r3, [sp, #12]
 80139f6:	f7ff fef3 	bl	80137e0 <__hexdig_fun>
 80139fa:	9b03      	ldr	r3, [sp, #12]
 80139fc:	f000 000f 	and.w	r0, r0, #15
 8013a00:	4098      	lsls	r0, r3
 8013a02:	ea4b 0b00 	orr.w	fp, fp, r0
 8013a06:	3304      	adds	r3, #4
 8013a08:	e7ae      	b.n	8013968 <__gethex+0x15c>
 8013a0a:	45b1      	cmp	r9, r6
 8013a0c:	d8ea      	bhi.n	80139e4 <__gethex+0x1d8>
 8013a0e:	492b      	ldr	r1, [pc, #172]	@ (8013abc <__gethex+0x2b0>)
 8013a10:	9303      	str	r3, [sp, #12]
 8013a12:	2201      	movs	r2, #1
 8013a14:	4630      	mov	r0, r6
 8013a16:	f7fe fe4a 	bl	80126ae <strncmp>
 8013a1a:	9b03      	ldr	r3, [sp, #12]
 8013a1c:	2800      	cmp	r0, #0
 8013a1e:	d1e1      	bne.n	80139e4 <__gethex+0x1d8>
 8013a20:	e7a2      	b.n	8013968 <__gethex+0x15c>
 8013a22:	1ea9      	subs	r1, r5, #2
 8013a24:	4620      	mov	r0, r4
 8013a26:	f000 fe5e 	bl	80146e6 <__any_on>
 8013a2a:	2800      	cmp	r0, #0
 8013a2c:	d0c2      	beq.n	80139b4 <__gethex+0x1a8>
 8013a2e:	f04f 0903 	mov.w	r9, #3
 8013a32:	e7c1      	b.n	80139b8 <__gethex+0x1ac>
 8013a34:	da09      	bge.n	8013a4a <__gethex+0x23e>
 8013a36:	1b75      	subs	r5, r6, r5
 8013a38:	4621      	mov	r1, r4
 8013a3a:	9801      	ldr	r0, [sp, #4]
 8013a3c:	462a      	mov	r2, r5
 8013a3e:	f000 fc19 	bl	8014274 <__lshift>
 8013a42:	1b7f      	subs	r7, r7, r5
 8013a44:	4604      	mov	r4, r0
 8013a46:	f100 0a14 	add.w	sl, r0, #20
 8013a4a:	f04f 0900 	mov.w	r9, #0
 8013a4e:	e7b8      	b.n	80139c2 <__gethex+0x1b6>
 8013a50:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013a54:	42bd      	cmp	r5, r7
 8013a56:	dd6f      	ble.n	8013b38 <__gethex+0x32c>
 8013a58:	1bed      	subs	r5, r5, r7
 8013a5a:	42ae      	cmp	r6, r5
 8013a5c:	dc34      	bgt.n	8013ac8 <__gethex+0x2bc>
 8013a5e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8013a62:	2b02      	cmp	r3, #2
 8013a64:	d022      	beq.n	8013aac <__gethex+0x2a0>
 8013a66:	2b03      	cmp	r3, #3
 8013a68:	d024      	beq.n	8013ab4 <__gethex+0x2a8>
 8013a6a:	2b01      	cmp	r3, #1
 8013a6c:	d115      	bne.n	8013a9a <__gethex+0x28e>
 8013a6e:	42ae      	cmp	r6, r5
 8013a70:	d113      	bne.n	8013a9a <__gethex+0x28e>
 8013a72:	2e01      	cmp	r6, #1
 8013a74:	d10b      	bne.n	8013a8e <__gethex+0x282>
 8013a76:	9a02      	ldr	r2, [sp, #8]
 8013a78:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8013a7c:	6013      	str	r3, [r2, #0]
 8013a7e:	2301      	movs	r3, #1
 8013a80:	6123      	str	r3, [r4, #16]
 8013a82:	f8ca 3000 	str.w	r3, [sl]
 8013a86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013a88:	2562      	movs	r5, #98	@ 0x62
 8013a8a:	601c      	str	r4, [r3, #0]
 8013a8c:	e73a      	b.n	8013904 <__gethex+0xf8>
 8013a8e:	1e71      	subs	r1, r6, #1
 8013a90:	4620      	mov	r0, r4
 8013a92:	f000 fe28 	bl	80146e6 <__any_on>
 8013a96:	2800      	cmp	r0, #0
 8013a98:	d1ed      	bne.n	8013a76 <__gethex+0x26a>
 8013a9a:	9801      	ldr	r0, [sp, #4]
 8013a9c:	4621      	mov	r1, r4
 8013a9e:	f000 f9d9 	bl	8013e54 <_Bfree>
 8013aa2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013aa4:	2300      	movs	r3, #0
 8013aa6:	6013      	str	r3, [r2, #0]
 8013aa8:	2550      	movs	r5, #80	@ 0x50
 8013aaa:	e72b      	b.n	8013904 <__gethex+0xf8>
 8013aac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013aae:	2b00      	cmp	r3, #0
 8013ab0:	d1f3      	bne.n	8013a9a <__gethex+0x28e>
 8013ab2:	e7e0      	b.n	8013a76 <__gethex+0x26a>
 8013ab4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013ab6:	2b00      	cmp	r3, #0
 8013ab8:	d1dd      	bne.n	8013a76 <__gethex+0x26a>
 8013aba:	e7ee      	b.n	8013a9a <__gethex+0x28e>
 8013abc:	08015de8 	.word	0x08015de8
 8013ac0:	08015f38 	.word	0x08015f38
 8013ac4:	08015f49 	.word	0x08015f49
 8013ac8:	1e6f      	subs	r7, r5, #1
 8013aca:	f1b9 0f00 	cmp.w	r9, #0
 8013ace:	d130      	bne.n	8013b32 <__gethex+0x326>
 8013ad0:	b127      	cbz	r7, 8013adc <__gethex+0x2d0>
 8013ad2:	4639      	mov	r1, r7
 8013ad4:	4620      	mov	r0, r4
 8013ad6:	f000 fe06 	bl	80146e6 <__any_on>
 8013ada:	4681      	mov	r9, r0
 8013adc:	117a      	asrs	r2, r7, #5
 8013ade:	2301      	movs	r3, #1
 8013ae0:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8013ae4:	f007 071f 	and.w	r7, r7, #31
 8013ae8:	40bb      	lsls	r3, r7
 8013aea:	4213      	tst	r3, r2
 8013aec:	4629      	mov	r1, r5
 8013aee:	4620      	mov	r0, r4
 8013af0:	bf18      	it	ne
 8013af2:	f049 0902 	orrne.w	r9, r9, #2
 8013af6:	f7ff fe21 	bl	801373c <rshift>
 8013afa:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8013afe:	1b76      	subs	r6, r6, r5
 8013b00:	2502      	movs	r5, #2
 8013b02:	f1b9 0f00 	cmp.w	r9, #0
 8013b06:	d047      	beq.n	8013b98 <__gethex+0x38c>
 8013b08:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8013b0c:	2b02      	cmp	r3, #2
 8013b0e:	d015      	beq.n	8013b3c <__gethex+0x330>
 8013b10:	2b03      	cmp	r3, #3
 8013b12:	d017      	beq.n	8013b44 <__gethex+0x338>
 8013b14:	2b01      	cmp	r3, #1
 8013b16:	d109      	bne.n	8013b2c <__gethex+0x320>
 8013b18:	f019 0f02 	tst.w	r9, #2
 8013b1c:	d006      	beq.n	8013b2c <__gethex+0x320>
 8013b1e:	f8da 3000 	ldr.w	r3, [sl]
 8013b22:	ea49 0903 	orr.w	r9, r9, r3
 8013b26:	f019 0f01 	tst.w	r9, #1
 8013b2a:	d10e      	bne.n	8013b4a <__gethex+0x33e>
 8013b2c:	f045 0510 	orr.w	r5, r5, #16
 8013b30:	e032      	b.n	8013b98 <__gethex+0x38c>
 8013b32:	f04f 0901 	mov.w	r9, #1
 8013b36:	e7d1      	b.n	8013adc <__gethex+0x2d0>
 8013b38:	2501      	movs	r5, #1
 8013b3a:	e7e2      	b.n	8013b02 <__gethex+0x2f6>
 8013b3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013b3e:	f1c3 0301 	rsb	r3, r3, #1
 8013b42:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013b44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013b46:	2b00      	cmp	r3, #0
 8013b48:	d0f0      	beq.n	8013b2c <__gethex+0x320>
 8013b4a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8013b4e:	f104 0314 	add.w	r3, r4, #20
 8013b52:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8013b56:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8013b5a:	f04f 0c00 	mov.w	ip, #0
 8013b5e:	4618      	mov	r0, r3
 8013b60:	f853 2b04 	ldr.w	r2, [r3], #4
 8013b64:	f1b2 3fff 	cmp.w	r2, #4294967295
 8013b68:	d01b      	beq.n	8013ba2 <__gethex+0x396>
 8013b6a:	3201      	adds	r2, #1
 8013b6c:	6002      	str	r2, [r0, #0]
 8013b6e:	2d02      	cmp	r5, #2
 8013b70:	f104 0314 	add.w	r3, r4, #20
 8013b74:	d13c      	bne.n	8013bf0 <__gethex+0x3e4>
 8013b76:	f8d8 2000 	ldr.w	r2, [r8]
 8013b7a:	3a01      	subs	r2, #1
 8013b7c:	42b2      	cmp	r2, r6
 8013b7e:	d109      	bne.n	8013b94 <__gethex+0x388>
 8013b80:	1171      	asrs	r1, r6, #5
 8013b82:	2201      	movs	r2, #1
 8013b84:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8013b88:	f006 061f 	and.w	r6, r6, #31
 8013b8c:	fa02 f606 	lsl.w	r6, r2, r6
 8013b90:	421e      	tst	r6, r3
 8013b92:	d13a      	bne.n	8013c0a <__gethex+0x3fe>
 8013b94:	f045 0520 	orr.w	r5, r5, #32
 8013b98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013b9a:	601c      	str	r4, [r3, #0]
 8013b9c:	9b02      	ldr	r3, [sp, #8]
 8013b9e:	601f      	str	r7, [r3, #0]
 8013ba0:	e6b0      	b.n	8013904 <__gethex+0xf8>
 8013ba2:	4299      	cmp	r1, r3
 8013ba4:	f843 cc04 	str.w	ip, [r3, #-4]
 8013ba8:	d8d9      	bhi.n	8013b5e <__gethex+0x352>
 8013baa:	68a3      	ldr	r3, [r4, #8]
 8013bac:	459b      	cmp	fp, r3
 8013bae:	db17      	blt.n	8013be0 <__gethex+0x3d4>
 8013bb0:	6861      	ldr	r1, [r4, #4]
 8013bb2:	9801      	ldr	r0, [sp, #4]
 8013bb4:	3101      	adds	r1, #1
 8013bb6:	f000 f90d 	bl	8013dd4 <_Balloc>
 8013bba:	4681      	mov	r9, r0
 8013bbc:	b918      	cbnz	r0, 8013bc6 <__gethex+0x3ba>
 8013bbe:	4b1a      	ldr	r3, [pc, #104]	@ (8013c28 <__gethex+0x41c>)
 8013bc0:	4602      	mov	r2, r0
 8013bc2:	2184      	movs	r1, #132	@ 0x84
 8013bc4:	e6c5      	b.n	8013952 <__gethex+0x146>
 8013bc6:	6922      	ldr	r2, [r4, #16]
 8013bc8:	3202      	adds	r2, #2
 8013bca:	f104 010c 	add.w	r1, r4, #12
 8013bce:	0092      	lsls	r2, r2, #2
 8013bd0:	300c      	adds	r0, #12
 8013bd2:	f7fe feda 	bl	801298a <memcpy>
 8013bd6:	4621      	mov	r1, r4
 8013bd8:	9801      	ldr	r0, [sp, #4]
 8013bda:	f000 f93b 	bl	8013e54 <_Bfree>
 8013bde:	464c      	mov	r4, r9
 8013be0:	6923      	ldr	r3, [r4, #16]
 8013be2:	1c5a      	adds	r2, r3, #1
 8013be4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013be8:	6122      	str	r2, [r4, #16]
 8013bea:	2201      	movs	r2, #1
 8013bec:	615a      	str	r2, [r3, #20]
 8013bee:	e7be      	b.n	8013b6e <__gethex+0x362>
 8013bf0:	6922      	ldr	r2, [r4, #16]
 8013bf2:	455a      	cmp	r2, fp
 8013bf4:	dd0b      	ble.n	8013c0e <__gethex+0x402>
 8013bf6:	2101      	movs	r1, #1
 8013bf8:	4620      	mov	r0, r4
 8013bfa:	f7ff fd9f 	bl	801373c <rshift>
 8013bfe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013c02:	3701      	adds	r7, #1
 8013c04:	42bb      	cmp	r3, r7
 8013c06:	f6ff aee0 	blt.w	80139ca <__gethex+0x1be>
 8013c0a:	2501      	movs	r5, #1
 8013c0c:	e7c2      	b.n	8013b94 <__gethex+0x388>
 8013c0e:	f016 061f 	ands.w	r6, r6, #31
 8013c12:	d0fa      	beq.n	8013c0a <__gethex+0x3fe>
 8013c14:	4453      	add	r3, sl
 8013c16:	f1c6 0620 	rsb	r6, r6, #32
 8013c1a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8013c1e:	f000 f9cb 	bl	8013fb8 <__hi0bits>
 8013c22:	42b0      	cmp	r0, r6
 8013c24:	dbe7      	blt.n	8013bf6 <__gethex+0x3ea>
 8013c26:	e7f0      	b.n	8013c0a <__gethex+0x3fe>
 8013c28:	08015f38 	.word	0x08015f38

08013c2c <L_shift>:
 8013c2c:	f1c2 0208 	rsb	r2, r2, #8
 8013c30:	0092      	lsls	r2, r2, #2
 8013c32:	b570      	push	{r4, r5, r6, lr}
 8013c34:	f1c2 0620 	rsb	r6, r2, #32
 8013c38:	6843      	ldr	r3, [r0, #4]
 8013c3a:	6804      	ldr	r4, [r0, #0]
 8013c3c:	fa03 f506 	lsl.w	r5, r3, r6
 8013c40:	432c      	orrs	r4, r5
 8013c42:	40d3      	lsrs	r3, r2
 8013c44:	6004      	str	r4, [r0, #0]
 8013c46:	f840 3f04 	str.w	r3, [r0, #4]!
 8013c4a:	4288      	cmp	r0, r1
 8013c4c:	d3f4      	bcc.n	8013c38 <L_shift+0xc>
 8013c4e:	bd70      	pop	{r4, r5, r6, pc}

08013c50 <__match>:
 8013c50:	b530      	push	{r4, r5, lr}
 8013c52:	6803      	ldr	r3, [r0, #0]
 8013c54:	3301      	adds	r3, #1
 8013c56:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013c5a:	b914      	cbnz	r4, 8013c62 <__match+0x12>
 8013c5c:	6003      	str	r3, [r0, #0]
 8013c5e:	2001      	movs	r0, #1
 8013c60:	bd30      	pop	{r4, r5, pc}
 8013c62:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013c66:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8013c6a:	2d19      	cmp	r5, #25
 8013c6c:	bf98      	it	ls
 8013c6e:	3220      	addls	r2, #32
 8013c70:	42a2      	cmp	r2, r4
 8013c72:	d0f0      	beq.n	8013c56 <__match+0x6>
 8013c74:	2000      	movs	r0, #0
 8013c76:	e7f3      	b.n	8013c60 <__match+0x10>

08013c78 <__hexnan>:
 8013c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c7c:	680b      	ldr	r3, [r1, #0]
 8013c7e:	6801      	ldr	r1, [r0, #0]
 8013c80:	115e      	asrs	r6, r3, #5
 8013c82:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013c86:	f013 031f 	ands.w	r3, r3, #31
 8013c8a:	b087      	sub	sp, #28
 8013c8c:	bf18      	it	ne
 8013c8e:	3604      	addne	r6, #4
 8013c90:	2500      	movs	r5, #0
 8013c92:	1f37      	subs	r7, r6, #4
 8013c94:	4682      	mov	sl, r0
 8013c96:	4690      	mov	r8, r2
 8013c98:	9301      	str	r3, [sp, #4]
 8013c9a:	f846 5c04 	str.w	r5, [r6, #-4]
 8013c9e:	46b9      	mov	r9, r7
 8013ca0:	463c      	mov	r4, r7
 8013ca2:	9502      	str	r5, [sp, #8]
 8013ca4:	46ab      	mov	fp, r5
 8013ca6:	784a      	ldrb	r2, [r1, #1]
 8013ca8:	1c4b      	adds	r3, r1, #1
 8013caa:	9303      	str	r3, [sp, #12]
 8013cac:	b342      	cbz	r2, 8013d00 <__hexnan+0x88>
 8013cae:	4610      	mov	r0, r2
 8013cb0:	9105      	str	r1, [sp, #20]
 8013cb2:	9204      	str	r2, [sp, #16]
 8013cb4:	f7ff fd94 	bl	80137e0 <__hexdig_fun>
 8013cb8:	2800      	cmp	r0, #0
 8013cba:	d151      	bne.n	8013d60 <__hexnan+0xe8>
 8013cbc:	9a04      	ldr	r2, [sp, #16]
 8013cbe:	9905      	ldr	r1, [sp, #20]
 8013cc0:	2a20      	cmp	r2, #32
 8013cc2:	d818      	bhi.n	8013cf6 <__hexnan+0x7e>
 8013cc4:	9b02      	ldr	r3, [sp, #8]
 8013cc6:	459b      	cmp	fp, r3
 8013cc8:	dd13      	ble.n	8013cf2 <__hexnan+0x7a>
 8013cca:	454c      	cmp	r4, r9
 8013ccc:	d206      	bcs.n	8013cdc <__hexnan+0x64>
 8013cce:	2d07      	cmp	r5, #7
 8013cd0:	dc04      	bgt.n	8013cdc <__hexnan+0x64>
 8013cd2:	462a      	mov	r2, r5
 8013cd4:	4649      	mov	r1, r9
 8013cd6:	4620      	mov	r0, r4
 8013cd8:	f7ff ffa8 	bl	8013c2c <L_shift>
 8013cdc:	4544      	cmp	r4, r8
 8013cde:	d952      	bls.n	8013d86 <__hexnan+0x10e>
 8013ce0:	2300      	movs	r3, #0
 8013ce2:	f1a4 0904 	sub.w	r9, r4, #4
 8013ce6:	f844 3c04 	str.w	r3, [r4, #-4]
 8013cea:	f8cd b008 	str.w	fp, [sp, #8]
 8013cee:	464c      	mov	r4, r9
 8013cf0:	461d      	mov	r5, r3
 8013cf2:	9903      	ldr	r1, [sp, #12]
 8013cf4:	e7d7      	b.n	8013ca6 <__hexnan+0x2e>
 8013cf6:	2a29      	cmp	r2, #41	@ 0x29
 8013cf8:	d157      	bne.n	8013daa <__hexnan+0x132>
 8013cfa:	3102      	adds	r1, #2
 8013cfc:	f8ca 1000 	str.w	r1, [sl]
 8013d00:	f1bb 0f00 	cmp.w	fp, #0
 8013d04:	d051      	beq.n	8013daa <__hexnan+0x132>
 8013d06:	454c      	cmp	r4, r9
 8013d08:	d206      	bcs.n	8013d18 <__hexnan+0xa0>
 8013d0a:	2d07      	cmp	r5, #7
 8013d0c:	dc04      	bgt.n	8013d18 <__hexnan+0xa0>
 8013d0e:	462a      	mov	r2, r5
 8013d10:	4649      	mov	r1, r9
 8013d12:	4620      	mov	r0, r4
 8013d14:	f7ff ff8a 	bl	8013c2c <L_shift>
 8013d18:	4544      	cmp	r4, r8
 8013d1a:	d936      	bls.n	8013d8a <__hexnan+0x112>
 8013d1c:	f1a8 0204 	sub.w	r2, r8, #4
 8013d20:	4623      	mov	r3, r4
 8013d22:	f853 1b04 	ldr.w	r1, [r3], #4
 8013d26:	f842 1f04 	str.w	r1, [r2, #4]!
 8013d2a:	429f      	cmp	r7, r3
 8013d2c:	d2f9      	bcs.n	8013d22 <__hexnan+0xaa>
 8013d2e:	1b3b      	subs	r3, r7, r4
 8013d30:	f023 0303 	bic.w	r3, r3, #3
 8013d34:	3304      	adds	r3, #4
 8013d36:	3401      	adds	r4, #1
 8013d38:	3e03      	subs	r6, #3
 8013d3a:	42b4      	cmp	r4, r6
 8013d3c:	bf88      	it	hi
 8013d3e:	2304      	movhi	r3, #4
 8013d40:	4443      	add	r3, r8
 8013d42:	2200      	movs	r2, #0
 8013d44:	f843 2b04 	str.w	r2, [r3], #4
 8013d48:	429f      	cmp	r7, r3
 8013d4a:	d2fb      	bcs.n	8013d44 <__hexnan+0xcc>
 8013d4c:	683b      	ldr	r3, [r7, #0]
 8013d4e:	b91b      	cbnz	r3, 8013d58 <__hexnan+0xe0>
 8013d50:	4547      	cmp	r7, r8
 8013d52:	d128      	bne.n	8013da6 <__hexnan+0x12e>
 8013d54:	2301      	movs	r3, #1
 8013d56:	603b      	str	r3, [r7, #0]
 8013d58:	2005      	movs	r0, #5
 8013d5a:	b007      	add	sp, #28
 8013d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d60:	3501      	adds	r5, #1
 8013d62:	2d08      	cmp	r5, #8
 8013d64:	f10b 0b01 	add.w	fp, fp, #1
 8013d68:	dd06      	ble.n	8013d78 <__hexnan+0x100>
 8013d6a:	4544      	cmp	r4, r8
 8013d6c:	d9c1      	bls.n	8013cf2 <__hexnan+0x7a>
 8013d6e:	2300      	movs	r3, #0
 8013d70:	f844 3c04 	str.w	r3, [r4, #-4]
 8013d74:	2501      	movs	r5, #1
 8013d76:	3c04      	subs	r4, #4
 8013d78:	6822      	ldr	r2, [r4, #0]
 8013d7a:	f000 000f 	and.w	r0, r0, #15
 8013d7e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8013d82:	6020      	str	r0, [r4, #0]
 8013d84:	e7b5      	b.n	8013cf2 <__hexnan+0x7a>
 8013d86:	2508      	movs	r5, #8
 8013d88:	e7b3      	b.n	8013cf2 <__hexnan+0x7a>
 8013d8a:	9b01      	ldr	r3, [sp, #4]
 8013d8c:	2b00      	cmp	r3, #0
 8013d8e:	d0dd      	beq.n	8013d4c <__hexnan+0xd4>
 8013d90:	f1c3 0320 	rsb	r3, r3, #32
 8013d94:	f04f 32ff 	mov.w	r2, #4294967295
 8013d98:	40da      	lsrs	r2, r3
 8013d9a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8013d9e:	4013      	ands	r3, r2
 8013da0:	f846 3c04 	str.w	r3, [r6, #-4]
 8013da4:	e7d2      	b.n	8013d4c <__hexnan+0xd4>
 8013da6:	3f04      	subs	r7, #4
 8013da8:	e7d0      	b.n	8013d4c <__hexnan+0xd4>
 8013daa:	2004      	movs	r0, #4
 8013dac:	e7d5      	b.n	8013d5a <__hexnan+0xe2>

08013dae <__ascii_mbtowc>:
 8013dae:	b082      	sub	sp, #8
 8013db0:	b901      	cbnz	r1, 8013db4 <__ascii_mbtowc+0x6>
 8013db2:	a901      	add	r1, sp, #4
 8013db4:	b142      	cbz	r2, 8013dc8 <__ascii_mbtowc+0x1a>
 8013db6:	b14b      	cbz	r3, 8013dcc <__ascii_mbtowc+0x1e>
 8013db8:	7813      	ldrb	r3, [r2, #0]
 8013dba:	600b      	str	r3, [r1, #0]
 8013dbc:	7812      	ldrb	r2, [r2, #0]
 8013dbe:	1e10      	subs	r0, r2, #0
 8013dc0:	bf18      	it	ne
 8013dc2:	2001      	movne	r0, #1
 8013dc4:	b002      	add	sp, #8
 8013dc6:	4770      	bx	lr
 8013dc8:	4610      	mov	r0, r2
 8013dca:	e7fb      	b.n	8013dc4 <__ascii_mbtowc+0x16>
 8013dcc:	f06f 0001 	mvn.w	r0, #1
 8013dd0:	e7f8      	b.n	8013dc4 <__ascii_mbtowc+0x16>
	...

08013dd4 <_Balloc>:
 8013dd4:	b570      	push	{r4, r5, r6, lr}
 8013dd6:	69c6      	ldr	r6, [r0, #28]
 8013dd8:	4604      	mov	r4, r0
 8013dda:	460d      	mov	r5, r1
 8013ddc:	b976      	cbnz	r6, 8013dfc <_Balloc+0x28>
 8013dde:	2010      	movs	r0, #16
 8013de0:	f7fc ff44 	bl	8010c6c <malloc>
 8013de4:	4602      	mov	r2, r0
 8013de6:	61e0      	str	r0, [r4, #28]
 8013de8:	b920      	cbnz	r0, 8013df4 <_Balloc+0x20>
 8013dea:	4b18      	ldr	r3, [pc, #96]	@ (8013e4c <_Balloc+0x78>)
 8013dec:	4818      	ldr	r0, [pc, #96]	@ (8013e50 <_Balloc+0x7c>)
 8013dee:	216b      	movs	r1, #107	@ 0x6b
 8013df0:	f7fe fde2 	bl	80129b8 <__assert_func>
 8013df4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8013df8:	6006      	str	r6, [r0, #0]
 8013dfa:	60c6      	str	r6, [r0, #12]
 8013dfc:	69e6      	ldr	r6, [r4, #28]
 8013dfe:	68f3      	ldr	r3, [r6, #12]
 8013e00:	b183      	cbz	r3, 8013e24 <_Balloc+0x50>
 8013e02:	69e3      	ldr	r3, [r4, #28]
 8013e04:	68db      	ldr	r3, [r3, #12]
 8013e06:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8013e0a:	b9b8      	cbnz	r0, 8013e3c <_Balloc+0x68>
 8013e0c:	2101      	movs	r1, #1
 8013e0e:	fa01 f605 	lsl.w	r6, r1, r5
 8013e12:	1d72      	adds	r2, r6, #5
 8013e14:	0092      	lsls	r2, r2, #2
 8013e16:	4620      	mov	r0, r4
 8013e18:	f000 fec9 	bl	8014bae <_calloc_r>
 8013e1c:	b160      	cbz	r0, 8013e38 <_Balloc+0x64>
 8013e1e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8013e22:	e00e      	b.n	8013e42 <_Balloc+0x6e>
 8013e24:	2221      	movs	r2, #33	@ 0x21
 8013e26:	2104      	movs	r1, #4
 8013e28:	4620      	mov	r0, r4
 8013e2a:	f000 fec0 	bl	8014bae <_calloc_r>
 8013e2e:	69e3      	ldr	r3, [r4, #28]
 8013e30:	60f0      	str	r0, [r6, #12]
 8013e32:	68db      	ldr	r3, [r3, #12]
 8013e34:	2b00      	cmp	r3, #0
 8013e36:	d1e4      	bne.n	8013e02 <_Balloc+0x2e>
 8013e38:	2000      	movs	r0, #0
 8013e3a:	bd70      	pop	{r4, r5, r6, pc}
 8013e3c:	6802      	ldr	r2, [r0, #0]
 8013e3e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8013e42:	2300      	movs	r3, #0
 8013e44:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013e48:	e7f7      	b.n	8013e3a <_Balloc+0x66>
 8013e4a:	bf00      	nop
 8013e4c:	08015e1e 	.word	0x08015e1e
 8013e50:	08015fa9 	.word	0x08015fa9

08013e54 <_Bfree>:
 8013e54:	b570      	push	{r4, r5, r6, lr}
 8013e56:	69c6      	ldr	r6, [r0, #28]
 8013e58:	4605      	mov	r5, r0
 8013e5a:	460c      	mov	r4, r1
 8013e5c:	b976      	cbnz	r6, 8013e7c <_Bfree+0x28>
 8013e5e:	2010      	movs	r0, #16
 8013e60:	f7fc ff04 	bl	8010c6c <malloc>
 8013e64:	4602      	mov	r2, r0
 8013e66:	61e8      	str	r0, [r5, #28]
 8013e68:	b920      	cbnz	r0, 8013e74 <_Bfree+0x20>
 8013e6a:	4b09      	ldr	r3, [pc, #36]	@ (8013e90 <_Bfree+0x3c>)
 8013e6c:	4809      	ldr	r0, [pc, #36]	@ (8013e94 <_Bfree+0x40>)
 8013e6e:	218f      	movs	r1, #143	@ 0x8f
 8013e70:	f7fe fda2 	bl	80129b8 <__assert_func>
 8013e74:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8013e78:	6006      	str	r6, [r0, #0]
 8013e7a:	60c6      	str	r6, [r0, #12]
 8013e7c:	b13c      	cbz	r4, 8013e8e <_Bfree+0x3a>
 8013e7e:	69eb      	ldr	r3, [r5, #28]
 8013e80:	6862      	ldr	r2, [r4, #4]
 8013e82:	68db      	ldr	r3, [r3, #12]
 8013e84:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8013e88:	6021      	str	r1, [r4, #0]
 8013e8a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8013e8e:	bd70      	pop	{r4, r5, r6, pc}
 8013e90:	08015e1e 	.word	0x08015e1e
 8013e94:	08015fa9 	.word	0x08015fa9

08013e98 <__multadd>:
 8013e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e9c:	690d      	ldr	r5, [r1, #16]
 8013e9e:	4607      	mov	r7, r0
 8013ea0:	460c      	mov	r4, r1
 8013ea2:	461e      	mov	r6, r3
 8013ea4:	f101 0c14 	add.w	ip, r1, #20
 8013ea8:	2000      	movs	r0, #0
 8013eaa:	f8dc 3000 	ldr.w	r3, [ip]
 8013eae:	b299      	uxth	r1, r3
 8013eb0:	fb02 6101 	mla	r1, r2, r1, r6
 8013eb4:	0c1e      	lsrs	r6, r3, #16
 8013eb6:	0c0b      	lsrs	r3, r1, #16
 8013eb8:	fb02 3306 	mla	r3, r2, r6, r3
 8013ebc:	b289      	uxth	r1, r1
 8013ebe:	3001      	adds	r0, #1
 8013ec0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8013ec4:	4285      	cmp	r5, r0
 8013ec6:	f84c 1b04 	str.w	r1, [ip], #4
 8013eca:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8013ece:	dcec      	bgt.n	8013eaa <__multadd+0x12>
 8013ed0:	b30e      	cbz	r6, 8013f16 <__multadd+0x7e>
 8013ed2:	68a3      	ldr	r3, [r4, #8]
 8013ed4:	42ab      	cmp	r3, r5
 8013ed6:	dc19      	bgt.n	8013f0c <__multadd+0x74>
 8013ed8:	6861      	ldr	r1, [r4, #4]
 8013eda:	4638      	mov	r0, r7
 8013edc:	3101      	adds	r1, #1
 8013ede:	f7ff ff79 	bl	8013dd4 <_Balloc>
 8013ee2:	4680      	mov	r8, r0
 8013ee4:	b928      	cbnz	r0, 8013ef2 <__multadd+0x5a>
 8013ee6:	4602      	mov	r2, r0
 8013ee8:	4b0c      	ldr	r3, [pc, #48]	@ (8013f1c <__multadd+0x84>)
 8013eea:	480d      	ldr	r0, [pc, #52]	@ (8013f20 <__multadd+0x88>)
 8013eec:	21ba      	movs	r1, #186	@ 0xba
 8013eee:	f7fe fd63 	bl	80129b8 <__assert_func>
 8013ef2:	6922      	ldr	r2, [r4, #16]
 8013ef4:	3202      	adds	r2, #2
 8013ef6:	f104 010c 	add.w	r1, r4, #12
 8013efa:	0092      	lsls	r2, r2, #2
 8013efc:	300c      	adds	r0, #12
 8013efe:	f7fe fd44 	bl	801298a <memcpy>
 8013f02:	4621      	mov	r1, r4
 8013f04:	4638      	mov	r0, r7
 8013f06:	f7ff ffa5 	bl	8013e54 <_Bfree>
 8013f0a:	4644      	mov	r4, r8
 8013f0c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8013f10:	3501      	adds	r5, #1
 8013f12:	615e      	str	r6, [r3, #20]
 8013f14:	6125      	str	r5, [r4, #16]
 8013f16:	4620      	mov	r0, r4
 8013f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f1c:	08015f38 	.word	0x08015f38
 8013f20:	08015fa9 	.word	0x08015fa9

08013f24 <__s2b>:
 8013f24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013f28:	460c      	mov	r4, r1
 8013f2a:	4615      	mov	r5, r2
 8013f2c:	461f      	mov	r7, r3
 8013f2e:	2209      	movs	r2, #9
 8013f30:	3308      	adds	r3, #8
 8013f32:	4606      	mov	r6, r0
 8013f34:	fb93 f3f2 	sdiv	r3, r3, r2
 8013f38:	2100      	movs	r1, #0
 8013f3a:	2201      	movs	r2, #1
 8013f3c:	429a      	cmp	r2, r3
 8013f3e:	db09      	blt.n	8013f54 <__s2b+0x30>
 8013f40:	4630      	mov	r0, r6
 8013f42:	f7ff ff47 	bl	8013dd4 <_Balloc>
 8013f46:	b940      	cbnz	r0, 8013f5a <__s2b+0x36>
 8013f48:	4602      	mov	r2, r0
 8013f4a:	4b19      	ldr	r3, [pc, #100]	@ (8013fb0 <__s2b+0x8c>)
 8013f4c:	4819      	ldr	r0, [pc, #100]	@ (8013fb4 <__s2b+0x90>)
 8013f4e:	21d3      	movs	r1, #211	@ 0xd3
 8013f50:	f7fe fd32 	bl	80129b8 <__assert_func>
 8013f54:	0052      	lsls	r2, r2, #1
 8013f56:	3101      	adds	r1, #1
 8013f58:	e7f0      	b.n	8013f3c <__s2b+0x18>
 8013f5a:	9b08      	ldr	r3, [sp, #32]
 8013f5c:	6143      	str	r3, [r0, #20]
 8013f5e:	2d09      	cmp	r5, #9
 8013f60:	f04f 0301 	mov.w	r3, #1
 8013f64:	6103      	str	r3, [r0, #16]
 8013f66:	dd16      	ble.n	8013f96 <__s2b+0x72>
 8013f68:	f104 0909 	add.w	r9, r4, #9
 8013f6c:	46c8      	mov	r8, r9
 8013f6e:	442c      	add	r4, r5
 8013f70:	f818 3b01 	ldrb.w	r3, [r8], #1
 8013f74:	4601      	mov	r1, r0
 8013f76:	3b30      	subs	r3, #48	@ 0x30
 8013f78:	220a      	movs	r2, #10
 8013f7a:	4630      	mov	r0, r6
 8013f7c:	f7ff ff8c 	bl	8013e98 <__multadd>
 8013f80:	45a0      	cmp	r8, r4
 8013f82:	d1f5      	bne.n	8013f70 <__s2b+0x4c>
 8013f84:	f1a5 0408 	sub.w	r4, r5, #8
 8013f88:	444c      	add	r4, r9
 8013f8a:	1b2d      	subs	r5, r5, r4
 8013f8c:	1963      	adds	r3, r4, r5
 8013f8e:	42bb      	cmp	r3, r7
 8013f90:	db04      	blt.n	8013f9c <__s2b+0x78>
 8013f92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013f96:	340a      	adds	r4, #10
 8013f98:	2509      	movs	r5, #9
 8013f9a:	e7f6      	b.n	8013f8a <__s2b+0x66>
 8013f9c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013fa0:	4601      	mov	r1, r0
 8013fa2:	3b30      	subs	r3, #48	@ 0x30
 8013fa4:	220a      	movs	r2, #10
 8013fa6:	4630      	mov	r0, r6
 8013fa8:	f7ff ff76 	bl	8013e98 <__multadd>
 8013fac:	e7ee      	b.n	8013f8c <__s2b+0x68>
 8013fae:	bf00      	nop
 8013fb0:	08015f38 	.word	0x08015f38
 8013fb4:	08015fa9 	.word	0x08015fa9

08013fb8 <__hi0bits>:
 8013fb8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8013fbc:	4603      	mov	r3, r0
 8013fbe:	bf36      	itet	cc
 8013fc0:	0403      	lslcc	r3, r0, #16
 8013fc2:	2000      	movcs	r0, #0
 8013fc4:	2010      	movcc	r0, #16
 8013fc6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8013fca:	bf3c      	itt	cc
 8013fcc:	021b      	lslcc	r3, r3, #8
 8013fce:	3008      	addcc	r0, #8
 8013fd0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8013fd4:	bf3c      	itt	cc
 8013fd6:	011b      	lslcc	r3, r3, #4
 8013fd8:	3004      	addcc	r0, #4
 8013fda:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8013fde:	bf3c      	itt	cc
 8013fe0:	009b      	lslcc	r3, r3, #2
 8013fe2:	3002      	addcc	r0, #2
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	db05      	blt.n	8013ff4 <__hi0bits+0x3c>
 8013fe8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8013fec:	f100 0001 	add.w	r0, r0, #1
 8013ff0:	bf08      	it	eq
 8013ff2:	2020      	moveq	r0, #32
 8013ff4:	4770      	bx	lr

08013ff6 <__lo0bits>:
 8013ff6:	6803      	ldr	r3, [r0, #0]
 8013ff8:	4602      	mov	r2, r0
 8013ffa:	f013 0007 	ands.w	r0, r3, #7
 8013ffe:	d00b      	beq.n	8014018 <__lo0bits+0x22>
 8014000:	07d9      	lsls	r1, r3, #31
 8014002:	d421      	bmi.n	8014048 <__lo0bits+0x52>
 8014004:	0798      	lsls	r0, r3, #30
 8014006:	bf49      	itett	mi
 8014008:	085b      	lsrmi	r3, r3, #1
 801400a:	089b      	lsrpl	r3, r3, #2
 801400c:	2001      	movmi	r0, #1
 801400e:	6013      	strmi	r3, [r2, #0]
 8014010:	bf5c      	itt	pl
 8014012:	6013      	strpl	r3, [r2, #0]
 8014014:	2002      	movpl	r0, #2
 8014016:	4770      	bx	lr
 8014018:	b299      	uxth	r1, r3
 801401a:	b909      	cbnz	r1, 8014020 <__lo0bits+0x2a>
 801401c:	0c1b      	lsrs	r3, r3, #16
 801401e:	2010      	movs	r0, #16
 8014020:	b2d9      	uxtb	r1, r3
 8014022:	b909      	cbnz	r1, 8014028 <__lo0bits+0x32>
 8014024:	3008      	adds	r0, #8
 8014026:	0a1b      	lsrs	r3, r3, #8
 8014028:	0719      	lsls	r1, r3, #28
 801402a:	bf04      	itt	eq
 801402c:	091b      	lsreq	r3, r3, #4
 801402e:	3004      	addeq	r0, #4
 8014030:	0799      	lsls	r1, r3, #30
 8014032:	bf04      	itt	eq
 8014034:	089b      	lsreq	r3, r3, #2
 8014036:	3002      	addeq	r0, #2
 8014038:	07d9      	lsls	r1, r3, #31
 801403a:	d403      	bmi.n	8014044 <__lo0bits+0x4e>
 801403c:	085b      	lsrs	r3, r3, #1
 801403e:	f100 0001 	add.w	r0, r0, #1
 8014042:	d003      	beq.n	801404c <__lo0bits+0x56>
 8014044:	6013      	str	r3, [r2, #0]
 8014046:	4770      	bx	lr
 8014048:	2000      	movs	r0, #0
 801404a:	4770      	bx	lr
 801404c:	2020      	movs	r0, #32
 801404e:	4770      	bx	lr

08014050 <__i2b>:
 8014050:	b510      	push	{r4, lr}
 8014052:	460c      	mov	r4, r1
 8014054:	2101      	movs	r1, #1
 8014056:	f7ff febd 	bl	8013dd4 <_Balloc>
 801405a:	4602      	mov	r2, r0
 801405c:	b928      	cbnz	r0, 801406a <__i2b+0x1a>
 801405e:	4b05      	ldr	r3, [pc, #20]	@ (8014074 <__i2b+0x24>)
 8014060:	4805      	ldr	r0, [pc, #20]	@ (8014078 <__i2b+0x28>)
 8014062:	f240 1145 	movw	r1, #325	@ 0x145
 8014066:	f7fe fca7 	bl	80129b8 <__assert_func>
 801406a:	2301      	movs	r3, #1
 801406c:	6144      	str	r4, [r0, #20]
 801406e:	6103      	str	r3, [r0, #16]
 8014070:	bd10      	pop	{r4, pc}
 8014072:	bf00      	nop
 8014074:	08015f38 	.word	0x08015f38
 8014078:	08015fa9 	.word	0x08015fa9

0801407c <__multiply>:
 801407c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014080:	4617      	mov	r7, r2
 8014082:	690a      	ldr	r2, [r1, #16]
 8014084:	693b      	ldr	r3, [r7, #16]
 8014086:	429a      	cmp	r2, r3
 8014088:	bfa8      	it	ge
 801408a:	463b      	movge	r3, r7
 801408c:	4689      	mov	r9, r1
 801408e:	bfa4      	itt	ge
 8014090:	460f      	movge	r7, r1
 8014092:	4699      	movge	r9, r3
 8014094:	693d      	ldr	r5, [r7, #16]
 8014096:	f8d9 a010 	ldr.w	sl, [r9, #16]
 801409a:	68bb      	ldr	r3, [r7, #8]
 801409c:	6879      	ldr	r1, [r7, #4]
 801409e:	eb05 060a 	add.w	r6, r5, sl
 80140a2:	42b3      	cmp	r3, r6
 80140a4:	b085      	sub	sp, #20
 80140a6:	bfb8      	it	lt
 80140a8:	3101      	addlt	r1, #1
 80140aa:	f7ff fe93 	bl	8013dd4 <_Balloc>
 80140ae:	b930      	cbnz	r0, 80140be <__multiply+0x42>
 80140b0:	4602      	mov	r2, r0
 80140b2:	4b41      	ldr	r3, [pc, #260]	@ (80141b8 <__multiply+0x13c>)
 80140b4:	4841      	ldr	r0, [pc, #260]	@ (80141bc <__multiply+0x140>)
 80140b6:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80140ba:	f7fe fc7d 	bl	80129b8 <__assert_func>
 80140be:	f100 0414 	add.w	r4, r0, #20
 80140c2:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80140c6:	4623      	mov	r3, r4
 80140c8:	2200      	movs	r2, #0
 80140ca:	4573      	cmp	r3, lr
 80140cc:	d320      	bcc.n	8014110 <__multiply+0x94>
 80140ce:	f107 0814 	add.w	r8, r7, #20
 80140d2:	f109 0114 	add.w	r1, r9, #20
 80140d6:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 80140da:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80140de:	9302      	str	r3, [sp, #8]
 80140e0:	1beb      	subs	r3, r5, r7
 80140e2:	3b15      	subs	r3, #21
 80140e4:	f023 0303 	bic.w	r3, r3, #3
 80140e8:	3304      	adds	r3, #4
 80140ea:	3715      	adds	r7, #21
 80140ec:	42bd      	cmp	r5, r7
 80140ee:	bf38      	it	cc
 80140f0:	2304      	movcc	r3, #4
 80140f2:	9301      	str	r3, [sp, #4]
 80140f4:	9b02      	ldr	r3, [sp, #8]
 80140f6:	9103      	str	r1, [sp, #12]
 80140f8:	428b      	cmp	r3, r1
 80140fa:	d80c      	bhi.n	8014116 <__multiply+0x9a>
 80140fc:	2e00      	cmp	r6, #0
 80140fe:	dd03      	ble.n	8014108 <__multiply+0x8c>
 8014100:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8014104:	2b00      	cmp	r3, #0
 8014106:	d055      	beq.n	80141b4 <__multiply+0x138>
 8014108:	6106      	str	r6, [r0, #16]
 801410a:	b005      	add	sp, #20
 801410c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014110:	f843 2b04 	str.w	r2, [r3], #4
 8014114:	e7d9      	b.n	80140ca <__multiply+0x4e>
 8014116:	f8b1 a000 	ldrh.w	sl, [r1]
 801411a:	f1ba 0f00 	cmp.w	sl, #0
 801411e:	d01f      	beq.n	8014160 <__multiply+0xe4>
 8014120:	46c4      	mov	ip, r8
 8014122:	46a1      	mov	r9, r4
 8014124:	2700      	movs	r7, #0
 8014126:	f85c 2b04 	ldr.w	r2, [ip], #4
 801412a:	f8d9 3000 	ldr.w	r3, [r9]
 801412e:	fa1f fb82 	uxth.w	fp, r2
 8014132:	b29b      	uxth	r3, r3
 8014134:	fb0a 330b 	mla	r3, sl, fp, r3
 8014138:	443b      	add	r3, r7
 801413a:	f8d9 7000 	ldr.w	r7, [r9]
 801413e:	0c12      	lsrs	r2, r2, #16
 8014140:	0c3f      	lsrs	r7, r7, #16
 8014142:	fb0a 7202 	mla	r2, sl, r2, r7
 8014146:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 801414a:	b29b      	uxth	r3, r3
 801414c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014150:	4565      	cmp	r5, ip
 8014152:	f849 3b04 	str.w	r3, [r9], #4
 8014156:	ea4f 4712 	mov.w	r7, r2, lsr #16
 801415a:	d8e4      	bhi.n	8014126 <__multiply+0xaa>
 801415c:	9b01      	ldr	r3, [sp, #4]
 801415e:	50e7      	str	r7, [r4, r3]
 8014160:	9b03      	ldr	r3, [sp, #12]
 8014162:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8014166:	3104      	adds	r1, #4
 8014168:	f1b9 0f00 	cmp.w	r9, #0
 801416c:	d020      	beq.n	80141b0 <__multiply+0x134>
 801416e:	6823      	ldr	r3, [r4, #0]
 8014170:	4647      	mov	r7, r8
 8014172:	46a4      	mov	ip, r4
 8014174:	f04f 0a00 	mov.w	sl, #0
 8014178:	f8b7 b000 	ldrh.w	fp, [r7]
 801417c:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8014180:	fb09 220b 	mla	r2, r9, fp, r2
 8014184:	4452      	add	r2, sl
 8014186:	b29b      	uxth	r3, r3
 8014188:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801418c:	f84c 3b04 	str.w	r3, [ip], #4
 8014190:	f857 3b04 	ldr.w	r3, [r7], #4
 8014194:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8014198:	f8bc 3000 	ldrh.w	r3, [ip]
 801419c:	fb09 330a 	mla	r3, r9, sl, r3
 80141a0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80141a4:	42bd      	cmp	r5, r7
 80141a6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80141aa:	d8e5      	bhi.n	8014178 <__multiply+0xfc>
 80141ac:	9a01      	ldr	r2, [sp, #4]
 80141ae:	50a3      	str	r3, [r4, r2]
 80141b0:	3404      	adds	r4, #4
 80141b2:	e79f      	b.n	80140f4 <__multiply+0x78>
 80141b4:	3e01      	subs	r6, #1
 80141b6:	e7a1      	b.n	80140fc <__multiply+0x80>
 80141b8:	08015f38 	.word	0x08015f38
 80141bc:	08015fa9 	.word	0x08015fa9

080141c0 <__pow5mult>:
 80141c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80141c4:	4615      	mov	r5, r2
 80141c6:	f012 0203 	ands.w	r2, r2, #3
 80141ca:	4607      	mov	r7, r0
 80141cc:	460e      	mov	r6, r1
 80141ce:	d007      	beq.n	80141e0 <__pow5mult+0x20>
 80141d0:	4c25      	ldr	r4, [pc, #148]	@ (8014268 <__pow5mult+0xa8>)
 80141d2:	3a01      	subs	r2, #1
 80141d4:	2300      	movs	r3, #0
 80141d6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80141da:	f7ff fe5d 	bl	8013e98 <__multadd>
 80141de:	4606      	mov	r6, r0
 80141e0:	10ad      	asrs	r5, r5, #2
 80141e2:	d03d      	beq.n	8014260 <__pow5mult+0xa0>
 80141e4:	69fc      	ldr	r4, [r7, #28]
 80141e6:	b97c      	cbnz	r4, 8014208 <__pow5mult+0x48>
 80141e8:	2010      	movs	r0, #16
 80141ea:	f7fc fd3f 	bl	8010c6c <malloc>
 80141ee:	4602      	mov	r2, r0
 80141f0:	61f8      	str	r0, [r7, #28]
 80141f2:	b928      	cbnz	r0, 8014200 <__pow5mult+0x40>
 80141f4:	4b1d      	ldr	r3, [pc, #116]	@ (801426c <__pow5mult+0xac>)
 80141f6:	481e      	ldr	r0, [pc, #120]	@ (8014270 <__pow5mult+0xb0>)
 80141f8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80141fc:	f7fe fbdc 	bl	80129b8 <__assert_func>
 8014200:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8014204:	6004      	str	r4, [r0, #0]
 8014206:	60c4      	str	r4, [r0, #12]
 8014208:	f8d7 801c 	ldr.w	r8, [r7, #28]
 801420c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8014210:	b94c      	cbnz	r4, 8014226 <__pow5mult+0x66>
 8014212:	f240 2171 	movw	r1, #625	@ 0x271
 8014216:	4638      	mov	r0, r7
 8014218:	f7ff ff1a 	bl	8014050 <__i2b>
 801421c:	2300      	movs	r3, #0
 801421e:	f8c8 0008 	str.w	r0, [r8, #8]
 8014222:	4604      	mov	r4, r0
 8014224:	6003      	str	r3, [r0, #0]
 8014226:	f04f 0900 	mov.w	r9, #0
 801422a:	07eb      	lsls	r3, r5, #31
 801422c:	d50a      	bpl.n	8014244 <__pow5mult+0x84>
 801422e:	4631      	mov	r1, r6
 8014230:	4622      	mov	r2, r4
 8014232:	4638      	mov	r0, r7
 8014234:	f7ff ff22 	bl	801407c <__multiply>
 8014238:	4631      	mov	r1, r6
 801423a:	4680      	mov	r8, r0
 801423c:	4638      	mov	r0, r7
 801423e:	f7ff fe09 	bl	8013e54 <_Bfree>
 8014242:	4646      	mov	r6, r8
 8014244:	106d      	asrs	r5, r5, #1
 8014246:	d00b      	beq.n	8014260 <__pow5mult+0xa0>
 8014248:	6820      	ldr	r0, [r4, #0]
 801424a:	b938      	cbnz	r0, 801425c <__pow5mult+0x9c>
 801424c:	4622      	mov	r2, r4
 801424e:	4621      	mov	r1, r4
 8014250:	4638      	mov	r0, r7
 8014252:	f7ff ff13 	bl	801407c <__multiply>
 8014256:	6020      	str	r0, [r4, #0]
 8014258:	f8c0 9000 	str.w	r9, [r0]
 801425c:	4604      	mov	r4, r0
 801425e:	e7e4      	b.n	801422a <__pow5mult+0x6a>
 8014260:	4630      	mov	r0, r6
 8014262:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014266:	bf00      	nop
 8014268:	0801616c 	.word	0x0801616c
 801426c:	08015e1e 	.word	0x08015e1e
 8014270:	08015fa9 	.word	0x08015fa9

08014274 <__lshift>:
 8014274:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014278:	460c      	mov	r4, r1
 801427a:	6849      	ldr	r1, [r1, #4]
 801427c:	6923      	ldr	r3, [r4, #16]
 801427e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8014282:	68a3      	ldr	r3, [r4, #8]
 8014284:	4607      	mov	r7, r0
 8014286:	4691      	mov	r9, r2
 8014288:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801428c:	f108 0601 	add.w	r6, r8, #1
 8014290:	42b3      	cmp	r3, r6
 8014292:	db0b      	blt.n	80142ac <__lshift+0x38>
 8014294:	4638      	mov	r0, r7
 8014296:	f7ff fd9d 	bl	8013dd4 <_Balloc>
 801429a:	4605      	mov	r5, r0
 801429c:	b948      	cbnz	r0, 80142b2 <__lshift+0x3e>
 801429e:	4602      	mov	r2, r0
 80142a0:	4b28      	ldr	r3, [pc, #160]	@ (8014344 <__lshift+0xd0>)
 80142a2:	4829      	ldr	r0, [pc, #164]	@ (8014348 <__lshift+0xd4>)
 80142a4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80142a8:	f7fe fb86 	bl	80129b8 <__assert_func>
 80142ac:	3101      	adds	r1, #1
 80142ae:	005b      	lsls	r3, r3, #1
 80142b0:	e7ee      	b.n	8014290 <__lshift+0x1c>
 80142b2:	2300      	movs	r3, #0
 80142b4:	f100 0114 	add.w	r1, r0, #20
 80142b8:	f100 0210 	add.w	r2, r0, #16
 80142bc:	4618      	mov	r0, r3
 80142be:	4553      	cmp	r3, sl
 80142c0:	db33      	blt.n	801432a <__lshift+0xb6>
 80142c2:	6920      	ldr	r0, [r4, #16]
 80142c4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80142c8:	f104 0314 	add.w	r3, r4, #20
 80142cc:	f019 091f 	ands.w	r9, r9, #31
 80142d0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80142d4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80142d8:	d02b      	beq.n	8014332 <__lshift+0xbe>
 80142da:	f1c9 0e20 	rsb	lr, r9, #32
 80142de:	468a      	mov	sl, r1
 80142e0:	2200      	movs	r2, #0
 80142e2:	6818      	ldr	r0, [r3, #0]
 80142e4:	fa00 f009 	lsl.w	r0, r0, r9
 80142e8:	4310      	orrs	r0, r2
 80142ea:	f84a 0b04 	str.w	r0, [sl], #4
 80142ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80142f2:	459c      	cmp	ip, r3
 80142f4:	fa22 f20e 	lsr.w	r2, r2, lr
 80142f8:	d8f3      	bhi.n	80142e2 <__lshift+0x6e>
 80142fa:	ebac 0304 	sub.w	r3, ip, r4
 80142fe:	3b15      	subs	r3, #21
 8014300:	f023 0303 	bic.w	r3, r3, #3
 8014304:	3304      	adds	r3, #4
 8014306:	f104 0015 	add.w	r0, r4, #21
 801430a:	4560      	cmp	r0, ip
 801430c:	bf88      	it	hi
 801430e:	2304      	movhi	r3, #4
 8014310:	50ca      	str	r2, [r1, r3]
 8014312:	b10a      	cbz	r2, 8014318 <__lshift+0xa4>
 8014314:	f108 0602 	add.w	r6, r8, #2
 8014318:	3e01      	subs	r6, #1
 801431a:	4638      	mov	r0, r7
 801431c:	612e      	str	r6, [r5, #16]
 801431e:	4621      	mov	r1, r4
 8014320:	f7ff fd98 	bl	8013e54 <_Bfree>
 8014324:	4628      	mov	r0, r5
 8014326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801432a:	f842 0f04 	str.w	r0, [r2, #4]!
 801432e:	3301      	adds	r3, #1
 8014330:	e7c5      	b.n	80142be <__lshift+0x4a>
 8014332:	3904      	subs	r1, #4
 8014334:	f853 2b04 	ldr.w	r2, [r3], #4
 8014338:	f841 2f04 	str.w	r2, [r1, #4]!
 801433c:	459c      	cmp	ip, r3
 801433e:	d8f9      	bhi.n	8014334 <__lshift+0xc0>
 8014340:	e7ea      	b.n	8014318 <__lshift+0xa4>
 8014342:	bf00      	nop
 8014344:	08015f38 	.word	0x08015f38
 8014348:	08015fa9 	.word	0x08015fa9

0801434c <__mcmp>:
 801434c:	690a      	ldr	r2, [r1, #16]
 801434e:	4603      	mov	r3, r0
 8014350:	6900      	ldr	r0, [r0, #16]
 8014352:	1a80      	subs	r0, r0, r2
 8014354:	b530      	push	{r4, r5, lr}
 8014356:	d10e      	bne.n	8014376 <__mcmp+0x2a>
 8014358:	3314      	adds	r3, #20
 801435a:	3114      	adds	r1, #20
 801435c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8014360:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8014364:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8014368:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801436c:	4295      	cmp	r5, r2
 801436e:	d003      	beq.n	8014378 <__mcmp+0x2c>
 8014370:	d205      	bcs.n	801437e <__mcmp+0x32>
 8014372:	f04f 30ff 	mov.w	r0, #4294967295
 8014376:	bd30      	pop	{r4, r5, pc}
 8014378:	42a3      	cmp	r3, r4
 801437a:	d3f3      	bcc.n	8014364 <__mcmp+0x18>
 801437c:	e7fb      	b.n	8014376 <__mcmp+0x2a>
 801437e:	2001      	movs	r0, #1
 8014380:	e7f9      	b.n	8014376 <__mcmp+0x2a>
	...

08014384 <__mdiff>:
 8014384:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014388:	4689      	mov	r9, r1
 801438a:	4606      	mov	r6, r0
 801438c:	4611      	mov	r1, r2
 801438e:	4648      	mov	r0, r9
 8014390:	4614      	mov	r4, r2
 8014392:	f7ff ffdb 	bl	801434c <__mcmp>
 8014396:	1e05      	subs	r5, r0, #0
 8014398:	d112      	bne.n	80143c0 <__mdiff+0x3c>
 801439a:	4629      	mov	r1, r5
 801439c:	4630      	mov	r0, r6
 801439e:	f7ff fd19 	bl	8013dd4 <_Balloc>
 80143a2:	4602      	mov	r2, r0
 80143a4:	b928      	cbnz	r0, 80143b2 <__mdiff+0x2e>
 80143a6:	4b3f      	ldr	r3, [pc, #252]	@ (80144a4 <__mdiff+0x120>)
 80143a8:	f240 2137 	movw	r1, #567	@ 0x237
 80143ac:	483e      	ldr	r0, [pc, #248]	@ (80144a8 <__mdiff+0x124>)
 80143ae:	f7fe fb03 	bl	80129b8 <__assert_func>
 80143b2:	2301      	movs	r3, #1
 80143b4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80143b8:	4610      	mov	r0, r2
 80143ba:	b003      	add	sp, #12
 80143bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143c0:	bfbc      	itt	lt
 80143c2:	464b      	movlt	r3, r9
 80143c4:	46a1      	movlt	r9, r4
 80143c6:	4630      	mov	r0, r6
 80143c8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80143cc:	bfba      	itte	lt
 80143ce:	461c      	movlt	r4, r3
 80143d0:	2501      	movlt	r5, #1
 80143d2:	2500      	movge	r5, #0
 80143d4:	f7ff fcfe 	bl	8013dd4 <_Balloc>
 80143d8:	4602      	mov	r2, r0
 80143da:	b918      	cbnz	r0, 80143e4 <__mdiff+0x60>
 80143dc:	4b31      	ldr	r3, [pc, #196]	@ (80144a4 <__mdiff+0x120>)
 80143de:	f240 2145 	movw	r1, #581	@ 0x245
 80143e2:	e7e3      	b.n	80143ac <__mdiff+0x28>
 80143e4:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80143e8:	6926      	ldr	r6, [r4, #16]
 80143ea:	60c5      	str	r5, [r0, #12]
 80143ec:	f109 0310 	add.w	r3, r9, #16
 80143f0:	f109 0514 	add.w	r5, r9, #20
 80143f4:	f104 0e14 	add.w	lr, r4, #20
 80143f8:	f100 0b14 	add.w	fp, r0, #20
 80143fc:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8014400:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8014404:	9301      	str	r3, [sp, #4]
 8014406:	46d9      	mov	r9, fp
 8014408:	f04f 0c00 	mov.w	ip, #0
 801440c:	9b01      	ldr	r3, [sp, #4]
 801440e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8014412:	f853 af04 	ldr.w	sl, [r3, #4]!
 8014416:	9301      	str	r3, [sp, #4]
 8014418:	fa1f f38a 	uxth.w	r3, sl
 801441c:	4619      	mov	r1, r3
 801441e:	b283      	uxth	r3, r0
 8014420:	1acb      	subs	r3, r1, r3
 8014422:	0c00      	lsrs	r0, r0, #16
 8014424:	4463      	add	r3, ip
 8014426:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 801442a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 801442e:	b29b      	uxth	r3, r3
 8014430:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8014434:	4576      	cmp	r6, lr
 8014436:	f849 3b04 	str.w	r3, [r9], #4
 801443a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801443e:	d8e5      	bhi.n	801440c <__mdiff+0x88>
 8014440:	1b33      	subs	r3, r6, r4
 8014442:	3b15      	subs	r3, #21
 8014444:	f023 0303 	bic.w	r3, r3, #3
 8014448:	3415      	adds	r4, #21
 801444a:	3304      	adds	r3, #4
 801444c:	42a6      	cmp	r6, r4
 801444e:	bf38      	it	cc
 8014450:	2304      	movcc	r3, #4
 8014452:	441d      	add	r5, r3
 8014454:	445b      	add	r3, fp
 8014456:	461e      	mov	r6, r3
 8014458:	462c      	mov	r4, r5
 801445a:	4544      	cmp	r4, r8
 801445c:	d30e      	bcc.n	801447c <__mdiff+0xf8>
 801445e:	f108 0103 	add.w	r1, r8, #3
 8014462:	1b49      	subs	r1, r1, r5
 8014464:	f021 0103 	bic.w	r1, r1, #3
 8014468:	3d03      	subs	r5, #3
 801446a:	45a8      	cmp	r8, r5
 801446c:	bf38      	it	cc
 801446e:	2100      	movcc	r1, #0
 8014470:	440b      	add	r3, r1
 8014472:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8014476:	b191      	cbz	r1, 801449e <__mdiff+0x11a>
 8014478:	6117      	str	r7, [r2, #16]
 801447a:	e79d      	b.n	80143b8 <__mdiff+0x34>
 801447c:	f854 1b04 	ldr.w	r1, [r4], #4
 8014480:	46e6      	mov	lr, ip
 8014482:	0c08      	lsrs	r0, r1, #16
 8014484:	fa1c fc81 	uxtah	ip, ip, r1
 8014488:	4471      	add	r1, lr
 801448a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 801448e:	b289      	uxth	r1, r1
 8014490:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8014494:	f846 1b04 	str.w	r1, [r6], #4
 8014498:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801449c:	e7dd      	b.n	801445a <__mdiff+0xd6>
 801449e:	3f01      	subs	r7, #1
 80144a0:	e7e7      	b.n	8014472 <__mdiff+0xee>
 80144a2:	bf00      	nop
 80144a4:	08015f38 	.word	0x08015f38
 80144a8:	08015fa9 	.word	0x08015fa9

080144ac <__ulp>:
 80144ac:	b082      	sub	sp, #8
 80144ae:	ed8d 0b00 	vstr	d0, [sp]
 80144b2:	9a01      	ldr	r2, [sp, #4]
 80144b4:	4b0f      	ldr	r3, [pc, #60]	@ (80144f4 <__ulp+0x48>)
 80144b6:	4013      	ands	r3, r2
 80144b8:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 80144bc:	2b00      	cmp	r3, #0
 80144be:	dc08      	bgt.n	80144d2 <__ulp+0x26>
 80144c0:	425b      	negs	r3, r3
 80144c2:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 80144c6:	ea4f 5223 	mov.w	r2, r3, asr #20
 80144ca:	da04      	bge.n	80144d6 <__ulp+0x2a>
 80144cc:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80144d0:	4113      	asrs	r3, r2
 80144d2:	2200      	movs	r2, #0
 80144d4:	e008      	b.n	80144e8 <__ulp+0x3c>
 80144d6:	f1a2 0314 	sub.w	r3, r2, #20
 80144da:	2b1e      	cmp	r3, #30
 80144dc:	bfda      	itte	le
 80144de:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80144e2:	40da      	lsrle	r2, r3
 80144e4:	2201      	movgt	r2, #1
 80144e6:	2300      	movs	r3, #0
 80144e8:	4619      	mov	r1, r3
 80144ea:	4610      	mov	r0, r2
 80144ec:	ec41 0b10 	vmov	d0, r0, r1
 80144f0:	b002      	add	sp, #8
 80144f2:	4770      	bx	lr
 80144f4:	7ff00000 	.word	0x7ff00000

080144f8 <__b2d>:
 80144f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80144fc:	6906      	ldr	r6, [r0, #16]
 80144fe:	f100 0814 	add.w	r8, r0, #20
 8014502:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8014506:	1f37      	subs	r7, r6, #4
 8014508:	f856 2c04 	ldr.w	r2, [r6, #-4]
 801450c:	4610      	mov	r0, r2
 801450e:	f7ff fd53 	bl	8013fb8 <__hi0bits>
 8014512:	f1c0 0320 	rsb	r3, r0, #32
 8014516:	280a      	cmp	r0, #10
 8014518:	600b      	str	r3, [r1, #0]
 801451a:	491b      	ldr	r1, [pc, #108]	@ (8014588 <__b2d+0x90>)
 801451c:	dc15      	bgt.n	801454a <__b2d+0x52>
 801451e:	f1c0 0c0b 	rsb	ip, r0, #11
 8014522:	fa22 f30c 	lsr.w	r3, r2, ip
 8014526:	45b8      	cmp	r8, r7
 8014528:	ea43 0501 	orr.w	r5, r3, r1
 801452c:	bf34      	ite	cc
 801452e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8014532:	2300      	movcs	r3, #0
 8014534:	3015      	adds	r0, #21
 8014536:	fa02 f000 	lsl.w	r0, r2, r0
 801453a:	fa23 f30c 	lsr.w	r3, r3, ip
 801453e:	4303      	orrs	r3, r0
 8014540:	461c      	mov	r4, r3
 8014542:	ec45 4b10 	vmov	d0, r4, r5
 8014546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801454a:	45b8      	cmp	r8, r7
 801454c:	bf3a      	itte	cc
 801454e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8014552:	f1a6 0708 	subcc.w	r7, r6, #8
 8014556:	2300      	movcs	r3, #0
 8014558:	380b      	subs	r0, #11
 801455a:	d012      	beq.n	8014582 <__b2d+0x8a>
 801455c:	f1c0 0120 	rsb	r1, r0, #32
 8014560:	fa23 f401 	lsr.w	r4, r3, r1
 8014564:	4082      	lsls	r2, r0
 8014566:	4322      	orrs	r2, r4
 8014568:	4547      	cmp	r7, r8
 801456a:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 801456e:	bf8c      	ite	hi
 8014570:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8014574:	2200      	movls	r2, #0
 8014576:	4083      	lsls	r3, r0
 8014578:	40ca      	lsrs	r2, r1
 801457a:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 801457e:	4313      	orrs	r3, r2
 8014580:	e7de      	b.n	8014540 <__b2d+0x48>
 8014582:	ea42 0501 	orr.w	r5, r2, r1
 8014586:	e7db      	b.n	8014540 <__b2d+0x48>
 8014588:	3ff00000 	.word	0x3ff00000

0801458c <__d2b>:
 801458c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014590:	460f      	mov	r7, r1
 8014592:	2101      	movs	r1, #1
 8014594:	ec59 8b10 	vmov	r8, r9, d0
 8014598:	4616      	mov	r6, r2
 801459a:	f7ff fc1b 	bl	8013dd4 <_Balloc>
 801459e:	4604      	mov	r4, r0
 80145a0:	b930      	cbnz	r0, 80145b0 <__d2b+0x24>
 80145a2:	4602      	mov	r2, r0
 80145a4:	4b23      	ldr	r3, [pc, #140]	@ (8014634 <__d2b+0xa8>)
 80145a6:	4824      	ldr	r0, [pc, #144]	@ (8014638 <__d2b+0xac>)
 80145a8:	f240 310f 	movw	r1, #783	@ 0x30f
 80145ac:	f7fe fa04 	bl	80129b8 <__assert_func>
 80145b0:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80145b4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80145b8:	b10d      	cbz	r5, 80145be <__d2b+0x32>
 80145ba:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80145be:	9301      	str	r3, [sp, #4]
 80145c0:	f1b8 0300 	subs.w	r3, r8, #0
 80145c4:	d023      	beq.n	801460e <__d2b+0x82>
 80145c6:	4668      	mov	r0, sp
 80145c8:	9300      	str	r3, [sp, #0]
 80145ca:	f7ff fd14 	bl	8013ff6 <__lo0bits>
 80145ce:	e9dd 1200 	ldrd	r1, r2, [sp]
 80145d2:	b1d0      	cbz	r0, 801460a <__d2b+0x7e>
 80145d4:	f1c0 0320 	rsb	r3, r0, #32
 80145d8:	fa02 f303 	lsl.w	r3, r2, r3
 80145dc:	430b      	orrs	r3, r1
 80145de:	40c2      	lsrs	r2, r0
 80145e0:	6163      	str	r3, [r4, #20]
 80145e2:	9201      	str	r2, [sp, #4]
 80145e4:	9b01      	ldr	r3, [sp, #4]
 80145e6:	61a3      	str	r3, [r4, #24]
 80145e8:	2b00      	cmp	r3, #0
 80145ea:	bf0c      	ite	eq
 80145ec:	2201      	moveq	r2, #1
 80145ee:	2202      	movne	r2, #2
 80145f0:	6122      	str	r2, [r4, #16]
 80145f2:	b1a5      	cbz	r5, 801461e <__d2b+0x92>
 80145f4:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80145f8:	4405      	add	r5, r0
 80145fa:	603d      	str	r5, [r7, #0]
 80145fc:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8014600:	6030      	str	r0, [r6, #0]
 8014602:	4620      	mov	r0, r4
 8014604:	b003      	add	sp, #12
 8014606:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801460a:	6161      	str	r1, [r4, #20]
 801460c:	e7ea      	b.n	80145e4 <__d2b+0x58>
 801460e:	a801      	add	r0, sp, #4
 8014610:	f7ff fcf1 	bl	8013ff6 <__lo0bits>
 8014614:	9b01      	ldr	r3, [sp, #4]
 8014616:	6163      	str	r3, [r4, #20]
 8014618:	3020      	adds	r0, #32
 801461a:	2201      	movs	r2, #1
 801461c:	e7e8      	b.n	80145f0 <__d2b+0x64>
 801461e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8014622:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8014626:	6038      	str	r0, [r7, #0]
 8014628:	6918      	ldr	r0, [r3, #16]
 801462a:	f7ff fcc5 	bl	8013fb8 <__hi0bits>
 801462e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8014632:	e7e5      	b.n	8014600 <__d2b+0x74>
 8014634:	08015f38 	.word	0x08015f38
 8014638:	08015fa9 	.word	0x08015fa9

0801463c <__ratio>:
 801463c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014640:	b085      	sub	sp, #20
 8014642:	e9cd 1000 	strd	r1, r0, [sp]
 8014646:	a902      	add	r1, sp, #8
 8014648:	f7ff ff56 	bl	80144f8 <__b2d>
 801464c:	9800      	ldr	r0, [sp, #0]
 801464e:	a903      	add	r1, sp, #12
 8014650:	ec55 4b10 	vmov	r4, r5, d0
 8014654:	f7ff ff50 	bl	80144f8 <__b2d>
 8014658:	9b01      	ldr	r3, [sp, #4]
 801465a:	6919      	ldr	r1, [r3, #16]
 801465c:	9b00      	ldr	r3, [sp, #0]
 801465e:	691b      	ldr	r3, [r3, #16]
 8014660:	1ac9      	subs	r1, r1, r3
 8014662:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8014666:	1a9b      	subs	r3, r3, r2
 8014668:	ec5b ab10 	vmov	sl, fp, d0
 801466c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8014670:	2b00      	cmp	r3, #0
 8014672:	bfce      	itee	gt
 8014674:	462a      	movgt	r2, r5
 8014676:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 801467a:	465a      	movle	r2, fp
 801467c:	462f      	mov	r7, r5
 801467e:	46d9      	mov	r9, fp
 8014680:	bfcc      	ite	gt
 8014682:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8014686:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 801468a:	464b      	mov	r3, r9
 801468c:	4652      	mov	r2, sl
 801468e:	4620      	mov	r0, r4
 8014690:	4639      	mov	r1, r7
 8014692:	f7ec f8db 	bl	800084c <__aeabi_ddiv>
 8014696:	ec41 0b10 	vmov	d0, r0, r1
 801469a:	b005      	add	sp, #20
 801469c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146a0 <__copybits>:
 80146a0:	3901      	subs	r1, #1
 80146a2:	b570      	push	{r4, r5, r6, lr}
 80146a4:	1149      	asrs	r1, r1, #5
 80146a6:	6914      	ldr	r4, [r2, #16]
 80146a8:	3101      	adds	r1, #1
 80146aa:	f102 0314 	add.w	r3, r2, #20
 80146ae:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80146b2:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80146b6:	1f05      	subs	r5, r0, #4
 80146b8:	42a3      	cmp	r3, r4
 80146ba:	d30c      	bcc.n	80146d6 <__copybits+0x36>
 80146bc:	1aa3      	subs	r3, r4, r2
 80146be:	3b11      	subs	r3, #17
 80146c0:	f023 0303 	bic.w	r3, r3, #3
 80146c4:	3211      	adds	r2, #17
 80146c6:	42a2      	cmp	r2, r4
 80146c8:	bf88      	it	hi
 80146ca:	2300      	movhi	r3, #0
 80146cc:	4418      	add	r0, r3
 80146ce:	2300      	movs	r3, #0
 80146d0:	4288      	cmp	r0, r1
 80146d2:	d305      	bcc.n	80146e0 <__copybits+0x40>
 80146d4:	bd70      	pop	{r4, r5, r6, pc}
 80146d6:	f853 6b04 	ldr.w	r6, [r3], #4
 80146da:	f845 6f04 	str.w	r6, [r5, #4]!
 80146de:	e7eb      	b.n	80146b8 <__copybits+0x18>
 80146e0:	f840 3b04 	str.w	r3, [r0], #4
 80146e4:	e7f4      	b.n	80146d0 <__copybits+0x30>

080146e6 <__any_on>:
 80146e6:	f100 0214 	add.w	r2, r0, #20
 80146ea:	6900      	ldr	r0, [r0, #16]
 80146ec:	114b      	asrs	r3, r1, #5
 80146ee:	4298      	cmp	r0, r3
 80146f0:	b510      	push	{r4, lr}
 80146f2:	db11      	blt.n	8014718 <__any_on+0x32>
 80146f4:	dd0a      	ble.n	801470c <__any_on+0x26>
 80146f6:	f011 011f 	ands.w	r1, r1, #31
 80146fa:	d007      	beq.n	801470c <__any_on+0x26>
 80146fc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8014700:	fa24 f001 	lsr.w	r0, r4, r1
 8014704:	fa00 f101 	lsl.w	r1, r0, r1
 8014708:	428c      	cmp	r4, r1
 801470a:	d10b      	bne.n	8014724 <__any_on+0x3e>
 801470c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014710:	4293      	cmp	r3, r2
 8014712:	d803      	bhi.n	801471c <__any_on+0x36>
 8014714:	2000      	movs	r0, #0
 8014716:	bd10      	pop	{r4, pc}
 8014718:	4603      	mov	r3, r0
 801471a:	e7f7      	b.n	801470c <__any_on+0x26>
 801471c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8014720:	2900      	cmp	r1, #0
 8014722:	d0f5      	beq.n	8014710 <__any_on+0x2a>
 8014724:	2001      	movs	r0, #1
 8014726:	e7f6      	b.n	8014716 <__any_on+0x30>

08014728 <__ascii_wctomb>:
 8014728:	4603      	mov	r3, r0
 801472a:	4608      	mov	r0, r1
 801472c:	b141      	cbz	r1, 8014740 <__ascii_wctomb+0x18>
 801472e:	2aff      	cmp	r2, #255	@ 0xff
 8014730:	d904      	bls.n	801473c <__ascii_wctomb+0x14>
 8014732:	228a      	movs	r2, #138	@ 0x8a
 8014734:	601a      	str	r2, [r3, #0]
 8014736:	f04f 30ff 	mov.w	r0, #4294967295
 801473a:	4770      	bx	lr
 801473c:	700a      	strb	r2, [r1, #0]
 801473e:	2001      	movs	r0, #1
 8014740:	4770      	bx	lr

08014742 <__ssputs_r>:
 8014742:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014746:	688e      	ldr	r6, [r1, #8]
 8014748:	461f      	mov	r7, r3
 801474a:	42be      	cmp	r6, r7
 801474c:	680b      	ldr	r3, [r1, #0]
 801474e:	4682      	mov	sl, r0
 8014750:	460c      	mov	r4, r1
 8014752:	4690      	mov	r8, r2
 8014754:	d82d      	bhi.n	80147b2 <__ssputs_r+0x70>
 8014756:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801475a:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801475e:	d026      	beq.n	80147ae <__ssputs_r+0x6c>
 8014760:	6965      	ldr	r5, [r4, #20]
 8014762:	6909      	ldr	r1, [r1, #16]
 8014764:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014768:	eba3 0901 	sub.w	r9, r3, r1
 801476c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8014770:	1c7b      	adds	r3, r7, #1
 8014772:	444b      	add	r3, r9
 8014774:	106d      	asrs	r5, r5, #1
 8014776:	429d      	cmp	r5, r3
 8014778:	bf38      	it	cc
 801477a:	461d      	movcc	r5, r3
 801477c:	0553      	lsls	r3, r2, #21
 801477e:	d527      	bpl.n	80147d0 <__ssputs_r+0x8e>
 8014780:	4629      	mov	r1, r5
 8014782:	f7fc faa5 	bl	8010cd0 <_malloc_r>
 8014786:	4606      	mov	r6, r0
 8014788:	b360      	cbz	r0, 80147e4 <__ssputs_r+0xa2>
 801478a:	6921      	ldr	r1, [r4, #16]
 801478c:	464a      	mov	r2, r9
 801478e:	f7fe f8fc 	bl	801298a <memcpy>
 8014792:	89a3      	ldrh	r3, [r4, #12]
 8014794:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8014798:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801479c:	81a3      	strh	r3, [r4, #12]
 801479e:	6126      	str	r6, [r4, #16]
 80147a0:	6165      	str	r5, [r4, #20]
 80147a2:	444e      	add	r6, r9
 80147a4:	eba5 0509 	sub.w	r5, r5, r9
 80147a8:	6026      	str	r6, [r4, #0]
 80147aa:	60a5      	str	r5, [r4, #8]
 80147ac:	463e      	mov	r6, r7
 80147ae:	42be      	cmp	r6, r7
 80147b0:	d900      	bls.n	80147b4 <__ssputs_r+0x72>
 80147b2:	463e      	mov	r6, r7
 80147b4:	6820      	ldr	r0, [r4, #0]
 80147b6:	4632      	mov	r2, r6
 80147b8:	4641      	mov	r1, r8
 80147ba:	f000 f9d7 	bl	8014b6c <memmove>
 80147be:	68a3      	ldr	r3, [r4, #8]
 80147c0:	1b9b      	subs	r3, r3, r6
 80147c2:	60a3      	str	r3, [r4, #8]
 80147c4:	6823      	ldr	r3, [r4, #0]
 80147c6:	4433      	add	r3, r6
 80147c8:	6023      	str	r3, [r4, #0]
 80147ca:	2000      	movs	r0, #0
 80147cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80147d0:	462a      	mov	r2, r5
 80147d2:	f000 fa00 	bl	8014bd6 <_realloc_r>
 80147d6:	4606      	mov	r6, r0
 80147d8:	2800      	cmp	r0, #0
 80147da:	d1e0      	bne.n	801479e <__ssputs_r+0x5c>
 80147dc:	6921      	ldr	r1, [r4, #16]
 80147de:	4650      	mov	r0, sl
 80147e0:	f7fe ff62 	bl	80136a8 <_free_r>
 80147e4:	230c      	movs	r3, #12
 80147e6:	f8ca 3000 	str.w	r3, [sl]
 80147ea:	89a3      	ldrh	r3, [r4, #12]
 80147ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80147f0:	81a3      	strh	r3, [r4, #12]
 80147f2:	f04f 30ff 	mov.w	r0, #4294967295
 80147f6:	e7e9      	b.n	80147cc <__ssputs_r+0x8a>

080147f8 <_svfiprintf_r>:
 80147f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147fc:	4698      	mov	r8, r3
 80147fe:	898b      	ldrh	r3, [r1, #12]
 8014800:	061b      	lsls	r3, r3, #24
 8014802:	b09d      	sub	sp, #116	@ 0x74
 8014804:	4607      	mov	r7, r0
 8014806:	460d      	mov	r5, r1
 8014808:	4614      	mov	r4, r2
 801480a:	d510      	bpl.n	801482e <_svfiprintf_r+0x36>
 801480c:	690b      	ldr	r3, [r1, #16]
 801480e:	b973      	cbnz	r3, 801482e <_svfiprintf_r+0x36>
 8014810:	2140      	movs	r1, #64	@ 0x40
 8014812:	f7fc fa5d 	bl	8010cd0 <_malloc_r>
 8014816:	6028      	str	r0, [r5, #0]
 8014818:	6128      	str	r0, [r5, #16]
 801481a:	b930      	cbnz	r0, 801482a <_svfiprintf_r+0x32>
 801481c:	230c      	movs	r3, #12
 801481e:	603b      	str	r3, [r7, #0]
 8014820:	f04f 30ff 	mov.w	r0, #4294967295
 8014824:	b01d      	add	sp, #116	@ 0x74
 8014826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801482a:	2340      	movs	r3, #64	@ 0x40
 801482c:	616b      	str	r3, [r5, #20]
 801482e:	2300      	movs	r3, #0
 8014830:	9309      	str	r3, [sp, #36]	@ 0x24
 8014832:	2320      	movs	r3, #32
 8014834:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8014838:	f8cd 800c 	str.w	r8, [sp, #12]
 801483c:	2330      	movs	r3, #48	@ 0x30
 801483e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80149dc <_svfiprintf_r+0x1e4>
 8014842:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8014846:	f04f 0901 	mov.w	r9, #1
 801484a:	4623      	mov	r3, r4
 801484c:	469a      	mov	sl, r3
 801484e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014852:	b10a      	cbz	r2, 8014858 <_svfiprintf_r+0x60>
 8014854:	2a25      	cmp	r2, #37	@ 0x25
 8014856:	d1f9      	bne.n	801484c <_svfiprintf_r+0x54>
 8014858:	ebba 0b04 	subs.w	fp, sl, r4
 801485c:	d00b      	beq.n	8014876 <_svfiprintf_r+0x7e>
 801485e:	465b      	mov	r3, fp
 8014860:	4622      	mov	r2, r4
 8014862:	4629      	mov	r1, r5
 8014864:	4638      	mov	r0, r7
 8014866:	f7ff ff6c 	bl	8014742 <__ssputs_r>
 801486a:	3001      	adds	r0, #1
 801486c:	f000 80a7 	beq.w	80149be <_svfiprintf_r+0x1c6>
 8014870:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014872:	445a      	add	r2, fp
 8014874:	9209      	str	r2, [sp, #36]	@ 0x24
 8014876:	f89a 3000 	ldrb.w	r3, [sl]
 801487a:	2b00      	cmp	r3, #0
 801487c:	f000 809f 	beq.w	80149be <_svfiprintf_r+0x1c6>
 8014880:	2300      	movs	r3, #0
 8014882:	f04f 32ff 	mov.w	r2, #4294967295
 8014886:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801488a:	f10a 0a01 	add.w	sl, sl, #1
 801488e:	9304      	str	r3, [sp, #16]
 8014890:	9307      	str	r3, [sp, #28]
 8014892:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8014896:	931a      	str	r3, [sp, #104]	@ 0x68
 8014898:	4654      	mov	r4, sl
 801489a:	2205      	movs	r2, #5
 801489c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80148a0:	484e      	ldr	r0, [pc, #312]	@ (80149dc <_svfiprintf_r+0x1e4>)
 80148a2:	f7eb fc95 	bl	80001d0 <memchr>
 80148a6:	9a04      	ldr	r2, [sp, #16]
 80148a8:	b9d8      	cbnz	r0, 80148e2 <_svfiprintf_r+0xea>
 80148aa:	06d0      	lsls	r0, r2, #27
 80148ac:	bf44      	itt	mi
 80148ae:	2320      	movmi	r3, #32
 80148b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80148b4:	0711      	lsls	r1, r2, #28
 80148b6:	bf44      	itt	mi
 80148b8:	232b      	movmi	r3, #43	@ 0x2b
 80148ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80148be:	f89a 3000 	ldrb.w	r3, [sl]
 80148c2:	2b2a      	cmp	r3, #42	@ 0x2a
 80148c4:	d015      	beq.n	80148f2 <_svfiprintf_r+0xfa>
 80148c6:	9a07      	ldr	r2, [sp, #28]
 80148c8:	4654      	mov	r4, sl
 80148ca:	2000      	movs	r0, #0
 80148cc:	f04f 0c0a 	mov.w	ip, #10
 80148d0:	4621      	mov	r1, r4
 80148d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80148d6:	3b30      	subs	r3, #48	@ 0x30
 80148d8:	2b09      	cmp	r3, #9
 80148da:	d94b      	bls.n	8014974 <_svfiprintf_r+0x17c>
 80148dc:	b1b0      	cbz	r0, 801490c <_svfiprintf_r+0x114>
 80148de:	9207      	str	r2, [sp, #28]
 80148e0:	e014      	b.n	801490c <_svfiprintf_r+0x114>
 80148e2:	eba0 0308 	sub.w	r3, r0, r8
 80148e6:	fa09 f303 	lsl.w	r3, r9, r3
 80148ea:	4313      	orrs	r3, r2
 80148ec:	9304      	str	r3, [sp, #16]
 80148ee:	46a2      	mov	sl, r4
 80148f0:	e7d2      	b.n	8014898 <_svfiprintf_r+0xa0>
 80148f2:	9b03      	ldr	r3, [sp, #12]
 80148f4:	1d19      	adds	r1, r3, #4
 80148f6:	681b      	ldr	r3, [r3, #0]
 80148f8:	9103      	str	r1, [sp, #12]
 80148fa:	2b00      	cmp	r3, #0
 80148fc:	bfbb      	ittet	lt
 80148fe:	425b      	neglt	r3, r3
 8014900:	f042 0202 	orrlt.w	r2, r2, #2
 8014904:	9307      	strge	r3, [sp, #28]
 8014906:	9307      	strlt	r3, [sp, #28]
 8014908:	bfb8      	it	lt
 801490a:	9204      	strlt	r2, [sp, #16]
 801490c:	7823      	ldrb	r3, [r4, #0]
 801490e:	2b2e      	cmp	r3, #46	@ 0x2e
 8014910:	d10a      	bne.n	8014928 <_svfiprintf_r+0x130>
 8014912:	7863      	ldrb	r3, [r4, #1]
 8014914:	2b2a      	cmp	r3, #42	@ 0x2a
 8014916:	d132      	bne.n	801497e <_svfiprintf_r+0x186>
 8014918:	9b03      	ldr	r3, [sp, #12]
 801491a:	1d1a      	adds	r2, r3, #4
 801491c:	681b      	ldr	r3, [r3, #0]
 801491e:	9203      	str	r2, [sp, #12]
 8014920:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8014924:	3402      	adds	r4, #2
 8014926:	9305      	str	r3, [sp, #20]
 8014928:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80149ec <_svfiprintf_r+0x1f4>
 801492c:	7821      	ldrb	r1, [r4, #0]
 801492e:	2203      	movs	r2, #3
 8014930:	4650      	mov	r0, sl
 8014932:	f7eb fc4d 	bl	80001d0 <memchr>
 8014936:	b138      	cbz	r0, 8014948 <_svfiprintf_r+0x150>
 8014938:	9b04      	ldr	r3, [sp, #16]
 801493a:	eba0 000a 	sub.w	r0, r0, sl
 801493e:	2240      	movs	r2, #64	@ 0x40
 8014940:	4082      	lsls	r2, r0
 8014942:	4313      	orrs	r3, r2
 8014944:	3401      	adds	r4, #1
 8014946:	9304      	str	r3, [sp, #16]
 8014948:	f814 1b01 	ldrb.w	r1, [r4], #1
 801494c:	4824      	ldr	r0, [pc, #144]	@ (80149e0 <_svfiprintf_r+0x1e8>)
 801494e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8014952:	2206      	movs	r2, #6
 8014954:	f7eb fc3c 	bl	80001d0 <memchr>
 8014958:	2800      	cmp	r0, #0
 801495a:	d036      	beq.n	80149ca <_svfiprintf_r+0x1d2>
 801495c:	4b21      	ldr	r3, [pc, #132]	@ (80149e4 <_svfiprintf_r+0x1ec>)
 801495e:	bb1b      	cbnz	r3, 80149a8 <_svfiprintf_r+0x1b0>
 8014960:	9b03      	ldr	r3, [sp, #12]
 8014962:	3307      	adds	r3, #7
 8014964:	f023 0307 	bic.w	r3, r3, #7
 8014968:	3308      	adds	r3, #8
 801496a:	9303      	str	r3, [sp, #12]
 801496c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801496e:	4433      	add	r3, r6
 8014970:	9309      	str	r3, [sp, #36]	@ 0x24
 8014972:	e76a      	b.n	801484a <_svfiprintf_r+0x52>
 8014974:	fb0c 3202 	mla	r2, ip, r2, r3
 8014978:	460c      	mov	r4, r1
 801497a:	2001      	movs	r0, #1
 801497c:	e7a8      	b.n	80148d0 <_svfiprintf_r+0xd8>
 801497e:	2300      	movs	r3, #0
 8014980:	3401      	adds	r4, #1
 8014982:	9305      	str	r3, [sp, #20]
 8014984:	4619      	mov	r1, r3
 8014986:	f04f 0c0a 	mov.w	ip, #10
 801498a:	4620      	mov	r0, r4
 801498c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014990:	3a30      	subs	r2, #48	@ 0x30
 8014992:	2a09      	cmp	r2, #9
 8014994:	d903      	bls.n	801499e <_svfiprintf_r+0x1a6>
 8014996:	2b00      	cmp	r3, #0
 8014998:	d0c6      	beq.n	8014928 <_svfiprintf_r+0x130>
 801499a:	9105      	str	r1, [sp, #20]
 801499c:	e7c4      	b.n	8014928 <_svfiprintf_r+0x130>
 801499e:	fb0c 2101 	mla	r1, ip, r1, r2
 80149a2:	4604      	mov	r4, r0
 80149a4:	2301      	movs	r3, #1
 80149a6:	e7f0      	b.n	801498a <_svfiprintf_r+0x192>
 80149a8:	ab03      	add	r3, sp, #12
 80149aa:	9300      	str	r3, [sp, #0]
 80149ac:	462a      	mov	r2, r5
 80149ae:	4b0e      	ldr	r3, [pc, #56]	@ (80149e8 <_svfiprintf_r+0x1f0>)
 80149b0:	a904      	add	r1, sp, #16
 80149b2:	4638      	mov	r0, r7
 80149b4:	f7fd f94c 	bl	8011c50 <_printf_float>
 80149b8:	1c42      	adds	r2, r0, #1
 80149ba:	4606      	mov	r6, r0
 80149bc:	d1d6      	bne.n	801496c <_svfiprintf_r+0x174>
 80149be:	89ab      	ldrh	r3, [r5, #12]
 80149c0:	065b      	lsls	r3, r3, #25
 80149c2:	f53f af2d 	bmi.w	8014820 <_svfiprintf_r+0x28>
 80149c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80149c8:	e72c      	b.n	8014824 <_svfiprintf_r+0x2c>
 80149ca:	ab03      	add	r3, sp, #12
 80149cc:	9300      	str	r3, [sp, #0]
 80149ce:	462a      	mov	r2, r5
 80149d0:	4b05      	ldr	r3, [pc, #20]	@ (80149e8 <_svfiprintf_r+0x1f0>)
 80149d2:	a904      	add	r1, sp, #16
 80149d4:	4638      	mov	r0, r7
 80149d6:	f7fd fbd3 	bl	8012180 <_printf_i>
 80149da:	e7ed      	b.n	80149b8 <_svfiprintf_r+0x1c0>
 80149dc:	08016002 	.word	0x08016002
 80149e0:	0801600c 	.word	0x0801600c
 80149e4:	08011c51 	.word	0x08011c51
 80149e8:	08014743 	.word	0x08014743
 80149ec:	08016008 	.word	0x08016008

080149f0 <__sflush_r>:
 80149f0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80149f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80149f8:	0716      	lsls	r6, r2, #28
 80149fa:	4605      	mov	r5, r0
 80149fc:	460c      	mov	r4, r1
 80149fe:	d454      	bmi.n	8014aaa <__sflush_r+0xba>
 8014a00:	684b      	ldr	r3, [r1, #4]
 8014a02:	2b00      	cmp	r3, #0
 8014a04:	dc02      	bgt.n	8014a0c <__sflush_r+0x1c>
 8014a06:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8014a08:	2b00      	cmp	r3, #0
 8014a0a:	dd48      	ble.n	8014a9e <__sflush_r+0xae>
 8014a0c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8014a0e:	2e00      	cmp	r6, #0
 8014a10:	d045      	beq.n	8014a9e <__sflush_r+0xae>
 8014a12:	2300      	movs	r3, #0
 8014a14:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8014a18:	682f      	ldr	r7, [r5, #0]
 8014a1a:	6a21      	ldr	r1, [r4, #32]
 8014a1c:	602b      	str	r3, [r5, #0]
 8014a1e:	d030      	beq.n	8014a82 <__sflush_r+0x92>
 8014a20:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8014a22:	89a3      	ldrh	r3, [r4, #12]
 8014a24:	0759      	lsls	r1, r3, #29
 8014a26:	d505      	bpl.n	8014a34 <__sflush_r+0x44>
 8014a28:	6863      	ldr	r3, [r4, #4]
 8014a2a:	1ad2      	subs	r2, r2, r3
 8014a2c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8014a2e:	b10b      	cbz	r3, 8014a34 <__sflush_r+0x44>
 8014a30:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8014a32:	1ad2      	subs	r2, r2, r3
 8014a34:	2300      	movs	r3, #0
 8014a36:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8014a38:	6a21      	ldr	r1, [r4, #32]
 8014a3a:	4628      	mov	r0, r5
 8014a3c:	47b0      	blx	r6
 8014a3e:	1c43      	adds	r3, r0, #1
 8014a40:	89a3      	ldrh	r3, [r4, #12]
 8014a42:	d106      	bne.n	8014a52 <__sflush_r+0x62>
 8014a44:	6829      	ldr	r1, [r5, #0]
 8014a46:	291d      	cmp	r1, #29
 8014a48:	d82b      	bhi.n	8014aa2 <__sflush_r+0xb2>
 8014a4a:	4a2a      	ldr	r2, [pc, #168]	@ (8014af4 <__sflush_r+0x104>)
 8014a4c:	40ca      	lsrs	r2, r1
 8014a4e:	07d6      	lsls	r6, r2, #31
 8014a50:	d527      	bpl.n	8014aa2 <__sflush_r+0xb2>
 8014a52:	2200      	movs	r2, #0
 8014a54:	6062      	str	r2, [r4, #4]
 8014a56:	04d9      	lsls	r1, r3, #19
 8014a58:	6922      	ldr	r2, [r4, #16]
 8014a5a:	6022      	str	r2, [r4, #0]
 8014a5c:	d504      	bpl.n	8014a68 <__sflush_r+0x78>
 8014a5e:	1c42      	adds	r2, r0, #1
 8014a60:	d101      	bne.n	8014a66 <__sflush_r+0x76>
 8014a62:	682b      	ldr	r3, [r5, #0]
 8014a64:	b903      	cbnz	r3, 8014a68 <__sflush_r+0x78>
 8014a66:	6560      	str	r0, [r4, #84]	@ 0x54
 8014a68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8014a6a:	602f      	str	r7, [r5, #0]
 8014a6c:	b1b9      	cbz	r1, 8014a9e <__sflush_r+0xae>
 8014a6e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8014a72:	4299      	cmp	r1, r3
 8014a74:	d002      	beq.n	8014a7c <__sflush_r+0x8c>
 8014a76:	4628      	mov	r0, r5
 8014a78:	f7fe fe16 	bl	80136a8 <_free_r>
 8014a7c:	2300      	movs	r3, #0
 8014a7e:	6363      	str	r3, [r4, #52]	@ 0x34
 8014a80:	e00d      	b.n	8014a9e <__sflush_r+0xae>
 8014a82:	2301      	movs	r3, #1
 8014a84:	4628      	mov	r0, r5
 8014a86:	47b0      	blx	r6
 8014a88:	4602      	mov	r2, r0
 8014a8a:	1c50      	adds	r0, r2, #1
 8014a8c:	d1c9      	bne.n	8014a22 <__sflush_r+0x32>
 8014a8e:	682b      	ldr	r3, [r5, #0]
 8014a90:	2b00      	cmp	r3, #0
 8014a92:	d0c6      	beq.n	8014a22 <__sflush_r+0x32>
 8014a94:	2b1d      	cmp	r3, #29
 8014a96:	d001      	beq.n	8014a9c <__sflush_r+0xac>
 8014a98:	2b16      	cmp	r3, #22
 8014a9a:	d11e      	bne.n	8014ada <__sflush_r+0xea>
 8014a9c:	602f      	str	r7, [r5, #0]
 8014a9e:	2000      	movs	r0, #0
 8014aa0:	e022      	b.n	8014ae8 <__sflush_r+0xf8>
 8014aa2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8014aa6:	b21b      	sxth	r3, r3
 8014aa8:	e01b      	b.n	8014ae2 <__sflush_r+0xf2>
 8014aaa:	690f      	ldr	r7, [r1, #16]
 8014aac:	2f00      	cmp	r7, #0
 8014aae:	d0f6      	beq.n	8014a9e <__sflush_r+0xae>
 8014ab0:	0793      	lsls	r3, r2, #30
 8014ab2:	680e      	ldr	r6, [r1, #0]
 8014ab4:	bf08      	it	eq
 8014ab6:	694b      	ldreq	r3, [r1, #20]
 8014ab8:	600f      	str	r7, [r1, #0]
 8014aba:	bf18      	it	ne
 8014abc:	2300      	movne	r3, #0
 8014abe:	eba6 0807 	sub.w	r8, r6, r7
 8014ac2:	608b      	str	r3, [r1, #8]
 8014ac4:	f1b8 0f00 	cmp.w	r8, #0
 8014ac8:	dde9      	ble.n	8014a9e <__sflush_r+0xae>
 8014aca:	6a21      	ldr	r1, [r4, #32]
 8014acc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8014ace:	4643      	mov	r3, r8
 8014ad0:	463a      	mov	r2, r7
 8014ad2:	4628      	mov	r0, r5
 8014ad4:	47b0      	blx	r6
 8014ad6:	2800      	cmp	r0, #0
 8014ad8:	dc08      	bgt.n	8014aec <__sflush_r+0xfc>
 8014ada:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8014ade:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8014ae2:	81a3      	strh	r3, [r4, #12]
 8014ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8014ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014aec:	4407      	add	r7, r0
 8014aee:	eba8 0800 	sub.w	r8, r8, r0
 8014af2:	e7e7      	b.n	8014ac4 <__sflush_r+0xd4>
 8014af4:	20400001 	.word	0x20400001

08014af8 <_fflush_r>:
 8014af8:	b538      	push	{r3, r4, r5, lr}
 8014afa:	690b      	ldr	r3, [r1, #16]
 8014afc:	4605      	mov	r5, r0
 8014afe:	460c      	mov	r4, r1
 8014b00:	b913      	cbnz	r3, 8014b08 <_fflush_r+0x10>
 8014b02:	2500      	movs	r5, #0
 8014b04:	4628      	mov	r0, r5
 8014b06:	bd38      	pop	{r3, r4, r5, pc}
 8014b08:	b118      	cbz	r0, 8014b12 <_fflush_r+0x1a>
 8014b0a:	6a03      	ldr	r3, [r0, #32]
 8014b0c:	b90b      	cbnz	r3, 8014b12 <_fflush_r+0x1a>
 8014b0e:	f7fd fce1 	bl	80124d4 <__sinit>
 8014b12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8014b16:	2b00      	cmp	r3, #0
 8014b18:	d0f3      	beq.n	8014b02 <_fflush_r+0xa>
 8014b1a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8014b1c:	07d0      	lsls	r0, r2, #31
 8014b1e:	d404      	bmi.n	8014b2a <_fflush_r+0x32>
 8014b20:	0599      	lsls	r1, r3, #22
 8014b22:	d402      	bmi.n	8014b2a <_fflush_r+0x32>
 8014b24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8014b26:	f7fd ff26 	bl	8012976 <__retarget_lock_acquire_recursive>
 8014b2a:	4628      	mov	r0, r5
 8014b2c:	4621      	mov	r1, r4
 8014b2e:	f7ff ff5f 	bl	80149f0 <__sflush_r>
 8014b32:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8014b34:	07da      	lsls	r2, r3, #31
 8014b36:	4605      	mov	r5, r0
 8014b38:	d4e4      	bmi.n	8014b04 <_fflush_r+0xc>
 8014b3a:	89a3      	ldrh	r3, [r4, #12]
 8014b3c:	059b      	lsls	r3, r3, #22
 8014b3e:	d4e1      	bmi.n	8014b04 <_fflush_r+0xc>
 8014b40:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8014b42:	f7fd ff19 	bl	8012978 <__retarget_lock_release_recursive>
 8014b46:	e7dd      	b.n	8014b04 <_fflush_r+0xc>

08014b48 <fiprintf>:
 8014b48:	b40e      	push	{r1, r2, r3}
 8014b4a:	b503      	push	{r0, r1, lr}
 8014b4c:	4601      	mov	r1, r0
 8014b4e:	ab03      	add	r3, sp, #12
 8014b50:	4805      	ldr	r0, [pc, #20]	@ (8014b68 <fiprintf+0x20>)
 8014b52:	f853 2b04 	ldr.w	r2, [r3], #4
 8014b56:	6800      	ldr	r0, [r0, #0]
 8014b58:	9301      	str	r3, [sp, #4]
 8014b5a:	f000 f893 	bl	8014c84 <_vfiprintf_r>
 8014b5e:	b002      	add	sp, #8
 8014b60:	f85d eb04 	ldr.w	lr, [sp], #4
 8014b64:	b003      	add	sp, #12
 8014b66:	4770      	bx	lr
 8014b68:	20000404 	.word	0x20000404

08014b6c <memmove>:
 8014b6c:	4288      	cmp	r0, r1
 8014b6e:	b510      	push	{r4, lr}
 8014b70:	eb01 0402 	add.w	r4, r1, r2
 8014b74:	d902      	bls.n	8014b7c <memmove+0x10>
 8014b76:	4284      	cmp	r4, r0
 8014b78:	4623      	mov	r3, r4
 8014b7a:	d807      	bhi.n	8014b8c <memmove+0x20>
 8014b7c:	1e43      	subs	r3, r0, #1
 8014b7e:	42a1      	cmp	r1, r4
 8014b80:	d008      	beq.n	8014b94 <memmove+0x28>
 8014b82:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014b86:	f803 2f01 	strb.w	r2, [r3, #1]!
 8014b8a:	e7f8      	b.n	8014b7e <memmove+0x12>
 8014b8c:	4402      	add	r2, r0
 8014b8e:	4601      	mov	r1, r0
 8014b90:	428a      	cmp	r2, r1
 8014b92:	d100      	bne.n	8014b96 <memmove+0x2a>
 8014b94:	bd10      	pop	{r4, pc}
 8014b96:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8014b9a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8014b9e:	e7f7      	b.n	8014b90 <memmove+0x24>

08014ba0 <abort>:
 8014ba0:	b508      	push	{r3, lr}
 8014ba2:	2006      	movs	r0, #6
 8014ba4:	f000 fa42 	bl	801502c <raise>
 8014ba8:	2001      	movs	r0, #1
 8014baa:	f7ee fff5 	bl	8003b98 <_exit>

08014bae <_calloc_r>:
 8014bae:	b570      	push	{r4, r5, r6, lr}
 8014bb0:	fba1 5402 	umull	r5, r4, r1, r2
 8014bb4:	b934      	cbnz	r4, 8014bc4 <_calloc_r+0x16>
 8014bb6:	4629      	mov	r1, r5
 8014bb8:	f7fc f88a 	bl	8010cd0 <_malloc_r>
 8014bbc:	4606      	mov	r6, r0
 8014bbe:	b928      	cbnz	r0, 8014bcc <_calloc_r+0x1e>
 8014bc0:	4630      	mov	r0, r6
 8014bc2:	bd70      	pop	{r4, r5, r6, pc}
 8014bc4:	220c      	movs	r2, #12
 8014bc6:	6002      	str	r2, [r0, #0]
 8014bc8:	2600      	movs	r6, #0
 8014bca:	e7f9      	b.n	8014bc0 <_calloc_r+0x12>
 8014bcc:	462a      	mov	r2, r5
 8014bce:	4621      	mov	r1, r4
 8014bd0:	f7fd fd58 	bl	8012684 <memset>
 8014bd4:	e7f4      	b.n	8014bc0 <_calloc_r+0x12>

08014bd6 <_realloc_r>:
 8014bd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bda:	4607      	mov	r7, r0
 8014bdc:	4614      	mov	r4, r2
 8014bde:	460d      	mov	r5, r1
 8014be0:	b921      	cbnz	r1, 8014bec <_realloc_r+0x16>
 8014be2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014be6:	4611      	mov	r1, r2
 8014be8:	f7fc b872 	b.w	8010cd0 <_malloc_r>
 8014bec:	b92a      	cbnz	r2, 8014bfa <_realloc_r+0x24>
 8014bee:	f7fe fd5b 	bl	80136a8 <_free_r>
 8014bf2:	4625      	mov	r5, r4
 8014bf4:	4628      	mov	r0, r5
 8014bf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014bfa:	f000 fa33 	bl	8015064 <_malloc_usable_size_r>
 8014bfe:	4284      	cmp	r4, r0
 8014c00:	4606      	mov	r6, r0
 8014c02:	d802      	bhi.n	8014c0a <_realloc_r+0x34>
 8014c04:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8014c08:	d8f4      	bhi.n	8014bf4 <_realloc_r+0x1e>
 8014c0a:	4621      	mov	r1, r4
 8014c0c:	4638      	mov	r0, r7
 8014c0e:	f7fc f85f 	bl	8010cd0 <_malloc_r>
 8014c12:	4680      	mov	r8, r0
 8014c14:	b908      	cbnz	r0, 8014c1a <_realloc_r+0x44>
 8014c16:	4645      	mov	r5, r8
 8014c18:	e7ec      	b.n	8014bf4 <_realloc_r+0x1e>
 8014c1a:	42b4      	cmp	r4, r6
 8014c1c:	4622      	mov	r2, r4
 8014c1e:	4629      	mov	r1, r5
 8014c20:	bf28      	it	cs
 8014c22:	4632      	movcs	r2, r6
 8014c24:	f7fd feb1 	bl	801298a <memcpy>
 8014c28:	4629      	mov	r1, r5
 8014c2a:	4638      	mov	r0, r7
 8014c2c:	f7fe fd3c 	bl	80136a8 <_free_r>
 8014c30:	e7f1      	b.n	8014c16 <_realloc_r+0x40>

08014c32 <__sfputc_r>:
 8014c32:	6893      	ldr	r3, [r2, #8]
 8014c34:	3b01      	subs	r3, #1
 8014c36:	2b00      	cmp	r3, #0
 8014c38:	b410      	push	{r4}
 8014c3a:	6093      	str	r3, [r2, #8]
 8014c3c:	da08      	bge.n	8014c50 <__sfputc_r+0x1e>
 8014c3e:	6994      	ldr	r4, [r2, #24]
 8014c40:	42a3      	cmp	r3, r4
 8014c42:	db01      	blt.n	8014c48 <__sfputc_r+0x16>
 8014c44:	290a      	cmp	r1, #10
 8014c46:	d103      	bne.n	8014c50 <__sfputc_r+0x1e>
 8014c48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014c4c:	f000 b932 	b.w	8014eb4 <__swbuf_r>
 8014c50:	6813      	ldr	r3, [r2, #0]
 8014c52:	1c58      	adds	r0, r3, #1
 8014c54:	6010      	str	r0, [r2, #0]
 8014c56:	7019      	strb	r1, [r3, #0]
 8014c58:	4608      	mov	r0, r1
 8014c5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014c5e:	4770      	bx	lr

08014c60 <__sfputs_r>:
 8014c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c62:	4606      	mov	r6, r0
 8014c64:	460f      	mov	r7, r1
 8014c66:	4614      	mov	r4, r2
 8014c68:	18d5      	adds	r5, r2, r3
 8014c6a:	42ac      	cmp	r4, r5
 8014c6c:	d101      	bne.n	8014c72 <__sfputs_r+0x12>
 8014c6e:	2000      	movs	r0, #0
 8014c70:	e007      	b.n	8014c82 <__sfputs_r+0x22>
 8014c72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8014c76:	463a      	mov	r2, r7
 8014c78:	4630      	mov	r0, r6
 8014c7a:	f7ff ffda 	bl	8014c32 <__sfputc_r>
 8014c7e:	1c43      	adds	r3, r0, #1
 8014c80:	d1f3      	bne.n	8014c6a <__sfputs_r+0xa>
 8014c82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014c84 <_vfiprintf_r>:
 8014c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c88:	460d      	mov	r5, r1
 8014c8a:	b09d      	sub	sp, #116	@ 0x74
 8014c8c:	4614      	mov	r4, r2
 8014c8e:	4698      	mov	r8, r3
 8014c90:	4606      	mov	r6, r0
 8014c92:	b118      	cbz	r0, 8014c9c <_vfiprintf_r+0x18>
 8014c94:	6a03      	ldr	r3, [r0, #32]
 8014c96:	b90b      	cbnz	r3, 8014c9c <_vfiprintf_r+0x18>
 8014c98:	f7fd fc1c 	bl	80124d4 <__sinit>
 8014c9c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8014c9e:	07d9      	lsls	r1, r3, #31
 8014ca0:	d405      	bmi.n	8014cae <_vfiprintf_r+0x2a>
 8014ca2:	89ab      	ldrh	r3, [r5, #12]
 8014ca4:	059a      	lsls	r2, r3, #22
 8014ca6:	d402      	bmi.n	8014cae <_vfiprintf_r+0x2a>
 8014ca8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8014caa:	f7fd fe64 	bl	8012976 <__retarget_lock_acquire_recursive>
 8014cae:	89ab      	ldrh	r3, [r5, #12]
 8014cb0:	071b      	lsls	r3, r3, #28
 8014cb2:	d501      	bpl.n	8014cb8 <_vfiprintf_r+0x34>
 8014cb4:	692b      	ldr	r3, [r5, #16]
 8014cb6:	b99b      	cbnz	r3, 8014ce0 <_vfiprintf_r+0x5c>
 8014cb8:	4629      	mov	r1, r5
 8014cba:	4630      	mov	r0, r6
 8014cbc:	f000 f938 	bl	8014f30 <__swsetup_r>
 8014cc0:	b170      	cbz	r0, 8014ce0 <_vfiprintf_r+0x5c>
 8014cc2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8014cc4:	07dc      	lsls	r4, r3, #31
 8014cc6:	d504      	bpl.n	8014cd2 <_vfiprintf_r+0x4e>
 8014cc8:	f04f 30ff 	mov.w	r0, #4294967295
 8014ccc:	b01d      	add	sp, #116	@ 0x74
 8014cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cd2:	89ab      	ldrh	r3, [r5, #12]
 8014cd4:	0598      	lsls	r0, r3, #22
 8014cd6:	d4f7      	bmi.n	8014cc8 <_vfiprintf_r+0x44>
 8014cd8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8014cda:	f7fd fe4d 	bl	8012978 <__retarget_lock_release_recursive>
 8014cde:	e7f3      	b.n	8014cc8 <_vfiprintf_r+0x44>
 8014ce0:	2300      	movs	r3, #0
 8014ce2:	9309      	str	r3, [sp, #36]	@ 0x24
 8014ce4:	2320      	movs	r3, #32
 8014ce6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8014cea:	f8cd 800c 	str.w	r8, [sp, #12]
 8014cee:	2330      	movs	r3, #48	@ 0x30
 8014cf0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8014ea0 <_vfiprintf_r+0x21c>
 8014cf4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8014cf8:	f04f 0901 	mov.w	r9, #1
 8014cfc:	4623      	mov	r3, r4
 8014cfe:	469a      	mov	sl, r3
 8014d00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014d04:	b10a      	cbz	r2, 8014d0a <_vfiprintf_r+0x86>
 8014d06:	2a25      	cmp	r2, #37	@ 0x25
 8014d08:	d1f9      	bne.n	8014cfe <_vfiprintf_r+0x7a>
 8014d0a:	ebba 0b04 	subs.w	fp, sl, r4
 8014d0e:	d00b      	beq.n	8014d28 <_vfiprintf_r+0xa4>
 8014d10:	465b      	mov	r3, fp
 8014d12:	4622      	mov	r2, r4
 8014d14:	4629      	mov	r1, r5
 8014d16:	4630      	mov	r0, r6
 8014d18:	f7ff ffa2 	bl	8014c60 <__sfputs_r>
 8014d1c:	3001      	adds	r0, #1
 8014d1e:	f000 80a7 	beq.w	8014e70 <_vfiprintf_r+0x1ec>
 8014d22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014d24:	445a      	add	r2, fp
 8014d26:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d28:	f89a 3000 	ldrb.w	r3, [sl]
 8014d2c:	2b00      	cmp	r3, #0
 8014d2e:	f000 809f 	beq.w	8014e70 <_vfiprintf_r+0x1ec>
 8014d32:	2300      	movs	r3, #0
 8014d34:	f04f 32ff 	mov.w	r2, #4294967295
 8014d38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8014d3c:	f10a 0a01 	add.w	sl, sl, #1
 8014d40:	9304      	str	r3, [sp, #16]
 8014d42:	9307      	str	r3, [sp, #28]
 8014d44:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8014d48:	931a      	str	r3, [sp, #104]	@ 0x68
 8014d4a:	4654      	mov	r4, sl
 8014d4c:	2205      	movs	r2, #5
 8014d4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8014d52:	4853      	ldr	r0, [pc, #332]	@ (8014ea0 <_vfiprintf_r+0x21c>)
 8014d54:	f7eb fa3c 	bl	80001d0 <memchr>
 8014d58:	9a04      	ldr	r2, [sp, #16]
 8014d5a:	b9d8      	cbnz	r0, 8014d94 <_vfiprintf_r+0x110>
 8014d5c:	06d1      	lsls	r1, r2, #27
 8014d5e:	bf44      	itt	mi
 8014d60:	2320      	movmi	r3, #32
 8014d62:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8014d66:	0713      	lsls	r3, r2, #28
 8014d68:	bf44      	itt	mi
 8014d6a:	232b      	movmi	r3, #43	@ 0x2b
 8014d6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8014d70:	f89a 3000 	ldrb.w	r3, [sl]
 8014d74:	2b2a      	cmp	r3, #42	@ 0x2a
 8014d76:	d015      	beq.n	8014da4 <_vfiprintf_r+0x120>
 8014d78:	9a07      	ldr	r2, [sp, #28]
 8014d7a:	4654      	mov	r4, sl
 8014d7c:	2000      	movs	r0, #0
 8014d7e:	f04f 0c0a 	mov.w	ip, #10
 8014d82:	4621      	mov	r1, r4
 8014d84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014d88:	3b30      	subs	r3, #48	@ 0x30
 8014d8a:	2b09      	cmp	r3, #9
 8014d8c:	d94b      	bls.n	8014e26 <_vfiprintf_r+0x1a2>
 8014d8e:	b1b0      	cbz	r0, 8014dbe <_vfiprintf_r+0x13a>
 8014d90:	9207      	str	r2, [sp, #28]
 8014d92:	e014      	b.n	8014dbe <_vfiprintf_r+0x13a>
 8014d94:	eba0 0308 	sub.w	r3, r0, r8
 8014d98:	fa09 f303 	lsl.w	r3, r9, r3
 8014d9c:	4313      	orrs	r3, r2
 8014d9e:	9304      	str	r3, [sp, #16]
 8014da0:	46a2      	mov	sl, r4
 8014da2:	e7d2      	b.n	8014d4a <_vfiprintf_r+0xc6>
 8014da4:	9b03      	ldr	r3, [sp, #12]
 8014da6:	1d19      	adds	r1, r3, #4
 8014da8:	681b      	ldr	r3, [r3, #0]
 8014daa:	9103      	str	r1, [sp, #12]
 8014dac:	2b00      	cmp	r3, #0
 8014dae:	bfbb      	ittet	lt
 8014db0:	425b      	neglt	r3, r3
 8014db2:	f042 0202 	orrlt.w	r2, r2, #2
 8014db6:	9307      	strge	r3, [sp, #28]
 8014db8:	9307      	strlt	r3, [sp, #28]
 8014dba:	bfb8      	it	lt
 8014dbc:	9204      	strlt	r2, [sp, #16]
 8014dbe:	7823      	ldrb	r3, [r4, #0]
 8014dc0:	2b2e      	cmp	r3, #46	@ 0x2e
 8014dc2:	d10a      	bne.n	8014dda <_vfiprintf_r+0x156>
 8014dc4:	7863      	ldrb	r3, [r4, #1]
 8014dc6:	2b2a      	cmp	r3, #42	@ 0x2a
 8014dc8:	d132      	bne.n	8014e30 <_vfiprintf_r+0x1ac>
 8014dca:	9b03      	ldr	r3, [sp, #12]
 8014dcc:	1d1a      	adds	r2, r3, #4
 8014dce:	681b      	ldr	r3, [r3, #0]
 8014dd0:	9203      	str	r2, [sp, #12]
 8014dd2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8014dd6:	3402      	adds	r4, #2
 8014dd8:	9305      	str	r3, [sp, #20]
 8014dda:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8014eb0 <_vfiprintf_r+0x22c>
 8014dde:	7821      	ldrb	r1, [r4, #0]
 8014de0:	2203      	movs	r2, #3
 8014de2:	4650      	mov	r0, sl
 8014de4:	f7eb f9f4 	bl	80001d0 <memchr>
 8014de8:	b138      	cbz	r0, 8014dfa <_vfiprintf_r+0x176>
 8014dea:	9b04      	ldr	r3, [sp, #16]
 8014dec:	eba0 000a 	sub.w	r0, r0, sl
 8014df0:	2240      	movs	r2, #64	@ 0x40
 8014df2:	4082      	lsls	r2, r0
 8014df4:	4313      	orrs	r3, r2
 8014df6:	3401      	adds	r4, #1
 8014df8:	9304      	str	r3, [sp, #16]
 8014dfa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8014dfe:	4829      	ldr	r0, [pc, #164]	@ (8014ea4 <_vfiprintf_r+0x220>)
 8014e00:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8014e04:	2206      	movs	r2, #6
 8014e06:	f7eb f9e3 	bl	80001d0 <memchr>
 8014e0a:	2800      	cmp	r0, #0
 8014e0c:	d03f      	beq.n	8014e8e <_vfiprintf_r+0x20a>
 8014e0e:	4b26      	ldr	r3, [pc, #152]	@ (8014ea8 <_vfiprintf_r+0x224>)
 8014e10:	bb1b      	cbnz	r3, 8014e5a <_vfiprintf_r+0x1d6>
 8014e12:	9b03      	ldr	r3, [sp, #12]
 8014e14:	3307      	adds	r3, #7
 8014e16:	f023 0307 	bic.w	r3, r3, #7
 8014e1a:	3308      	adds	r3, #8
 8014e1c:	9303      	str	r3, [sp, #12]
 8014e1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014e20:	443b      	add	r3, r7
 8014e22:	9309      	str	r3, [sp, #36]	@ 0x24
 8014e24:	e76a      	b.n	8014cfc <_vfiprintf_r+0x78>
 8014e26:	fb0c 3202 	mla	r2, ip, r2, r3
 8014e2a:	460c      	mov	r4, r1
 8014e2c:	2001      	movs	r0, #1
 8014e2e:	e7a8      	b.n	8014d82 <_vfiprintf_r+0xfe>
 8014e30:	2300      	movs	r3, #0
 8014e32:	3401      	adds	r4, #1
 8014e34:	9305      	str	r3, [sp, #20]
 8014e36:	4619      	mov	r1, r3
 8014e38:	f04f 0c0a 	mov.w	ip, #10
 8014e3c:	4620      	mov	r0, r4
 8014e3e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014e42:	3a30      	subs	r2, #48	@ 0x30
 8014e44:	2a09      	cmp	r2, #9
 8014e46:	d903      	bls.n	8014e50 <_vfiprintf_r+0x1cc>
 8014e48:	2b00      	cmp	r3, #0
 8014e4a:	d0c6      	beq.n	8014dda <_vfiprintf_r+0x156>
 8014e4c:	9105      	str	r1, [sp, #20]
 8014e4e:	e7c4      	b.n	8014dda <_vfiprintf_r+0x156>
 8014e50:	fb0c 2101 	mla	r1, ip, r1, r2
 8014e54:	4604      	mov	r4, r0
 8014e56:	2301      	movs	r3, #1
 8014e58:	e7f0      	b.n	8014e3c <_vfiprintf_r+0x1b8>
 8014e5a:	ab03      	add	r3, sp, #12
 8014e5c:	9300      	str	r3, [sp, #0]
 8014e5e:	462a      	mov	r2, r5
 8014e60:	4b12      	ldr	r3, [pc, #72]	@ (8014eac <_vfiprintf_r+0x228>)
 8014e62:	a904      	add	r1, sp, #16
 8014e64:	4630      	mov	r0, r6
 8014e66:	f7fc fef3 	bl	8011c50 <_printf_float>
 8014e6a:	4607      	mov	r7, r0
 8014e6c:	1c78      	adds	r0, r7, #1
 8014e6e:	d1d6      	bne.n	8014e1e <_vfiprintf_r+0x19a>
 8014e70:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8014e72:	07d9      	lsls	r1, r3, #31
 8014e74:	d405      	bmi.n	8014e82 <_vfiprintf_r+0x1fe>
 8014e76:	89ab      	ldrh	r3, [r5, #12]
 8014e78:	059a      	lsls	r2, r3, #22
 8014e7a:	d402      	bmi.n	8014e82 <_vfiprintf_r+0x1fe>
 8014e7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8014e7e:	f7fd fd7b 	bl	8012978 <__retarget_lock_release_recursive>
 8014e82:	89ab      	ldrh	r3, [r5, #12]
 8014e84:	065b      	lsls	r3, r3, #25
 8014e86:	f53f af1f 	bmi.w	8014cc8 <_vfiprintf_r+0x44>
 8014e8a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8014e8c:	e71e      	b.n	8014ccc <_vfiprintf_r+0x48>
 8014e8e:	ab03      	add	r3, sp, #12
 8014e90:	9300      	str	r3, [sp, #0]
 8014e92:	462a      	mov	r2, r5
 8014e94:	4b05      	ldr	r3, [pc, #20]	@ (8014eac <_vfiprintf_r+0x228>)
 8014e96:	a904      	add	r1, sp, #16
 8014e98:	4630      	mov	r0, r6
 8014e9a:	f7fd f971 	bl	8012180 <_printf_i>
 8014e9e:	e7e4      	b.n	8014e6a <_vfiprintf_r+0x1e6>
 8014ea0:	08016002 	.word	0x08016002
 8014ea4:	0801600c 	.word	0x0801600c
 8014ea8:	08011c51 	.word	0x08011c51
 8014eac:	08014c61 	.word	0x08014c61
 8014eb0:	08016008 	.word	0x08016008

08014eb4 <__swbuf_r>:
 8014eb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014eb6:	460e      	mov	r6, r1
 8014eb8:	4614      	mov	r4, r2
 8014eba:	4605      	mov	r5, r0
 8014ebc:	b118      	cbz	r0, 8014ec6 <__swbuf_r+0x12>
 8014ebe:	6a03      	ldr	r3, [r0, #32]
 8014ec0:	b90b      	cbnz	r3, 8014ec6 <__swbuf_r+0x12>
 8014ec2:	f7fd fb07 	bl	80124d4 <__sinit>
 8014ec6:	69a3      	ldr	r3, [r4, #24]
 8014ec8:	60a3      	str	r3, [r4, #8]
 8014eca:	89a3      	ldrh	r3, [r4, #12]
 8014ecc:	071a      	lsls	r2, r3, #28
 8014ece:	d501      	bpl.n	8014ed4 <__swbuf_r+0x20>
 8014ed0:	6923      	ldr	r3, [r4, #16]
 8014ed2:	b943      	cbnz	r3, 8014ee6 <__swbuf_r+0x32>
 8014ed4:	4621      	mov	r1, r4
 8014ed6:	4628      	mov	r0, r5
 8014ed8:	f000 f82a 	bl	8014f30 <__swsetup_r>
 8014edc:	b118      	cbz	r0, 8014ee6 <__swbuf_r+0x32>
 8014ede:	f04f 37ff 	mov.w	r7, #4294967295
 8014ee2:	4638      	mov	r0, r7
 8014ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ee6:	6823      	ldr	r3, [r4, #0]
 8014ee8:	6922      	ldr	r2, [r4, #16]
 8014eea:	1a98      	subs	r0, r3, r2
 8014eec:	6963      	ldr	r3, [r4, #20]
 8014eee:	b2f6      	uxtb	r6, r6
 8014ef0:	4283      	cmp	r3, r0
 8014ef2:	4637      	mov	r7, r6
 8014ef4:	dc05      	bgt.n	8014f02 <__swbuf_r+0x4e>
 8014ef6:	4621      	mov	r1, r4
 8014ef8:	4628      	mov	r0, r5
 8014efa:	f7ff fdfd 	bl	8014af8 <_fflush_r>
 8014efe:	2800      	cmp	r0, #0
 8014f00:	d1ed      	bne.n	8014ede <__swbuf_r+0x2a>
 8014f02:	68a3      	ldr	r3, [r4, #8]
 8014f04:	3b01      	subs	r3, #1
 8014f06:	60a3      	str	r3, [r4, #8]
 8014f08:	6823      	ldr	r3, [r4, #0]
 8014f0a:	1c5a      	adds	r2, r3, #1
 8014f0c:	6022      	str	r2, [r4, #0]
 8014f0e:	701e      	strb	r6, [r3, #0]
 8014f10:	6962      	ldr	r2, [r4, #20]
 8014f12:	1c43      	adds	r3, r0, #1
 8014f14:	429a      	cmp	r2, r3
 8014f16:	d004      	beq.n	8014f22 <__swbuf_r+0x6e>
 8014f18:	89a3      	ldrh	r3, [r4, #12]
 8014f1a:	07db      	lsls	r3, r3, #31
 8014f1c:	d5e1      	bpl.n	8014ee2 <__swbuf_r+0x2e>
 8014f1e:	2e0a      	cmp	r6, #10
 8014f20:	d1df      	bne.n	8014ee2 <__swbuf_r+0x2e>
 8014f22:	4621      	mov	r1, r4
 8014f24:	4628      	mov	r0, r5
 8014f26:	f7ff fde7 	bl	8014af8 <_fflush_r>
 8014f2a:	2800      	cmp	r0, #0
 8014f2c:	d0d9      	beq.n	8014ee2 <__swbuf_r+0x2e>
 8014f2e:	e7d6      	b.n	8014ede <__swbuf_r+0x2a>

08014f30 <__swsetup_r>:
 8014f30:	b538      	push	{r3, r4, r5, lr}
 8014f32:	4b29      	ldr	r3, [pc, #164]	@ (8014fd8 <__swsetup_r+0xa8>)
 8014f34:	4605      	mov	r5, r0
 8014f36:	6818      	ldr	r0, [r3, #0]
 8014f38:	460c      	mov	r4, r1
 8014f3a:	b118      	cbz	r0, 8014f44 <__swsetup_r+0x14>
 8014f3c:	6a03      	ldr	r3, [r0, #32]
 8014f3e:	b90b      	cbnz	r3, 8014f44 <__swsetup_r+0x14>
 8014f40:	f7fd fac8 	bl	80124d4 <__sinit>
 8014f44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8014f48:	0719      	lsls	r1, r3, #28
 8014f4a:	d422      	bmi.n	8014f92 <__swsetup_r+0x62>
 8014f4c:	06da      	lsls	r2, r3, #27
 8014f4e:	d407      	bmi.n	8014f60 <__swsetup_r+0x30>
 8014f50:	2209      	movs	r2, #9
 8014f52:	602a      	str	r2, [r5, #0]
 8014f54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8014f58:	81a3      	strh	r3, [r4, #12]
 8014f5a:	f04f 30ff 	mov.w	r0, #4294967295
 8014f5e:	e033      	b.n	8014fc8 <__swsetup_r+0x98>
 8014f60:	0758      	lsls	r0, r3, #29
 8014f62:	d512      	bpl.n	8014f8a <__swsetup_r+0x5a>
 8014f64:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8014f66:	b141      	cbz	r1, 8014f7a <__swsetup_r+0x4a>
 8014f68:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8014f6c:	4299      	cmp	r1, r3
 8014f6e:	d002      	beq.n	8014f76 <__swsetup_r+0x46>
 8014f70:	4628      	mov	r0, r5
 8014f72:	f7fe fb99 	bl	80136a8 <_free_r>
 8014f76:	2300      	movs	r3, #0
 8014f78:	6363      	str	r3, [r4, #52]	@ 0x34
 8014f7a:	89a3      	ldrh	r3, [r4, #12]
 8014f7c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8014f80:	81a3      	strh	r3, [r4, #12]
 8014f82:	2300      	movs	r3, #0
 8014f84:	6063      	str	r3, [r4, #4]
 8014f86:	6923      	ldr	r3, [r4, #16]
 8014f88:	6023      	str	r3, [r4, #0]
 8014f8a:	89a3      	ldrh	r3, [r4, #12]
 8014f8c:	f043 0308 	orr.w	r3, r3, #8
 8014f90:	81a3      	strh	r3, [r4, #12]
 8014f92:	6923      	ldr	r3, [r4, #16]
 8014f94:	b94b      	cbnz	r3, 8014faa <__swsetup_r+0x7a>
 8014f96:	89a3      	ldrh	r3, [r4, #12]
 8014f98:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8014f9c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8014fa0:	d003      	beq.n	8014faa <__swsetup_r+0x7a>
 8014fa2:	4621      	mov	r1, r4
 8014fa4:	4628      	mov	r0, r5
 8014fa6:	f000 f88b 	bl	80150c0 <__smakebuf_r>
 8014faa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8014fae:	f013 0201 	ands.w	r2, r3, #1
 8014fb2:	d00a      	beq.n	8014fca <__swsetup_r+0x9a>
 8014fb4:	2200      	movs	r2, #0
 8014fb6:	60a2      	str	r2, [r4, #8]
 8014fb8:	6962      	ldr	r2, [r4, #20]
 8014fba:	4252      	negs	r2, r2
 8014fbc:	61a2      	str	r2, [r4, #24]
 8014fbe:	6922      	ldr	r2, [r4, #16]
 8014fc0:	b942      	cbnz	r2, 8014fd4 <__swsetup_r+0xa4>
 8014fc2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8014fc6:	d1c5      	bne.n	8014f54 <__swsetup_r+0x24>
 8014fc8:	bd38      	pop	{r3, r4, r5, pc}
 8014fca:	0799      	lsls	r1, r3, #30
 8014fcc:	bf58      	it	pl
 8014fce:	6962      	ldrpl	r2, [r4, #20]
 8014fd0:	60a2      	str	r2, [r4, #8]
 8014fd2:	e7f4      	b.n	8014fbe <__swsetup_r+0x8e>
 8014fd4:	2000      	movs	r0, #0
 8014fd6:	e7f7      	b.n	8014fc8 <__swsetup_r+0x98>
 8014fd8:	20000404 	.word	0x20000404

08014fdc <_raise_r>:
 8014fdc:	291f      	cmp	r1, #31
 8014fde:	b538      	push	{r3, r4, r5, lr}
 8014fe0:	4605      	mov	r5, r0
 8014fe2:	460c      	mov	r4, r1
 8014fe4:	d904      	bls.n	8014ff0 <_raise_r+0x14>
 8014fe6:	2316      	movs	r3, #22
 8014fe8:	6003      	str	r3, [r0, #0]
 8014fea:	f04f 30ff 	mov.w	r0, #4294967295
 8014fee:	bd38      	pop	{r3, r4, r5, pc}
 8014ff0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8014ff2:	b112      	cbz	r2, 8014ffa <_raise_r+0x1e>
 8014ff4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8014ff8:	b94b      	cbnz	r3, 801500e <_raise_r+0x32>
 8014ffa:	4628      	mov	r0, r5
 8014ffc:	f000 f830 	bl	8015060 <_getpid_r>
 8015000:	4622      	mov	r2, r4
 8015002:	4601      	mov	r1, r0
 8015004:	4628      	mov	r0, r5
 8015006:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801500a:	f000 b817 	b.w	801503c <_kill_r>
 801500e:	2b01      	cmp	r3, #1
 8015010:	d00a      	beq.n	8015028 <_raise_r+0x4c>
 8015012:	1c59      	adds	r1, r3, #1
 8015014:	d103      	bne.n	801501e <_raise_r+0x42>
 8015016:	2316      	movs	r3, #22
 8015018:	6003      	str	r3, [r0, #0]
 801501a:	2001      	movs	r0, #1
 801501c:	e7e7      	b.n	8014fee <_raise_r+0x12>
 801501e:	2100      	movs	r1, #0
 8015020:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8015024:	4620      	mov	r0, r4
 8015026:	4798      	blx	r3
 8015028:	2000      	movs	r0, #0
 801502a:	e7e0      	b.n	8014fee <_raise_r+0x12>

0801502c <raise>:
 801502c:	4b02      	ldr	r3, [pc, #8]	@ (8015038 <raise+0xc>)
 801502e:	4601      	mov	r1, r0
 8015030:	6818      	ldr	r0, [r3, #0]
 8015032:	f7ff bfd3 	b.w	8014fdc <_raise_r>
 8015036:	bf00      	nop
 8015038:	20000404 	.word	0x20000404

0801503c <_kill_r>:
 801503c:	b538      	push	{r3, r4, r5, lr}
 801503e:	4d07      	ldr	r5, [pc, #28]	@ (801505c <_kill_r+0x20>)
 8015040:	2300      	movs	r3, #0
 8015042:	4604      	mov	r4, r0
 8015044:	4608      	mov	r0, r1
 8015046:	4611      	mov	r1, r2
 8015048:	602b      	str	r3, [r5, #0]
 801504a:	f7ee fd95 	bl	8003b78 <_kill>
 801504e:	1c43      	adds	r3, r0, #1
 8015050:	d102      	bne.n	8015058 <_kill_r+0x1c>
 8015052:	682b      	ldr	r3, [r5, #0]
 8015054:	b103      	cbz	r3, 8015058 <_kill_r+0x1c>
 8015056:	6023      	str	r3, [r4, #0]
 8015058:	bd38      	pop	{r3, r4, r5, pc}
 801505a:	bf00      	nop
 801505c:	200117f8 	.word	0x200117f8

08015060 <_getpid_r>:
 8015060:	f7ee bd82 	b.w	8003b68 <_getpid>

08015064 <_malloc_usable_size_r>:
 8015064:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8015068:	1f18      	subs	r0, r3, #4
 801506a:	2b00      	cmp	r3, #0
 801506c:	bfbc      	itt	lt
 801506e:	580b      	ldrlt	r3, [r1, r0]
 8015070:	18c0      	addlt	r0, r0, r3
 8015072:	4770      	bx	lr

08015074 <__swhatbuf_r>:
 8015074:	b570      	push	{r4, r5, r6, lr}
 8015076:	460c      	mov	r4, r1
 8015078:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801507c:	2900      	cmp	r1, #0
 801507e:	b096      	sub	sp, #88	@ 0x58
 8015080:	4615      	mov	r5, r2
 8015082:	461e      	mov	r6, r3
 8015084:	da0d      	bge.n	80150a2 <__swhatbuf_r+0x2e>
 8015086:	89a3      	ldrh	r3, [r4, #12]
 8015088:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801508c:	f04f 0100 	mov.w	r1, #0
 8015090:	bf14      	ite	ne
 8015092:	2340      	movne	r3, #64	@ 0x40
 8015094:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8015098:	2000      	movs	r0, #0
 801509a:	6031      	str	r1, [r6, #0]
 801509c:	602b      	str	r3, [r5, #0]
 801509e:	b016      	add	sp, #88	@ 0x58
 80150a0:	bd70      	pop	{r4, r5, r6, pc}
 80150a2:	466a      	mov	r2, sp
 80150a4:	f000 f848 	bl	8015138 <_fstat_r>
 80150a8:	2800      	cmp	r0, #0
 80150aa:	dbec      	blt.n	8015086 <__swhatbuf_r+0x12>
 80150ac:	9901      	ldr	r1, [sp, #4]
 80150ae:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80150b2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80150b6:	4259      	negs	r1, r3
 80150b8:	4159      	adcs	r1, r3
 80150ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80150be:	e7eb      	b.n	8015098 <__swhatbuf_r+0x24>

080150c0 <__smakebuf_r>:
 80150c0:	898b      	ldrh	r3, [r1, #12]
 80150c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80150c4:	079d      	lsls	r5, r3, #30
 80150c6:	4606      	mov	r6, r0
 80150c8:	460c      	mov	r4, r1
 80150ca:	d507      	bpl.n	80150dc <__smakebuf_r+0x1c>
 80150cc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80150d0:	6023      	str	r3, [r4, #0]
 80150d2:	6123      	str	r3, [r4, #16]
 80150d4:	2301      	movs	r3, #1
 80150d6:	6163      	str	r3, [r4, #20]
 80150d8:	b003      	add	sp, #12
 80150da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80150dc:	ab01      	add	r3, sp, #4
 80150de:	466a      	mov	r2, sp
 80150e0:	f7ff ffc8 	bl	8015074 <__swhatbuf_r>
 80150e4:	9f00      	ldr	r7, [sp, #0]
 80150e6:	4605      	mov	r5, r0
 80150e8:	4639      	mov	r1, r7
 80150ea:	4630      	mov	r0, r6
 80150ec:	f7fb fdf0 	bl	8010cd0 <_malloc_r>
 80150f0:	b948      	cbnz	r0, 8015106 <__smakebuf_r+0x46>
 80150f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80150f6:	059a      	lsls	r2, r3, #22
 80150f8:	d4ee      	bmi.n	80150d8 <__smakebuf_r+0x18>
 80150fa:	f023 0303 	bic.w	r3, r3, #3
 80150fe:	f043 0302 	orr.w	r3, r3, #2
 8015102:	81a3      	strh	r3, [r4, #12]
 8015104:	e7e2      	b.n	80150cc <__smakebuf_r+0xc>
 8015106:	89a3      	ldrh	r3, [r4, #12]
 8015108:	6020      	str	r0, [r4, #0]
 801510a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801510e:	81a3      	strh	r3, [r4, #12]
 8015110:	9b01      	ldr	r3, [sp, #4]
 8015112:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8015116:	b15b      	cbz	r3, 8015130 <__smakebuf_r+0x70>
 8015118:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801511c:	4630      	mov	r0, r6
 801511e:	f000 f81d 	bl	801515c <_isatty_r>
 8015122:	b128      	cbz	r0, 8015130 <__smakebuf_r+0x70>
 8015124:	89a3      	ldrh	r3, [r4, #12]
 8015126:	f023 0303 	bic.w	r3, r3, #3
 801512a:	f043 0301 	orr.w	r3, r3, #1
 801512e:	81a3      	strh	r3, [r4, #12]
 8015130:	89a3      	ldrh	r3, [r4, #12]
 8015132:	431d      	orrs	r5, r3
 8015134:	81a5      	strh	r5, [r4, #12]
 8015136:	e7cf      	b.n	80150d8 <__smakebuf_r+0x18>

08015138 <_fstat_r>:
 8015138:	b538      	push	{r3, r4, r5, lr}
 801513a:	4d07      	ldr	r5, [pc, #28]	@ (8015158 <_fstat_r+0x20>)
 801513c:	2300      	movs	r3, #0
 801513e:	4604      	mov	r4, r0
 8015140:	4608      	mov	r0, r1
 8015142:	4611      	mov	r1, r2
 8015144:	602b      	str	r3, [r5, #0]
 8015146:	f7ee fd77 	bl	8003c38 <_fstat>
 801514a:	1c43      	adds	r3, r0, #1
 801514c:	d102      	bne.n	8015154 <_fstat_r+0x1c>
 801514e:	682b      	ldr	r3, [r5, #0]
 8015150:	b103      	cbz	r3, 8015154 <_fstat_r+0x1c>
 8015152:	6023      	str	r3, [r4, #0]
 8015154:	bd38      	pop	{r3, r4, r5, pc}
 8015156:	bf00      	nop
 8015158:	200117f8 	.word	0x200117f8

0801515c <_isatty_r>:
 801515c:	b538      	push	{r3, r4, r5, lr}
 801515e:	4d06      	ldr	r5, [pc, #24]	@ (8015178 <_isatty_r+0x1c>)
 8015160:	2300      	movs	r3, #0
 8015162:	4604      	mov	r4, r0
 8015164:	4608      	mov	r0, r1
 8015166:	602b      	str	r3, [r5, #0]
 8015168:	f7ee fd76 	bl	8003c58 <_isatty>
 801516c:	1c43      	adds	r3, r0, #1
 801516e:	d102      	bne.n	8015176 <_isatty_r+0x1a>
 8015170:	682b      	ldr	r3, [r5, #0]
 8015172:	b103      	cbz	r3, 8015176 <_isatty_r+0x1a>
 8015174:	6023      	str	r3, [r4, #0]
 8015176:	bd38      	pop	{r3, r4, r5, pc}
 8015178:	200117f8 	.word	0x200117f8

0801517c <_init>:
 801517c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801517e:	bf00      	nop
 8015180:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015182:	bc08      	pop	{r3}
 8015184:	469e      	mov	lr, r3
 8015186:	4770      	bx	lr

08015188 <_fini>:
 8015188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801518a:	bf00      	nop
 801518c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801518e:	bc08      	pop	{r3}
 8015190:	469e      	mov	lr, r3
 8015192:	4770      	bx	lr
