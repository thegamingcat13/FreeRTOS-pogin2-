# STM32CubeIDE Project .gitignore

# --------------------------------------------------------------------------------
# 1. Eclipse and STM32CubeIDE Metadata/Settings
# These files define workspace and project-specific settings. They are often
# user-specific or temporary and should not be shared across collaborators.
# --------------------------------------------------------------------------------
.settings/             # Workspace/project settings (compiler paths, debug configs)
.metadata/             # Eclipse workspace metadata (very user-specific)
.project               # Defines the project's nature (e.g., C/C++ project)
.cproject              # C/C++ specific project settings (build configurations, includes)
.mxproject             # STM32CubeMX specific project file (often redundant with .ioc but sometimes present)
.log                   # IDE log files

# --------------------------------------------------------------------------------
# 2. Build Artifacts (Generated Files)
# These are files generated during the build process (compilation, linking).
# They can be regenerated by any user building the project.
# --------------------------------------------------------------------------------
# Build output directories
Debug/                 # Default debug build folder
debug/                 # Alternate debug build folder name
Release/               # Default release build folder
release/               # Alternate release build folder name

# Intermediate object files
*.o                    # Object files
*.ko                   # Kernel object files (less common for STM32)
*.obj                  # Windows object files

# Executables, firmware images, and debug symbols
*.elf                  # Executable and Linkable Format (main output for embedded)
*.bin                  # Binary firmware image
*.hex                  # Intel HEX firmware image
*.srec                 # S-record firmware image
*.map                  # Linker map file (details memory usage)
*.lst                  # Assembly listing file
*.su                   # Size utility output

# Dependency files
*.d                    # Dependency files generated by the compiler

# Libraries
*.lib                  # Static libraries
*.a                    # Static libraries (archive)
*.la
*.lo

# Shared objects (less common for bare-metal STM32, but good to include)
*.dll                  # Windows Dynamic Link Library
*.so                   # Linux Shared Object
*.so.*
*.dylib                # macOS Dynamic Library

# Other potential executables
*.exe
*.out
*.app
*.i*86
*.x86_64

# Debugging information
*.dSYM/                # macOS debug symbols
*.idb                  # IDA Pro database
*.pdb                  # Program Debug Database (Windows)

# --------------------------------------------------------------------------------
# 3. STM32CubeMX Generated Code & Templates
# These are files that STM32CubeMX *generates* or *copies*.
# The `.ioc` file itself (see next section) is the source, not these outputs.
# --------------------------------------------------------------------------------
# Exclude boilerplate template files that are copied from CMSIS packs
Drivers/CMSIS/Device/ST/STM32*/Source/Templates/*.s
Startup/*.s

# --------------------------------------------------------------------------------
# 4. Critical Files (DO NOT IGNORE!)
# These files *must* be included in Git as they are the source configuration
# for your project and STM32CubeMX.
# --------------------------------------------------------------------------------
!*.ioc                 # STM32CubeMX project configuration file - CRITICAL
!Core/Src/*.c          # Your main application source files
!Core/Inc/*.h          # Your main application header files
!Drivers/**/*.c        # Generated HAL/LL driver files (unless you manually manage them)
!Drivers/**/*.h        # Generated HAL/LL driver files (unless you manually manage them)
!Middlewares/**/*.c    # Middleware source files (e.g., FreeRTOS, USB, FATFS)
!Middlewares/**/*.h    # Middleware header files
!STM32F*.ld            # Linker script file - CRITICAL
!Makefile              # Main Makefile (if not managed by IDE)
!Debug/makefile        # Specific Makefiles (often generated by IDE, can be ignored if always regenerated)
!Release/makefile      # Specific Makefiles (often generated by IDE, can be ignored if always regenerated)